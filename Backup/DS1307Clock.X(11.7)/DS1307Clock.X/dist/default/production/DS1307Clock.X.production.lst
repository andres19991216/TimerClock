

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Nov 09 09:04:30 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Generated 23/03/2023 GMT
    73                           ; 
    74                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4520 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataCOMRAM
   108   002686                     __pidataCOMRAM:
   109                           	callstack 0
   110                           
   111                           ;initializer for _S7_Mode
   112   002686  03                 	db	3
   113                           
   114                           ;initializer for _S6_Mode
   115   002687  03                 	db	3
   116                           
   117                           ;initializer for _S5_Mode
   118   002688  03                 	db	3
   119                           
   120                           ;initializer for _S4_Mode
   121   002689  03                 	db	3
   122                           
   123                           ;initializer for _S3_Mode
   124   00268A  03                 	db	3
   125                           
   126                           ;initializer for _S2_Mode
   127   00268B  03                 	db	3
   128                           
   129                           ;initializer for _S1_Mode
   130   00268C  03                 	db	3
   131                           
   132                           ;initializer for _S0_Mode
   133   00268D  03                 	db	3
   134                           
   135                           	psect	idataBANK0
   136   0025A4                     __pidataBANK0:
   137                           	callstack 0
   138                           
   139                           ;initializer for OpenS5500@F2862
   140   0025A4  0A                 	db	10
   141   0025A5  0A                 	db	10
   142   0025A6  0F                 	db	15
   143   0025A7  01                 	db	1
   144                           
   145                           ;initializer for OpenS5500@F2860
   146   0025A8  FF                 	db	255
   147   0025A9  FF                 	db	255
   148   0025AA  FF                 	db	255
   149   0025AB  00                 	db	0
   150                           
   151                           ;initializer for OpenS5500@F2858
   152   0025AC  0A                 	db	10
   153   0025AD  0A                 	db	10
   154   0025AE  0F                 	db	15
   155   0025AF  DF                 	db	223
   156                           
   157                           ;initializer for OpenW5500@F2689
   158   0025B0  0A                 	db	10
   159   0025B1  0A                 	db	10
   160   0025B2  0F                 	db	15
   161   0025B3  01                 	db	1
   162                           
   163                           ;initializer for OpenW5500@F2687
   164   0025B4  FF                 	db	255
   165   0025B5  FF                 	db	255
   166   0025B6  FF                 	db	255
   167   0025B7  00                 	db	0
   168                           
   169                           ;initializer for OpenW5500@F2685
   170   0025B8  0A                 	db	10
   171   0025B9  0A                 	db	10
   172   0025BA  0F                 	db	15
   173   0025BB  DF                 	db	223
   174                           
   175                           	psect	idataBANK1
   176   0025D4                     __pidataBANK1:
   177                           	callstack 0
   178                           
   179                           ;initializer for _rtc_default_values
   180   0025D4  10                 	db	16
   181   0025D5  12                 	db	18
   182   0025D6  09                 	db	9
   183   0025D7  05                 	db	5
   184   0025D8  03                 	db	3
   185   0025D9  11                 	db	17
   186   0025DA  23                 	db	35
   187   0025DB  00                 	db	0
   188   0025DC  00                 	db	0
   189   0025DD  00                 	db	0
   190                           
   191                           ;initializer for OpenS5500@F2856
   192   0025DE  F4                 	db	244
   193   0025DF  6B                 	db	107
   194   0025E0  8C                 	db	140
   195   0025E1  CE                 	db	206
   196   0025E2  67                 	db	103
   197   0025E3  4B                 	db	75
   198                           
   199                           ;initializer for OpenW5500@F2683
   200   0025E4  F4                 	db	244
   201   0025E5  6B                 	db	107
   202   0025E6  8C                 	db	140
   203   0025E7  CE                 	db	206
   204   0025E8  67                 	db	103
   205   0025E9  4B                 	db	75
   206   000000                     _EECON2	set	4007
   207   000000                     _EEDATA	set	4008
   208   000000                     _EEADR	set	4009
   209   000000                     _TXREG1	set	4013
   210   000000                     _RCREG1	set	4014
   211   000000                     _SPBRG1	set	4015
   212   000000                     _INTCON2bits	set	4081
   213   000000                     _TMR3L	set	4018
   214   000000                     _TMR3H	set	4019
   215   000000                     _TMR1L	set	4046
   216   000000                     _TMR1H	set	4047
   217   000000                     _TMR0L	set	4054
   218   000000                     _TMR0H	set	4055
   219   000000                     _SSPCON1	set	4038
   220   000000                     _SSPSTAT	set	4039
   221   000000                     _PIE1	set	3997
   222   000000                     _RCSTA1bits	set	4011
   223   000000                     _TXSTA1bits	set	4012
   224   000000                     _T3CONbits	set	4017
   225   000000                     _T2CONbits	set	4042
   226   000000                     _T1CONbits	set	4045
   227   000000                     _T0CONbits	set	4053
   228   000000                     _PORTDbits	set	3971
   229   000000                     _PORTBbits	set	3969
   230   000000                     _LATBbits	set	3978
   231   000000                     _LATCbits	set	3979
   232   000000                     _PORTAbits	set	3968
   233   000000                     _TRISAbits	set	3986
   234   000000                     _OSCTUNEbits	set	3995
   235   000000                     _OSCCONbits	set	4051
   236   000000                     _T0CON	set	4053
   237   000000                     _PIE1bits	set	3997
   238   000000                     _PIR1bits	set	3998
   239   000000                     _ADCON1	set	4033
   240   000000                     _ADCON0	set	4034
   241   000000                     _SSPCON2bits	set	4037
   242   000000                     _SSPCON1bits	set	4038
   243   000000                     _SSPSTATbits	set	4039
   244   000000                     _TMR2	set	4044
   245   000000                     _T2CON	set	4042
   246   000000                     _T1CON	set	4045
   247   000000                     _SSPBUF	set	4041
   248   000000                     _SSPADD	set	4040
   249   000000                     _TRISDbits	set	3989
   250   000000                     _TRISCbits	set	3988
   251   000000                     _TRISBbits	set	3987
   252   000000                     _INTCON3bits	set	4080
   253   000000                     _INTCONbits	set	4082
   254   000000                     _RCONbits	set	4048
   255   000000                     _PIE2bits	set	4000
   256   000000                     _PIR2bits	set	4001
   257   000000                     _T3CON	set	4017
   258   000000                     _EECON1bits	set	4006
   259   000000                     _RCSTA1	set	4011
   260   000000                     _TXSTA1	set	4012
   261   000000                     _LATDbits	set	3980
   262                           
   263                           	psect	smallconst
   264   000600                     __psmallconst:
   265                           	callstack 0
   266   000600  00                 	db	0
   267   000601                     STR_1:
   268   000601  54                 	db	84	;'T'
   269   000602  68                 	db	104	;'h'
   270   000603  69                 	db	105	;'i'
   271   000604  73                 	db	115	;'s'
   272   000605  20                 	db	32
   273   000606  69                 	db	105	;'i'
   274   000607  73                 	db	115	;'s'
   275   000608  20                 	db	32
   276   000609  45                 	db	69	;'E'
   277   00060A  74                 	db	116	;'t'
   278   00060B  68                 	db	104	;'h'
   279   00060C  65                 	db	101	;'e'
   280   00060D  72                 	db	114	;'r'
   281   00060E  6E                 	db	110	;'n'
   282   00060F  65                 	db	101	;'e'
   283   000610  74                 	db	116	;'t'
   284   000611  20                 	db	32
   285   000612  70                 	db	112	;'p'
   286   000613  72                 	db	114	;'r'
   287   000614  6F                 	db	111	;'o'
   288   000615  74                 	db	116	;'t'
   289   000616  6F                 	db	111	;'o'
   290   000617  63                 	db	99	;'c'
   291   000618  6F                 	db	111	;'o'
   292   000619  6C                 	db	108	;'l'
   293   00061A  20                 	db	32
   294   00061B  74                 	db	116	;'t'
   295   00061C  65                 	db	101	;'e'
   296   00061D  73                 	db	115	;'s'
   297   00061E  74                 	db	116	;'t'
   298   00061F  20                 	db	32
   299   000620  66                 	db	102	;'f'
   300   000621  69                 	db	105	;'i'
   301   000622  72                 	db	114	;'r'
   302   000623  6D                 	db	109	;'m'
   303   000624  77                 	db	119	;'w'
   304   000625  61                 	db	97	;'a'
   305   000626  72                 	db	114	;'r'
   306   000627  65                 	db	101	;'e'
   307   000628  21                 	db	33
   308   000629  0D                 	db	13
   309   00062A  0A                 	db	10
   310   00062B  00                 	db	0
   311   00062C  57                 	db	87	;'W'
   312   00062D  35                 	db	53	;'5'
   313   00062E  35                 	db	53	;'5'
   314   00062F  30                 	db	48	;'0'
   315   000630  30                 	db	48	;'0'
   316   000631  20                 	db	32
   317   000632  49                 	db	73	;'I'
   318   000633  6E                 	db	110	;'n'
   319   000634  69                 	db	105	;'i'
   320   000635  74                 	db	116	;'t'
   321   000636  20                 	db	32
   322   000637  43                 	db	67	;'C'
   323   000638  6F                 	db	111	;'o'
   324   000639  6D                 	db	109	;'m'
   325   00063A  70                 	db	112	;'p'
   326   00063B  6C                 	db	108	;'l'
   327   00063C  65                 	db	101	;'e'
   328   00063D  74                 	db	116	;'t'
   329   00063E  65                 	db	101	;'e'
   330   00063F  21                 	db	33
   331   000640  0A                 	db	10
   332   000641  00                 	db	0
   333   000642  57                 	db	87	;'W'
   334   000643  35                 	db	53	;'5'
   335   000644  35                 	db	53	;'5'
   336   000645  30                 	db	48	;'0'
   337   000646  30                 	db	48	;'0'
   338   000647  2D                 	db	45
   339   000648  3E                 	db	62	;'>'
   340   000649  25                 	db	37
   341   00064A  64                 	db	100	;'d'
   342   00064B  0A                 	db	10
   343   00064C  00                 	db	0
   344   00064D  00                 	db	0	; dummy byte at the end
   345   000000                     
   346                           ; #config settings
   347                           
   348                           	psect	cinit
   349   0020A6                     __pcinit:
   350                           	callstack 0
   351   0020A6                     start_initialization:
   352                           	callstack 0
   353   0020A6                     __initialization:
   354                           	callstack 0
   355                           
   356                           ; Initialize objects allocated to BANK1 (22 bytes)
   357                           ; load TBLPTR registers with __pidataBANK1
   358   0020A6  0ED4               	movlw	low __pidataBANK1
   359   0020A8  6EF6               	movwf	tblptrl,c
   360   0020AA  0E25               	movlw	high __pidataBANK1
   361   0020AC  6EF7               	movwf	tblptrh,c
   362   0020AE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   363   0020B0  6EF8               	movwf	tblptru,c
   364   0020B2  EE01  F000         	lfsr	0,__pdataBANK1
   365   0020B6  EE10 F016          	lfsr	1,22
   366   0020BA                     copy_data0:
   367   0020BA  0009               	tblrd		*+
   368   0020BC  CFF5 FFEE          	movff	tablat,postinc0
   369   0020C0  50E5               	movf	postdec1,w,c
   370   0020C2  50E1               	movf	fsr1l,w,c
   371   0020C4  E1FA               	bnz	copy_data0
   372                           
   373                           ; Initialize objects allocated to BANK0 (24 bytes)
   374                           ; load TBLPTR registers with __pidataBANK0
   375   0020C6  0EA4               	movlw	low __pidataBANK0
   376   0020C8  6EF6               	movwf	tblptrl,c
   377   0020CA  0E25               	movlw	high __pidataBANK0
   378   0020CC  6EF7               	movwf	tblptrh,c
   379   0020CE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   380   0020D0  6EF8               	movwf	tblptru,c
   381   0020D2  EE00  F0E6         	lfsr	0,__pdataBANK0
   382   0020D6  EE10 F018          	lfsr	1,24
   383   0020DA                     copy_data1:
   384   0020DA  0009               	tblrd		*+
   385   0020DC  CFF5 FFEE          	movff	tablat,postinc0
   386   0020E0  50E5               	movf	postdec1,w,c
   387   0020E2  50E1               	movf	fsr1l,w,c
   388   0020E4  E1FA               	bnz	copy_data1
   389                           
   390                           ; Initialize objects allocated to COMRAM (8 bytes)
   391                           ; load TBLPTR registers with __pidataCOMRAM
   392   0020E6  0E86               	movlw	low __pidataCOMRAM
   393   0020E8  6EF6               	movwf	tblptrl,c
   394   0020EA  0E26               	movlw	high __pidataCOMRAM
   395   0020EC  6EF7               	movwf	tblptrh,c
   396   0020EE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   397   0020F0  6EF8               	movwf	tblptru,c
   398   0020F2  EE00  F068         	lfsr	0,__pdataCOMRAM
   399   0020F6  EE10 F008          	lfsr	1,8
   400   0020FA                     copy_data2:
   401   0020FA  0009               	tblrd		*+
   402   0020FC  CFF5 FFEE          	movff	tablat,postinc0
   403   002100  50E5               	movf	postdec1,w,c
   404   002102  50E1               	movf	fsr1l,w,c
   405   002104  E1FA               	bnz	copy_data2
   406                           
   407                           ; Clear objects allocated to BANK1 (6 bytes)
   408   002106  0101               	movlb	1
   409   002108  6B2A               	clrf	(__pbssBANK1+5)& (0+255),b
   410   00210A  6B29               	clrf	(__pbssBANK1+4)& (0+255),b
   411   00210C  6B28               	clrf	(__pbssBANK1+3)& (0+255),b
   412   00210E  6B27               	clrf	(__pbssBANK1+2)& (0+255),b
   413   002110  6B26               	clrf	(__pbssBANK1+1)& (0+255),b
   414   002112  6B25               	clrf	__pbssBANK1& (0+255),b
   415                           
   416                           ; Clear objects allocated to BANK0 (102 bytes)
   417   002114  EE00  F080         	lfsr	0,__pbssBANK0
   418   002118  0E66               	movlw	102
   419   00211A                     clear_0:
   420   00211A  6AEE               	clrf	postinc0,c
   421   00211C  06E8               	decf	wreg,f,c
   422   00211E  E1FD               	bnz	clear_0
   423                           
   424                           ; Clear objects allocated to COMRAM (80 bytes)
   425   002120  EE00  F001         	lfsr	0,__pbssCOMRAM
   426   002124  0E50               	movlw	80
   427   002126                     clear_1:
   428   002126  6AEE               	clrf	postinc0,c
   429   002128  06E8               	decf	wreg,f,c
   430   00212A  E1FD               	bnz	clear_1
   431   00212C                     end_of_initialization:
   432                           	callstack 0
   433   00212C                     __end_of__initialization:
   434                           	callstack 0
   435   00212C  9070               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   436   00212E  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   437   002130  0E00               	movlw	low (__Lmediumconst shr (0+16))
   438   002132  6EF8               	movwf	tblptru,c
   439   002134  0100               	movlb	0
   440   002136  EF10  F008         	goto	_main	;jump to C main() function
   441                           
   442                           	psect	bssCOMRAM
   443   000001                     __pbssCOMRAM:
   444                           	callstack 0
   445   000001                     _sel_btn_released_cnt:
   446                           	callstack 0
   447   000001                     	ds	2
   448   000003                     _down_btn_released_cnt:
   449                           	callstack 0
   450   000003                     	ds	2
   451   000005                     _up_btn_released_cnt:
   452                           	callstack 0
   453   000005                     	ds	2
   454   000007                     _hour_btn_released_cnt:
   455                           	callstack 0
   456   000007                     	ds	2
   457   000009                     _reset_btn_pressed_cnt:
   458                           	callstack 0
   459   000009                     	ds	2
   460   00000B                     _sel_btn_pressed_cnt:
   461                           	callstack 0
   462   00000B                     	ds	2
   463   00000D                     _down_btn_pressed_cnt:
   464                           	callstack 0
   465   00000D                     	ds	2
   466   00000F                     _up_btn_pressed_cnt:
   467                           	callstack 0
   468   00000F                     	ds	2
   469   000011                     _hour_btn_pressed_cnt:
   470                           	callstack 0
   471   000011                     	ds	2
   472   000013                     _BLINK_TIME:
   473                           	callstack 0
   474   000013                     	ds	2
   475   000015                     _set_mode_release_cnt:
   476                           	callstack 0
   477   000015                     	ds	2
   478   000017                     _W5500_Interrupt:
   479                           	callstack 0
   480   000017                     	ds	1
   481   000018                     _S7_Data:
   482                           	callstack 0
   483   000018                     	ds	1
   484   000019                     _S6_Data:
   485                           	callstack 0
   486   000019                     	ds	1
   487   00001A                     _S5_Data:
   488                           	callstack 0
   489   00001A                     	ds	1
   490   00001B                     _S4_Data:
   491                           	callstack 0
   492   00001B                     	ds	1
   493   00001C                     _S3_Data:
   494                           	callstack 0
   495   00001C                     	ds	1
   496   00001D                     _S2_Data:
   497                           	callstack 0
   498   00001D                     	ds	1
   499   00001E                     _S1_Data:
   500                           	callstack 0
   501   00001E                     	ds	1
   502   00001F                     _S0_Data:
   503                           	callstack 0
   504   00001F                     	ds	1
   505   000020                     _S7_State:
   506                           	callstack 0
   507   000020                     	ds	1
   508   000021                     _S6_State:
   509                           	callstack 0
   510   000021                     	ds	1
   511   000022                     _S5_State:
   512                           	callstack 0
   513   000022                     	ds	1
   514   000023                     _S4_State:
   515                           	callstack 0
   516   000023                     	ds	1
   517   000024                     _S3_State:
   518                           	callstack 0
   519   000024                     	ds	1
   520   000025                     _S2_State:
   521                           	callstack 0
   522   000025                     	ds	1
   523   000026                     _S1_State:
   524                           	callstack 0
   525   000026                     	ds	1
   526   000027                     _S0_State:
   527                           	callstack 0
   528   000027                     	ds	1
   529   000028                     _USART1_Status:
   530                           	callstack 0
   531   000028                     	ds	1
   532   000029                     _btn_long_press_verify_flg:
   533                           	callstack 0
   534   000029                     	ds	1
   535   00002A                     _btn_press_verify_flg:
   536                           	callstack 0
   537   00002A                     	ds	1
   538   00002B                     _BTN_CLICK_EVENT:
   539                           	callstack 0
   540   00002B                     	ds	1
   541   00002C                     _BTN_CLICK_STATE:
   542                           	callstack 0
   543   00002C                     	ds	1
   544   00002D                     _blink_cnt:
   545                           	callstack 0
   546   00002D                     	ds	1
   547   00002E                     _display_cnt:
   548                           	callstack 0
   549   00002E                     	ds	1
   550   00002F                     _blink_enable_flg:
   551                           	callstack 0
   552   00002F                     	ds	1
   553   000030                     _counter_down_comp_cnt:
   554                           	callstack 0
   555   000030                     	ds	1
   556   000031                     _counter_down_comp_flg:
   557                           	callstack 0
   558   000031                     	ds	1
   559   000032                     _counter_seting_flg:
   560                           	callstack 0
   561   000032                     	ds	1
   562   000033                     _counter_skip_flg:
   563                           	callstack 0
   564   000033                     	ds	1
   565   000034                     _counter_direction_flg:
   566                           	callstack 0
   567   000034                     	ds	1
   568   000035                     _counter_enable_flg:
   569                           	callstack 0
   570   000035                     	ds	1
   571   000036                     _counter_up_second:
   572                           	callstack 0
   573   000036                     	ds	1
   574   000037                     _counter_up_minute:
   575                           	callstack 0
   576   000037                     	ds	1
   577   000038                     _counter_up_hour:
   578                           	callstack 0
   579   000038                     	ds	1
   580   000039                     _counter_down_set_second:
   581                           	callstack 0
   582   000039                     	ds	1
   583   00003A                     _counter_down_set_minute:
   584                           	callstack 0
   585   00003A                     	ds	1
   586   00003B                     _counter_down_set_hour:
   587                           	callstack 0
   588   00003B                     	ds	1
   589   00003C                     _counter_down_second:
   590                           	callstack 0
   591   00003C                     	ds	1
   592   00003D                     _counter_down_minute:
   593                           	callstack 0
   594   00003D                     	ds	1
   595   00003E                     _counter_down_hour:
   596                           	callstack 0
   597   00003E                     	ds	1
   598   00003F                     _rtc_clock_set_mode:
   599                           	callstack 0
   600   00003F                     	ds	1
   601   000040                     _rtc_clock_disp_mode:
   602                           	callstack 0
   603   000040                     	ds	1
   604   000041                     _temp_system_state:
   605                           	callstack 0
   606   000041                     	ds	1
   607   000042                     _counter_sec_set_value:
   608                           	callstack 0
   609   000042                     	ds	1
   610   000043                     _counter_min_set_value:
   611                           	callstack 0
   612   000043                     	ds	1
   613   000044                     _counter_hour_set_value:
   614                           	callstack 0
   615   000044                     	ds	1
   616   000045                     _SYSTEM_STATE_FLG:
   617                           	callstack 0
   618   000045                     	ds	1
   619   000046                     _SYSTEM_ACTION_FLG:
   620                           	callstack 0
   621   000046                     	ds	1
   622   000047                     _int_cnt:
   623                           	callstack 0
   624   000047                     	ds	1
   625   000048                     _rtc_hour_ampm_flg:
   626                           	callstack 0
   627   000048                     	ds	1
   628   000049                     _rtc_clock_disp_type:
   629                           	callstack 0
   630   000049                     	ds	1
   631   00004A                     _real_rtc_data:
   632                           	callstack 0
   633   00004A                     	ds	7
   634                           
   635                           	psect	dataCOMRAM
   636   000068                     __pdataCOMRAM:
   637                           	callstack 0
   638   000068                     _S7_Mode:
   639                           	callstack 0
   640   000068                     	ds	1
   641   000069                     _S6_Mode:
   642                           	callstack 0
   643   000069                     	ds	1
   644   00006A                     _S5_Mode:
   645                           	callstack 0
   646   00006A                     	ds	1
   647   00006B                     _S4_Mode:
   648                           	callstack 0
   649   00006B                     	ds	1
   650   00006C                     _S3_Mode:
   651                           	callstack 0
   652   00006C                     	ds	1
   653   00006D                     _S2_Mode:
   654                           	callstack 0
   655   00006D                     	ds	1
   656   00006E                     _S1_Mode:
   657                           	callstack 0
   658   00006E                     	ds	1
   659   00006F                     _S0_Mode:
   660                           	callstack 0
   661   00006F                     	ds	1
   662                           
   663                           	psect	bssBANK0
   664   000080                     __pbssBANK0:
   665                           	callstack 0
   666   000080                     _blink_pos:
   667                           	callstack 0
   668   000080                     	ds	8
   669   000088                     _display_datas:
   670                           	callstack 0
   671   000088                     	ds	8
   672   000090                     _UDP_DIPR:
   673                           	callstack 0
   674   000090                     	ds	4
   675   000094                     _IP_Addr:
   676                           	callstack 0
   677   000094                     	ds	4
   678   000098                     _Sub_Mask:
   679                           	callstack 0
   680   000098                     	ds	4
   681   00009C                     _Gateway_IP:
   682                           	callstack 0
   683   00009C                     	ds	4
   684   0000A0                     _UDP_DPORT:
   685                           	callstack 0
   686   0000A0                     	ds	2
   687   0000A2                     _S7_DPort:
   688                           	callstack 0
   689   0000A2                     	ds	2
   690   0000A4                     _S6_DPort:
   691                           	callstack 0
   692   0000A4                     	ds	2
   693   0000A6                     _S5_DPort:
   694                           	callstack 0
   695   0000A6                     	ds	2
   696   0000A8                     _S4_DPort:
   697                           	callstack 0
   698   0000A8                     	ds	2
   699   0000AA                     _S3_DPort:
   700                           	callstack 0
   701   0000AA                     	ds	2
   702   0000AC                     _S2_DPort:
   703                           	callstack 0
   704   0000AC                     	ds	2
   705   0000AE                     _S1_DPort:
   706                           	callstack 0
   707   0000AE                     	ds	2
   708   0000B0                     _S0_DPort:
   709                           	callstack 0
   710   0000B0                     	ds	2
   711   0000B2                     _S7_Port:
   712                           	callstack 0
   713   0000B2                     	ds	2
   714   0000B4                     _S6_Port:
   715                           	callstack 0
   716   0000B4                     	ds	2
   717   0000B6                     _S5_Port:
   718                           	callstack 0
   719   0000B6                     	ds	2
   720   0000B8                     _S4_Port:
   721                           	callstack 0
   722   0000B8                     	ds	2
   723   0000BA                     _S3_Port:
   724                           	callstack 0
   725   0000BA                     	ds	2
   726   0000BC                     _S2_Port:
   727                           	callstack 0
   728   0000BC                     	ds	2
   729   0000BE                     _S1_Port:
   730                           	callstack 0
   731   0000BE                     	ds	2
   732   0000C0                     _S0_Port:
   733                           	callstack 0
   734   0000C0                     	ds	2
   735   0000C2                     _cnt:
   736                           	callstack 0
   737   0000C2                     	ds	2
   738   0000C4                     _reset_btn_released_cnt:
   739                           	callstack 0
   740   0000C4                     	ds	2
   741   0000C6                     _S7_DIP:
   742                           	callstack 0
   743   0000C6                     	ds	4
   744   0000CA                     _S6_DIP:
   745                           	callstack 0
   746   0000CA                     	ds	4
   747   0000CE                     _S5_DIP:
   748                           	callstack 0
   749   0000CE                     	ds	4
   750   0000D2                     _S4_DIP:
   751                           	callstack 0
   752   0000D2                     	ds	4
   753   0000D6                     _S3_DIP:
   754                           	callstack 0
   755   0000D6                     	ds	4
   756   0000DA                     _S2_DIP:
   757                           	callstack 0
   758   0000DA                     	ds	4
   759   0000DE                     _S1_DIP:
   760                           	callstack 0
   761   0000DE                     	ds	4
   762   0000E2                     _S0_DIP:
   763                           	callstack 0
   764   0000E2                     	ds	4
   765                           
   766                           	psect	dataBANK0
   767   0000E6                     __pdataBANK0:
   768                           	callstack 0
   769   0000E6                     OpenS5500@F2862:
   770                           	callstack 0
   771   0000E6                     	ds	4
   772   0000EA                     OpenS5500@F2860:
   773                           	callstack 0
   774   0000EA                     	ds	4
   775   0000EE                     OpenS5500@F2858:
   776                           	callstack 0
   777   0000EE                     	ds	4
   778   0000F2                     OpenW5500@F2689:
   779                           	callstack 0
   780   0000F2                     	ds	4
   781   0000F6                     OpenW5500@F2687:
   782                           	callstack 0
   783   0000F6                     	ds	4
   784   0000FA                     OpenW5500@F2685:
   785                           	callstack 0
   786   0000FA                     	ds	4
   787                           
   788                           	psect	bssBANK1
   789   000125                     __pbssBANK1:
   790                           	callstack 0
   791   000125                     _Phy_Addr:
   792                           	callstack 0
   793   000125                     	ds	6
   794                           
   795                           	psect	dataBANK1
   796   000100                     __pdataBANK1:
   797                           	callstack 0
   798   000100                     _rtc_default_values:
   799                           	callstack 0
   800   000100                     	ds	10
   801   00010A                     OpenS5500@F2856:
   802                           	callstack 0
   803   00010A                     	ds	6
   804   000110                     OpenW5500@F2683:
   805                           	callstack 0
   806   000110                     	ds	6
   807                           
   808                           	psect	cstackBANK1
   809   000116                     __pcstackBANK1:
   810                           	callstack 0
   811   000116                     Ds1307Read@disp_type:
   812                           	callstack 0
   813   000116                     ReadCounter@counter_datas:
   814                           	callstack 0
   815                           
   816                           ; 6 bytes @ 0x0
   817   000116                     	ds	1
   818   000117                     Ds1307Read@i:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x1
   822   000117                     	ds	1
   823   000118                     Ds1307Read@ds1307_date_datas:
   824                           	callstack 0
   825                           
   826                           ; 6 bytes @ 0x2
   827   000118                     	ds	6
   828   00011E                     UpdateDisplay@update_datas:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x8
   832   00011E                     	ds	2
   833   000120                     UpdateDisplay@start_position:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0xA
   837   000120                     	ds	1
   838   000121                     UpdateDisplay@end_position:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0xB
   842   000121                     	ds	1
   843   000122                     UpdateDisplay@i:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0xC
   847   000122                     	ds	1
   848   000123                     ??_main:
   849                           
   850                           ; 1 bytes @ 0xD
   851   000123                     	ds	2
   852                           
   853                           	psect	cstackBANK0
   854   0000FE                     __pcstackBANK0:
   855                           	callstack 0
   856   0000FE                     ?_ReadCounter:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x0
   860   0000FE                     	ds	2
   861                           
   862                           	psect	cstackCOMRAM
   863   000051                     __pcstackCOMRAM:
   864                           	callstack 0
   865   000051                     TLC5917Write@data:
   866                           	callstack 0
   867   000051                     i2WriteTimer0@timer0:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x0
   871   000051                     	ds	2
   872   000053                     ??_TLC5917Write:
   873   000053                     i2WriteTimer0@timer:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x2
   877   000053                     	ds	1
   878   000054                     TLC5917Write@temp:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x3
   882   000054                     	ds	2
   883   000056                     TLC5917Write@i:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x5
   887   000056                     	ds	1
   888   000057                     ??_ScanDisplay:
   889                           
   890                           ; 1 bytes @ 0x6
   891   000057                     	ds	4
   892   00005B                     ??_high_isr:
   893                           
   894                           ; 1 bytes @ 0xA
   895   00005B                     	ds	2
   896   00005D                     ??_low_isr:
   897                           
   898                           ; 1 bytes @ 0xC
   899   00005D                     	ds	3
   900   000060                     ??_MarkDisplay:
   901   000060                     ?___awdiv:
   902                           	callstack 0
   903   000060                     ?___awmod:
   904                           	callstack 0
   905   000060                     I2cWrite@data:
   906                           	callstack 0
   907   000060                     I2cRead@ack:
   908                           	callstack 0
   909   000060                     OpenTimer0@config:
   910                           	callstack 0
   911   000060                     OpenDisplay@i:
   912                           	callstack 0
   913   000060                     BlinkDisable@i:
   914                           	callstack 0
   915   000060                     Write1USART@data:
   916                           	callstack 0
   917   000060                     WriteTimer0@timer0:
   918                           	callstack 0
   919   000060                     Open1USART@spbrg:
   920                           	callstack 0
   921   000060                     ___awdiv@dividend:
   922                           	callstack 0
   923   000060                     ___awmod@dividend:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0xF
   927   000060                     	ds	1
   928   000061                     Ds1307Write@write_datas:
   929                           	callstack 0
   930   000061                     I2cRead@receive:
   931                           	callstack 0
   932   000061                     Puts1USART@data:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x10
   936   000061                     	ds	1
   937   000062                     ??_Puts1USART:
   938   000062                     ?_Ds1307Read:
   939                           	callstack 0
   940   000062                     Ds1307Write@hour_temp:
   941                           	callstack 0
   942   000062                     MarkDisplay@mark:
   943                           	callstack 0
   944   000062                     Open1USART@config:
   945                           	callstack 0
   946   000062                     WriteTimer0@timer:
   947                           	callstack 0
   948   000062                     ___awdiv@divisor:
   949                           	callstack 0
   950   000062                     ___awmod@divisor:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x11
   954   000062                     	ds	1
   955   000063                     ??_ActionButtons:
   956                           
   957                           ; 1 bytes @ 0x12
   958   000063                     	ds	1
   959   000064                     ??_Ds1307Read:
   960   000064                     ___awdiv@counter:
   961                           	callstack 0
   962   000064                     ___awmod@counter:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0x13
   966   000064                     	ds	1
   967   000065                     ActionButtons@temp:
   968                           	callstack 0
   969   000065                     ___awdiv@sign:
   970                           	callstack 0
   971   000065                     ___awmod@sign:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x14
   975   000065                     	ds	1
   976   000066                     ??_VerifyButtons:
   977   000066                     ___awdiv@quotient:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x15
   981   000066                     	ds	2
   982   000068                     
   983                           ; 1 bytes @ 0x17
   984 ;;
   985 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   986 ;;
   987 ;; *************** function _main *****************
   988 ;; Defined at:
   989 ;;		line 23 in file "Main.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1003 ;;      Params:         0       0       0       0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0
  1005 ;;      Temps:          0       0       2       0       0       0       0
  1006 ;;      Totals:         0       0       2       0       0       0       0
  1007 ;;Total ram usage:        2 bytes
  1008 ;; Hardware stack levels required when called: 11
  1009 ;; This function calls:
  1010 ;;		_BlinkDisable
  1011 ;;		_ClockSetting
  1012 ;;		_DeviceInit
  1013 ;;		_Ds1307Read
  1014 ;;		_Ds1307Write
  1015 ;;		_LEDProcess
  1016 ;;		_Puts1USART
  1017 ;;		_ReadCounter
  1018 ;;		_UpdateDisplay
  1019 ;;		_VerifyButtons
  1020 ;; This function is called by:
  1021 ;;		Startup code after reset
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text0
  1026   001020                     __ptext0:
  1027                           	callstack 0
  1028   001020                     _main:
  1029                           	callstack 20
  1030   001020                     
  1031                           ;Main.c: 25:     DeviceInit();
  1032   001020  EC8E  F011         	call	_DeviceInit	;wreg free
  1033   001024                     l299:
  1034                           
  1035                           ;Main.c: 28:     {;Main.c: 29:         VerifyButtons();
  1036   001024  EC42  F006         	call	_VerifyButtons	;wreg free
  1037   001028                     
  1038                           ;Main.c: 31:         if( SYSTEM_STATE_FLG == 101 && set_mode_release_cnt > 400 ) {
  1039   001028  0E65               	movlw	101
  1040   00102A  1845               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  1041   00102C  A4D8               	btfss	status,2,c
  1042   00102E  EF1B  F008         	goto	u7151
  1043   001032  EF1D  F008         	goto	u7150
  1044   001036                     u7151:
  1045   001036  EF32  F008         	goto	l9883
  1046   00103A                     u7150:
  1047   00103A  0E91               	movlw	145
  1048   00103C  5C15               	subwf	_set_mode_release_cnt^0,w,c
  1049   00103E  0E01               	movlw	1
  1050   001040  5816               	subwfb	(_set_mode_release_cnt+1)^0,w,c
  1051   001042  A0D8               	btfss	status,0,c
  1052   001044  EF26  F008         	goto	u7161
  1053   001048  EF28  F008         	goto	u7160
  1054   00104C                     u7161:
  1055   00104C  EF32  F008         	goto	l9883
  1056   001050                     u7160:
  1057   001050                     
  1058                           ;Main.c: 32:             Ds1307Write( &real_rtc_data ); set_mode_release_cnt = 0;
  1059   001050  0E4A               	movlw	low _real_rtc_data
  1060   001052  6E61               	movwf	Ds1307Write@write_datas^0,c
  1061   001054  EC31  F00D         	call	_Ds1307Write	;wreg free
  1062   001058  0E00               	movlw	0
  1063   00105A  6E16               	movwf	(_set_mode_release_cnt+1)^0,c
  1064   00105C  0E00               	movlw	0
  1065   00105E  6E15               	movwf	_set_mode_release_cnt^0,c
  1066   001060                     
  1067                           ;Main.c: 33:             SYSTEM_STATE_FLG = 100;
  1068   001060  0E64               	movlw	100
  1069   001062  6E45               	movwf	_SYSTEM_STATE_FLG^0,c
  1070   001064                     l9883:
  1071                           
  1072                           ;Main.c: 36:         if( counter_down_comp_flg ) {
  1073   001064  5031               	movf	_counter_down_comp_flg^0,w,c
  1074   001066  B4D8               	btfsc	status,2,c
  1075   001068  EF38  F008         	goto	u7171
  1076   00106C  EF3A  F008         	goto	u7170
  1077   001070                     u7171:
  1078   001070  EF42  F008         	goto	l9887
  1079   001074                     u7170:
  1080   001074                     
  1081                           ;Main.c: 37:             BLINK_TIME = 80; blink_enable_flg = 5;
  1082   001074  0E00               	movlw	0
  1083   001076  6E14               	movwf	(_BLINK_TIME+1)^0,c
  1084   001078  0E50               	movlw	80
  1085   00107A  6E13               	movwf	_BLINK_TIME^0,c
  1086   00107C  0E05               	movlw	5
  1087   00107E  6E2F               	movwf	_blink_enable_flg^0,c
  1088                           
  1089                           ;Main.c: 38:         }
  1090   001080  EF46  F008         	goto	l9889
  1091   001084                     l9887:
  1092   001084  0E00               	movlw	0
  1093   001086  6E14               	movwf	(_BLINK_TIME+1)^0,c
  1094   001088  0E96               	movlw	150
  1095   00108A  6E13               	movwf	_BLINK_TIME^0,c
  1096   00108C                     l9889:
  1097                           
  1098                           ;Main.c: 41:         if( !SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE ) continue;
  1099   00108C  B046               	btfsc	_SYSTEM_ACTION_FLG^0,0,c	;volatile
  1100   00108E  EF4B  F008         	goto	u7181
  1101   001092  EF4D  F008         	goto	u7180
  1102   001096                     u7181:
  1103   001096  EF4F  F008         	goto	l303
  1104   00109A                     u7180:
  1105   00109A  EF12  F008         	goto	l299
  1106   00109E                     l303:
  1107                           
  1108                           ;Main.c: 42:         SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE = 0;
  1109   00109E  9046               	bcf	_SYSTEM_ACTION_FLG^0,0,c	;volatile
  1110   0010A0                     
  1111                           ;Main.c: 44:         Puts1USART( "This is Ethernet protocol test firmware!\r\n" );
  1112   0010A0  0E01               	movlw	low STR_1
  1113   0010A2  6E61               	movwf	Puts1USART@data^0,c
  1114   0010A4  ECE0  F011         	call	_Puts1USART	;wreg free
  1115                           
  1116                           ;Main.c: 46:         switch( blink_enable_flg ) {
  1117   0010A8  EF89  F008         	goto	l9935
  1118   0010AC                     l9895:
  1119                           
  1120                           ; BSR set to: 1
  1121   0010AC  ECB4  F012         	call	_BlinkDisable	;wreg free
  1122   0010B0  EFAF  F008         	goto	l9937
  1123   0010B4                     l9897:
  1124                           
  1125                           ; BSR set to: 1
  1126   0010B4  ECB4  F012         	call	_BlinkDisable	;wreg free
  1127   0010B8  0E01               	movlw	1
  1128   0010BA  0100               	movlb	0	; () banked
  1129   0010BC  6F86               	movwf	(_blink_pos+6)& (0+255),b
  1130   0010BE  EFAF  F008         	goto	l9937
  1131   0010C2                     l9901:
  1132                           
  1133                           ; BSR set to: 1
  1134   0010C2  ECB4  F012         	call	_BlinkDisable	;wreg free
  1135   0010C6  0E01               	movlw	1
  1136   0010C8  0100               	movlb	0	; () banked
  1137   0010CA  6F80               	movwf	_blink_pos& (0+255),b
  1138   0010CC                     
  1139                           ; BSR set to: 0
  1140   0010CC  0E01               	movlw	1
  1141   0010CE  6F81               	movwf	(_blink_pos+1)& (0+255),b
  1142   0010D0  EFAF  F008         	goto	l9937
  1143   0010D4                     l9907:
  1144                           
  1145                           ; BSR set to: 1
  1146   0010D4  ECB4  F012         	call	_BlinkDisable	;wreg free
  1147   0010D8  0E01               	movlw	1
  1148   0010DA  0100               	movlb	0	; () banked
  1149   0010DC  6F82               	movwf	(_blink_pos+2)& (0+255),b
  1150   0010DE                     
  1151                           ; BSR set to: 0
  1152   0010DE  0E01               	movlw	1
  1153   0010E0  6F83               	movwf	(_blink_pos+3)& (0+255),b
  1154   0010E2  EFAF  F008         	goto	l9937
  1155   0010E6                     l9913:
  1156                           
  1157                           ; BSR set to: 1
  1158   0010E6  ECB4  F012         	call	_BlinkDisable	;wreg free
  1159   0010EA                     l9915:
  1160   0010EA  0E01               	movlw	1
  1161   0010EC  0100               	movlb	0	; () banked
  1162   0010EE  6F84               	movwf	(_blink_pos+4)& (0+255),b
  1163   0010F0                     
  1164                           ; BSR set to: 0
  1165   0010F0  0E01               	movlw	1
  1166   0010F2  6F85               	movwf	(_blink_pos+5)& (0+255),b
  1167   0010F4  EFAF  F008         	goto	l9937
  1168   0010F8                     l9919:
  1169                           
  1170                           ; BSR set to: 1
  1171   0010F8  ECB4  F012         	call	_BlinkDisable	;wreg free
  1172   0010FC  0E01               	movlw	1
  1173   0010FE  0100               	movlb	0	; () banked
  1174   001100  6F80               	movwf	_blink_pos& (0+255),b
  1175   001102                     
  1176                           ; BSR set to: 0
  1177   001102  0E01               	movlw	1
  1178   001104  6F81               	movwf	(_blink_pos+1)& (0+255),b
  1179   001106                     
  1180                           ; BSR set to: 0
  1181   001106  0E01               	movlw	1
  1182   001108  6F82               	movwf	(_blink_pos+2)& (0+255),b
  1183   00110A                     
  1184                           ; BSR set to: 0
  1185   00110A  0E01               	movlw	1
  1186   00110C  6F83               	movwf	(_blink_pos+3)& (0+255),b
  1187   00110E  EF75  F008         	goto	l9915
  1188   001112                     l9935:
  1189   001112  502F               	movf	_blink_enable_flg^0,w,c
  1190   001114  0101               	movlb	1	; () banked
  1191   001116  6F23               	movwf	??_main& (0+255),b
  1192   001118  6B24               	clrf	(??_main+1)& (0+255),b
  1193                           
  1194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1195                           ; Switch size 1, requested type "simple"
  1196                           ; Number of cases is 1, Range of values is 0 to 0
  1197                           ; switch strategies available:
  1198                           ; Name         Instructions Cycles
  1199                           ; simple_byte            4     3 (average)
  1200                           ;	Chosen strategy is simple_byte
  1201   00111A  5124               	movf	(??_main+1)& (0+255),w,b
  1202   00111C  0A00               	xorlw	0	; case 0
  1203   00111E  B4D8               	btfsc	status,2,c
  1204   001120  EF94  F008         	goto	l10301
  1205   001124  EFAF  F008         	goto	l9937
  1206   001128                     l10301:
  1207                           
  1208                           ; BSR set to: 1
  1209                           ; Switch size 1, requested type "simple"
  1210                           ; Number of cases is 6, Range of values is 0 to 5
  1211                           ; switch strategies available:
  1212                           ; Name         Instructions Cycles
  1213                           ; simple_byte           19    10 (average)
  1214                           ;	Chosen strategy is simple_byte
  1215   001128  5123               	movf	??_main& (0+255),w,b
  1216   00112A  0A00               	xorlw	0	; case 0
  1217   00112C  B4D8               	btfsc	status,2,c
  1218   00112E  EF56  F008         	goto	l9895
  1219   001132  0A01               	xorlw	1	; case 1
  1220   001134  B4D8               	btfsc	status,2,c
  1221   001136  EF5A  F008         	goto	l9897
  1222   00113A  0A03               	xorlw	3	; case 2
  1223   00113C  B4D8               	btfsc	status,2,c
  1224   00113E  EF61  F008         	goto	l9901
  1225   001142  0A01               	xorlw	1	; case 3
  1226   001144  B4D8               	btfsc	status,2,c
  1227   001146  EF6A  F008         	goto	l9907
  1228   00114A  0A07               	xorlw	7	; case 4
  1229   00114C  B4D8               	btfsc	status,2,c
  1230   00114E  EF73  F008         	goto	l9913
  1231   001152  0A01               	xorlw	1	; case 5
  1232   001154  B4D8               	btfsc	status,2,c
  1233   001156  EF7C  F008         	goto	l9919
  1234   00115A  EFAF  F008         	goto	l9937
  1235   00115E                     l9937:
  1236                           
  1237                           ;Main.c: 55:         LEDProcess();
  1238   00115E  EC01  F010         	call	_LEDProcess	;wreg free
  1239                           
  1240                           ;Main.c: 58:         switch( SYSTEM_STATE_FLG ) {
  1241   001162  EFC7  F008         	goto	l9945
  1242   001166                     l9939:
  1243                           
  1244                           ; BSR set to: 1
  1245   001166  0E00               	movlw	0
  1246   001168  EC86  F00C         	call	_Ds1307Read
  1247   00116C  C062  F11E         	movff	?_Ds1307Read,UpdateDisplay@update_datas
  1248   001170  C063  F11F         	movff	?_Ds1307Read+1,UpdateDisplay@update_datas+1
  1249   001174  0E01               	movlw	1
  1250   001176  0101               	movlb	1	; () banked
  1251   001178  6F20               	movwf	UpdateDisplay@start_position& (0+255),b
  1252   00117A  0E06               	movlw	6
  1253   00117C  6F21               	movwf	UpdateDisplay@end_position& (0+255),b
  1254   00117E  EC28  F012         	call	_UpdateDisplay	;wreg free
  1255   001182  EFDD  F008         	goto	l9947
  1256   001186                     l9941:
  1257                           
  1258                           ; BSR set to: 1
  1259   001186  ECBB  F011         	call	_ClockSetting	;wreg free
  1260   00118A  EFDD  F008         	goto	l9947
  1261   00118E                     l9945:
  1262   00118E  5045               	movf	_SYSTEM_STATE_FLG^0,w,c
  1263   001190  0101               	movlb	1	; () banked
  1264   001192  6F23               	movwf	??_main& (0+255),b
  1265   001194  6B24               	clrf	(??_main+1)& (0+255),b
  1266                           
  1267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1268                           ; Switch size 1, requested type "simple"
  1269                           ; Number of cases is 1, Range of values is 0 to 0
  1270                           ; switch strategies available:
  1271                           ; Name         Instructions Cycles
  1272                           ; simple_byte            4     3 (average)
  1273                           ;	Chosen strategy is simple_byte
  1274   001196  5124               	movf	(??_main+1)& (0+255),w,b
  1275   001198  0A00               	xorlw	0	; case 0
  1276   00119A  B4D8               	btfsc	status,2,c
  1277   00119C  EFD2  F008         	goto	l10303
  1278   0011A0  EFDD  F008         	goto	l9947
  1279   0011A4                     l10303:
  1280                           
  1281                           ; BSR set to: 1
  1282                           ; Switch size 1, requested type "simple"
  1283                           ; Number of cases is 2, Range of values is 100 to 101
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte            7     4 (average)
  1287                           ;	Chosen strategy is simple_byte
  1288   0011A4  5123               	movf	??_main& (0+255),w,b
  1289   0011A6  0A64               	xorlw	100	; case 100
  1290   0011A8  B4D8               	btfsc	status,2,c
  1291   0011AA  EFB3  F008         	goto	l9939
  1292   0011AE  0A01               	xorlw	1	; case 101
  1293   0011B0  B4D8               	btfsc	status,2,c
  1294   0011B2  EFC3  F008         	goto	l9941
  1295   0011B6  EFDD  F008         	goto	l9947
  1296   0011BA                     l9947:
  1297                           
  1298                           ;Main.c: 64:         if( counter_skip_flg ) continue;
  1299   0011BA  5033               	movf	_counter_skip_flg^0,w,c
  1300   0011BC  B4D8               	btfsc	status,2,c
  1301   0011BE  EFE3  F008         	goto	u7191
  1302   0011C2  EFE5  F008         	goto	u7190
  1303   0011C6                     u7191:
  1304   0011C6  EFF6  F008         	goto	l9961
  1305   0011CA                     u7190:
  1306   0011CA  EF12  F008         	goto	l299
  1307   0011CE                     l9951:
  1308                           
  1309                           ; BSR set to: 1
  1310   0011CE  ECD2  F00B         	call	_ReadCounter	;wreg free
  1311   0011D2  C0FE  F11E         	movff	?_ReadCounter,UpdateDisplay@update_datas
  1312   0011D6  C0FF  F11F         	movff	?_ReadCounter+1,UpdateDisplay@update_datas+1
  1313   0011DA  0E01               	movlw	1
  1314   0011DC  0101               	movlb	1	; () banked
  1315   0011DE  6F20               	movwf	UpdateDisplay@start_position& (0+255),b
  1316   0011E0  0E06               	movlw	6
  1317   0011E2  6F21               	movwf	UpdateDisplay@end_position& (0+255),b
  1318   0011E4  EC28  F012         	call	_UpdateDisplay	;wreg free
  1319   0011E8  EF12  F008         	goto	l299
  1320   0011EC                     l9961:
  1321   0011EC  5045               	movf	_SYSTEM_STATE_FLG^0,w,c
  1322   0011EE  0101               	movlb	1	; () banked
  1323   0011F0  6F23               	movwf	??_main& (0+255),b
  1324   0011F2  6B24               	clrf	(??_main+1)& (0+255),b
  1325                           
  1326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1327                           ; Switch size 1, requested type "simple"
  1328                           ; Number of cases is 1, Range of values is 0 to 0
  1329                           ; switch strategies available:
  1330                           ; Name         Instructions Cycles
  1331                           ; simple_byte            4     3 (average)
  1332                           ;	Chosen strategy is simple_byte
  1333   0011F4  5124               	movf	(??_main+1)& (0+255),w,b
  1334   0011F6  0A00               	xorlw	0	; case 0
  1335   0011F8  B4D8               	btfsc	status,2,c
  1336   0011FA  EF01  F009         	goto	l10305
  1337   0011FE  EF12  F008         	goto	l299
  1338   001202                     l10305:
  1339                           
  1340                           ; BSR set to: 1
  1341                           ; Switch size 1, requested type "simple"
  1342                           ; Number of cases is 4, Range of values is 200 to 203
  1343                           ; switch strategies available:
  1344                           ; Name         Instructions Cycles
  1345                           ; simple_byte           13     7 (average)
  1346                           ;	Chosen strategy is simple_byte
  1347   001202  5123               	movf	??_main& (0+255),w,b
  1348   001204  0AC8               	xorlw	200	; case 200
  1349   001206  B4D8               	btfsc	status,2,c
  1350   001208  EFE7  F008         	goto	l9951
  1351   00120C  0A01               	xorlw	1	; case 201
  1352   00120E  B4D8               	btfsc	status,2,c
  1353   001210  EFE7  F008         	goto	l9951
  1354   001214  0A03               	xorlw	3	; case 202
  1355   001216  B4D8               	btfsc	status,2,c
  1356   001218  EFE7  F008         	goto	l9951
  1357   00121C  0A01               	xorlw	1	; case 203
  1358   00121E  B4D8               	btfsc	status,2,c
  1359   001220  EFE7  F008         	goto	l9951
  1360   001224  EF12  F008         	goto	l299
  1361   001228  EF2C  F000         	goto	start
  1362   00122C                     __end_of_main:
  1363                           	callstack 0
  1364                           
  1365 ;; *************** function _VerifyButtons *****************
  1366 ;; Defined at:
  1367 ;;		line 46 in file "Buttons.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1381 ;;      Params:         0       0       0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0       0
  1383 ;;      Temps:          2       0       0       0       0       0       0
  1384 ;;      Totals:         2       0       0       0       0       0       0
  1385 ;;Total ram usage:        2 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 10
  1388 ;; This function calls:
  1389 ;;		_ActionButtons
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text1
  1396   000C84                     __ptext1:
  1397                           	callstack 0
  1398   000C84                     _VerifyButtons:
  1399                           	callstack 20
  1400   000C84                     
  1401                           ;Buttons.c: 48:     switch( BTN_CLICK_EVENT ) {
  1402   000C84  EFEE  F007         	goto	l9405
  1403   000C88                     l9297:
  1404   000C88  0EAD               	movlw	173
  1405   000C8A  5C11               	subwf	_hour_btn_pressed_cnt^0,w,c
  1406   000C8C  0E0D               	movlw	13
  1407   000C8E  5812               	subwfb	(_hour_btn_pressed_cnt+1)^0,w,c
  1408   000C90  A0D8               	btfss	status,0,c
  1409   000C92  EF4D  F006         	goto	u6791
  1410   000C96  EF4F  F006         	goto	u6790
  1411   000C9A                     u6791:
  1412   000C9A  EF63  F006         	goto	l9305
  1413   000C9E                     u6790:
  1414   000C9E  5029               	movf	_btn_long_press_verify_flg^0,w,c
  1415   000CA0  A4D8               	btfss	status,2,c
  1416   000CA2  EF55  F006         	goto	u6801
  1417   000CA6  EF57  F006         	goto	u6800
  1418   000CAA                     u6801:
  1419   000CAA  EF59  F006         	goto	l1067
  1420   000CAE                     u6800:
  1421   000CAE  0E10               	movlw	16
  1422   000CB0  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1423   000CB2                     l1067:
  1424   000CB2  0E01               	movlw	1
  1425   000CB4  6E29               	movwf	_btn_long_press_verify_flg^0,c
  1426   000CB6  0E0D               	movlw	13
  1427   000CB8  6E12               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  1428   000CBA  0EAC               	movlw	172
  1429   000CBC  6E11               	movwf	_hour_btn_pressed_cnt^0,c
  1430   000CBE                     l9303:
  1431   000CBE  EC27  F003         	call	_ActionButtons	;wreg free
  1432   000CC2  EF7C  F006         	goto	l9313
  1433   000CC6                     l9305:
  1434   000CC6  5012               	movf	(_hour_btn_pressed_cnt+1)^0,w,c
  1435   000CC8  E109               	bnz	u6810
  1436   000CCA  0E33               	movlw	51
  1437   000CCC  5C11               	subwf	_hour_btn_pressed_cnt^0,w,c
  1438   000CCE  A0D8               	btfss	status,0,c
  1439   000CD0  EF6C  F006         	goto	u6811
  1440   000CD4  EF6E  F006         	goto	u6810
  1441   000CD8                     u6811:
  1442   000CD8  EF7C  F006         	goto	l9313
  1443   000CDC                     u6810:
  1444   000CDC  502A               	movf	_btn_press_verify_flg^0,w,c
  1445   000CDE  A4D8               	btfss	status,2,c
  1446   000CE0  EF74  F006         	goto	u6821
  1447   000CE4  EF76  F006         	goto	u6820
  1448   000CE8                     u6821:
  1449   000CE8  EF78  F006         	goto	l1070
  1450   000CEC                     u6820:
  1451   000CEC  0E0B               	movlw	11
  1452   000CEE  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1453   000CF0                     l1070:
  1454   000CF0  0E01               	movlw	1
  1455   000CF2  6E2A               	movwf	_btn_press_verify_flg^0,c
  1456   000CF4  EF5F  F006         	goto	l9303
  1457   000CF8                     l9313:
  1458                           
  1459                           ;Buttons.c: 52:                 if( hour_btn_released_cnt > 5 ) {
  1460   000CF8  5008               	movf	(_hour_btn_released_cnt+1)^0,w,c
  1461   000CFA  E109               	bnz	u6830
  1462   000CFC  0E06               	movlw	6
  1463   000CFE  5C07               	subwf	_hour_btn_released_cnt^0,w,c
  1464   000D00  A0D8               	btfss	status,0,c
  1465   000D02  EF85  F006         	goto	u6831
  1466   000D06  EF87  F006         	goto	u6830
  1467   000D0A                     u6831:
  1468   000D0A  EF0F  F008         	goto	l1104
  1469   000D0E                     u6830:
  1470   000D0E                     
  1471                           ;Buttons.c: 53:                     hour_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; BTN_
      +                          CLICK_EVENT = 0; btn_long_press_verify_flg = 0; btn_press_verify_flg = 0;
  1472   000D0E  0E00               	movlw	0
  1473   000D10  6E08               	movwf	(_hour_btn_released_cnt+1)^0,c
  1474   000D12  0E00               	movlw	0
  1475   000D14  6E07               	movwf	_hour_btn_released_cnt^0,c
  1476   000D16  0E00               	movlw	0
  1477   000D18  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  1478   000D1A  0E00               	movlw	0
  1479   000D1C  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  1480   000D1E  0E00               	movlw	0
  1481   000D20  6E29               	movwf	_btn_long_press_verify_flg^0,c
  1482   000D22  0E00               	movlw	0
  1483   000D24  6E2A               	movwf	_btn_press_verify_flg^0,c
  1484   000D26  EF0F  F008         	goto	l1104
  1485   000D2A                     l9317:
  1486   000D2A  0EAD               	movlw	173
  1487   000D2C  5C0F               	subwf	_up_btn_pressed_cnt^0,w,c
  1488   000D2E  0E0D               	movlw	13
  1489   000D30  5810               	subwfb	(_up_btn_pressed_cnt+1)^0,w,c
  1490   000D32  A0D8               	btfss	status,0,c
  1491   000D34  EF9E  F006         	goto	u6841
  1492   000D38  EFA0  F006         	goto	u6840
  1493   000D3C                     u6841:
  1494   000D3C  EFB4  F006         	goto	l9325
  1495   000D40                     u6840:
  1496   000D40  5029               	movf	_btn_long_press_verify_flg^0,w,c
  1497   000D42  A4D8               	btfss	status,2,c
  1498   000D44  EFA6  F006         	goto	u6851
  1499   000D48  EFA8  F006         	goto	u6850
  1500   000D4C                     u6851:
  1501   000D4C  EFAA  F006         	goto	l1075
  1502   000D50                     u6850:
  1503   000D50  0E11               	movlw	17
  1504   000D52  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1505   000D54                     l1075:
  1506   000D54  0E01               	movlw	1
  1507   000D56  6E29               	movwf	_btn_long_press_verify_flg^0,c
  1508   000D58  0E0D               	movlw	13
  1509   000D5A  6E10               	movwf	(_up_btn_pressed_cnt+1)^0,c
  1510   000D5C  0EAC               	movlw	172
  1511   000D5E  6E0F               	movwf	_up_btn_pressed_cnt^0,c
  1512   000D60                     l9323:
  1513   000D60  EC27  F003         	call	_ActionButtons	;wreg free
  1514   000D64  EFCD  F006         	goto	l9333
  1515   000D68                     l9325:
  1516   000D68  5010               	movf	(_up_btn_pressed_cnt+1)^0,w,c
  1517   000D6A  E109               	bnz	u6860
  1518   000D6C  0E33               	movlw	51
  1519   000D6E  5C0F               	subwf	_up_btn_pressed_cnt^0,w,c
  1520   000D70  A0D8               	btfss	status,0,c
  1521   000D72  EFBD  F006         	goto	u6861
  1522   000D76  EFBF  F006         	goto	u6860
  1523   000D7A                     u6861:
  1524   000D7A  EFCD  F006         	goto	l9333
  1525   000D7E                     u6860:
  1526   000D7E  502A               	movf	_btn_press_verify_flg^0,w,c
  1527   000D80  A4D8               	btfss	status,2,c
  1528   000D82  EFC5  F006         	goto	u6871
  1529   000D86  EFC7  F006         	goto	u6870
  1530   000D8A                     u6871:
  1531   000D8A  EFC9  F006         	goto	l1078
  1532   000D8E                     u6870:
  1533   000D8E  0E0C               	movlw	12
  1534   000D90  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1535   000D92                     l1078:
  1536   000D92  0E01               	movlw	1
  1537   000D94  6E2A               	movwf	_btn_press_verify_flg^0,c
  1538   000D96  EFB0  F006         	goto	l9323
  1539   000D9A                     l9333:
  1540                           
  1541                           ;Buttons.c: 59:                 if( up_btn_released_cnt > 5 ) {
  1542   000D9A  5006               	movf	(_up_btn_released_cnt+1)^0,w,c
  1543   000D9C  E109               	bnz	u6880
  1544   000D9E  0E06               	movlw	6
  1545   000DA0  5C05               	subwf	_up_btn_released_cnt^0,w,c
  1546   000DA2  A0D8               	btfss	status,0,c
  1547   000DA4  EFD6  F006         	goto	u6881
  1548   000DA8  EFD8  F006         	goto	u6880
  1549   000DAC                     u6881:
  1550   000DAC  EF0F  F008         	goto	l1104
  1551   000DB0                     u6880:
  1552   000DB0                     
  1553                           ;Buttons.c: 60:                     up_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; BTN_CL
      +                          ICK_EVENT = 0; btn_long_press_verify_flg = 0; btn_press_verify_flg = 0;
  1554   000DB0  0E00               	movlw	0
  1555   000DB2  6E06               	movwf	(_up_btn_released_cnt+1)^0,c
  1556   000DB4  0E00               	movlw	0
  1557   000DB6  6E05               	movwf	_up_btn_released_cnt^0,c
  1558   000DB8  0E00               	movlw	0
  1559   000DBA  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  1560   000DBC  0E00               	movlw	0
  1561   000DBE  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  1562   000DC0  0E00               	movlw	0
  1563   000DC2  6E29               	movwf	_btn_long_press_verify_flg^0,c
  1564   000DC4  0E00               	movlw	0
  1565   000DC6  6E2A               	movwf	_btn_press_verify_flg^0,c
  1566   000DC8  EF0F  F008         	goto	l1104
  1567   000DCC                     l9337:
  1568   000DCC  0EAD               	movlw	173
  1569   000DCE  5C0D               	subwf	_down_btn_pressed_cnt^0,w,c
  1570   000DD0  0E0D               	movlw	13
  1571   000DD2  580E               	subwfb	(_down_btn_pressed_cnt+1)^0,w,c
  1572   000DD4  A0D8               	btfss	status,0,c
  1573   000DD6  EFEF  F006         	goto	u6891
  1574   000DDA  EFF1  F006         	goto	u6890
  1575   000DDE                     u6891:
  1576   000DDE  EF05  F007         	goto	l9345
  1577   000DE2                     u6890:
  1578   000DE2  5029               	movf	_btn_long_press_verify_flg^0,w,c
  1579   000DE4  A4D8               	btfss	status,2,c
  1580   000DE6  EFF7  F006         	goto	u6901
  1581   000DEA  EFF9  F006         	goto	u6900
  1582   000DEE                     u6901:
  1583   000DEE  EFFB  F006         	goto	l1082
  1584   000DF2                     u6900:
  1585   000DF2  0E12               	movlw	18
  1586   000DF4  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1587   000DF6                     l1082:
  1588   000DF6  0E01               	movlw	1
  1589   000DF8  6E29               	movwf	_btn_long_press_verify_flg^0,c
  1590   000DFA  0E0D               	movlw	13
  1591   000DFC  6E0E               	movwf	(_down_btn_pressed_cnt+1)^0,c
  1592   000DFE  0EAC               	movlw	172
  1593   000E00  6E0D               	movwf	_down_btn_pressed_cnt^0,c
  1594   000E02                     l9343:
  1595   000E02  EC27  F003         	call	_ActionButtons	;wreg free
  1596   000E06  EF1E  F007         	goto	l9353
  1597   000E0A                     l9345:
  1598   000E0A  500E               	movf	(_down_btn_pressed_cnt+1)^0,w,c
  1599   000E0C  E109               	bnz	u6910
  1600   000E0E  0E33               	movlw	51
  1601   000E10  5C0D               	subwf	_down_btn_pressed_cnt^0,w,c
  1602   000E12  A0D8               	btfss	status,0,c
  1603   000E14  EF0E  F007         	goto	u6911
  1604   000E18  EF10  F007         	goto	u6910
  1605   000E1C                     u6911:
  1606   000E1C  EF1E  F007         	goto	l9353
  1607   000E20                     u6910:
  1608   000E20  502A               	movf	_btn_press_verify_flg^0,w,c
  1609   000E22  A4D8               	btfss	status,2,c
  1610   000E24  EF16  F007         	goto	u6921
  1611   000E28  EF18  F007         	goto	u6920
  1612   000E2C                     u6921:
  1613   000E2C  EF1A  F007         	goto	l1085
  1614   000E30                     u6920:
  1615   000E30  0E0D               	movlw	13
  1616   000E32  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1617   000E34                     l1085:
  1618   000E34  0E01               	movlw	1
  1619   000E36  6E2A               	movwf	_btn_press_verify_flg^0,c
  1620   000E38  EF01  F007         	goto	l9343
  1621   000E3C                     l9353:
  1622                           
  1623                           ;Buttons.c: 66:                 if( down_btn_released_cnt > 5 ) {
  1624   000E3C  5004               	movf	(_down_btn_released_cnt+1)^0,w,c
  1625   000E3E  E109               	bnz	u6930
  1626   000E40  0E06               	movlw	6
  1627   000E42  5C03               	subwf	_down_btn_released_cnt^0,w,c
  1628   000E44  A0D8               	btfss	status,0,c
  1629   000E46  EF27  F007         	goto	u6931
  1630   000E4A  EF29  F007         	goto	u6930
  1631   000E4E                     u6931:
  1632   000E4E  EF0F  F008         	goto	l1104
  1633   000E52                     u6930:
  1634   000E52                     
  1635                           ;Buttons.c: 67:                     down_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; BTN_
      +                          CLICK_EVENT = 0; btn_long_press_verify_flg = 0; btn_press_verify_flg = 0;
  1636   000E52  0E00               	movlw	0
  1637   000E54  6E04               	movwf	(_down_btn_released_cnt+1)^0,c
  1638   000E56  0E00               	movlw	0
  1639   000E58  6E03               	movwf	_down_btn_released_cnt^0,c
  1640   000E5A  0E00               	movlw	0
  1641   000E5C  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  1642   000E5E  0E00               	movlw	0
  1643   000E60  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  1644   000E62  0E00               	movlw	0
  1645   000E64  6E29               	movwf	_btn_long_press_verify_flg^0,c
  1646   000E66  0E00               	movlw	0
  1647   000E68  6E2A               	movwf	_btn_press_verify_flg^0,c
  1648                           
  1649                           ;Buttons.c: 68:                     if( btn_long_press_verify_flg ) { btn_long_press_ver
      +                          ify_flg = 0; }
  1650   000E6A  5029               	movf	_btn_long_press_verify_flg^0,w,c
  1651   000E6C  B4D8               	btfsc	status,2,c
  1652   000E6E  EF3B  F007         	goto	u6941
  1653   000E72  EF3D  F007         	goto	u6940
  1654   000E76                     u6941:
  1655   000E76  EF41  F007         	goto	l9359
  1656   000E7A                     u6940:
  1657   000E7A  0E00               	movlw	0
  1658   000E7C  6E29               	movwf	_btn_long_press_verify_flg^0,c
  1659   000E7E  EF0F  F008         	goto	l1104
  1660   000E82                     l9359:
  1661   000E82  502A               	movf	_btn_press_verify_flg^0,w,c
  1662   000E84  B4D8               	btfsc	status,2,c
  1663   000E86  EF47  F007         	goto	u6951
  1664   000E8A  EF49  F007         	goto	u6950
  1665   000E8E                     u6951:
  1666   000E8E  EF0F  F008         	goto	l1104
  1667   000E92                     u6950:
  1668   000E92  0E00               	movlw	0
  1669   000E94  6E2A               	movwf	_btn_press_verify_flg^0,c
  1670   000E96  EF0F  F008         	goto	l1104
  1671   000E9A                     l9363:
  1672   000E9A  0EAD               	movlw	173
  1673   000E9C  5C0B               	subwf	_sel_btn_pressed_cnt^0,w,c
  1674   000E9E  0E0D               	movlw	13
  1675   000EA0  580C               	subwfb	(_sel_btn_pressed_cnt+1)^0,w,c
  1676   000EA2  A0D8               	btfss	status,0,c
  1677   000EA4  EF56  F007         	goto	u6961
  1678   000EA8  EF58  F007         	goto	u6960
  1679   000EAC                     u6961:
  1680   000EAC  EF6C  F007         	goto	l9371
  1681   000EB0                     u6960:
  1682   000EB0  5029               	movf	_btn_long_press_verify_flg^0,w,c
  1683   000EB2  A4D8               	btfss	status,2,c
  1684   000EB4  EF5E  F007         	goto	u6971
  1685   000EB8  EF60  F007         	goto	u6970
  1686   000EBC                     u6971:
  1687   000EBC  EF62  F007         	goto	l1092
  1688   000EC0                     u6970:
  1689   000EC0  0E13               	movlw	19
  1690   000EC2  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1691   000EC4                     l1092:
  1692   000EC4  0E01               	movlw	1
  1693   000EC6  6E29               	movwf	_btn_long_press_verify_flg^0,c
  1694   000EC8  0E0D               	movlw	13
  1695   000ECA  6E0C               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  1696   000ECC  0EAC               	movlw	172
  1697   000ECE  6E0B               	movwf	_sel_btn_pressed_cnt^0,c
  1698   000ED0                     l9369:
  1699   000ED0  EC27  F003         	call	_ActionButtons	;wreg free
  1700   000ED4  EF85  F007         	goto	l9379
  1701   000ED8                     l9371:
  1702   000ED8  500C               	movf	(_sel_btn_pressed_cnt+1)^0,w,c
  1703   000EDA  E109               	bnz	u6980
  1704   000EDC  0E33               	movlw	51
  1705   000EDE  5C0B               	subwf	_sel_btn_pressed_cnt^0,w,c
  1706   000EE0  A0D8               	btfss	status,0,c
  1707   000EE2  EF75  F007         	goto	u6981
  1708   000EE6  EF77  F007         	goto	u6980
  1709   000EEA                     u6981:
  1710   000EEA  EF85  F007         	goto	l9379
  1711   000EEE                     u6980:
  1712   000EEE  502A               	movf	_btn_press_verify_flg^0,w,c
  1713   000EF0  A4D8               	btfss	status,2,c
  1714   000EF2  EF7D  F007         	goto	u6991
  1715   000EF6  EF7F  F007         	goto	u6990
  1716   000EFA                     u6991:
  1717   000EFA  EF81  F007         	goto	l1095
  1718   000EFE                     u6990:
  1719   000EFE  0E0E               	movlw	14
  1720   000F00  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1721   000F02                     l1095:
  1722   000F02  0E01               	movlw	1
  1723   000F04  6E2A               	movwf	_btn_press_verify_flg^0,c
  1724   000F06  EF68  F007         	goto	l9369
  1725   000F0A                     l9379:
  1726                           
  1727                           ;Buttons.c: 75:                 if( sel_btn_released_cnt > 5 ) {
  1728   000F0A  5002               	movf	(_sel_btn_released_cnt+1)^0,w,c
  1729   000F0C  E109               	bnz	u7000
  1730   000F0E  0E06               	movlw	6
  1731   000F10  5C01               	subwf	_sel_btn_released_cnt^0,w,c
  1732   000F12  A0D8               	btfss	status,0,c
  1733   000F14  EF8E  F007         	goto	u7001
  1734   000F18  EF90  F007         	goto	u7000
  1735   000F1C                     u7001:
  1736   000F1C  EF0F  F008         	goto	l1104
  1737   000F20                     u7000:
  1738   000F20                     
  1739                           ;Buttons.c: 76:                     sel_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; BTN_C
      +                          LICK_EVENT = 0; btn_long_press_verify_flg = 0; btn_press_verify_flg = 0;
  1740   000F20  0E00               	movlw	0
  1741   000F22  6E02               	movwf	(_sel_btn_released_cnt+1)^0,c
  1742   000F24  0E00               	movlw	0
  1743   000F26  6E01               	movwf	_sel_btn_released_cnt^0,c
  1744   000F28  0E00               	movlw	0
  1745   000F2A  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  1746   000F2C  0E00               	movlw	0
  1747   000F2E  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  1748   000F30  0E00               	movlw	0
  1749   000F32  6E29               	movwf	_btn_long_press_verify_flg^0,c
  1750   000F34  0E00               	movlw	0
  1751   000F36  6E2A               	movwf	_btn_press_verify_flg^0,c
  1752   000F38  EF0F  F008         	goto	l1104
  1753   000F3C                     l9383:
  1754   000F3C  0EAD               	movlw	173
  1755   000F3E  5C09               	subwf	_reset_btn_pressed_cnt^0,w,c
  1756   000F40  0E0D               	movlw	13
  1757   000F42  580A               	subwfb	(_reset_btn_pressed_cnt+1)^0,w,c
  1758   000F44  A0D8               	btfss	status,0,c
  1759   000F46  EFA7  F007         	goto	u7011
  1760   000F4A  EFA9  F007         	goto	u7010
  1761   000F4E                     u7011:
  1762   000F4E  EFBD  F007         	goto	l9391
  1763   000F52                     u7010:
  1764   000F52  5029               	movf	_btn_long_press_verify_flg^0,w,c
  1765   000F54  A4D8               	btfss	status,2,c
  1766   000F56  EFAF  F007         	goto	u7021
  1767   000F5A  EFB1  F007         	goto	u7020
  1768   000F5E                     u7021:
  1769   000F5E  EFB3  F007         	goto	l1099
  1770   000F62                     u7020:
  1771   000F62  0E14               	movlw	20
  1772   000F64  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1773   000F66                     l1099:
  1774   000F66  0E01               	movlw	1
  1775   000F68  6E29               	movwf	_btn_long_press_verify_flg^0,c
  1776   000F6A  0E0D               	movlw	13
  1777   000F6C  6E0A               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  1778   000F6E  0EAC               	movlw	172
  1779   000F70  6E09               	movwf	_reset_btn_pressed_cnt^0,c
  1780   000F72                     l9389:
  1781   000F72  EC27  F003         	call	_ActionButtons	;wreg free
  1782   000F76  EFD6  F007         	goto	l9399
  1783   000F7A                     l9391:
  1784   000F7A  500A               	movf	(_reset_btn_pressed_cnt+1)^0,w,c
  1785   000F7C  E109               	bnz	u7030
  1786   000F7E  0E33               	movlw	51
  1787   000F80  5C09               	subwf	_reset_btn_pressed_cnt^0,w,c
  1788   000F82  A0D8               	btfss	status,0,c
  1789   000F84  EFC6  F007         	goto	u7031
  1790   000F88  EFC8  F007         	goto	u7030
  1791   000F8C                     u7031:
  1792   000F8C  EFD6  F007         	goto	l9399
  1793   000F90                     u7030:
  1794   000F90  502A               	movf	_btn_press_verify_flg^0,w,c
  1795   000F92  A4D8               	btfss	status,2,c
  1796   000F94  EFCE  F007         	goto	u7041
  1797   000F98  EFD0  F007         	goto	u7040
  1798   000F9C                     u7041:
  1799   000F9C  EFD2  F007         	goto	l1102
  1800   000FA0                     u7040:
  1801   000FA0  0E0F               	movlw	15
  1802   000FA2  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1803   000FA4                     l1102:
  1804   000FA4  0E01               	movlw	1
  1805   000FA6  6E2A               	movwf	_btn_press_verify_flg^0,c
  1806   000FA8  EFB9  F007         	goto	l9389
  1807   000FAC                     l9399:
  1808                           
  1809                           ;Buttons.c: 82:                 if( reset_btn_released_cnt > 5 ) {
  1810   000FAC  0100               	movlb	0	; () banked
  1811   000FAE  51C5               	movf	(_reset_btn_released_cnt+1)& (0+255),w,b
  1812   000FB0  E109               	bnz	u7050
  1813   000FB2  0E06               	movlw	6
  1814   000FB4  5DC4               	subwf	_reset_btn_released_cnt& (0+255),w,b
  1815   000FB6  A0D8               	btfss	status,0,c
  1816   000FB8  EFE0  F007         	goto	u7051
  1817   000FBC  EFE2  F007         	goto	u7050
  1818   000FC0                     u7051:
  1819   000FC0  EF0F  F008         	goto	l1104
  1820   000FC4                     u7050:
  1821   000FC4                     
  1822                           ; BSR set to: 0
  1823                           ;Buttons.c: 83:                     reset_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn
      +                          _long_press_verify_flg = 0; btn_press_verify_flg = 0;
  1824   000FC4  0E00               	movlw	0
  1825   000FC6  6FC5               	movwf	(_reset_btn_released_cnt+1)& (0+255),b
  1826   000FC8  0E00               	movlw	0
  1827   000FCA  6FC4               	movwf	_reset_btn_released_cnt& (0+255),b
  1828   000FCC  0E00               	movlw	0
  1829   000FCE  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  1830   000FD0  0E00               	movlw	0
  1831   000FD2  6E29               	movwf	_btn_long_press_verify_flg^0,c
  1832   000FD4  0E00               	movlw	0
  1833   000FD6  6E2A               	movwf	_btn_press_verify_flg^0,c
  1834   000FD8  EF0F  F008         	goto	l1104
  1835   000FDC                     l9405:
  1836   000FDC  502B               	movf	_BTN_CLICK_EVENT^0,w,c
  1837   000FDE  6E66               	movwf	??_VerifyButtons^0,c
  1838   000FE0  6A67               	clrf	(??_VerifyButtons+1)^0,c
  1839                           
  1840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1841                           ; Switch size 1, requested type "simple"
  1842                           ; Number of cases is 1, Range of values is 0 to 0
  1843                           ; switch strategies available:
  1844                           ; Name         Instructions Cycles
  1845                           ; simple_byte            4     3 (average)
  1846                           ;	Chosen strategy is simple_byte
  1847   000FE2  5067               	movf	(??_VerifyButtons+1)^0,w,c
  1848   000FE4  0A00               	xorlw	0	; case 0
  1849   000FE6  B4D8               	btfsc	status,2,c
  1850   000FE8  EFF8  F007         	goto	l10307
  1851   000FEC  EF0F  F008         	goto	l1104
  1852   000FF0                     l10307:
  1853                           
  1854                           ; Switch size 1, requested type "simple"
  1855                           ; Number of cases is 5, Range of values is 1 to 5
  1856                           ; switch strategies available:
  1857                           ; Name         Instructions Cycles
  1858                           ; simple_byte           16     9 (average)
  1859                           ;	Chosen strategy is simple_byte
  1860   000FF0  5066               	movf	??_VerifyButtons^0,w,c
  1861   000FF2  0A01               	xorlw	1	; case 1
  1862   000FF4  B4D8               	btfsc	status,2,c
  1863   000FF6  EF44  F006         	goto	l9297
  1864   000FFA  0A03               	xorlw	3	; case 2
  1865   000FFC  B4D8               	btfsc	status,2,c
  1866   000FFE  EF95  F006         	goto	l9317
  1867   001002  0A01               	xorlw	1	; case 3
  1868   001004  B4D8               	btfsc	status,2,c
  1869   001006  EFE6  F006         	goto	l9337
  1870   00100A  0A07               	xorlw	7	; case 4
  1871   00100C  B4D8               	btfsc	status,2,c
  1872   00100E  EF4D  F007         	goto	l9363
  1873   001012  0A01               	xorlw	1	; case 5
  1874   001014  B4D8               	btfsc	status,2,c
  1875   001016  EF9E  F007         	goto	l9383
  1876   00101A  EF0F  F008         	goto	l1104
  1877   00101E                     l1104:
  1878   00101E  0012               	return		;funcret
  1879   001020                     __end_of_VerifyButtons:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _ActionButtons *****************
  1883 ;; Defined at:
  1884 ;;		line 89 in file "Buttons.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  temp            1   20[COMRAM] char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1898 ;;      Params:         0       0       0       0       0       0       0
  1899 ;;      Locals:         1       0       0       0       0       0       0
  1900 ;;      Temps:          2       0       0       0       0       0       0
  1901 ;;      Totals:         3       0       0       0       0       0       0
  1902 ;;Total ram usage:        3 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; Hardware stack levels required when called: 9
  1905 ;; This function calls:
  1906 ;;		_Ds1307Write
  1907 ;;		_StartCounter
  1908 ;;		_StopCounter
  1909 ;; This function is called by:
  1910 ;;		_VerifyButtons
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text2
  1915   00064E                     __ptext2:
  1916                           	callstack 0
  1917   00064E                     _ActionButtons:
  1918                           	callstack 20
  1919   00064E                     
  1920                           ;Buttons.c: 91:     if( counter_down_comp_flg ) {
  1921   00064E  5031               	movf	_counter_down_comp_flg^0,w,c
  1922   000650  B4D8               	btfsc	status,2,c
  1923   000652  EF2D  F003         	goto	u6251
  1924   000656  EF2F  F003         	goto	u6250
  1925   00065A                     u6251:
  1926   00065A  EF1C  F006         	goto	l9131
  1927   00065E                     u6250:
  1928   00065E                     
  1929                           ;Buttons.c: 92:         blink_enable_flg = 0; counter_down_comp_flg = 0; SYSTEM_STATE_FL
      +                          G = 203; BTN_CLICK_STATE = 0;
  1930   00065E  0E00               	movlw	0
  1931   000660  6E2F               	movwf	_blink_enable_flg^0,c
  1932   000662  0E00               	movlw	0
  1933   000664  6E31               	movwf	_counter_down_comp_flg^0,c
  1934   000666  0ECB               	movlw	203
  1935   000668  6E45               	movwf	_SYSTEM_STATE_FLG^0,c
  1936   00066A  0E00               	movlw	0
  1937   00066C  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1938   00066E  EF1C  F006         	goto	l9131
  1939   000672                     l8801:
  1940                           
  1941                           ;Buttons.c: 105:                     if( rtc_clock_disp_type == 0 ) rtc_clock_disp_type 
      +                          = 1;
  1942   000672  5049               	movf	_rtc_clock_disp_type^0,w,c
  1943   000674  A4D8               	btfss	status,2,c
  1944   000676  EF3F  F003         	goto	u6261
  1945   00067A  EF41  F003         	goto	u6260
  1946   00067E                     u6261:
  1947   00067E  EF45  F003         	goto	l8805
  1948   000682                     u6260:
  1949   000682  0E01               	movlw	1
  1950   000684  6E49               	movwf	_rtc_clock_disp_type^0,c
  1951   000686  EF47  F003         	goto	l1113
  1952   00068A                     l8805:
  1953   00068A  0E00               	movlw	0
  1954   00068C  6E49               	movwf	_rtc_clock_disp_type^0,c
  1955   00068E                     l1113:
  1956                           
  1957                           ;Buttons.c: 107:                     BTN_CLICK_STATE = 0; Ds1307Write( &real_rtc_data );
  1958   00068E  0E00               	movlw	0
  1959   000690  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  1960   000692  0E4A               	movlw	low _real_rtc_data
  1961   000694  6E61               	movwf	Ds1307Write@write_datas^0,c
  1962   000696  EC31  F00D         	call	_Ds1307Write	;wreg free
  1963   00069A  EF41  F006         	goto	l1114
  1964   00069E                     l8811:
  1965                           
  1966                           ;Buttons.c: 110:                     SYSTEM_STATE_FLG = 101;
  1967   00069E  0E65               	movlw	101
  1968   0006A0  6E45               	movwf	_SYSTEM_STATE_FLG^0,c
  1969                           
  1970                           ;Buttons.c: 111:                     break;
  1971   0006A2  EF41  F006         	goto	l1114
  1972   0006A6                     l8819:
  1973   0006A6  502C               	movf	_BTN_CLICK_STATE^0,w,c
  1974   0006A8  6E63               	movwf	??_ActionButtons^0,c
  1975   0006AA  6A64               	clrf	(??_ActionButtons+1)^0,c
  1976                           
  1977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1978                           ; Switch size 1, requested type "simple"
  1979                           ; Number of cases is 1, Range of values is 0 to 0
  1980                           ; switch strategies available:
  1981                           ; Name         Instructions Cycles
  1982                           ; simple_byte            4     3 (average)
  1983                           ;	Chosen strategy is simple_byte
  1984   0006AC  5064               	movf	(??_ActionButtons+1)^0,w,c
  1985   0006AE  0A00               	xorlw	0	; case 0
  1986   0006B0  B4D8               	btfsc	status,2,c
  1987   0006B2  EF5D  F003         	goto	l10309
  1988   0006B6  EF41  F006         	goto	l1114
  1989   0006BA                     l10309:
  1990                           
  1991                           ; Switch size 1, requested type "simple"
  1992                           ; Number of cases is 4, Range of values is 11 to 14
  1993                           ; switch strategies available:
  1994                           ; Name         Instructions Cycles
  1995                           ; simple_byte           13     7 (average)
  1996                           ;	Chosen strategy is simple_byte
  1997   0006BA  5063               	movf	??_ActionButtons^0,w,c
  1998   0006BC  0A0B               	xorlw	11	; case 11
  1999   0006BE  B4D8               	btfsc	status,2,c
  2000   0006C0  EF4F  F003         	goto	l8811
  2001   0006C4  0A07               	xorlw	7	; case 12
  2002   0006C6  B4D8               	btfsc	status,2,c
  2003   0006C8  EF4F  F003         	goto	l8811
  2004   0006CC  0A01               	xorlw	1	; case 13
  2005   0006CE  B4D8               	btfsc	status,2,c
  2006   0006D0  EF4F  F003         	goto	l8811
  2007   0006D4  0A03               	xorlw	3	; case 14
  2008   0006D6  B4D8               	btfsc	status,2,c
  2009   0006D8  EF39  F003         	goto	l8801
  2010   0006DC  EF41  F006         	goto	l1114
  2011   0006E0                     l1122:
  2012                           
  2013                           ;Buttons.c: 123:                     temp = real_rtc_data[ 2 ]; temp ++;
  2014   0006E0  C04C  F065         	movff	_real_rtc_data+2,ActionButtons@temp
  2015   0006E4  2A65               	incf	ActionButtons@temp^0,f,c
  2016   0006E6                     
  2017                           ;Buttons.c: 124:                     if( temp % 16 >= 10 ) temp += 6;
  2018   0006E6  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2019   0006EA  6A64               	clrf	(??_ActionButtons+1)^0,c
  2020   0006EC  BE63               	btfsc	??_ActionButtons^0,7,c
  2021   0006EE  0664               	decf	(??_ActionButtons+1)^0,f,c
  2022   0006F0  0E0F               	movlw	15
  2023   0006F2  1663               	andwf	??_ActionButtons^0,f,c
  2024   0006F4  0E00               	movlw	0
  2025   0006F6  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2026   0006F8  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2027   0006FA  EF88  F003         	goto	u6271
  2028   0006FE  5064               	movf	(??_ActionButtons+1)^0,w,c
  2029   000700  E109               	bnz	u6270
  2030   000702  0E0A               	movlw	10
  2031   000704  5C63               	subwf	??_ActionButtons^0,w,c
  2032   000706  A0D8               	btfss	status,0,c
  2033   000708  EF88  F003         	goto	u6271
  2034   00070C  EF8A  F003         	goto	u6270
  2035   000710                     u6271:
  2036   000710  EF8C  F003         	goto	l8827
  2037   000714                     u6270:
  2038   000714  0E06               	movlw	6
  2039   000716  2665               	addwf	ActionButtons@temp^0,f,c
  2040   000718                     l8827:
  2041                           
  2042                           ;Buttons.c: 125:                     if( rtc_clock_disp_type == 0 ){
  2043   000718  5049               	movf	_rtc_clock_disp_type^0,w,c
  2044   00071A  A4D8               	btfss	status,2,c
  2045   00071C  EF92  F003         	goto	u6281
  2046   000720  EF94  F003         	goto	u6280
  2047   000724                     u6281:
  2048   000724  EFA4  F003         	goto	l8833
  2049   000728                     u6280:
  2050   000728                     
  2051                           ;Buttons.c: 126:                         if( temp > 0x23 ) temp = 0; rtc_hour_ampm_flg =
      +                           0;
  2052   000728  5065               	movf	ActionButtons@temp^0,w,c
  2053   00072A  0A80               	xorlw	128
  2054   00072C  0F5C               	addlw	-164
  2055   00072E  A0D8               	btfss	status,0,c
  2056   000730  EF9C  F003         	goto	u6291
  2057   000734  EF9E  F003         	goto	u6290
  2058   000738                     u6291:
  2059   000738  EFA0  F003         	goto	l1125
  2060   00073C                     u6290:
  2061   00073C  0E00               	movlw	0
  2062   00073E  6E65               	movwf	ActionButtons@temp^0,c
  2063   000740                     l1125:
  2064   000740  0E00               	movlw	0
  2065   000742  6E48               	movwf	_rtc_hour_ampm_flg^0,c
  2066                           
  2067                           ;Buttons.c: 127:                     }
  2068   000744  EFC6  F003         	goto	l8843
  2069   000748                     l8833:
  2070   000748  0449               	decf	_rtc_clock_disp_type^0,w,c
  2071   00074A  A4D8               	btfss	status,2,c
  2072   00074C  EFAA  F003         	goto	u6301
  2073   000750  EFAC  F003         	goto	u6300
  2074   000754                     u6301:
  2075   000754  EFC6  F003         	goto	l8843
  2076   000758                     u6300:
  2077   000758                     
  2078                           ;Buttons.c: 129:                         if( temp > 0x12 ) {
  2079   000758  5065               	movf	ActionButtons@temp^0,w,c
  2080   00075A  0A80               	xorlw	128
  2081   00075C  0F6D               	addlw	-147
  2082   00075E  A0D8               	btfss	status,0,c
  2083   000760  EFB4  F003         	goto	u6311
  2084   000764  EFB6  F003         	goto	u6310
  2085   000768                     u6311:
  2086   000768  EFC6  F003         	goto	l8843
  2087   00076C                     u6310:
  2088   00076C                     
  2089                           ;Buttons.c: 130:                             if( rtc_hour_ampm_flg == 1 ) rtc_hour_ampm_
      +                          flg = 0;
  2090   00076C  0448               	decf	_rtc_hour_ampm_flg^0,w,c
  2091   00076E  A4D8               	btfss	status,2,c
  2092   000770  EFBC  F003         	goto	u6321
  2093   000774  EFBE  F003         	goto	u6320
  2094   000778                     u6321:
  2095   000778  EFC2  F003         	goto	l8841
  2096   00077C                     u6320:
  2097   00077C  0E00               	movlw	0
  2098   00077E  6E48               	movwf	_rtc_hour_ampm_flg^0,c
  2099   000780  EFC4  F003         	goto	l1130
  2100   000784                     l8841:
  2101   000784  0E01               	movlw	1
  2102   000786  6E48               	movwf	_rtc_hour_ampm_flg^0,c
  2103   000788                     l1130:
  2104                           
  2105                           ;Buttons.c: 132:                             temp = 1;
  2106   000788  0E01               	movlw	1
  2107   00078A  6E65               	movwf	ActionButtons@temp^0,c
  2108   00078C                     l8843:
  2109                           
  2110                           ;Buttons.c: 135:                     real_rtc_data[ 2 ] = temp;
  2111   00078C  C065  F04C         	movff	ActionButtons@temp,_real_rtc_data+2
  2112                           
  2113                           ;Buttons.c: 136:                     BTN_CLICK_STATE = 0;
  2114   000790  0E00               	movlw	0
  2115   000792  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  2116                           
  2117                           ;Buttons.c: 137:                     set_mode_release_cnt = 0;
  2118   000794  0E00               	movlw	0
  2119   000796  6E16               	movwf	(_set_mode_release_cnt+1)^0,c
  2120   000798  0E00               	movlw	0
  2121   00079A  6E15               	movwf	_set_mode_release_cnt^0,c
  2122   00079C  EF41  F006         	goto	l1114
  2123   0007A0                     l8847:
  2124                           
  2125                           ;Buttons.c: 140:                     BTN_CLICK_STATE = 0;
  2126   0007A0  0E00               	movlw	0
  2127   0007A2  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  2128   0007A4                     
  2129                           ;Buttons.c: 141:                     temp = real_rtc_data[ 1 ]; temp ++;
  2130   0007A4  C04B  F065         	movff	_real_rtc_data+1,ActionButtons@temp
  2131   0007A8  2A65               	incf	ActionButtons@temp^0,f,c
  2132   0007AA                     
  2133                           ;Buttons.c: 142:                     if( temp % 16 >= 10 ) temp += 6;
  2134   0007AA  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2135   0007AE  6A64               	clrf	(??_ActionButtons+1)^0,c
  2136   0007B0  BE63               	btfsc	??_ActionButtons^0,7,c
  2137   0007B2  0664               	decf	(??_ActionButtons+1)^0,f,c
  2138   0007B4  0E0F               	movlw	15
  2139   0007B6  1663               	andwf	??_ActionButtons^0,f,c
  2140   0007B8  0E00               	movlw	0
  2141   0007BA  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2142   0007BC  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2143   0007BE  EFEA  F003         	goto	u6331
  2144   0007C2  5064               	movf	(??_ActionButtons+1)^0,w,c
  2145   0007C4  E109               	bnz	u6330
  2146   0007C6  0E0A               	movlw	10
  2147   0007C8  5C63               	subwf	??_ActionButtons^0,w,c
  2148   0007CA  A0D8               	btfss	status,0,c
  2149   0007CC  EFEA  F003         	goto	u6331
  2150   0007D0  EFEC  F003         	goto	u6330
  2151   0007D4                     u6331:
  2152   0007D4  EFEE  F003         	goto	l1132
  2153   0007D8                     u6330:
  2154   0007D8  0E06               	movlw	6
  2155   0007DA  2665               	addwf	ActionButtons@temp^0,f,c
  2156   0007DC                     l1132:
  2157                           
  2158                           ;Buttons.c: 143:                     if( temp > 0x59 ) temp = 0;
  2159   0007DC  5065               	movf	ActionButtons@temp^0,w,c
  2160   0007DE  0A80               	xorlw	128
  2161   0007E0  0F26               	addlw	-218
  2162   0007E2  A0D8               	btfss	status,0,c
  2163   0007E4  EFF6  F003         	goto	u6341
  2164   0007E8  EFF8  F003         	goto	u6340
  2165   0007EC                     u6341:
  2166   0007EC  EFFA  F003         	goto	l8859
  2167   0007F0                     u6340:
  2168   0007F0  0E00               	movlw	0
  2169   0007F2  6E65               	movwf	ActionButtons@temp^0,c
  2170   0007F4                     l8859:
  2171                           
  2172                           ;Buttons.c: 144:                     real_rtc_data[ 1 ] = temp;
  2173   0007F4  C065  F04B         	movff	ActionButtons@temp,_real_rtc_data+1
  2174                           
  2175                           ;Buttons.c: 145:                     set_mode_release_cnt = 0;
  2176   0007F8  0E00               	movlw	0
  2177   0007FA  6E16               	movwf	(_set_mode_release_cnt+1)^0,c
  2178   0007FC  0E00               	movlw	0
  2179   0007FE  6E15               	movwf	_set_mode_release_cnt^0,c
  2180   000800  EF41  F006         	goto	l1114
  2181   000804                     l8863:
  2182                           
  2183                           ;Buttons.c: 148:                     BTN_CLICK_STATE = 0;
  2184   000804  0E00               	movlw	0
  2185   000806  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  2186   000808                     
  2187                           ;Buttons.c: 149:                     temp = real_rtc_data[ 0 ]; temp ++;
  2188   000808  C04A  F065         	movff	_real_rtc_data,ActionButtons@temp
  2189   00080C  2A65               	incf	ActionButtons@temp^0,f,c
  2190   00080E                     
  2191                           ;Buttons.c: 150:                     if( temp % 16 >= 10 ) temp += 6;
  2192   00080E  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2193   000812  6A64               	clrf	(??_ActionButtons+1)^0,c
  2194   000814  BE63               	btfsc	??_ActionButtons^0,7,c
  2195   000816  0664               	decf	(??_ActionButtons+1)^0,f,c
  2196   000818  0E0F               	movlw	15
  2197   00081A  1663               	andwf	??_ActionButtons^0,f,c
  2198   00081C  0E00               	movlw	0
  2199   00081E  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2200   000820  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2201   000822  EF1C  F004         	goto	u6351
  2202   000826  5064               	movf	(??_ActionButtons+1)^0,w,c
  2203   000828  E109               	bnz	u6350
  2204   00082A  0E0A               	movlw	10
  2205   00082C  5C63               	subwf	??_ActionButtons^0,w,c
  2206   00082E  A0D8               	btfss	status,0,c
  2207   000830  EF1C  F004         	goto	u6351
  2208   000834  EF1E  F004         	goto	u6350
  2209   000838                     u6351:
  2210   000838  EF20  F004         	goto	l1135
  2211   00083C                     u6350:
  2212   00083C  0E06               	movlw	6
  2213   00083E  2665               	addwf	ActionButtons@temp^0,f,c
  2214   000840                     l1135:
  2215                           
  2216                           ;Buttons.c: 151:                     if( temp > 0x59 ) temp = 0;
  2217   000840  5065               	movf	ActionButtons@temp^0,w,c
  2218   000842  0A80               	xorlw	128
  2219   000844  0F26               	addlw	-218
  2220   000846  A0D8               	btfss	status,0,c
  2221   000848  EF28  F004         	goto	u6361
  2222   00084C  EF2A  F004         	goto	u6360
  2223   000850                     u6361:
  2224   000850  EF2C  F004         	goto	l8875
  2225   000854                     u6360:
  2226   000854  0E00               	movlw	0
  2227   000856  6E65               	movwf	ActionButtons@temp^0,c
  2228   000858                     l8875:
  2229                           
  2230                           ;Buttons.c: 152:                     real_rtc_data[ 0 ] = temp;
  2231   000858  C065  F04A         	movff	ActionButtons@temp,_real_rtc_data
  2232                           
  2233                           ;Buttons.c: 153:                     set_mode_release_cnt = 0;
  2234   00085C  0E00               	movlw	0
  2235   00085E  6E16               	movwf	(_set_mode_release_cnt+1)^0,c
  2236   000860  0E00               	movlw	0
  2237   000862  6E15               	movwf	_set_mode_release_cnt^0,c
  2238   000864  EF41  F006         	goto	l1114
  2239   000868                     l8881:
  2240   000868  502C               	movf	_BTN_CLICK_STATE^0,w,c
  2241   00086A  6E63               	movwf	??_ActionButtons^0,c
  2242   00086C  6A64               	clrf	(??_ActionButtons+1)^0,c
  2243                           
  2244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2245                           ; Switch size 1, requested type "simple"
  2246                           ; Number of cases is 1, Range of values is 0 to 0
  2247                           ; switch strategies available:
  2248                           ; Name         Instructions Cycles
  2249                           ; simple_byte            4     3 (average)
  2250                           ;	Chosen strategy is simple_byte
  2251   00086E  5064               	movf	(??_ActionButtons+1)^0,w,c
  2252   000870  0A00               	xorlw	0	; case 0
  2253   000872  B4D8               	btfsc	status,2,c
  2254   000874  EF3E  F004         	goto	l10311
  2255   000878  EF41  F006         	goto	l1114
  2256   00087C                     l10311:
  2257                           
  2258                           ; Switch size 1, requested type "simple"
  2259                           ; Number of cases is 3, Range of values is 11 to 13
  2260                           ; switch strategies available:
  2261                           ; Name         Instructions Cycles
  2262                           ; simple_byte           10     6 (average)
  2263                           ;	Chosen strategy is simple_byte
  2264   00087C  5063               	movf	??_ActionButtons^0,w,c
  2265   00087E  0A0B               	xorlw	11	; case 11
  2266   000880  B4D8               	btfsc	status,2,c
  2267   000882  EF70  F003         	goto	l1122
  2268   000886  0A07               	xorlw	7	; case 12
  2269   000888  B4D8               	btfsc	status,2,c
  2270   00088A  EFD0  F003         	goto	l8847
  2271   00088E  0A01               	xorlw	1	; case 13
  2272   000890  B4D8               	btfsc	status,2,c
  2273   000892  EF02  F004         	goto	l8863
  2274   000896  EF41  F006         	goto	l1114
  2275   00089A                     l8883:
  2276                           
  2277                           ;Buttons.c: 162:                     counter_skip_flg = 0;
  2278   00089A  0E00               	movlw	0
  2279   00089C  6E33               	movwf	_counter_skip_flg^0,c
  2280                           
  2281                           ;Buttons.c: 163:                     if( !counter_enable_flg ) { SYSTEM_STATE_FLG = 200;
      +                           StartCounter(); blink_enable_flg = 1; }
  2282   00089E  5035               	movf	_counter_enable_flg^0,w,c
  2283   0008A0  A4D8               	btfss	status,2,c
  2284   0008A2  EF55  F004         	goto	u6371
  2285   0008A6  EF57  F004         	goto	u6370
  2286   0008AA                     u6371:
  2287   0008AA  EF5F  F004         	goto	l8891
  2288   0008AE                     u6370:
  2289   0008AE                     l8885:
  2290   0008AE  0EC8               	movlw	200
  2291   0008B0  6E45               	movwf	_SYSTEM_STATE_FLG^0,c
  2292   0008B2  EC4A  F013         	call	_StartCounter	;wreg free
  2293   0008B6  0E01               	movlw	1
  2294   0008B8  6E2F               	movwf	_blink_enable_flg^0,c
  2295   0008BA  EF65  F004         	goto	l8897
  2296   0008BE                     l8891:
  2297   0008BE  0EC9               	movlw	201
  2298   0008C0  6E45               	movwf	_SYSTEM_STATE_FLG^0,c
  2299   0008C2  EC47  F013         	call	_StopCounter	;wreg free
  2300   0008C6  0E00               	movlw	0
  2301   0008C8  6E2F               	movwf	_blink_enable_flg^0,c
  2302   0008CA                     l8897:
  2303                           
  2304                           ;Buttons.c: 165:                     BTN_CLICK_STATE = 0; temp_system_state = SYSTEM_STA
      +                          TE_FLG;
  2305   0008CA  0E00               	movlw	0
  2306   0008CC  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  2307   0008CE  C045  F041         	movff	_SYSTEM_STATE_FLG,_temp_system_state
  2308   0008D2  EF41  F006         	goto	l1114
  2309   0008D6                     l8903:
  2310                           
  2311                           ;Buttons.c: 168:                     if( !counter_enable_flg ) return;
  2312   0008D6  5035               	movf	_counter_enable_flg^0,w,c
  2313   0008D8  A4D8               	btfss	status,2,c
  2314   0008DA  EF71  F004         	goto	u6381
  2315   0008DE  EF73  F004         	goto	u6380
  2316   0008E2                     u6381:
  2317   0008E2  EF75  F004         	goto	l8907
  2318   0008E6                     u6380:
  2319   0008E6  EF41  F006         	goto	l1114
  2320   0008EA                     l8907:
  2321                           
  2322                           ;Buttons.c: 169:                     counter_skip_flg = 1 - counter_skip_flg;
  2323   0008EA  0E01               	movlw	1
  2324   0008EC  6E63               	movwf	??_ActionButtons^0,c
  2325   0008EE  0E00               	movlw	0
  2326   0008F0  6E64               	movwf	(??_ActionButtons+1)^0,c
  2327   0008F2  5033               	movf	_counter_skip_flg^0,w,c
  2328   0008F4  5E63               	subwf	??_ActionButtons^0,f,c
  2329   0008F6  0E00               	movlw	0
  2330   0008F8  5A64               	subwfb	(??_ActionButtons+1)^0,f,c
  2331   0008FA  5063               	movf	??_ActionButtons^0,w,c
  2332   0008FC  1064               	iorwf	(??_ActionButtons+1)^0,w,c
  2333   0008FE  A4D8               	btfss	status,2,c
  2334   000900  EF84  F004         	goto	u6391
  2335   000904  EF87  F004         	goto	u6390
  2336   000908                     u6391:
  2337   000908  0E01               	movlw	1
  2338   00090A  EF88  F004         	goto	u6400
  2339   00090E                     u6390:
  2340   00090E  0E00               	movlw	0
  2341   000910                     u6400:
  2342   000910  6E33               	movwf	_counter_skip_flg^0,c
  2343   000912                     l8909:
  2344                           
  2345                           ;Buttons.c: 170:                     BTN_CLICK_STATE = 0;
  2346   000912  0E00               	movlw	0
  2347   000914  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  2348   000916  EF41  F006         	goto	l1114
  2349   00091A                     l8915:
  2350   00091A  502C               	movf	_BTN_CLICK_STATE^0,w,c
  2351   00091C  6E63               	movwf	??_ActionButtons^0,c
  2352   00091E  6A64               	clrf	(??_ActionButtons+1)^0,c
  2353                           
  2354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2355                           ; Switch size 1, requested type "simple"
  2356                           ; Number of cases is 1, Range of values is 0 to 0
  2357                           ; switch strategies available:
  2358                           ; Name         Instructions Cycles
  2359                           ; simple_byte            4     3 (average)
  2360                           ;	Chosen strategy is simple_byte
  2361   000920  5064               	movf	(??_ActionButtons+1)^0,w,c
  2362   000922  0A00               	xorlw	0	; case 0
  2363   000924  B4D8               	btfsc	status,2,c
  2364   000926  EF97  F004         	goto	l10313
  2365   00092A  EF41  F006         	goto	l1114
  2366   00092E                     l10313:
  2367                           
  2368                           ; Switch size 1, requested type "simple"
  2369                           ; Number of cases is 2, Range of values is 14 to 15
  2370                           ; switch strategies available:
  2371                           ; Name         Instructions Cycles
  2372                           ; simple_byte            7     4 (average)
  2373                           ;	Chosen strategy is simple_byte
  2374   00092E  5063               	movf	??_ActionButtons^0,w,c
  2375   000930  0A0E               	xorlw	14	; case 14
  2376   000932  B4D8               	btfsc	status,2,c
  2377   000934  EF4D  F004         	goto	l8883
  2378   000938  0A01               	xorlw	1	; case 15
  2379   00093A  B4D8               	btfsc	status,2,c
  2380   00093C  EF6B  F004         	goto	l8903
  2381   000940  EF41  F006         	goto	l1114
  2382   000944                     l8917:
  2383                           
  2384                           ;Buttons.c: 177:                     counter_skip_flg = 0;
  2385   000944  0E00               	movlw	0
  2386   000946  6E33               	movwf	_counter_skip_flg^0,c
  2387                           
  2388                           ;Buttons.c: 178:                     if( !counter_enable_flg ) { SYSTEM_STATE_FLG = 200;
      +                           StartCounter(); blink_enable_flg = 1; }
  2389   000948  5035               	movf	_counter_enable_flg^0,w,c
  2390   00094A  A4D8               	btfss	status,2,c
  2391   00094C  EFAA  F004         	goto	u6411
  2392   000950  EFAC  F004         	goto	u6410
  2393   000954                     u6411:
  2394   000954  EF5F  F004         	goto	l8891
  2395   000958                     u6410:
  2396   000958  EF57  F004         	goto	l8885
  2397   00095C                     l8937:
  2398                           
  2399                           ;Buttons.c: 183:                     if( counter_direction_flg == 1 ){
  2400   00095C  0434               	decf	_counter_direction_flg^0,w,c
  2401   00095E  A4D8               	btfss	status,2,c
  2402   000960  EFB4  F004         	goto	u6421
  2403   000964  EFB6  F004         	goto	u6420
  2404   000968                     u6421:
  2405   000968  EFBE  F004         	goto	l8941
  2406   00096C                     u6420:
  2407   00096C                     
  2408                           ;Buttons.c: 184:                         counter_up_hour = 0; counter_up_minute = 0; cou
      +                          nter_up_second = 0;
  2409   00096C  0E00               	movlw	0
  2410   00096E  6E38               	movwf	_counter_up_hour^0,c
  2411   000970  0E00               	movlw	0
  2412   000972  6E37               	movwf	_counter_up_minute^0,c
  2413   000974  0E00               	movlw	0
  2414   000976  6E36               	movwf	_counter_up_second^0,c
  2415                           
  2416                           ;Buttons.c: 185:                     }
  2417   000978  EFCC  F004         	goto	l1153
  2418   00097C                     l8941:
  2419   00097C  5034               	movf	_counter_direction_flg^0,w,c
  2420   00097E  A4D8               	btfss	status,2,c
  2421   000980  EFC4  F004         	goto	u6431
  2422   000984  EFC6  F004         	goto	u6430
  2423   000988                     u6431:
  2424   000988  EFCC  F004         	goto	l1153
  2425   00098C                     u6430:
  2426   00098C                     l8943:
  2427                           
  2428                           ;Buttons.c: 187:                         counter_down_hour = 0;
  2429   00098C  0E00               	movlw	0
  2430   00098E  6E3E               	movwf	_counter_down_hour^0,c
  2431                           
  2432                           ;Buttons.c: 188:                         counter_down_minute = 0;
  2433   000990  0E00               	movlw	0
  2434   000992  6E3D               	movwf	_counter_down_minute^0,c
  2435                           
  2436                           ;Buttons.c: 189:                         counter_down_second = 0;
  2437   000994  0E00               	movlw	0
  2438   000996  6E3C               	movwf	_counter_down_second^0,c
  2439   000998                     l1153:
  2440                           
  2441                           ;Buttons.c: 191:                     blink_enable_flg = 0;
  2442   000998  0E00               	movlw	0
  2443   00099A  6E2F               	movwf	_blink_enable_flg^0,c
  2444                           
  2445                           ;Buttons.c: 192:                     BTN_CLICK_STATE = 0;
  2446   00099C  0E00               	movlw	0
  2447   00099E  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  2448   0009A0  EF41  F006         	goto	l1114
  2449   0009A4                     l8947:
  2450                           
  2451                           ;Buttons.c: 195:                     counter_direction_flg = 1 - counter_direction_flg;
  2452   0009A4  0E01               	movlw	1
  2453   0009A6  6E63               	movwf	??_ActionButtons^0,c
  2454   0009A8  0E00               	movlw	0
  2455   0009AA  6E64               	movwf	(??_ActionButtons+1)^0,c
  2456   0009AC  5034               	movf	_counter_direction_flg^0,w,c
  2457   0009AE  5E63               	subwf	??_ActionButtons^0,f,c
  2458   0009B0  0E00               	movlw	0
  2459   0009B2  5A64               	subwfb	(??_ActionButtons+1)^0,f,c
  2460   0009B4  5063               	movf	??_ActionButtons^0,w,c
  2461   0009B6  1064               	iorwf	(??_ActionButtons+1)^0,w,c
  2462   0009B8  A4D8               	btfss	status,2,c
  2463   0009BA  EFE1  F004         	goto	u6441
  2464   0009BE  EFE4  F004         	goto	u6440
  2465   0009C2                     u6441:
  2466   0009C2  0E01               	movlw	1
  2467   0009C4  EFE5  F004         	goto	u6450
  2468   0009C8                     u6440:
  2469   0009C8  0E00               	movlw	0
  2470   0009CA                     u6450:
  2471   0009CA  6E34               	movwf	_counter_direction_flg^0,c
  2472   0009CC  EF89  F004         	goto	l8909
  2473   0009D0                     l8953:
  2474                           
  2475                           ;Buttons.c: 199:                     if( counter_direction_flg == 1 ) { BTN_CLICK_STATE 
      +                          = 0; return; }
  2476   0009D0  0434               	decf	_counter_direction_flg^0,w,c
  2477   0009D2  A4D8               	btfss	status,2,c
  2478   0009D4  EFEE  F004         	goto	u6461
  2479   0009D8  EFF0  F004         	goto	u6460
  2480   0009DC                     u6461:
  2481   0009DC  EFF2  F004         	goto	l8959
  2482   0009E0                     u6460:
  2483   0009E0  EF89  F004         	goto	l8909
  2484   0009E4                     l8959:
  2485                           
  2486                           ;Buttons.c: 200:                     SYSTEM_STATE_FLG = 202;
  2487   0009E4  0ECA               	movlw	202
  2488   0009E6  6E45               	movwf	_SYSTEM_STATE_FLG^0,c
  2489                           
  2490                           ;Buttons.c: 201:                     break;
  2491   0009E8  EF41  F006         	goto	l1114
  2492   0009EC                     l8961:
  2493                           
  2494                           ;Buttons.c: 203:                     if( counter_direction_flg == 1 ) { BTN_CLICK_STATE 
      +                          = 0; return; }
  2495   0009EC  0434               	decf	_counter_direction_flg^0,w,c
  2496   0009EE  A4D8               	btfss	status,2,c
  2497   0009F0  EFFC  F004         	goto	u6471
  2498   0009F4  EFFE  F004         	goto	u6470
  2499   0009F8                     u6471:
  2500   0009F8  EFF2  F004         	goto	l8959
  2501   0009FC                     u6470:
  2502   0009FC  EF89  F004         	goto	l8909
  2503   000A00                     l8969:
  2504                           
  2505                           ;Buttons.c: 207:                     if( counter_direction_flg == 1 ) { BTN_CLICK_STATE 
      +                          = 0; return; }
  2506   000A00  0434               	decf	_counter_direction_flg^0,w,c
  2507   000A02  A4D8               	btfss	status,2,c
  2508   000A04  EF06  F005         	goto	u6481
  2509   000A08  EF08  F005         	goto	u6480
  2510   000A0C                     u6481:
  2511   000A0C  EFF2  F004         	goto	l8959
  2512   000A10                     u6480:
  2513   000A10  EF89  F004         	goto	l8909
  2514   000A14                     l8979:
  2515   000A14  502C               	movf	_BTN_CLICK_STATE^0,w,c
  2516   000A16  6E63               	movwf	??_ActionButtons^0,c
  2517   000A18  6A64               	clrf	(??_ActionButtons+1)^0,c
  2518                           
  2519                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2520                           ; Switch size 1, requested type "simple"
  2521                           ; Number of cases is 1, Range of values is 0 to 0
  2522                           ; switch strategies available:
  2523                           ; Name         Instructions Cycles
  2524                           ; simple_byte            4     3 (average)
  2525                           ;	Chosen strategy is simple_byte
  2526   000A1A  5064               	movf	(??_ActionButtons+1)^0,w,c
  2527   000A1C  0A00               	xorlw	0	; case 0
  2528   000A1E  B4D8               	btfsc	status,2,c
  2529   000A20  EF14  F005         	goto	l10315
  2530   000A24  EF41  F006         	goto	l1114
  2531   000A28                     l10315:
  2532                           
  2533                           ; Switch size 1, requested type "simple"
  2534                           ; Number of cases is 6, Range of values is 11 to 20
  2535                           ; switch strategies available:
  2536                           ; Name         Instructions Cycles
  2537                           ; simple_byte           19    10 (average)
  2538                           ;	Chosen strategy is simple_byte
  2539   000A28  5063               	movf	??_ActionButtons^0,w,c
  2540   000A2A  0A0B               	xorlw	11	; case 11
  2541   000A2C  B4D8               	btfsc	status,2,c
  2542   000A2E  EFE8  F004         	goto	l8953
  2543   000A32  0A07               	xorlw	7	; case 12
  2544   000A34  B4D8               	btfsc	status,2,c
  2545   000A36  EFF6  F004         	goto	l8961
  2546   000A3A  0A01               	xorlw	1	; case 13
  2547   000A3C  B4D8               	btfsc	status,2,c
  2548   000A3E  EF00  F005         	goto	l8969
  2549   000A42  0A03               	xorlw	3	; case 14
  2550   000A44  B4D8               	btfsc	status,2,c
  2551   000A46  EFA2  F004         	goto	l8917
  2552   000A4A  0A01               	xorlw	1	; case 15
  2553   000A4C  B4D8               	btfsc	status,2,c
  2554   000A4E  EFAE  F004         	goto	l8937
  2555   000A52  0A1B               	xorlw	27	; case 20
  2556   000A54  B4D8               	btfsc	status,2,c
  2557   000A56  EFD2  F004         	goto	l8947
  2558   000A5A  EF41  F006         	goto	l1114
  2559   000A5E                     l8981:
  2560                           
  2561                           ;Buttons.c: 215:                     blink_enable_flg = 1; counter_down_hour ++;
  2562   000A5E  0E01               	movlw	1
  2563   000A60  6E2F               	movwf	_blink_enable_flg^0,c
  2564   000A62  2A3E               	incf	_counter_down_hour^0,f,c
  2565   000A64  EF89  F004         	goto	l8909
  2566   000A68                     l8989:
  2567                           
  2568                           ;Buttons.c: 219:                     blink_enable_flg = 1; counter_down_minute ++;
  2569   000A68  0E01               	movlw	1
  2570   000A6A  6E2F               	movwf	_blink_enable_flg^0,c
  2571   000A6C  2A3D               	incf	_counter_down_minute^0,f,c
  2572   000A6E                     
  2573                           ;Buttons.c: 220:                     if( counter_down_minute == 60 ) counter_down_minute
      +                           = 0;
  2574   000A6E  0E3C               	movlw	60
  2575   000A70  183D               	xorwf	_counter_down_minute^0,w,c
  2576   000A72  A4D8               	btfss	status,2,c
  2577   000A74  EF3E  F005         	goto	u6491
  2578   000A78  EF40  F005         	goto	u6490
  2579   000A7C                     u6491:
  2580   000A7C  EF89  F004         	goto	l8909
  2581   000A80                     u6490:
  2582   000A80                     l8995:
  2583   000A80  0E00               	movlw	0
  2584   000A82  6E3D               	movwf	_counter_down_minute^0,c
  2585   000A84  EF89  F004         	goto	l8909
  2586   000A88                     l8999:
  2587                           
  2588                           ;Buttons.c: 224:                     blink_enable_flg = 1; counter_down_second ++;
  2589   000A88  0E01               	movlw	1
  2590   000A8A  6E2F               	movwf	_blink_enable_flg^0,c
  2591   000A8C  2A3C               	incf	_counter_down_second^0,f,c
  2592   000A8E                     
  2593                           ;Buttons.c: 225:                     if( counter_down_second == 60 ) counter_down_second
      +                           = 0;
  2594   000A8E  0E3C               	movlw	60
  2595   000A90  183C               	xorwf	_counter_down_second^0,w,c
  2596   000A92  A4D8               	btfss	status,2,c
  2597   000A94  EF4E  F005         	goto	u6501
  2598   000A98  EF50  F005         	goto	u6500
  2599   000A9C                     u6501:
  2600   000A9C  EF89  F004         	goto	l8909
  2601   000AA0                     u6500:
  2602   000AA0                     l9005:
  2603   000AA0  0E00               	movlw	0
  2604   000AA2  6E3C               	movwf	_counter_down_second^0,c
  2605   000AA4  EF89  F004         	goto	l8909
  2606   000AA8                     l9009:
  2607                           
  2608                           ;Buttons.c: 229:                     if( counter_direction_flg == 1 ){
  2609   000AA8  0434               	decf	_counter_direction_flg^0,w,c
  2610   000AAA  A4D8               	btfss	status,2,c
  2611   000AAC  EF5A  F005         	goto	u6511
  2612   000AB0  EF5C  F005         	goto	u6510
  2613   000AB4                     u6511:
  2614   000AB4  EF5E  F005         	goto	l9015
  2615   000AB8                     u6510:
  2616   000AB8  EF89  F004         	goto	l8909
  2617   000ABC                     l9015:
  2618                           
  2619                           ;Buttons.c: 232:                     SYSTEM_STATE_FLG = 200; StartCounter(); blink_enabl
      +                          e_flg = 1;
  2620   000ABC  0EC8               	movlw	200
  2621   000ABE  6E45               	movwf	_SYSTEM_STATE_FLG^0,c
  2622   000AC0  EC4A  F013         	call	_StartCounter	;wreg free
  2623   000AC4  0E01               	movlw	1
  2624   000AC6  6E2F               	movwf	_blink_enable_flg^0,c
  2625   000AC8                     
  2626                           ;Buttons.c: 233:                     counter_down_set_hour = counter_down_hour;
  2627   000AC8  C03E  F03B         	movff	_counter_down_hour,_counter_down_set_hour
  2628   000ACC                     
  2629                           ;Buttons.c: 234:                     counter_down_set_minute = counter_down_minute;
  2630   000ACC  C03D  F03A         	movff	_counter_down_minute,_counter_down_set_minute
  2631   000AD0                     
  2632                           ;Buttons.c: 235:                     counter_down_set_second = counter_down_second;
  2633   000AD0  C03C  F039         	movff	_counter_down_second,_counter_down_set_second
  2634   000AD4  EF89  F004         	goto	l8909
  2635   000AD8                     l9031:
  2636                           
  2637                           ;Buttons.c: 239:                     if( counter_direction_flg == 1 ){
  2638   000AD8  0434               	decf	_counter_direction_flg^0,w,c
  2639   000ADA  A4D8               	btfss	status,2,c
  2640   000ADC  EF72  F005         	goto	u6521
  2641   000AE0  EF74  F005         	goto	u6520
  2642   000AE4                     u6521:
  2643   000AE4  EF76  F005         	goto	l9039
  2644   000AE8                     u6520:
  2645   000AE8  EF89  F004         	goto	l8909
  2646   000AEC                     l9039:
  2647   000AEC  5034               	movf	_counter_direction_flg^0,w,c
  2648   000AEE  A4D8               	btfss	status,2,c
  2649   000AF0  EF7C  F005         	goto	u6531
  2650   000AF4  EF7E  F005         	goto	u6530
  2651   000AF8                     u6531:
  2652   000AF8  EFCC  F004         	goto	l1153
  2653   000AFC                     u6530:
  2654   000AFC  EFC6  F004         	goto	l8943
  2655   000B00                     l9047:
  2656   000B00  502C               	movf	_BTN_CLICK_STATE^0,w,c
  2657   000B02  6E63               	movwf	??_ActionButtons^0,c
  2658   000B04  6A64               	clrf	(??_ActionButtons+1)^0,c
  2659                           
  2660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2661                           ; Switch size 1, requested type "simple"
  2662                           ; Number of cases is 1, Range of values is 0 to 0
  2663                           ; switch strategies available:
  2664                           ; Name         Instructions Cycles
  2665                           ; simple_byte            4     3 (average)
  2666                           ;	Chosen strategy is simple_byte
  2667   000B06  5064               	movf	(??_ActionButtons+1)^0,w,c
  2668   000B08  0A00               	xorlw	0	; case 0
  2669   000B0A  B4D8               	btfsc	status,2,c
  2670   000B0C  EF8A  F005         	goto	l10317
  2671   000B10  EF41  F006         	goto	l1114
  2672   000B14                     l10317:
  2673                           
  2674                           ; Switch size 1, requested type "simple"
  2675                           ; Number of cases is 5, Range of values is 11 to 15
  2676                           ; switch strategies available:
  2677                           ; Name         Instructions Cycles
  2678                           ; simple_byte           16     9 (average)
  2679                           ;	Chosen strategy is simple_byte
  2680   000B14  5063               	movf	??_ActionButtons^0,w,c
  2681   000B16  0A0B               	xorlw	11	; case 11
  2682   000B18  B4D8               	btfsc	status,2,c
  2683   000B1A  EF2F  F005         	goto	l8981
  2684   000B1E  0A07               	xorlw	7	; case 12
  2685   000B20  B4D8               	btfsc	status,2,c
  2686   000B22  EF34  F005         	goto	l8989
  2687   000B26  0A01               	xorlw	1	; case 13
  2688   000B28  B4D8               	btfsc	status,2,c
  2689   000B2A  EF44  F005         	goto	l8999
  2690   000B2E  0A03               	xorlw	3	; case 14
  2691   000B30  B4D8               	btfsc	status,2,c
  2692   000B32  EF54  F005         	goto	l9009
  2693   000B36  0A01               	xorlw	1	; case 15
  2694   000B38  B4D8               	btfsc	status,2,c
  2695   000B3A  EF6C  F005         	goto	l9031
  2696   000B3E  EF41  F006         	goto	l1114
  2697   000B42                     l9057:
  2698                           
  2699                           ;Buttons.c: 259:                     blink_enable_flg = 1; counter_down_minute ++;
  2700   000B42  0E01               	movlw	1
  2701   000B44  6E2F               	movwf	_blink_enable_flg^0,c
  2702   000B46  2A3D               	incf	_counter_down_minute^0,f,c
  2703   000B48                     
  2704                           ;Buttons.c: 260:                     if( counter_down_minute == 60 ) counter_down_minute
      +                           = 0;
  2705   000B48  0E3C               	movlw	60
  2706   000B4A  183D               	xorwf	_counter_down_minute^0,w,c
  2707   000B4C  A4D8               	btfss	status,2,c
  2708   000B4E  EFAB  F005         	goto	u6541
  2709   000B52  EFAD  F005         	goto	u6540
  2710   000B56                     u6541:
  2711   000B56  EF89  F004         	goto	l8909
  2712   000B5A                     u6540:
  2713   000B5A  EF40  F005         	goto	l8995
  2714   000B5E                     l9067:
  2715                           
  2716                           ;Buttons.c: 264:                     blink_enable_flg = 1; counter_down_second ++;
  2717   000B5E  0E01               	movlw	1
  2718   000B60  6E2F               	movwf	_blink_enable_flg^0,c
  2719   000B62  2A3C               	incf	_counter_down_second^0,f,c
  2720   000B64                     
  2721                           ;Buttons.c: 265:                     if( counter_down_second == 60 ) counter_down_second
      +                           = 0;
  2722   000B64  0E3C               	movlw	60
  2723   000B66  183C               	xorwf	_counter_down_second^0,w,c
  2724   000B68  A4D8               	btfss	status,2,c
  2725   000B6A  EFB9  F005         	goto	u6551
  2726   000B6E  EFBB  F005         	goto	u6550
  2727   000B72                     u6551:
  2728   000B72  EF89  F004         	goto	l8909
  2729   000B76                     u6550:
  2730   000B76  EF50  F005         	goto	l9005
  2731   000B7A                     l9077:
  2732                           
  2733                           ;Buttons.c: 269:                     if( counter_direction_flg == 1 ){
  2734   000B7A  0434               	decf	_counter_direction_flg^0,w,c
  2735   000B7C  A4D8               	btfss	status,2,c
  2736   000B7E  EFC3  F005         	goto	u6561
  2737   000B82  EFC5  F005         	goto	u6560
  2738   000B86                     u6561:
  2739   000B86  EF5E  F005         	goto	l9015
  2740   000B8A                     u6560:
  2741   000B8A  EF89  F004         	goto	l8909
  2742   000B8E                     l9099:
  2743                           
  2744                           ;Buttons.c: 279:                     if( counter_direction_flg == 1 ){
  2745   000B8E  0434               	decf	_counter_direction_flg^0,w,c
  2746   000B90  A4D8               	btfss	status,2,c
  2747   000B92  EFCD  F005         	goto	u6571
  2748   000B96  EFCF  F005         	goto	u6570
  2749   000B9A                     u6571:
  2750   000B9A  EFD1  F005         	goto	l9107
  2751   000B9E                     u6570:
  2752   000B9E  EF89  F004         	goto	l8909
  2753   000BA2                     l9107:
  2754   000BA2  5034               	movf	_counter_direction_flg^0,w,c
  2755   000BA4  A4D8               	btfss	status,2,c
  2756   000BA6  EFD7  F005         	goto	u6581
  2757   000BAA  EFD9  F005         	goto	u6580
  2758   000BAE                     u6581:
  2759   000BAE  EFCC  F004         	goto	l1153
  2760   000BB2                     u6580:
  2761   000BB2  EFC6  F004         	goto	l8943
  2762   000BB6                     l9113:
  2763                           
  2764                           ;Buttons.c: 291:                     counter_direction_flg = 1 - counter_direction_flg;
  2765   000BB6  0E01               	movlw	1
  2766   000BB8  6E63               	movwf	??_ActionButtons^0,c
  2767   000BBA  0E00               	movlw	0
  2768   000BBC  6E64               	movwf	(??_ActionButtons+1)^0,c
  2769   000BBE  5034               	movf	_counter_direction_flg^0,w,c
  2770   000BC0  5E63               	subwf	??_ActionButtons^0,f,c
  2771   000BC2  0E00               	movlw	0
  2772   000BC4  5A64               	subwfb	(??_ActionButtons+1)^0,f,c
  2773   000BC6  5063               	movf	??_ActionButtons^0,w,c
  2774   000BC8  1064               	iorwf	(??_ActionButtons+1)^0,w,c
  2775   000BCA  A4D8               	btfss	status,2,c
  2776   000BCC  EFEA  F005         	goto	u6591
  2777   000BD0  EFED  F005         	goto	u6590
  2778   000BD4                     u6591:
  2779   000BD4  0E01               	movlw	1
  2780   000BD6  EFEE  F005         	goto	u6600
  2781   000BDA                     u6590:
  2782   000BDA  0E00               	movlw	0
  2783   000BDC                     u6600:
  2784   000BDC  6E34               	movwf	_counter_direction_flg^0,c
  2785   000BDE                     
  2786                           ;Buttons.c: 292:                     SYSTEM_STATE_FLG = 201; StopCounter(); blink_enable
      +                          _flg = 0;
  2787   000BDE  0EC9               	movlw	201
  2788   000BE0  6E45               	movwf	_SYSTEM_STATE_FLG^0,c
  2789   000BE2  EC47  F013         	call	_StopCounter	;wreg free
  2790   000BE6  0E00               	movlw	0
  2791   000BE8  6E2F               	movwf	_blink_enable_flg^0,c
  2792   000BEA  EF89  F004         	goto	l8909
  2793   000BEE                     l9127:
  2794   000BEE  502C               	movf	_BTN_CLICK_STATE^0,w,c
  2795   000BF0  6E63               	movwf	??_ActionButtons^0,c
  2796   000BF2  6A64               	clrf	(??_ActionButtons+1)^0,c
  2797                           
  2798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2799                           ; Switch size 1, requested type "simple"
  2800                           ; Number of cases is 1, Range of values is 0 to 0
  2801                           ; switch strategies available:
  2802                           ; Name         Instructions Cycles
  2803                           ; simple_byte            4     3 (average)
  2804                           ;	Chosen strategy is simple_byte
  2805   000BF4  5064               	movf	(??_ActionButtons+1)^0,w,c
  2806   000BF6  0A00               	xorlw	0	; case 0
  2807   000BF8  B4D8               	btfsc	status,2,c
  2808   000BFA  EF01  F006         	goto	l10319
  2809   000BFE  EF41  F006         	goto	l1114
  2810   000C02                     l10319:
  2811                           
  2812                           ; Switch size 1, requested type "simple"
  2813                           ; Number of cases is 6, Range of values is 11 to 20
  2814                           ; switch strategies available:
  2815                           ; Name         Instructions Cycles
  2816                           ; simple_byte           19    10 (average)
  2817                           ;	Chosen strategy is simple_byte
  2818   000C02  5063               	movf	??_ActionButtons^0,w,c
  2819   000C04  0A0B               	xorlw	11	; case 11
  2820   000C06  B4D8               	btfsc	status,2,c
  2821   000C08  EF2F  F005         	goto	l8981
  2822   000C0C  0A07               	xorlw	7	; case 12
  2823   000C0E  B4D8               	btfsc	status,2,c
  2824   000C10  EFA1  F005         	goto	l9057
  2825   000C14  0A01               	xorlw	1	; case 13
  2826   000C16  B4D8               	btfsc	status,2,c
  2827   000C18  EFAF  F005         	goto	l9067
  2828   000C1C  0A03               	xorlw	3	; case 14
  2829   000C1E  B4D8               	btfsc	status,2,c
  2830   000C20  EFBD  F005         	goto	l9077
  2831   000C24  0A01               	xorlw	1	; case 15
  2832   000C26  B4D8               	btfsc	status,2,c
  2833   000C28  EFC7  F005         	goto	l9099
  2834   000C2C  0A1B               	xorlw	27	; case 20
  2835   000C2E  B4D8               	btfsc	status,2,c
  2836   000C30  EFDB  F005         	goto	l9113
  2837   000C34  EF41  F006         	goto	l1114
  2838   000C38                     l9131:
  2839   000C38  5045               	movf	_SYSTEM_STATE_FLG^0,w,c
  2840   000C3A  6E63               	movwf	??_ActionButtons^0,c
  2841   000C3C  6A64               	clrf	(??_ActionButtons+1)^0,c
  2842                           
  2843                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2844                           ; Switch size 1, requested type "simple"
  2845                           ; Number of cases is 1, Range of values is 0 to 0
  2846                           ; switch strategies available:
  2847                           ; Name         Instructions Cycles
  2848                           ; simple_byte            4     3 (average)
  2849                           ;	Chosen strategy is simple_byte
  2850   000C3E  5064               	movf	(??_ActionButtons+1)^0,w,c
  2851   000C40  0A00               	xorlw	0	; case 0
  2852   000C42  B4D8               	btfsc	status,2,c
  2853   000C44  EF26  F006         	goto	l10321
  2854   000C48  EF41  F006         	goto	l1114
  2855   000C4C                     l10321:
  2856                           
  2857                           ; Switch size 1, requested type "simple"
  2858                           ; Number of cases is 6, Range of values is 100 to 203
  2859                           ; switch strategies available:
  2860                           ; Name         Instructions Cycles
  2861                           ; simple_byte           19    10 (average)
  2862                           ;	Chosen strategy is simple_byte
  2863   000C4C  5063               	movf	??_ActionButtons^0,w,c
  2864   000C4E  0A64               	xorlw	100	; case 100
  2865   000C50  B4D8               	btfsc	status,2,c
  2866   000C52  EF53  F003         	goto	l8819
  2867   000C56  0A01               	xorlw	1	; case 101
  2868   000C58  B4D8               	btfsc	status,2,c
  2869   000C5A  EF34  F004         	goto	l8881
  2870   000C5E  0AAD               	xorlw	173	; case 200
  2871   000C60  B4D8               	btfsc	status,2,c
  2872   000C62  EF8D  F004         	goto	l8915
  2873   000C66  0A01               	xorlw	1	; case 201
  2874   000C68  B4D8               	btfsc	status,2,c
  2875   000C6A  EF0A  F005         	goto	l8979
  2876   000C6E  0A03               	xorlw	3	; case 202
  2877   000C70  B4D8               	btfsc	status,2,c
  2878   000C72  EF80  F005         	goto	l9047
  2879   000C76  0A01               	xorlw	1	; case 203
  2880   000C78  B4D8               	btfsc	status,2,c
  2881   000C7A  EFF7  F005         	goto	l9127
  2882   000C7E  EF41  F006         	goto	l1114
  2883   000C82                     l1114:
  2884   000C82  0012               	return		;funcret
  2885   000C84                     __end_of_ActionButtons:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _StopCounter *****************
  2889 ;; Defined at:
  2890 ;;		line 75 in file "Counter.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2904 ;;      Params:         0       0       0       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0
  2907 ;;      Totals:         0       0       0       0       0       0       0
  2908 ;;Total ram usage:        0 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 5
  2911 ;; This function calls:
  2912 ;;		Nothing
  2913 ;; This function is called by:
  2914 ;;		_ActionButtons
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text3
  2919   00268E                     __ptext3:
  2920                           	callstack 0
  2921   00268E                     _StopCounter:
  2922                           	callstack 23
  2923   00268E                     
  2924                           ;Counter.c: 76:     counter_enable_flg = 0;
  2925   00268E  0E00               	movlw	0
  2926   002690  6E35               	movwf	_counter_enable_flg^0,c
  2927   002692  0012               	return		;funcret
  2928   002694                     __end_of_StopCounter:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function _StartCounter *****************
  2932 ;; Defined at:
  2933 ;;		line 71 in file "Counter.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2947 ;;      Params:         0       0       0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0
  2950 ;;      Totals:         0       0       0       0       0       0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 5
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_ActionButtons
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text4
  2962   002694                     __ptext4:
  2963                           	callstack 0
  2964   002694                     _StartCounter:
  2965                           	callstack 23
  2966   002694                     
  2967                           ;Counter.c: 72:     counter_enable_flg = 1;
  2968   002694  0E01               	movlw	1
  2969   002696  6E35               	movwf	_counter_enable_flg^0,c
  2970   002698  0012               	return		;funcret
  2971   00269A                     __end_of_StartCounter:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _Ds1307Write *****************
  2975 ;; Defined at:
  2976 ;;		line 61 in file "DS1307.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  write_datas     1   16[COMRAM] PTR unsigned char 
  2979 ;;		 -> real_rtc_data(7), 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  hour_temp       1   17[COMRAM] unsigned char 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2991 ;;      Params:         1       0       0       0       0       0       0
  2992 ;;      Locals:         1       0       0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0
  2994 ;;      Totals:         2       0       0       0       0       0       0
  2995 ;;Total ram usage:        2 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; Hardware stack levels required when called: 8
  2998 ;; This function calls:
  2999 ;;		_I2cStart
  3000 ;;		_I2cStop
  3001 ;;		_I2cWrite
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;;		_ActionButtons
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text5
  3009   001A62                     __ptext5:
  3010                           	callstack 0
  3011   001A62                     _Ds1307Write:
  3012                           	callstack 20
  3013   001A62                     
  3014                           ;DS1307.c: 63:     unsigned char hour_temp = write_datas[ 2 ];
  3015   001A62  5061               	movf	Ds1307Write@write_datas^0,w,c
  3016   001A64  6ED9               	movwf	fsr2l,c
  3017   001A66  6ADA               	clrf	fsr2h,c
  3018   001A68  0E02               	movlw	2
  3019   001A6A  26D9               	addwf	fsr2l,f,c
  3020   001A6C  50DF               	movf	indf2,w,c
  3021   001A6E  6E62               	movwf	Ds1307Write@hour_temp^0,c
  3022   001A70                     
  3023                           ;DS1307.c: 64:     if( rtc_clock_disp_type == 1 ) {
  3024   001A70  0449               	decf	_rtc_clock_disp_type^0,w,c
  3025   001A72  A4D8               	btfss	status,2,c
  3026   001A74  EF3E  F00D         	goto	u6161
  3027   001A78  EF40  F00D         	goto	u6160
  3028   001A7C                     u6161:
  3029   001A7C  EF5B  F00D         	goto	l8591
  3030   001A80                     u6160:
  3031   001A80                     
  3032                           ;DS1307.c: 65:         if( hour_temp > 0x12 ) hour_temp = hour_temp - 0x12;
  3033   001A80  0E12               	movlw	18
  3034   001A82  6462               	cpfsgt	Ds1307Write@hour_temp^0,c
  3035   001A84  EF46  F00D         	goto	u6171
  3036   001A88  EF48  F00D         	goto	u6170
  3037   001A8C                     u6171:
  3038   001A8C  EF4B  F00D         	goto	l45
  3039   001A90                     u6170:
  3040   001A90  5062               	movf	Ds1307Write@hour_temp^0,w,c
  3041   001A92  0FEE               	addlw	238
  3042   001A94  6E62               	movwf	Ds1307Write@hour_temp^0,c
  3043   001A96                     l45:
  3044                           
  3045                           ;DS1307.c: 66:         hour_temp = hour_temp | 0x40;
  3046   001A96  5062               	movf	Ds1307Write@hour_temp^0,w,c
  3047   001A98  0940               	iorlw	64
  3048   001A9A  6E62               	movwf	Ds1307Write@hour_temp^0,c
  3049                           
  3050                           ;DS1307.c: 67:         if( rtc_hour_ampm_flg == 1 ) hour_temp = hour_temp | 0x20;
  3051   001A9C  0448               	decf	_rtc_hour_ampm_flg^0,w,c
  3052   001A9E  A4D8               	btfss	status,2,c
  3053   001AA0  EF54  F00D         	goto	u6181
  3054   001AA4  EF56  F00D         	goto	u6180
  3055   001AA8                     u6181:
  3056   001AA8  EF6E  F00D         	goto	l8597
  3057   001AAC                     u6180:
  3058   001AAC  5062               	movf	Ds1307Write@hour_temp^0,w,c
  3059   001AAE  0920               	iorlw	32
  3060   001AB0  6E62               	movwf	Ds1307Write@hour_temp^0,c
  3061   001AB2  EF6E  F00D         	goto	l8597
  3062   001AB6                     l8591:
  3063                           
  3064                           ;DS1307.c: 70:         if( rtc_hour_ampm_flg == 1 && hour_temp < 0x12 ) hour_temp = hour
      +                          _temp + 0x12;
  3065   001AB6  0448               	decf	_rtc_hour_ampm_flg^0,w,c
  3066   001AB8  A4D8               	btfss	status,2,c
  3067   001ABA  EF61  F00D         	goto	u6191
  3068   001ABE  EF63  F00D         	goto	u6190
  3069   001AC2                     u6191:
  3070   001AC2  EF6E  F00D         	goto	l8597
  3071   001AC6                     u6190:
  3072   001AC6  0E12               	movlw	18
  3073   001AC8  6062               	cpfslt	Ds1307Write@hour_temp^0,c
  3074   001ACA  EF69  F00D         	goto	u6201
  3075   001ACE  EF6B  F00D         	goto	u6200
  3076   001AD2                     u6201:
  3077   001AD2  EF6E  F00D         	goto	l8597
  3078   001AD6                     u6200:
  3079   001AD6  5062               	movf	Ds1307Write@hour_temp^0,w,c
  3080   001AD8  0F12               	addlw	18
  3081   001ADA  6E62               	movwf	Ds1307Write@hour_temp^0,c
  3082   001ADC                     l8597:
  3083                           
  3084                           ;DS1307.c: 73:     write_datas[ 2 ] = hour_temp;
  3085   001ADC  5061               	movf	Ds1307Write@write_datas^0,w,c
  3086   001ADE  6ED9               	movwf	fsr2l,c
  3087   001AE0  6ADA               	clrf	fsr2h,c
  3088   001AE2  0E02               	movlw	2
  3089   001AE4  26D9               	addwf	fsr2l,f,c
  3090   001AE6  C062  FFDF         	movff	Ds1307Write@hour_temp,indf2
  3091   001AEA                     
  3092                           ;DS1307.c: 75:     I2cStart();
  3093   001AEA  ECFF  F012         	call	_I2cStart	;wreg free
  3094   001AEE                     
  3095                           ;DS1307.c: 76:     I2cWrite( (0xD0) );
  3096   001AEE  0ED0               	movlw	208
  3097   001AF0  ECC5  F012         	call	_I2cWrite
  3098   001AF4                     
  3099                           ;DS1307.c: 77:     I2cWrite( 0x00 );
  3100   001AF4  0E00               	movlw	0
  3101   001AF6  ECC5  F012         	call	_I2cWrite
  3102   001AFA                     
  3103                           ;DS1307.c: 79:     I2cWrite( write_datas[ 0 ] );
  3104   001AFA  5061               	movf	Ds1307Write@write_datas^0,w,c
  3105   001AFC  6ED9               	movwf	fsr2l,c
  3106   001AFE  6ADA               	clrf	fsr2h,c
  3107   001B00  50DF               	movf	indf2,w,c
  3108   001B02  ECC5  F012         	call	_I2cWrite
  3109   001B06                     
  3110                           ;DS1307.c: 80:     I2cWrite( write_datas[ 1 ] );
  3111   001B06  5061               	movf	Ds1307Write@write_datas^0,w,c
  3112   001B08  6ED9               	movwf	fsr2l,c
  3113   001B0A  6ADA               	clrf	fsr2h,c
  3114   001B0C  0E01               	movlw	1
  3115   001B0E  26D9               	addwf	fsr2l,f,c
  3116   001B10  50DF               	movf	indf2,w,c
  3117   001B12  ECC5  F012         	call	_I2cWrite
  3118   001B16                     
  3119                           ;DS1307.c: 81:     I2cWrite( write_datas[ 2 ] );
  3120   001B16  5061               	movf	Ds1307Write@write_datas^0,w,c
  3121   001B18  6ED9               	movwf	fsr2l,c
  3122   001B1A  6ADA               	clrf	fsr2h,c
  3123   001B1C  0E02               	movlw	2
  3124   001B1E  26D9               	addwf	fsr2l,f,c
  3125   001B20  50DF               	movf	indf2,w,c
  3126   001B22  ECC5  F012         	call	_I2cWrite
  3127   001B26                     
  3128                           ;DS1307.c: 82:     I2cWrite( write_datas[ 3 ] );
  3129   001B26  5061               	movf	Ds1307Write@write_datas^0,w,c
  3130   001B28  6ED9               	movwf	fsr2l,c
  3131   001B2A  6ADA               	clrf	fsr2h,c
  3132   001B2C  0E03               	movlw	3
  3133   001B2E  26D9               	addwf	fsr2l,f,c
  3134   001B30  50DF               	movf	indf2,w,c
  3135   001B32  ECC5  F012         	call	_I2cWrite
  3136   001B36                     
  3137                           ;DS1307.c: 83:     I2cWrite( write_datas[ 4 ] );
  3138   001B36  5061               	movf	Ds1307Write@write_datas^0,w,c
  3139   001B38  6ED9               	movwf	fsr2l,c
  3140   001B3A  6ADA               	clrf	fsr2h,c
  3141   001B3C  0E04               	movlw	4
  3142   001B3E  26D9               	addwf	fsr2l,f,c
  3143   001B40  50DF               	movf	indf2,w,c
  3144   001B42  ECC5  F012         	call	_I2cWrite
  3145   001B46                     
  3146                           ;DS1307.c: 84:     I2cWrite( write_datas[ 5 ] );
  3147   001B46  5061               	movf	Ds1307Write@write_datas^0,w,c
  3148   001B48  6ED9               	movwf	fsr2l,c
  3149   001B4A  6ADA               	clrf	fsr2h,c
  3150   001B4C  0E05               	movlw	5
  3151   001B4E  26D9               	addwf	fsr2l,f,c
  3152   001B50  50DF               	movf	indf2,w,c
  3153   001B52  ECC5  F012         	call	_I2cWrite
  3154   001B56                     
  3155                           ;DS1307.c: 85:     I2cWrite( write_datas[ 6 ] );
  3156   001B56  5061               	movf	Ds1307Write@write_datas^0,w,c
  3157   001B58  6ED9               	movwf	fsr2l,c
  3158   001B5A  6ADA               	clrf	fsr2h,c
  3159   001B5C  0E06               	movlw	6
  3160   001B5E  26D9               	addwf	fsr2l,f,c
  3161   001B60  50DF               	movf	indf2,w,c
  3162   001B62  ECC5  F012         	call	_I2cWrite
  3163   001B66                     
  3164                           ;DS1307.c: 86:     I2cWrite( 0x90 );
  3165   001B66  0E90               	movlw	144
  3166   001B68  ECC5  F012         	call	_I2cWrite
  3167   001B6C                     
  3168                           ;DS1307.c: 88:     I2cStop();
  3169   001B6C  EC11  F013         	call	_I2cStop	;wreg free
  3170   001B70  0012               	return		;funcret
  3171   001B72                     __end_of_Ds1307Write:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _UpdateDisplay *****************
  3175 ;; Defined at:
  3176 ;;		line 60 in file "Display.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  update_datas    2    8[BANK1 ] PTR unsigned char 
  3179 ;;		 -> ReadCounter@counter_datas(6), Ds1307Read@ds1307_date_datas(6), 
  3180 ;;  start_positi    1   10[BANK1 ] unsigned char 
  3181 ;;  end_position    1   11[BANK1 ] unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  i               1   12[BANK1 ] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3193 ;;      Params:         0       0       4       0       0       0       0
  3194 ;;      Locals:         0       0       1       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0
  3196 ;;      Totals:         0       0       5       0       0       0       0
  3197 ;;Total ram usage:        5 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 6
  3200 ;; This function calls:
  3201 ;;		_MarkDisplay
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text6
  3208   002450                     __ptext6:
  3209                           	callstack 0
  3210   002450                     _UpdateDisplay:
  3211                           	callstack 24
  3212   002450                     
  3213                           ;Display.c: 62:     for( unsigned char i = start_position - 1; i < end_position; i ++ ) 
      +                          {
  3214   002450  0101               	movlb	1	; () banked
  3215   002452  0520               	decf	UpdateDisplay@start_position& (0+255),w,b
  3216   002454  6F22               	movwf	UpdateDisplay@i& (0+255),b
  3217   002456  EF3D  F012         	goto	l9869
  3218   00245A                     l9865:
  3219                           
  3220                           ; BSR set to: 1
  3221                           ;Display.c: 63:         display_datas[ i ] = MarkDisplay( update_datas[ i ] );
  3222   00245A  5122               	movf	UpdateDisplay@i& (0+255),w,b
  3223   00245C  0F88               	addlw	low _display_datas
  3224   00245E  6ED9               	movwf	fsr2l,c
  3225   002460  6ADA               	clrf	fsr2h,c
  3226   002462  5122               	movf	UpdateDisplay@i& (0+255),w,b
  3227   002464  251E               	addwf	UpdateDisplay@update_datas& (0+255),w,b
  3228   002466  6EE1               	movwf	fsr1l,c
  3229   002468  0E00               	movlw	0
  3230   00246A  211F               	addwfc	(UpdateDisplay@update_datas+1)& (0+255),w,b
  3231   00246C  6EE2               	movwf	fsr1h,c
  3232   00246E  50E7               	movf	indf1,w,c
  3233   002470  EC16  F009         	call	_MarkDisplay
  3234   002474  6EDF               	movwf	indf2,c
  3235   002476                     
  3236                           ;Display.c: 64:     }
  3237   002476  0101               	movlb	1	; () banked
  3238   002478  2B22               	incf	UpdateDisplay@i& (0+255),f,b
  3239   00247A                     l9869:
  3240                           
  3241                           ; BSR set to: 1
  3242   00247A  5121               	movf	UpdateDisplay@end_position& (0+255),w,b
  3243   00247C  5D22               	subwf	UpdateDisplay@i& (0+255),w,b
  3244   00247E  A0D8               	btfss	status,0,c
  3245   002480  EF44  F012         	goto	u7141
  3246   002484  EF46  F012         	goto	u7140
  3247   002488                     u7141:
  3248   002488  EF2D  F012         	goto	l9865
  3249   00248C                     u7140:
  3250   00248C                     
  3251                           ; BSR set to: 1
  3252   00248C  0012               	return		;funcret
  3253   00248E                     __end_of_UpdateDisplay:
  3254                           	callstack 0
  3255                           
  3256 ;; *************** function _ReadCounter *****************
  3257 ;; Defined at:
  3258 ;;		line 36 in file "Counter.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  counter_data    6    0[BANK1 ] unsigned char [6]
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  2    0[BANK0 ] PTR unsigned char 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3272 ;;      Params:         0       2       0       0       0       0       0
  3273 ;;      Locals:         0       0       6       0       0       0       0
  3274 ;;      Temps:          0       0       0       0       0       0       0
  3275 ;;      Totals:         0       2       6       0       0       0       0
  3276 ;;Total ram usage:        8 bytes
  3277 ;; Hardware stack levels used: 1
  3278 ;; Hardware stack levels required when called: 6
  3279 ;; This function calls:
  3280 ;;		___awdiv
  3281 ;;		___awmod
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text7
  3288   0017A4                     __ptext7:
  3289                           	callstack 0
  3290   0017A4                     _ReadCounter:
  3291                           	callstack 24
  3292   0017A4                     
  3293                           ;Counter.c: 38:     unsigned char counter_datas[ 6 ];;Counter.c: 40:     if( counter_dir
      +                          ection_flg == 1 ) {
  3294   0017A4  0434               	decf	_counter_direction_flg^0,w,c
  3295   0017A6  A4D8               	btfss	status,2,c
  3296   0017A8  EFD8  F00B         	goto	u7071
  3297   0017AC  EFDA  F00B         	goto	u7070
  3298   0017B0                     u7071:
  3299   0017B0  EF24  F00C         	goto	l9425
  3300   0017B4                     u7070:
  3301   0017B4                     
  3302                           ;Counter.c: 41:         counter_datas[ 0 + 1 ] = counter_up_hour % 10;
  3303   0017B4  C038  F060         	movff	_counter_up_hour,___awmod@dividend
  3304   0017B8  6A61               	clrf	(___awmod@dividend+1)^0,c
  3305   0017BA  0E00               	movlw	0
  3306   0017BC  6E63               	movwf	(___awmod@divisor+1)^0,c
  3307   0017BE  0E0A               	movlw	10
  3308   0017C0  6E62               	movwf	___awmod@divisor^0,c
  3309   0017C2  EC55  F00F         	call	___awmod	;wreg free
  3310   0017C6  5060               	movf	?___awmod^0,w,c
  3311   0017C8  0101               	movlb	1	; () banked
  3312   0017CA  6F17               	movwf	(ReadCounter@counter_datas+1)& (0+255),b
  3313                           
  3314                           ;Counter.c: 42:         counter_datas[ 0 ] = counter_up_hour / 10;
  3315   0017CC  C038  F060         	movff	_counter_up_hour,___awdiv@dividend
  3316   0017D0  6A61               	clrf	(___awdiv@dividend+1)^0,c
  3317   0017D2  0E00               	movlw	0
  3318   0017D4  6E63               	movwf	(___awdiv@divisor+1)^0,c
  3319   0017D6  0E0A               	movlw	10
  3320   0017D8  6E62               	movwf	___awdiv@divisor^0,c
  3321   0017DA  EC93  F00E         	call	___awdiv	;wreg free
  3322   0017DE  5060               	movf	?___awdiv^0,w,c
  3323   0017E0  0101               	movlb	1	; () banked
  3324   0017E2  6F16               	movwf	ReadCounter@counter_datas& (0+255),b
  3325                           
  3326                           ;Counter.c: 43:         counter_datas[ 2 + 1 ] = counter_up_minute % 10;
  3327   0017E4  C037  F060         	movff	_counter_up_minute,___awmod@dividend
  3328   0017E8  6A61               	clrf	(___awmod@dividend+1)^0,c
  3329   0017EA  0E00               	movlw	0
  3330   0017EC  6E63               	movwf	(___awmod@divisor+1)^0,c
  3331   0017EE  0E0A               	movlw	10
  3332   0017F0  6E62               	movwf	___awmod@divisor^0,c
  3333   0017F2  EC55  F00F         	call	___awmod	;wreg free
  3334   0017F6  5060               	movf	?___awmod^0,w,c
  3335   0017F8  0101               	movlb	1	; () banked
  3336   0017FA  6F19               	movwf	(ReadCounter@counter_datas+3)& (0+255),b
  3337                           
  3338                           ;Counter.c: 44:         counter_datas[ 2 ] = counter_up_minute / 10;
  3339   0017FC  C037  F060         	movff	_counter_up_minute,___awdiv@dividend
  3340   001800  6A61               	clrf	(___awdiv@dividend+1)^0,c
  3341   001802  0E00               	movlw	0
  3342   001804  6E63               	movwf	(___awdiv@divisor+1)^0,c
  3343   001806  0E0A               	movlw	10
  3344   001808  6E62               	movwf	___awdiv@divisor^0,c
  3345   00180A  EC93  F00E         	call	___awdiv	;wreg free
  3346   00180E  5060               	movf	?___awdiv^0,w,c
  3347   001810  0101               	movlb	1	; () banked
  3348   001812  6F18               	movwf	(ReadCounter@counter_datas+2)& (0+255),b
  3349                           
  3350                           ;Counter.c: 45:         counter_datas[ 4 + 1 ] = counter_up_second % 10;
  3351   001814  C036  F060         	movff	_counter_up_second,___awmod@dividend
  3352   001818  6A61               	clrf	(___awmod@dividend+1)^0,c
  3353   00181A  0E00               	movlw	0
  3354   00181C  6E63               	movwf	(___awmod@divisor+1)^0,c
  3355   00181E  0E0A               	movlw	10
  3356   001820  6E62               	movwf	___awmod@divisor^0,c
  3357   001822  EC55  F00F         	call	___awmod	;wreg free
  3358   001826  5060               	movf	?___awmod^0,w,c
  3359   001828  0101               	movlb	1	; () banked
  3360   00182A  6F1B               	movwf	(ReadCounter@counter_datas+5)& (0+255),b
  3361                           
  3362                           ;Counter.c: 46:         counter_datas[ 4 ] = counter_up_second / 10;
  3363   00182C  C036  F060         	movff	_counter_up_second,___awdiv@dividend
  3364   001830  6A61               	clrf	(___awdiv@dividend+1)^0,c
  3365   001832  0E00               	movlw	0
  3366   001834  6E63               	movwf	(___awdiv@divisor+1)^0,c
  3367   001836  0E0A               	movlw	10
  3368   001838  6E62               	movwf	___awdiv@divisor^0,c
  3369   00183A  EC93  F00E         	call	___awdiv	;wreg free
  3370   00183E  5060               	movf	?___awdiv^0,w,c
  3371   001840  0101               	movlb	1	; () banked
  3372   001842  6F1A               	movwf	(ReadCounter@counter_datas+4)& (0+255),b
  3373                           
  3374                           ;Counter.c: 47:     }
  3375   001844  EF80  F00C         	goto	l9429
  3376   001848                     l9425:
  3377   001848  5034               	movf	_counter_direction_flg^0,w,c
  3378   00184A  A4D8               	btfss	status,2,c
  3379   00184C  EF2A  F00C         	goto	u7081
  3380   001850  EF2C  F00C         	goto	u7080
  3381   001854                     u7081:
  3382   001854  EF80  F00C         	goto	l9429
  3383   001858                     u7080:
  3384   001858                     
  3385                           ;Counter.c: 50:         counter_datas[ 0 + 1 ] = counter_down_hour % 10;
  3386   001858  503E               	movf	_counter_down_hour^0,w,c
  3387   00185A  6E60               	movwf	___awmod@dividend^0,c
  3388   00185C  6A61               	clrf	(___awmod@dividend+1)^0,c
  3389   00185E  BE60               	btfsc	___awmod@dividend^0,7,c
  3390   001860  0661               	decf	(___awmod@dividend+1)^0,f,c
  3391   001862  0E00               	movlw	0
  3392   001864  6E63               	movwf	(___awmod@divisor+1)^0,c
  3393   001866  0E0A               	movlw	10
  3394   001868  6E62               	movwf	___awmod@divisor^0,c
  3395   00186A  EC55  F00F         	call	___awmod	;wreg free
  3396   00186E  5060               	movf	?___awmod^0,w,c
  3397   001870  0101               	movlb	1	; () banked
  3398   001872  6F17               	movwf	(ReadCounter@counter_datas+1)& (0+255),b
  3399                           
  3400                           ;Counter.c: 51:         counter_datas[ 0 ] = counter_down_hour / 10;
  3401   001874  503E               	movf	_counter_down_hour^0,w,c
  3402   001876  6E60               	movwf	___awdiv@dividend^0,c
  3403   001878  6A61               	clrf	(___awdiv@dividend+1)^0,c
  3404   00187A  BE60               	btfsc	___awdiv@dividend^0,7,c
  3405   00187C  0661               	decf	(___awdiv@dividend+1)^0,f,c
  3406   00187E  0E00               	movlw	0
  3407   001880  6E63               	movwf	(___awdiv@divisor+1)^0,c
  3408   001882  0E0A               	movlw	10
  3409   001884  6E62               	movwf	___awdiv@divisor^0,c
  3410   001886  EC93  F00E         	call	___awdiv	;wreg free
  3411   00188A  5060               	movf	?___awdiv^0,w,c
  3412   00188C  0101               	movlb	1	; () banked
  3413   00188E  6F16               	movwf	ReadCounter@counter_datas& (0+255),b
  3414                           
  3415                           ;Counter.c: 52:         counter_datas[ 2 + 1 ] = counter_down_minute % 10;
  3416   001890  503D               	movf	_counter_down_minute^0,w,c
  3417   001892  6E60               	movwf	___awmod@dividend^0,c
  3418   001894  6A61               	clrf	(___awmod@dividend+1)^0,c
  3419   001896  BE60               	btfsc	___awmod@dividend^0,7,c
  3420   001898  0661               	decf	(___awmod@dividend+1)^0,f,c
  3421   00189A  0E00               	movlw	0
  3422   00189C  6E63               	movwf	(___awmod@divisor+1)^0,c
  3423   00189E  0E0A               	movlw	10
  3424   0018A0  6E62               	movwf	___awmod@divisor^0,c
  3425   0018A2  EC55  F00F         	call	___awmod	;wreg free
  3426   0018A6  5060               	movf	?___awmod^0,w,c
  3427   0018A8  0101               	movlb	1	; () banked
  3428   0018AA  6F19               	movwf	(ReadCounter@counter_datas+3)& (0+255),b
  3429                           
  3430                           ;Counter.c: 53:         counter_datas[ 2 ] = counter_down_minute / 10;
  3431   0018AC  503D               	movf	_counter_down_minute^0,w,c
  3432   0018AE  6E60               	movwf	___awdiv@dividend^0,c
  3433   0018B0  6A61               	clrf	(___awdiv@dividend+1)^0,c
  3434   0018B2  BE60               	btfsc	___awdiv@dividend^0,7,c
  3435   0018B4  0661               	decf	(___awdiv@dividend+1)^0,f,c
  3436   0018B6  0E00               	movlw	0
  3437   0018B8  6E63               	movwf	(___awdiv@divisor+1)^0,c
  3438   0018BA  0E0A               	movlw	10
  3439   0018BC  6E62               	movwf	___awdiv@divisor^0,c
  3440   0018BE  EC93  F00E         	call	___awdiv	;wreg free
  3441   0018C2  5060               	movf	?___awdiv^0,w,c
  3442   0018C4  0101               	movlb	1	; () banked
  3443   0018C6  6F18               	movwf	(ReadCounter@counter_datas+2)& (0+255),b
  3444                           
  3445                           ;Counter.c: 54:         counter_datas[ 4 + 1 ] = counter_down_second % 10;
  3446   0018C8  503C               	movf	_counter_down_second^0,w,c
  3447   0018CA  6E60               	movwf	___awmod@dividend^0,c
  3448   0018CC  6A61               	clrf	(___awmod@dividend+1)^0,c
  3449   0018CE  BE60               	btfsc	___awmod@dividend^0,7,c
  3450   0018D0  0661               	decf	(___awmod@dividend+1)^0,f,c
  3451   0018D2  0E00               	movlw	0
  3452   0018D4  6E63               	movwf	(___awmod@divisor+1)^0,c
  3453   0018D6  0E0A               	movlw	10
  3454   0018D8  6E62               	movwf	___awmod@divisor^0,c
  3455   0018DA  EC55  F00F         	call	___awmod	;wreg free
  3456   0018DE  5060               	movf	?___awmod^0,w,c
  3457   0018E0  0101               	movlb	1	; () banked
  3458   0018E2  6F1B               	movwf	(ReadCounter@counter_datas+5)& (0+255),b
  3459                           
  3460                           ;Counter.c: 55:         counter_datas[ 4 ] = counter_down_second / 10;
  3461   0018E4  503C               	movf	_counter_down_second^0,w,c
  3462   0018E6  6E60               	movwf	___awdiv@dividend^0,c
  3463   0018E8  6A61               	clrf	(___awdiv@dividend+1)^0,c
  3464   0018EA  BE60               	btfsc	___awdiv@dividend^0,7,c
  3465   0018EC  0661               	decf	(___awdiv@dividend+1)^0,f,c
  3466   0018EE  0E00               	movlw	0
  3467   0018F0  6E63               	movwf	(___awdiv@divisor+1)^0,c
  3468   0018F2  0E0A               	movlw	10
  3469   0018F4  6E62               	movwf	___awdiv@divisor^0,c
  3470   0018F6  EC93  F00E         	call	___awdiv	;wreg free
  3471   0018FA  5060               	movf	?___awdiv^0,w,c
  3472   0018FC  0101               	movlb	1	; () banked
  3473   0018FE  6F1A               	movwf	(ReadCounter@counter_datas+4)& (0+255),b
  3474   001900                     l9429:
  3475                           
  3476                           ;Counter.c: 58:     return counter_datas;
  3477   001900  0E16               	movlw	low ReadCounter@counter_datas
  3478   001902  0100               	movlb	0	; () banked
  3479   001904  6FFE               	movwf	?_ReadCounter& (0+255),b
  3480   001906  0E01               	movlw	high ReadCounter@counter_datas
  3481   001908  6FFF               	movwf	(?_ReadCounter+1)& (0+255),b
  3482   00190A                     
  3483                           ; BSR set to: 0
  3484   00190A  0012               	return		;funcret
  3485   00190C                     __end_of_ReadCounter:
  3486                           	callstack 0
  3487                           
  3488 ;; *************** function ___awmod *****************
  3489 ;; Defined at:
  3490 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  dividend        2   15[COMRAM] int 
  3493 ;;  divisor         2   17[COMRAM] int 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  sign            1   20[COMRAM] unsigned char 
  3496 ;;  counter         1   19[COMRAM] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  2   15[COMRAM] int 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3506 ;;      Params:         4       0       0       0       0       0       0
  3507 ;;      Locals:         2       0       0       0       0       0       0
  3508 ;;      Temps:          0       0       0       0       0       0       0
  3509 ;;      Totals:         6       0       0       0       0       0       0
  3510 ;;Total ram usage:        6 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 5
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_ReadCounter
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text8
  3521   001EAA                     __ptext8:
  3522                           	callstack 0
  3523   001EAA                     ___awmod:
  3524                           	callstack 24
  3525   001EAA  0E00               	movlw	0
  3526   001EAC  6E65               	movwf	___awmod@sign^0,c
  3527   001EAE  BE61               	btfsc	(___awmod@dividend+1)^0,7,c
  3528   001EB0  EF5E  F00F         	goto	u6670
  3529   001EB4  EF5C  F00F         	goto	u6671
  3530   001EB8                     u6671:
  3531   001EB8  EF64  F00F         	goto	l9213
  3532   001EBC                     u6670:
  3533   001EBC  6C60               	negf	___awmod@dividend^0,c
  3534   001EBE  1E61               	comf	(___awmod@dividend+1)^0,f,c
  3535   001EC0  B0D8               	btfsc	status,0,c
  3536   001EC2  2A61               	incf	(___awmod@dividend+1)^0,f,c
  3537   001EC4  0E01               	movlw	1
  3538   001EC6  6E65               	movwf	___awmod@sign^0,c
  3539   001EC8                     l9213:
  3540   001EC8  BE63               	btfsc	(___awmod@divisor+1)^0,7,c
  3541   001ECA  EF6B  F00F         	goto	u6680
  3542   001ECE  EF69  F00F         	goto	u6681
  3543   001ED2                     u6681:
  3544   001ED2  EF6F  F00F         	goto	l9217
  3545   001ED6                     u6680:
  3546   001ED6  6C62               	negf	___awmod@divisor^0,c
  3547   001ED8  1E63               	comf	(___awmod@divisor+1)^0,f,c
  3548   001EDA  B0D8               	btfsc	status,0,c
  3549   001EDC  2A63               	incf	(___awmod@divisor+1)^0,f,c
  3550   001EDE                     l9217:
  3551   001EDE  5062               	movf	___awmod@divisor^0,w,c
  3552   001EE0  1063               	iorwf	(___awmod@divisor+1)^0,w,c
  3553   001EE2  B4D8               	btfsc	status,2,c
  3554   001EE4  EF76  F00F         	goto	u6691
  3555   001EE8  EF78  F00F         	goto	u6690
  3556   001EEC                     u6691:
  3557   001EEC  EF9C  F00F         	goto	l9233
  3558   001EF0                     u6690:
  3559   001EF0  0E01               	movlw	1
  3560   001EF2  6E64               	movwf	___awmod@counter^0,c
  3561   001EF4  EF80  F00F         	goto	l9223
  3562   001EF8                     l9221:
  3563   001EF8  90D8               	bcf	status,0,c
  3564   001EFA  3662               	rlcf	___awmod@divisor^0,f,c
  3565   001EFC  3663               	rlcf	(___awmod@divisor+1)^0,f,c
  3566   001EFE  2A64               	incf	___awmod@counter^0,f,c
  3567   001F00                     l9223:
  3568   001F00  AE63               	btfss	(___awmod@divisor+1)^0,7,c
  3569   001F02  EF85  F00F         	goto	u6701
  3570   001F06  EF87  F00F         	goto	u6700
  3571   001F0A                     u6701:
  3572   001F0A  EF7C  F00F         	goto	l9221
  3573   001F0E                     u6700:
  3574   001F0E                     l9225:
  3575   001F0E  5062               	movf	___awmod@divisor^0,w,c
  3576   001F10  5C60               	subwf	___awmod@dividend^0,w,c
  3577   001F12  5063               	movf	(___awmod@divisor+1)^0,w,c
  3578   001F14  5861               	subwfb	(___awmod@dividend+1)^0,w,c
  3579   001F16  A0D8               	btfss	status,0,c
  3580   001F18  EF90  F00F         	goto	u6711
  3581   001F1C  EF92  F00F         	goto	u6710
  3582   001F20                     u6711:
  3583   001F20  EF96  F00F         	goto	l9229
  3584   001F24                     u6710:
  3585   001F24  5062               	movf	___awmod@divisor^0,w,c
  3586   001F26  5E60               	subwf	___awmod@dividend^0,f,c
  3587   001F28  5063               	movf	(___awmod@divisor+1)^0,w,c
  3588   001F2A  5A61               	subwfb	(___awmod@dividend+1)^0,f,c
  3589   001F2C                     l9229:
  3590   001F2C  90D8               	bcf	status,0,c
  3591   001F2E  3263               	rrcf	(___awmod@divisor+1)^0,f,c
  3592   001F30  3262               	rrcf	___awmod@divisor^0,f,c
  3593   001F32  2E64               	decfsz	___awmod@counter^0,f,c
  3594   001F34  EF87  F00F         	goto	l9225
  3595   001F38                     l9233:
  3596   001F38  5065               	movf	___awmod@sign^0,w,c
  3597   001F3A  B4D8               	btfsc	status,2,c
  3598   001F3C  EFA2  F00F         	goto	u6721
  3599   001F40  EFA4  F00F         	goto	u6720
  3600   001F44                     u6721:
  3601   001F44  EFA8  F00F         	goto	l9237
  3602   001F48                     u6720:
  3603   001F48  6C60               	negf	___awmod@dividend^0,c
  3604   001F4A  1E61               	comf	(___awmod@dividend+1)^0,f,c
  3605   001F4C  B0D8               	btfsc	status,0,c
  3606   001F4E  2A61               	incf	(___awmod@dividend+1)^0,f,c
  3607   001F50                     l9237:
  3608   001F50  C060  F060         	movff	___awmod@dividend,?___awmod
  3609   001F54  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  3610   001F58  0012               	return		;funcret
  3611   001F5A                     __end_of___awmod:
  3612                           	callstack 0
  3613                           
  3614 ;; *************** function ___awdiv *****************
  3615 ;; Defined at:
  3616 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  dividend        2   15[COMRAM] int 
  3619 ;;  divisor         2   17[COMRAM] int 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  quotient        2   21[COMRAM] int 
  3622 ;;  sign            1   20[COMRAM] unsigned char 
  3623 ;;  counter         1   19[COMRAM] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2   15[COMRAM] int 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3633 ;;      Params:         4       0       0       0       0       0       0
  3634 ;;      Locals:         4       0       0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0
  3636 ;;      Totals:         8       0       0       0       0       0       0
  3637 ;;Total ram usage:        8 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 5
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_ReadCounter
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text9
  3648   001D26                     __ptext9:
  3649                           	callstack 0
  3650   001D26                     ___awdiv:
  3651                           	callstack 24
  3652   001D26  0E00               	movlw	0
  3653   001D28  6E65               	movwf	___awdiv@sign^0,c
  3654   001D2A  BE63               	btfsc	(___awdiv@divisor+1)^0,7,c
  3655   001D2C  EF9C  F00E         	goto	u6610
  3656   001D30  EF9A  F00E         	goto	u6611
  3657   001D34                     u6611:
  3658   001D34  EFA2  F00E         	goto	l9169
  3659   001D38                     u6610:
  3660   001D38  6C62               	negf	___awdiv@divisor^0,c
  3661   001D3A  1E63               	comf	(___awdiv@divisor+1)^0,f,c
  3662   001D3C  B0D8               	btfsc	status,0,c
  3663   001D3E  2A63               	incf	(___awdiv@divisor+1)^0,f,c
  3664   001D40  0E01               	movlw	1
  3665   001D42  6E65               	movwf	___awdiv@sign^0,c
  3666   001D44                     l9169:
  3667   001D44  BE61               	btfsc	(___awdiv@dividend+1)^0,7,c
  3668   001D46  EFA9  F00E         	goto	u6620
  3669   001D4A  EFA7  F00E         	goto	u6621
  3670   001D4E                     u6621:
  3671   001D4E  EFAF  F00E         	goto	l9175
  3672   001D52                     u6620:
  3673   001D52  6C60               	negf	___awdiv@dividend^0,c
  3674   001D54  1E61               	comf	(___awdiv@dividend+1)^0,f,c
  3675   001D56  B0D8               	btfsc	status,0,c
  3676   001D58  2A61               	incf	(___awdiv@dividend+1)^0,f,c
  3677   001D5A  0E01               	movlw	1
  3678   001D5C  1A65               	xorwf	___awdiv@sign^0,f,c
  3679   001D5E                     l9175:
  3680   001D5E  0E00               	movlw	0
  3681   001D60  6E67               	movwf	(___awdiv@quotient+1)^0,c
  3682   001D62  0E00               	movlw	0
  3683   001D64  6E66               	movwf	___awdiv@quotient^0,c
  3684   001D66  5062               	movf	___awdiv@divisor^0,w,c
  3685   001D68  1063               	iorwf	(___awdiv@divisor+1)^0,w,c
  3686   001D6A  B4D8               	btfsc	status,2,c
  3687   001D6C  EFBA  F00E         	goto	u6631
  3688   001D70  EFBC  F00E         	goto	u6630
  3689   001D74                     u6631:
  3690   001D74  EFE4  F00E         	goto	l9197
  3691   001D78                     u6630:
  3692   001D78  0E01               	movlw	1
  3693   001D7A  6E64               	movwf	___awdiv@counter^0,c
  3694   001D7C  EFC4  F00E         	goto	l9183
  3695   001D80                     l9181:
  3696   001D80  90D8               	bcf	status,0,c
  3697   001D82  3662               	rlcf	___awdiv@divisor^0,f,c
  3698   001D84  3663               	rlcf	(___awdiv@divisor+1)^0,f,c
  3699   001D86  2A64               	incf	___awdiv@counter^0,f,c
  3700   001D88                     l9183:
  3701   001D88  AE63               	btfss	(___awdiv@divisor+1)^0,7,c
  3702   001D8A  EFC9  F00E         	goto	u6641
  3703   001D8E  EFCB  F00E         	goto	u6640
  3704   001D92                     u6641:
  3705   001D92  EFC0  F00E         	goto	l9181
  3706   001D96                     u6640:
  3707   001D96                     l9185:
  3708   001D96  90D8               	bcf	status,0,c
  3709   001D98  3666               	rlcf	___awdiv@quotient^0,f,c
  3710   001D9A  3667               	rlcf	(___awdiv@quotient+1)^0,f,c
  3711   001D9C  5062               	movf	___awdiv@divisor^0,w,c
  3712   001D9E  5C60               	subwf	___awdiv@dividend^0,w,c
  3713   001DA0  5063               	movf	(___awdiv@divisor+1)^0,w,c
  3714   001DA2  5861               	subwfb	(___awdiv@dividend+1)^0,w,c
  3715   001DA4  A0D8               	btfss	status,0,c
  3716   001DA6  EFD7  F00E         	goto	u6651
  3717   001DAA  EFD9  F00E         	goto	u6650
  3718   001DAE                     u6651:
  3719   001DAE  EFDE  F00E         	goto	l9193
  3720   001DB2                     u6650:
  3721   001DB2  5062               	movf	___awdiv@divisor^0,w,c
  3722   001DB4  5E60               	subwf	___awdiv@dividend^0,f,c
  3723   001DB6  5063               	movf	(___awdiv@divisor+1)^0,w,c
  3724   001DB8  5A61               	subwfb	(___awdiv@dividend+1)^0,f,c
  3725   001DBA  8066               	bsf	___awdiv@quotient^0,0,c
  3726   001DBC                     l9193:
  3727   001DBC  90D8               	bcf	status,0,c
  3728   001DBE  3263               	rrcf	(___awdiv@divisor+1)^0,f,c
  3729   001DC0  3262               	rrcf	___awdiv@divisor^0,f,c
  3730   001DC2  2E64               	decfsz	___awdiv@counter^0,f,c
  3731   001DC4  EFCB  F00E         	goto	l9185
  3732   001DC8                     l9197:
  3733   001DC8  5065               	movf	___awdiv@sign^0,w,c
  3734   001DCA  B4D8               	btfsc	status,2,c
  3735   001DCC  EFEA  F00E         	goto	u6661
  3736   001DD0  EFEC  F00E         	goto	u6660
  3737   001DD4                     u6661:
  3738   001DD4  EFF0  F00E         	goto	l9201
  3739   001DD8                     u6660:
  3740   001DD8  6C66               	negf	___awdiv@quotient^0,c
  3741   001DDA  1E67               	comf	(___awdiv@quotient+1)^0,f,c
  3742   001DDC  B0D8               	btfsc	status,0,c
  3743   001DDE  2A67               	incf	(___awdiv@quotient+1)^0,f,c
  3744   001DE0                     l9201:
  3745   001DE0  C066  F060         	movff	___awdiv@quotient,?___awdiv
  3746   001DE4  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3747   001DE8  0012               	return		;funcret
  3748   001DEA                     __end_of___awdiv:
  3749                           	callstack 0
  3750                           
  3751 ;; *************** function _Puts1USART *****************
  3752 ;; Defined at:
  3753 ;;		line 105 in file "Uart.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  data            1   16[COMRAM] PTR unsigned char 
  3756 ;;		 -> STR_1(43), 
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3768 ;;      Params:         1       0       0       0       0       0       0
  3769 ;;      Locals:         0       0       0       0       0       0       0
  3770 ;;      Temps:          1       0       0       0       0       0       0
  3771 ;;      Totals:         2       0       0       0       0       0       0
  3772 ;;Total ram usage:        2 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 6
  3775 ;; This function calls:
  3776 ;;		_Busy1USART
  3777 ;;		_Write1USART
  3778 ;; This function is called by:
  3779 ;;		_main
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text10
  3784   0023C0                     __ptext10:
  3785                           	callstack 0
  3786   0023C0                     _Puts1USART:
  3787                           	callstack 24
  3788   0023C0                     l1715:
  3789   0023C0                     l6793:
  3790   0023C0  ECDE  F012         	call	_Busy1USART	;wreg free
  3791   0023C4  0900               	iorlw	0
  3792   0023C6  A4D8               	btfss	status,2,c
  3793   0023C8  EFE8  F011         	goto	u4581
  3794   0023CC  EFEA  F011         	goto	u4580
  3795   0023D0                     u4581:
  3796   0023D0  EFE0  F011         	goto	l6793
  3797   0023D4                     u4580:
  3798   0023D4                     
  3799                           ;Uart.c: 109:             Write1USART(*data);
  3800   0023D4  C061  FFF6         	movff	Puts1USART@data,tblptrl
  3801   0023D8                     	if	1	;There is more than 1 active tblptr byte
  3802   0023D8  0E06               	movlw	high __smallconst
  3803   0023DA  6EF7               	movwf	tblptrh,c
  3804   0023DC                     	endif
  3805   0023DC                     	if	0	;tblptru may be non-zero
  3806   0023DC                     	endif
  3807   0023DC                     	if	0	;tblptru may be non-zero
  3808   0023DC                     	endif
  3809   0023DC  0008               	tblrd		*
  3810   0023DE  50F5               	movf	tablat,w,c
  3811   0023E0  EC8F  F012         	call	_Write1USART
  3812   0023E4                     
  3813                           ;Uart.c: 110:     } while( *data++ );
  3814   0023E4  2A61               	incf	Puts1USART@data^0,f,c
  3815   0023E6  0461               	decf	Puts1USART@data^0,w,c
  3816   0023E8  6E62               	movwf	??_Puts1USART^0,c
  3817   0023EA  C062  FFF6         	movff	??_Puts1USART,tblptrl
  3818   0023EE                     	if	1	;There is more than 1 active tblptr byte
  3819   0023EE  0E06               	movlw	high __smallconst
  3820   0023F0  6EF7               	movwf	tblptrh,c
  3821   0023F2                     	endif
  3822   0023F2                     	if	0	;tblptru may be non-zero
  3823   0023F2                     	endif
  3824   0023F2                     	if	0	;tblptru may be non-zero
  3825   0023F2                     	endif
  3826   0023F2  0008               	tblrd		*
  3827   0023F4  50F5               	movf	tablat,w,c
  3828   0023F6  0900               	iorlw	0
  3829   0023F8  A4D8               	btfss	status,2,c
  3830   0023FA  EF01  F012         	goto	u4591
  3831   0023FE  EF03  F012         	goto	u4590
  3832   002402                     u4591:
  3833   002402  EFE0  F011         	goto	l1715
  3834   002406                     u4590:
  3835   002406  0012               	return		;funcret
  3836   002408                     __end_of_Puts1USART:
  3837                           	callstack 0
  3838                           
  3839 ;; *************** function _Write1USART *****************
  3840 ;; Defined at:
  3841 ;;		line 79 in file "Uart.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  data            1    wreg     unsigned char 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  data            1   15[COMRAM] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3855 ;;      Params:         0       0       0       0       0       0       0
  3856 ;;      Locals:         1       0       0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0
  3858 ;;      Totals:         1       0       0       0       0       0       0
  3859 ;;Total ram usage:        1 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 5
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_Puts1USART
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text11
  3870   00251E                     __ptext11:
  3871                           	callstack 0
  3872   00251E                     _Write1USART:
  3873                           	callstack 24
  3874                           
  3875                           ;incstack = 0
  3876                           ;Write1USART@data stored from wreg
  3877   00251E  6E60               	movwf	Write1USART@data^0,c
  3878   002520                     
  3879                           ;Uart.c: 80:     if(TXSTA1bits.TX9)
  3880   002520  ACAC               	btfss	172,6,c	;volatile
  3881   002522  EF95  F012         	goto	u4111
  3882   002526  EF97  F012         	goto	u4110
  3883   00252A                     u4111:
  3884   00252A  EFA0  F012         	goto	l6513
  3885   00252E                     u4110:
  3886   00252E                     
  3887                           ;Uart.c: 81:     {;Uart.c: 82:         TXSTA1bits.TX9D = 0;
  3888   00252E  90AC               	bcf	172,0,c	;volatile
  3889                           
  3890                           ;Uart.c: 83:         if(USART1_Status.TX_NINE)
  3891   002530  A228               	btfss	_USART1_Status^0,1,c	;volatile
  3892   002532  EF9D  F012         	goto	u4121
  3893   002536  EF9F  F012         	goto	u4120
  3894   00253A                     u4121:
  3895   00253A  EFA0  F012         	goto	l6513
  3896   00253E                     u4120:
  3897   00253E                     
  3898                           ;Uart.c: 84:             TXSTA1bits.TX9D = 1;
  3899   00253E  80AC               	bsf	172,0,c	;volatile
  3900   002540                     l6513:
  3901                           
  3902                           ;Uart.c: 87:     TXREG1 = data;
  3903   002540  C060  FFAD         	movff	Write1USART@data,4013	;volatile
  3904   002544  0012               	return		;funcret
  3905   002546                     __end_of_Write1USART:
  3906                           	callstack 0
  3907                           
  3908 ;; *************** function _Busy1USART *****************
  3909 ;; Defined at:
  3910 ;;		line 49 in file "Uart.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      unsigned char 
  3917 ;; Registers used:
  3918 ;;		wreg
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3924 ;;      Params:         0       0       0       0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0
  3927 ;;      Totals:         0       0       0       0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 5
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_Puts1USART
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text12
  3939   0025BC                     __ptext12:
  3940                           	callstack 0
  3941   0025BC                     _Busy1USART:
  3942                           	callstack 24
  3943   0025BC                     
  3944                           ;Uart.c: 51:     if(!TXSTA1bits.TRMT)
  3945   0025BC  B2AC               	btfsc	172,1,c	;volatile
  3946   0025BE  EFE3  F012         	goto	u4101
  3947   0025C2  EFE5  F012         	goto	u4100
  3948   0025C6                     u4101:
  3949   0025C6  EFE8  F012         	goto	l6503
  3950   0025CA                     u4100:
  3951   0025CA                     
  3952                           ;Uart.c: 52:         return 1;
  3953   0025CA  0E01               	movlw	1
  3954   0025CC  EFE9  F012         	goto	l1691
  3955   0025D0                     l6503:
  3956                           
  3957                           ;Uart.c: 53:     return 0;
  3958   0025D0  0E00               	movlw	0
  3959   0025D2                     l1691:
  3960   0025D2  0012               	return		;funcret
  3961   0025D4                     __end_of_Busy1USART:
  3962                           	callstack 0
  3963                           
  3964 ;; *************** function _LEDProcess *****************
  3965 ;; Defined at:
  3966 ;;		line 129 in file "Main.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3980 ;;      Params:         0       0       0       0       0       0       0
  3981 ;;      Locals:         0       0       0       0       0       0       0
  3982 ;;      Temps:          0       0       0       0       0       0       0
  3983 ;;      Totals:         0       0       0       0       0       0       0
  3984 ;;Total ram usage:        0 bytes
  3985 ;; Hardware stack levels used: 1
  3986 ;; Hardware stack levels required when called: 5
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_main
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text13
  3995   002002                     __ptext13:
  3996                           	callstack 0
  3997   002002                     _LEDProcess:
  3998                           	callstack 25
  3999   002002                     
  4000                           ;Main.c: 130:     display_datas[ 7 ] &= 0x00;
  4001   002002  0E00               	movlw	0
  4002   002004  0100               	movlb	0	; () banked
  4003   002006  6F8F               	movwf	(_display_datas+7)& (0+255),b
  4004   002008                     
  4005                           ; BSR set to: 0
  4006                           ;Main.c: 131:     if( SYSTEM_STATE_FLG == 100 || SYSTEM_STATE_FLG == 101 ) {
  4007   002008  0E64               	movlw	100
  4008   00200A  1845               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  4009   00200C  B4D8               	btfsc	status,2,c
  4010   00200E  EF0B  F010         	goto	u4611
  4011   002012  EF0D  F010         	goto	u4610
  4012   002016                     u4611:
  4013   002016  EF16  F010         	goto	l6817
  4014   00201A                     u4610:
  4015   00201A                     
  4016                           ; BSR set to: 0
  4017   00201A  0E65               	movlw	101
  4018   00201C  1845               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  4019   00201E  A4D8               	btfss	status,2,c
  4020   002020  EF14  F010         	goto	u4621
  4021   002024  EF16  F010         	goto	u4620
  4022   002028                     u4621:
  4023   002028  EF24  F010         	goto	l6823
  4024   00202C                     u4620:
  4025   00202C                     l6817:
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;Main.c: 132:         if( rtc_clock_disp_type == 0 ) display_datas[ 7 ] |= 0x01;
  4029   00202C  5049               	movf	_rtc_clock_disp_type^0,w,c
  4030   00202E  A4D8               	btfss	status,2,c
  4031   002030  EF1C  F010         	goto	u4631
  4032   002034  EF1E  F010         	goto	u4630
  4033   002038                     u4631:
  4034   002038  EF21  F010         	goto	l6821
  4035   00203C                     u4630:
  4036   00203C                     l6819:
  4037                           
  4038                           ; BSR set to: 0
  4039   00203C  818F               	bsf	(_display_datas+7)& (0+255),0,b
  4040   00203E  EF52  F010         	goto	l348
  4041   002042                     l6821:
  4042                           
  4043                           ; BSR set to: 0
  4044   002042  838F               	bsf	(_display_datas+7)& (0+255),1,b
  4045   002044  EF52  F010         	goto	l348
  4046   002048                     l6823:
  4047                           
  4048                           ; BSR set to: 0
  4049   002048  0EC8               	movlw	200
  4050   00204A  1845               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  4051   00204C  B4D8               	btfsc	status,2,c
  4052   00204E  EF2B  F010         	goto	u4641
  4053   002052  EF2D  F010         	goto	u4640
  4054   002056                     u4641:
  4055   002056  EF48  F010         	goto	l6831
  4056   00205A                     u4640:
  4057   00205A                     
  4058                           ; BSR set to: 0
  4059   00205A  0ECA               	movlw	202
  4060   00205C  1845               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  4061   00205E  B4D8               	btfsc	status,2,c
  4062   002060  EF34  F010         	goto	u4651
  4063   002064  EF36  F010         	goto	u4650
  4064   002068                     u4651:
  4065   002068  EF48  F010         	goto	l6831
  4066   00206C                     u4650:
  4067   00206C                     
  4068                           ; BSR set to: 0
  4069   00206C  0EC9               	movlw	201
  4070   00206E  1845               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  4071   002070  B4D8               	btfsc	status,2,c
  4072   002072  EF3D  F010         	goto	u4661
  4073   002076  EF3F  F010         	goto	u4660
  4074   00207A                     u4661:
  4075   00207A  EF48  F010         	goto	l6831
  4076   00207E                     u4660:
  4077   00207E                     
  4078                           ; BSR set to: 0
  4079   00207E  0ECB               	movlw	203
  4080   002080  1845               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  4081   002082  A4D8               	btfss	status,2,c
  4082   002084  EF46  F010         	goto	u4671
  4083   002088  EF48  F010         	goto	u4670
  4084   00208C                     u4671:
  4085   00208C  EF52  F010         	goto	l348
  4086   002090                     u4670:
  4087   002090                     l6831:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;Main.c: 136:         if( counter_direction_flg == 1 ) display_datas[ 7 ] |= 0x01;
  4091   002090  0434               	decf	_counter_direction_flg^0,w,c
  4092   002092  A4D8               	btfss	status,2,c
  4093   002094  EF4E  F010         	goto	u4681
  4094   002098  EF50  F010         	goto	u4680
  4095   00209C                     u4681:
  4096   00209C  EF21  F010         	goto	l6821
  4097   0020A0                     u4680:
  4098   0020A0  EF1E  F010         	goto	l6819
  4099   0020A4                     l348:
  4100                           
  4101                           ; BSR set to: 0
  4102   0020A4  0012               	return		;funcret
  4103   0020A6                     __end_of_LEDProcess:
  4104                           	callstack 0
  4105                           
  4106 ;; *************** function _Ds1307Read *****************
  4107 ;; Defined at:
  4108 ;;		line 21 in file "DS1307.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  disp_type       1    wreg     unsigned char 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  disp_type       1    0[BANK1 ] unsigned char 
  4113 ;;  i               1    1[BANK1 ] unsigned char 
  4114 ;;  ds1307_date_    6    2[BANK1 ] unsigned char [6]
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  2   17[COMRAM] PTR unsigned char 
  4117 ;; Registers used:
  4118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4124 ;;      Params:         2       0       0       0       0       0       0
  4125 ;;      Locals:         0       0       8       0       0       0       0
  4126 ;;      Temps:          2       0       0       0       0       0       0
  4127 ;;      Totals:         4       0       8       0       0       0       0
  4128 ;;Total ram usage:       12 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; Hardware stack levels required when called: 8
  4131 ;; This function calls:
  4132 ;;		_I2cRead
  4133 ;;		_I2cRestart
  4134 ;;		_I2cStart
  4135 ;;		_I2cStop
  4136 ;;		_I2cWrite
  4137 ;; This function is called by:
  4138 ;;		_main
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text14
  4143   00190C                     __ptext14:
  4144                           	callstack 0
  4145   00190C                     _Ds1307Read:
  4146                           	callstack 22
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;incstack = 0
  4150                           ;Ds1307Read@disp_type stored from wreg
  4151   00190C  0101               	movlb	1	; () banked
  4152   00190E  6F16               	movwf	Ds1307Read@disp_type& (0+255),b
  4153   001910                     
  4154                           ;DS1307.c: 23:     I2cStart();
  4155   001910  ECFF  F012         	call	_I2cStart	;wreg free
  4156   001914                     
  4157                           ;DS1307.c: 24:     I2cWrite( (0xD0) );
  4158   001914  0ED0               	movlw	208
  4159   001916  ECC5  F012         	call	_I2cWrite
  4160   00191A                     
  4161                           ;DS1307.c: 25:     I2cWrite( 0x00 );
  4162   00191A  0E00               	movlw	0
  4163   00191C  ECC5  F012         	call	_I2cWrite
  4164                           
  4165                           ;DS1307.c: 27:     I2cRestart();
  4166   001920  EC08  F013         	call	_I2cRestart	;wreg free
  4167   001924                     
  4168                           ;DS1307.c: 28:     I2cWrite( (0xD1) );
  4169   001924  0ED1               	movlw	209
  4170   001926  ECC5  F012         	call	_I2cWrite
  4171   00192A                     
  4172                           ;DS1307.c: 30:     unsigned char ds1307_date_datas[ 6 ];;DS1307.c: 32:     for( unsigned
      +                           char i = 0; i < 6; i++ ) real_rtc_data[ i ] = I2cRead( 0 ); real_rtc_data[ 6 ] = I2cRea
      +                          d( 1 );
  4173   00192A  0E00               	movlw	0
  4174   00192C  0101               	movlb	1	; () banked
  4175   00192E  6F17               	movwf	Ds1307Read@i& (0+255),b
  4176   001930                     l9255:
  4177                           
  4178                           ; BSR set to: 1
  4179   001930  5117               	movf	Ds1307Read@i& (0+255),w,b
  4180   001932  0F4A               	addlw	low _real_rtc_data
  4181   001934  6ED9               	movwf	fsr2l,c
  4182   001936  6ADA               	clrf	fsr2h,c
  4183   001938  0E00               	movlw	0
  4184   00193A  EC47  F012         	call	_I2cRead
  4185   00193E  6EDF               	movwf	indf2,c
  4186   001940  0101               	movlb	1	; () banked
  4187   001942  2B17               	incf	Ds1307Read@i& (0+255),f,b
  4188   001944                     
  4189                           ; BSR set to: 1
  4190   001944  0E05               	movlw	5
  4191   001946  6517               	cpfsgt	Ds1307Read@i& (0+255),b
  4192   001948  EFA8  F00C         	goto	u6731
  4193   00194C  EFAA  F00C         	goto	u6730
  4194   001950                     u6731:
  4195   001950  EF98  F00C         	goto	l9255
  4196   001954                     u6730:
  4197   001954                     
  4198                           ; BSR set to: 1
  4199   001954  0E01               	movlw	1
  4200   001956  EC47  F012         	call	_I2cRead
  4201   00195A  6E50               	movwf	(_real_rtc_data+6)^0,c
  4202   00195C                     
  4203                           ;DS1307.c: 34:     rtc_clock_disp_type = ( real_rtc_data[ 2 ] & 0x40 ) ? 1 : 0;
  4204   00195C  BC4C               	btfsc	(_real_rtc_data+2)^0,6,c
  4205   00195E  EFB3  F00C         	goto	u6741
  4206   001962  EFB6  F00C         	goto	u6740
  4207   001966                     u6741:
  4208   001966  0E01               	movlw	1
  4209   001968  EFB7  F00C         	goto	u6750
  4210   00196C                     u6740:
  4211   00196C  0E00               	movlw	0
  4212   00196E                     u6750:
  4213   00196E  6E49               	movwf	_rtc_clock_disp_type^0,c
  4214   001970                     
  4215                           ;DS1307.c: 35:     if( rtc_clock_disp_type == 0 ) real_rtc_data[ 2 ] = real_rtc_data[ 2 
      +                          ] & 0x3f;
  4216   001970  5049               	movf	_rtc_clock_disp_type^0,w,c
  4217   001972  A4D8               	btfss	status,2,c
  4218   001974  EFBE  F00C         	goto	u6761
  4219   001978  EFC0  F00C         	goto	u6760
  4220   00197C                     u6761:
  4221   00197C  EFC5  F00C         	goto	l9269
  4222   001980                     u6760:
  4223   001980  504C               	movf	(_real_rtc_data+2)^0,w,c
  4224   001982  0B3F               	andlw	63
  4225   001984  6E4C               	movwf	(_real_rtc_data+2)^0,c
  4226   001986  EF10  F00D         	goto	l9281
  4227   00198A                     l9269:
  4228   00198A  BA4C               	btfsc	(_real_rtc_data+2)^0,5,c
  4229   00198C  EFCA  F00C         	goto	u6771
  4230   001990  EFCD  F00C         	goto	u6770
  4231   001994                     u6771:
  4232   001994  0E01               	movlw	1
  4233   001996  EFCE  F00C         	goto	u6780
  4234   00199A                     u6770:
  4235   00199A  0E00               	movlw	0
  4236   00199C                     u6780:
  4237   00199C  6E48               	movwf	_rtc_hour_ampm_flg^0,c
  4238   00199E  504C               	movf	(_real_rtc_data+2)^0,w,c
  4239   0019A0  0B1F               	andlw	31
  4240   0019A2  6E4C               	movwf	(_real_rtc_data+2)^0,c
  4241   0019A4  EF10  F00D         	goto	l9281
  4242   0019A8                     l9273:
  4243                           
  4244                           ; BSR set to: 1
  4245                           ;DS1307.c: 40:                 ds1307_date_datas[ 0 ] = real_rtc_data[ 2 ] >> 4; ds1307_
      +                          date_datas[ 1 ] = real_rtc_data[ 2 ] % 16;
  4246   0019A8  384C               	swapf	(_real_rtc_data+2)^0,w,c
  4247   0019AA  0B0F               	andlw	15
  4248   0019AC  6F18               	movwf	Ds1307Read@ds1307_date_datas& (0+255),b
  4249   0019AE  504C               	movf	(_real_rtc_data+2)^0,w,c
  4250   0019B0  0B0F               	andlw	15
  4251   0019B2  6F19               	movwf	(Ds1307Read@ds1307_date_datas+1)& (0+255),b
  4252                           
  4253                           ;DS1307.c: 41:                 ds1307_date_datas[ 2 ] = real_rtc_data[ 1 ] >> 4; ds1307_
      +                          date_datas[ 3 ] = real_rtc_data[ 1 ] % 16;
  4254   0019B4  384B               	swapf	(_real_rtc_data+1)^0,w,c
  4255   0019B6  0B0F               	andlw	15
  4256   0019B8  6F1A               	movwf	(Ds1307Read@ds1307_date_datas+2)& (0+255),b
  4257   0019BA  504B               	movf	(_real_rtc_data+1)^0,w,c
  4258   0019BC  0B0F               	andlw	15
  4259   0019BE  6F1B               	movwf	(Ds1307Read@ds1307_date_datas+3)& (0+255),b
  4260                           
  4261                           ;DS1307.c: 42:                 ds1307_date_datas[ 4 ] = real_rtc_data[ 0 ] >> 4; ds1307_
      +                          date_datas[ 5 ] = real_rtc_data[ 0 ] % 16;
  4262   0019C0  384A               	swapf	_real_rtc_data^0,w,c
  4263   0019C2  0B0F               	andlw	15
  4264   0019C4  6F1C               	movwf	(Ds1307Read@ds1307_date_datas+4)& (0+255),b
  4265   0019C6  504A               	movf	_real_rtc_data^0,w,c
  4266   0019C8  0B0F               	andlw	15
  4267   0019CA  6F1D               	movwf	(Ds1307Read@ds1307_date_datas+5)& (0+255),b
  4268                           
  4269                           ;DS1307.c: 43:                 break;
  4270   0019CC  EF2A  F00D         	goto	l9283
  4271   0019D0                     l9275:
  4272                           
  4273                           ; BSR set to: 1
  4274                           ;DS1307.c: 45:                 ds1307_date_datas[ 0 ] = real_rtc_data[ 2 ] >> 4; ds1307_
      +                          date_datas[ 1 ] = real_rtc_data[ 2 ] % 16;
  4275   0019D0  384C               	swapf	(_real_rtc_data+2)^0,w,c
  4276   0019D2  0B0F               	andlw	15
  4277   0019D4  6F18               	movwf	Ds1307Read@ds1307_date_datas& (0+255),b
  4278   0019D6  504C               	movf	(_real_rtc_data+2)^0,w,c
  4279   0019D8  0B0F               	andlw	15
  4280   0019DA  6F19               	movwf	(Ds1307Read@ds1307_date_datas+1)& (0+255),b
  4281                           
  4282                           ;DS1307.c: 46:                 ds1307_date_datas[ 2 ] = real_rtc_data[ 1 ] >> 4; ds1307_
      +                          date_datas[ 3 ] = real_rtc_data[ 1 ] % 16;
  4283   0019DC  384B               	swapf	(_real_rtc_data+1)^0,w,c
  4284   0019DE  0B0F               	andlw	15
  4285   0019E0  6F1A               	movwf	(Ds1307Read@ds1307_date_datas+2)& (0+255),b
  4286   0019E2  504B               	movf	(_real_rtc_data+1)^0,w,c
  4287   0019E4  0B0F               	andlw	15
  4288   0019E6  6F1B               	movwf	(Ds1307Read@ds1307_date_datas+3)& (0+255),b
  4289                           
  4290                           ;DS1307.c: 47:                 ds1307_date_datas[ 4 ] = real_rtc_data[ 3 ] >> 4; ds1307_
      +                          date_datas[ 5 ] = real_rtc_data[ 3 ] % 16;
  4291   0019E8  384D               	swapf	(_real_rtc_data+3)^0,w,c
  4292   0019EA  0B0F               	andlw	15
  4293   0019EC  6F1C               	movwf	(Ds1307Read@ds1307_date_datas+4)& (0+255),b
  4294   0019EE  504D               	movf	(_real_rtc_data+3)^0,w,c
  4295   0019F0  0B0F               	andlw	15
  4296   0019F2  6F1D               	movwf	(Ds1307Read@ds1307_date_datas+5)& (0+255),b
  4297                           
  4298                           ;DS1307.c: 48:                 break;
  4299   0019F4  EF2A  F00D         	goto	l9283
  4300   0019F8                     l9277:
  4301                           
  4302                           ; BSR set to: 1
  4303                           ;DS1307.c: 50:                 ds1307_date_datas[ 0 ] = real_rtc_data[ 6 ] >> 4; ds1307_
      +                          date_datas[ 1 ] = real_rtc_data[ 6 ] % 16;
  4304   0019F8  3850               	swapf	(_real_rtc_data+6)^0,w,c
  4305   0019FA  0B0F               	andlw	15
  4306   0019FC  6F18               	movwf	Ds1307Read@ds1307_date_datas& (0+255),b
  4307   0019FE  5050               	movf	(_real_rtc_data+6)^0,w,c
  4308   001A00  0B0F               	andlw	15
  4309   001A02  6F19               	movwf	(Ds1307Read@ds1307_date_datas+1)& (0+255),b
  4310                           
  4311                           ;DS1307.c: 51:                 ds1307_date_datas[ 2 ] = real_rtc_data[ 5 ] >> 4; ds1307_
      +                          date_datas[ 3 ] = real_rtc_data[ 5 ] % 16;
  4312   001A04  384F               	swapf	(_real_rtc_data+5)^0,w,c
  4313   001A06  0B0F               	andlw	15
  4314   001A08  6F1A               	movwf	(Ds1307Read@ds1307_date_datas+2)& (0+255),b
  4315   001A0A  504F               	movf	(_real_rtc_data+5)^0,w,c
  4316   001A0C  0B0F               	andlw	15
  4317   001A0E  6F1B               	movwf	(Ds1307Read@ds1307_date_datas+3)& (0+255),b
  4318                           
  4319                           ;DS1307.c: 52:                 ds1307_date_datas[ 4 ] = real_rtc_data[ 4 ] >> 4; ds1307_
      +                          date_datas[ 5 ] = real_rtc_data[ 4 ] % 16;
  4320   001A10  384E               	swapf	(_real_rtc_data+4)^0,w,c
  4321   001A12  0B0F               	andlw	15
  4322   001A14  6F1C               	movwf	(Ds1307Read@ds1307_date_datas+4)& (0+255),b
  4323   001A16  504E               	movf	(_real_rtc_data+4)^0,w,c
  4324   001A18  0B0F               	andlw	15
  4325   001A1A  6F1D               	movwf	(Ds1307Read@ds1307_date_datas+5)& (0+255),b
  4326                           
  4327                           ;DS1307.c: 53:                 break;
  4328   001A1C  EF2A  F00D         	goto	l9283
  4329   001A20                     l9281:
  4330   001A20  0101               	movlb	1	; () banked
  4331   001A22  5116               	movf	Ds1307Read@disp_type& (0+255),w,b
  4332   001A24  6E64               	movwf	??_Ds1307Read^0,c
  4333   001A26  6A65               	clrf	(??_Ds1307Read+1)^0,c
  4334                           
  4335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4336                           ; Switch size 1, requested type "simple"
  4337                           ; Number of cases is 1, Range of values is 0 to 0
  4338                           ; switch strategies available:
  4339                           ; Name         Instructions Cycles
  4340                           ; simple_byte            4     3 (average)
  4341                           ;	Chosen strategy is simple_byte
  4342   001A28  5065               	movf	(??_Ds1307Read+1)^0,w,c
  4343   001A2A  0A00               	xorlw	0	; case 0
  4344   001A2C  B4D8               	btfsc	status,2,c
  4345   001A2E  EF1B  F00D         	goto	l10323
  4346   001A32  EF2A  F00D         	goto	l9283
  4347   001A36                     l10323:
  4348                           
  4349                           ; BSR set to: 1
  4350                           ; Switch size 1, requested type "simple"
  4351                           ; Number of cases is 3, Range of values is 0 to 2
  4352                           ; switch strategies available:
  4353                           ; Name         Instructions Cycles
  4354                           ; simple_byte           10     6 (average)
  4355                           ;	Chosen strategy is simple_byte
  4356   001A36  5064               	movf	??_Ds1307Read^0,w,c
  4357   001A38  0A00               	xorlw	0	; case 0
  4358   001A3A  B4D8               	btfsc	status,2,c
  4359   001A3C  EFD4  F00C         	goto	l9273
  4360   001A40  0A01               	xorlw	1	; case 1
  4361   001A42  B4D8               	btfsc	status,2,c
  4362   001A44  EFE8  F00C         	goto	l9275
  4363   001A48  0A03               	xorlw	3	; case 2
  4364   001A4A  B4D8               	btfsc	status,2,c
  4365   001A4C  EFFC  F00C         	goto	l9277
  4366   001A50  EF2A  F00D         	goto	l9283
  4367   001A54                     l9283:
  4368                           
  4369                           ; BSR set to: 1
  4370                           ;DS1307.c: 57:     I2cStop();
  4371   001A54  EC11  F013         	call	_I2cStop	;wreg free
  4372   001A58                     
  4373                           ;DS1307.c: 58:     return ds1307_date_datas;
  4374   001A58  0E18               	movlw	low Ds1307Read@ds1307_date_datas
  4375   001A5A  6E62               	movwf	?_Ds1307Read^0,c
  4376   001A5C  0E01               	movlw	high Ds1307Read@ds1307_date_datas
  4377   001A5E  6E63               	movwf	(?_Ds1307Read+1)^0,c
  4378   001A60  0012               	return		;funcret
  4379   001A62                     __end_of_Ds1307Read:
  4380                           	callstack 0
  4381                           
  4382 ;; *************** function _I2cWrite *****************
  4383 ;; Defined at:
  4384 ;;		line 45 in file "I2C.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  data            1    wreg     unsigned char 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  data            1   15[COMRAM] unsigned char 
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		wreg, cstack
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4398 ;;      Params:         0       0       0       0       0       0       0
  4399 ;;      Locals:         1       0       0       0       0       0       0
  4400 ;;      Temps:          0       0       0       0       0       0       0
  4401 ;;      Totals:         1       0       0       0       0       0       0
  4402 ;;Total ram usage:        1 bytes
  4403 ;; Hardware stack levels used: 1
  4404 ;; Hardware stack levels required when called: 7
  4405 ;; This function calls:
  4406 ;;		_I2cWait
  4407 ;; This function is called by:
  4408 ;;		_Ds1307Read
  4409 ;;		_Ds1307Write
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text15
  4414   00258A                     __ptext15:
  4415                           	callstack 0
  4416   00258A                     _I2cWrite:
  4417                           	callstack 20
  4418                           
  4419                           ;incstack = 0
  4420                           ;I2cWrite@data stored from wreg
  4421   00258A  6E60               	movwf	I2cWrite@data^0,c
  4422   00258C                     
  4423                           ;I2C.c: 46:     SSPBUF = data;
  4424   00258C  C060  FFC9         	movff	I2cWrite@data,4041	;volatile
  4425   002590                     l128:
  4426   002590  B0C7               	btfsc	199,0,c	;volatile
  4427   002592  EFCD  F012         	goto	u6151
  4428   002596  EFCF  F012         	goto	u6150
  4429   00259A                     u6151:
  4430   00259A  EFC8  F012         	goto	l128
  4431   00259E                     u6150:
  4432   00259E                     
  4433                           ;I2C.c: 48:     I2cWait();
  4434   00259E  ECA3  F012         	call	_I2cWait	;wreg free
  4435   0025A2  0012               	return		;funcret
  4436   0025A4                     __end_of_I2cWrite:
  4437                           	callstack 0
  4438                           
  4439 ;; *************** function _I2cStart *****************
  4440 ;; Defined at:
  4441 ;;		line 22 in file "I2C.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		None
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4455 ;;      Params:         0       0       0       0       0       0       0
  4456 ;;      Locals:         0       0       0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0
  4458 ;;      Totals:         0       0       0       0       0       0       0
  4459 ;;Total ram usage:        0 bytes
  4460 ;; Hardware stack levels used: 1
  4461 ;; Hardware stack levels required when called: 5
  4462 ;; This function calls:
  4463 ;;		Nothing
  4464 ;; This function is called by:
  4465 ;;		_Ds1307Read
  4466 ;;		_Ds1307Write
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text16
  4471   0025FE                     __ptext16:
  4472                           	callstack 0
  4473   0025FE                     _I2cStart:
  4474                           	callstack 22
  4475   0025FE                     
  4476                           ;I2C.c: 23:     SSPCON2bits.SEN = 1;
  4477   0025FE  80C5               	bsf	197,0,c	;volatile
  4478   002600                     l103:
  4479   002600  B0C5               	btfsc	197,0,c	;volatile
  4480   002602  EF05  F013         	goto	u6141
  4481   002606  EF07  F013         	goto	u6140
  4482   00260A                     u6141:
  4483   00260A  EF00  F013         	goto	l103
  4484   00260E                     u6140:
  4485   00260E  0012               	return		;funcret
  4486   002610                     __end_of_I2cStart:
  4487                           	callstack 0
  4488                           
  4489 ;; *************** function _I2cRestart *****************
  4490 ;; Defined at:
  4491 ;;		line 32 in file "I2C.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;		None
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;		None
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		None
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4505 ;;      Params:         0       0       0       0       0       0       0
  4506 ;;      Locals:         0       0       0       0       0       0       0
  4507 ;;      Temps:          0       0       0       0       0       0       0
  4508 ;;      Totals:         0       0       0       0       0       0       0
  4509 ;;Total ram usage:        0 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 5
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_Ds1307Read
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text17
  4520   002610                     __ptext17:
  4521                           	callstack 0
  4522   002610                     _I2cRestart:
  4523                           	callstack 24
  4524   002610                     
  4525                           ;I2C.c: 33:     SSPCON2bits.RSEN = 1;
  4526   002610  82C5               	bsf	197,1,c	;volatile
  4527   002612                     l115:
  4528   002612  B2C5               	btfsc	197,1,c	;volatile
  4529   002614  EF0E  F013         	goto	u6211
  4530   002618  EF10  F013         	goto	u6210
  4531   00261C                     u6211:
  4532   00261C  EF09  F013         	goto	l115
  4533   002620                     u6210:
  4534   002620  0012               	return		;funcret
  4535   002622                     __end_of_I2cRestart:
  4536                           	callstack 0
  4537                           
  4538 ;; *************** function _I2cRead *****************
  4539 ;; Defined at:
  4540 ;;		line 51 in file "I2C.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  ack             1    wreg     unsigned char 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  ack             1   15[COMRAM] unsigned char 
  4545 ;;  receive         1   16[COMRAM] unsigned char 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      unsigned char 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4555 ;;      Params:         0       0       0       0       0       0       0
  4556 ;;      Locals:         2       0       0       0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0
  4558 ;;      Totals:         2       0       0       0       0       0       0
  4559 ;;Total ram usage:        2 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 7
  4562 ;; This function calls:
  4563 ;;		_I2cWait
  4564 ;; This function is called by:
  4565 ;;		_Ds1307Read
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text18
  4570   00248E                     __ptext18:
  4571                           	callstack 0
  4572   00248E                     _I2cRead:
  4573                           	callstack 22
  4574                           
  4575                           ;incstack = 0
  4576                           ;I2cRead@ack stored from wreg
  4577   00248E  6E60               	movwf	I2cRead@ack^0,c
  4578   002490                     
  4579                           ;I2C.c: 53:     SSPCON2bits.RCEN = 1;
  4580   002490  86C5               	bsf	197,3,c	;volatile
  4581   002492                     l134:
  4582   002492  A0C7               	btfss	199,0,c	;volatile
  4583   002494  EF4E  F012         	goto	u6221
  4584   002498  EF50  F012         	goto	u6220
  4585   00249C                     u6221:
  4586   00249C  EF49  F012         	goto	l134
  4587   0024A0                     u6220:
  4588   0024A0                     
  4589                           ;I2C.c: 55:     receive = SSPBUF;
  4590   0024A0  CFC9 F061          	movff	4041,I2cRead@receive	;volatile
  4591   0024A4                     
  4592                           ;I2C.c: 56:     I2cWait();
  4593   0024A4  ECA3  F012         	call	_I2cWait	;wreg free
  4594   0024A8                     
  4595                           ;I2C.c: 57:     SSPCON2bits.ACKDT = ack;
  4596   0024A8  B060               	btfsc	I2cRead@ack^0,0,c
  4597   0024AA  D002               	bra	u6235
  4598   0024AC  9AC5               	bcf	197,5,c	;volatile
  4599   0024AE  D001               	bra	u6236
  4600   0024B0                     u6235:
  4601   0024B0  8AC5               	bsf	197,5,c	;volatile
  4602   0024B2                     u6236:
  4603   0024B2                     
  4604                           ;I2C.c: 58:     SSPCON2bits.ACKEN=1;
  4605   0024B2  88C5               	bsf	197,4,c	;volatile
  4606   0024B4                     l137:
  4607   0024B4  B8C5               	btfsc	197,4,c	;volatile
  4608   0024B6  EF5F  F012         	goto	u6241
  4609   0024BA  EF61  F012         	goto	u6240
  4610   0024BE                     u6241:
  4611   0024BE  EF5A  F012         	goto	l137
  4612   0024C2                     u6240:
  4613   0024C2                     
  4614                           ;I2C.c: 60:     return receive;
  4615   0024C2  5061               	movf	I2cRead@receive^0,w,c
  4616   0024C4  0012               	return		;funcret
  4617   0024C6                     __end_of_I2cRead:
  4618                           	callstack 0
  4619                           
  4620 ;; *************** function _I2cWait *****************
  4621 ;; Defined at:
  4622 ;;		line 37 in file "I2C.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;		None
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;		None
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      void 
  4629 ;; Registers used:
  4630 ;;		cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4636 ;;      Params:         0       0       0       0       0       0       0
  4637 ;;      Locals:         0       0       0       0       0       0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0
  4639 ;;      Totals:         0       0       0       0       0       0       0
  4640 ;;Total ram usage:        0 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; Hardware stack levels required when called: 6
  4643 ;; This function calls:
  4644 ;;		_I2cStop
  4645 ;; This function is called by:
  4646 ;;		_I2cWrite
  4647 ;;		_I2cRead
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text19
  4652   002546                     __ptext19:
  4653                           	callstack 0
  4654   002546                     _I2cWait:
  4655                           	callstack 20
  4656   002546                     l121:
  4657                           
  4658                           ;I2C.c: 38:  while(SSPSTATbits.R_NOT_W == 1)
  4659   002546  B4C7               	btfsc	199,2,c	;volatile
  4660   002548  EFA8  F012         	goto	u6121
  4661   00254C  EFAA  F012         	goto	u6120
  4662   002550                     u6121:
  4663   002550  EFA3  F012         	goto	l121
  4664   002554                     u6120:
  4665   002554                     
  4666                           ;I2C.c: 40:  if(SSPCON2bits.ACKSTAT == 1) {
  4667   002554  ACC5               	btfss	197,6,c	;volatile
  4668   002556  EFAF  F012         	goto	u6131
  4669   00255A  EFB1  F012         	goto	u6130
  4670   00255E                     u6131:
  4671   00255E  EFB3  F012         	goto	l125
  4672   002562                     u6130:
  4673   002562                     
  4674                           ;I2C.c: 41:   I2cStop();
  4675   002562  EC11  F013         	call	_I2cStop	;wreg free
  4676   002566                     l125:
  4677   002566  0012               	return		;funcret
  4678   002568                     __end_of_I2cWait:
  4679                           	callstack 0
  4680                           
  4681 ;; *************** function _I2cStop *****************
  4682 ;; Defined at:
  4683 ;;		line 27 in file "I2C.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		None
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4697 ;;      Params:         0       0       0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0
  4700 ;;      Totals:         0       0       0       0       0       0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used: 1
  4703 ;; Hardware stack levels required when called: 5
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_Ds1307Read
  4708 ;;		_Ds1307Write
  4709 ;;		_I2cWait
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text20
  4714   002622                     __ptext20:
  4715                           	callstack 0
  4716   002622                     _I2cStop:
  4717                           	callstack 20
  4718   002622                     
  4719                           ;I2C.c: 28:     SSPCON2bits.PEN = 1;
  4720   002622  84C5               	bsf	197,2,c	;volatile
  4721   002624                     l109:
  4722   002624  B4C5               	btfsc	197,2,c	;volatile
  4723   002626  EF17  F013         	goto	u6111
  4724   00262A  EF19  F013         	goto	u6110
  4725   00262E                     u6111:
  4726   00262E  EF12  F013         	goto	l109
  4727   002632                     u6110:
  4728   002632  0012               	return		;funcret
  4729   002634                     __end_of_I2cStop:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _DeviceInit *****************
  4733 ;; Defined at:
  4734 ;;		line 76 in file "Main.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;		None
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;		None
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4748 ;;      Params:         0       0       0       0       0       0       0
  4749 ;;      Locals:         0       0       0       0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0
  4751 ;;      Totals:         0       0       0       0       0       0       0
  4752 ;;Total ram usage:        0 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; Hardware stack levels required when called: 7
  4755 ;; This function calls:
  4756 ;;		_DetectStatus
  4757 ;;		_Ds1307Init
  4758 ;;		_EnableAllInterrupts
  4759 ;;		_InitValue
  4760 ;;		_Open1USART
  4761 ;;		_OpenButtons
  4762 ;;		_OpenCounter
  4763 ;;		_OpenDisplay
  4764 ;;		_OpenTimer0
  4765 ;;		_OscillatorInit
  4766 ;;		_StartTimer0
  4767 ;;		_WriteTimer0
  4768 ;; This function is called by:
  4769 ;;		_main
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text21
  4774   00231C                     __ptext21:
  4775                           	callstack 0
  4776   00231C                     _DeviceInit:
  4777                           	callstack 23
  4778   00231C                     
  4779                           ;Main.c: 78:     OscillatorInit();
  4780   00231C  EC35  F013         	call	_OscillatorInit	;wreg free
  4781   002320                     
  4782                           ;Main.c: 80:     ADCON0 = 0x00; ADCON1 = 0x0F;
  4783   002320  0E00               	movlw	0
  4784   002322  6EC2               	movwf	194,c	;volatile
  4785   002324  0E0F               	movlw	15
  4786   002326  6EC1               	movwf	193,c	;volatile
  4787                           
  4788                           ;Main.c: 81:     EnableAllInterrupts();
  4789   002328  EC4F  F013         	call	_EnableAllInterrupts	;wreg free
  4790   00232C                     
  4791                           ;Main.c: 83:     DetectStatus();
  4792   00232C  ECE1  F010         	call	_DetectStatus	;wreg free
  4793   002330                     
  4794                           ;Main.c: 85:     OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110010 );
  4795   002330  0E92               	movlw	146
  4796   002332  EC7A  F012         	call	_OpenTimer0
  4797   002336                     
  4798                           ;Main.c: 86:     WriteTimer0( 65285 ); StartTimer0();
  4799   002336  0EFF               	movlw	255
  4800   002338  6E61               	movwf	(WriteTimer0@timer0+1)^0,c
  4801   00233A  0E05               	movlw	5
  4802   00233C  6E60               	movwf	WriteTimer0@timer0^0,c
  4803   00233E  EC1A  F013         	call	_WriteTimer0	;wreg free
  4804   002342  EC4D  F013         	call	_StartTimer0	;wreg free
  4805   002346                     
  4806                           ;Main.c: 88:     OpenCounter();
  4807   002346  EC04  F012         	call	_OpenCounter	;wreg free
  4808   00234A                     
  4809                           ;Main.c: 89:     OpenDisplay();
  4810   00234A  EC5B  F011         	call	_OpenDisplay	;wreg free
  4811   00234E                     
  4812                           ;Main.c: 90:     OpenButtons();
  4813   00234E  EC24  F011         	call	_OpenButtons	;wreg free
  4814   002352                     
  4815                           ;Main.c: 91:     Ds1307Init();
  4816   002352  EC3C  F013         	call	_Ds1307Init	;wreg free
  4817   002356                     
  4818                           ;Main.c: 96:     InitValue();
  4819   002356  EC63  F012         	call	_InitValue	;wreg free
  4820   00235A                     
  4821                           ;Main.c: 98:     Open1USART( 0b01111111 &
  4822   00235A  0E00               	movlw	0
  4823   00235C  6E61               	movwf	(Open1USART@spbrg+1)^0,c
  4824   00235E  0E67               	movlw	103
  4825   002360  6E60               	movwf	Open1USART@spbrg^0,c
  4826   002362  0E3C               	movlw	60
  4827   002364  ECF5  F00E         	call	_Open1USART
  4828   002368                     
  4829                           ;Main.c: 106:     blink_enable_flg = 1;
  4830   002368  0E01               	movlw	1
  4831   00236A  6E2F               	movwf	_blink_enable_flg^0,c
  4832   00236C                     
  4833                           ;Main.c: 107:     set_mode_release_cnt = 0;
  4834   00236C  0E00               	movlw	0
  4835   00236E  6E16               	movwf	(_set_mode_release_cnt+1)^0,c
  4836   002370  0E00               	movlw	0
  4837   002372  6E15               	movwf	_set_mode_release_cnt^0,c
  4838   002374  0012               	return		;funcret
  4839   002376                     __end_of_DeviceInit:
  4840                           	callstack 0
  4841                           
  4842 ;; *************** function _WriteTimer0 *****************
  4843 ;; Defined at:
  4844 ;;		line 37 in file "Timers.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  timer0          2   15[COMRAM] unsigned int 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  timer           2   17[COMRAM] struct Timers
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		None
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4858 ;;      Params:         2       0       0       0       0       0       0
  4859 ;;      Locals:         2       0       0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0
  4861 ;;      Totals:         4       0       0       0       0       0       0
  4862 ;;Total ram usage:        4 bytes
  4863 ;; Hardware stack levels used: 1
  4864 ;; Hardware stack levels required when called: 5
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_DeviceInit
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text22
  4873   002634                     __ptext22:
  4874                           	callstack 0
  4875   002634                     _WriteTimer0:
  4876                           	callstack 24
  4877   002634                     
  4878                           ;Timers.c: 37: void WriteTimer0(unsigned int timer0);Timers.c: 38: {;Timers.c: 39:     u
      +                          nion Timers timer;;Timers.c: 41:     timer.lt = timer0;
  4879   002634  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4880   002638  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4881                           
  4882                           ;Timers.c: 43:     TMR0H = timer.bt[1];
  4883   00263C  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4884                           
  4885                           ;Timers.c: 44:     TMR0L = timer.bt[0];
  4886   002640  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4887   002644  0012               	return		;funcret
  4888   002646                     __end_of_WriteTimer0:
  4889                           	callstack 0
  4890                           
  4891 ;; *************** function _StartTimer0 *****************
  4892 ;; Defined at:
  4893 ;;		line 47 in file "Timers.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;		None
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		None
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4907 ;;      Params:         0       0       0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0
  4910 ;;      Totals:         0       0       0       0       0       0       0
  4911 ;;Total ram usage:        0 bytes
  4912 ;; Hardware stack levels used: 1
  4913 ;; Hardware stack levels required when called: 5
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_DeviceInit
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text23
  4922   00269A                     __ptext23:
  4923                           	callstack 0
  4924   00269A                     _StartTimer0:
  4925                           	callstack 24
  4926   00269A                     
  4927                           ;Timers.c: 48:     T0CONbits.TMR0ON = 1;
  4928   00269A  8ED5               	bsf	213,7,c	;volatile
  4929   00269C  0012               	return		;funcret
  4930   00269E                     __end_of_StartTimer0:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function _OscillatorInit *****************
  4934 ;; Defined at:
  4935 ;;		line 11 in file "Config.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		None
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4949 ;;      Params:         0       0       0       0       0       0       0
  4950 ;;      Locals:         0       0       0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0
  4952 ;;      Totals:         0       0       0       0       0       0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used: 1
  4955 ;; Hardware stack levels required when called: 5
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_DeviceInit
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text24
  4964   00266A                     __ptext24:
  4965                           	callstack 0
  4966   00266A                     _OscillatorInit:
  4967                           	callstack 24
  4968   00266A                     
  4969                           ;Config.c: 12:     OSCCONbits.SCS0 = 1;
  4970   00266A  80D3               	bsf	211,0,c	;volatile
  4971                           
  4972                           ;Config.c: 13:     OSCCONbits.SCS1 = 1;
  4973   00266C  82D3               	bsf	211,1,c	;volatile
  4974                           
  4975                           ;Config.c: 14:     OSCCONbits.IRCF0 = 1;
  4976   00266E  88D3               	bsf	211,4,c	;volatile
  4977                           
  4978                           ;Config.c: 15:     OSCCONbits.IRCF1 = 1;
  4979   002670  8AD3               	bsf	211,5,c	;volatile
  4980                           
  4981                           ;Config.c: 16:     OSCCONbits.IRCF2 = 1;
  4982   002672  8CD3               	bsf	211,6,c	;volatile
  4983                           
  4984                           ;Config.c: 17:     OSCTUNEbits.PLLEN = 1;
  4985   002674  8C9B               	bsf	155,6,c	;volatile
  4986   002676  0012               	return		;funcret
  4987   002678                     __end_of_OscillatorInit:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _OpenTimer0 *****************
  4991 ;; Defined at:
  4992 ;;		line 13 in file "Timers.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  config          1    wreg     unsigned char 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  config          1   15[COMRAM] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      void 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5006 ;;      Params:         0       0       0       0       0       0       0
  5007 ;;      Locals:         1       0       0       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0
  5009 ;;      Totals:         1       0       0       0       0       0       0
  5010 ;;Total ram usage:        1 bytes
  5011 ;; Hardware stack levels used: 1
  5012 ;; Hardware stack levels required when called: 5
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_DeviceInit
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text25
  5021   0024F4                     __ptext25:
  5022                           	callstack 0
  5023   0024F4                     _OpenTimer0:
  5024                           	callstack 24
  5025                           
  5026                           ;incstack = 0
  5027                           ;OpenTimer0@config stored from wreg
  5028   0024F4  6E60               	movwf	OpenTimer0@config^0,c
  5029   0024F6                     
  5030                           ;Timers.c: 13: void OpenTimer0(unsigned char config);Timers.c: 14: {;Timers.c: 15:     T
      +                          0CON = (0x7f & config);
  5031   0024F6  5060               	movf	OpenTimer0@config^0,w,c
  5032   0024F8  0B7F               	andlw	127
  5033   0024FA  6ED5               	movwf	213,c	;volatile
  5034   0024FC                     
  5035                           ;Timers.c: 16:     TMR0H = 0;
  5036   0024FC  0E00               	movlw	0
  5037   0024FE  6ED7               	movwf	215,c	;volatile
  5038   002500                     
  5039                           ;Timers.c: 17:     TMR0L = 0;
  5040   002500  0E00               	movlw	0
  5041   002502  6ED6               	movwf	214,c	;volatile
  5042   002504                     
  5043                           ;Timers.c: 18:     INTCONbits.TMR0IF = 0;
  5044   002504  94F2               	bcf	242,2,c	;volatile
  5045   002506                     
  5046                           ;Timers.c: 20:     if(config&0x80)
  5047   002506  AE60               	btfss	OpenTimer0@config^0,7,c
  5048   002508  EF88  F012         	goto	u3561
  5049   00250C  EF8A  F012         	goto	u3560
  5050   002510                     u3561:
  5051   002510  EF8D  F012         	goto	l439
  5052   002514                     u3560:
  5053   002514                     
  5054                           ;Timers.c: 21:         INTCONbits.TMR0IE = 1;
  5055   002514  8AF2               	bsf	242,5,c	;volatile
  5056   002516  EF8E  F012         	goto	l441
  5057   00251A                     l439:
  5058                           
  5059                           ;Timers.c: 23:         INTCONbits.TMR0IE = 0;
  5060   00251A  9AF2               	bcf	242,5,c	;volatile
  5061   00251C                     l441:
  5062   00251C  0012               	return		;funcret
  5063   00251E                     __end_of_OpenTimer0:
  5064                           	callstack 0
  5065                           
  5066 ;; *************** function _OpenDisplay *****************
  5067 ;; Defined at:
  5068 ;;		line 9 in file "Display.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;		None
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  i               1   15[COMRAM] unsigned char 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5082 ;;      Params:         0       0       0       0       0       0       0
  5083 ;;      Locals:         1       0       0       0       0       0       0
  5084 ;;      Temps:          0       0       0       0       0       0       0
  5085 ;;      Totals:         1       0       0       0       0       0       0
  5086 ;;Total ram usage:        1 bytes
  5087 ;; Hardware stack levels used: 1
  5088 ;; Hardware stack levels required when called: 6
  5089 ;; This function calls:
  5090 ;;		_TLC5917Init
  5091 ;; This function is called by:
  5092 ;;		_DeviceInit
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           	psect	text26
  5097   0022B6                     __ptext26:
  5098                           	callstack 0
  5099   0022B6                     _OpenDisplay:
  5100                           	callstack 23
  5101   0022B6                     
  5102                           ;Display.c: 12:     TRISCbits.TRISC2 = 0;
  5103   0022B6  9494               	bcf	148,2,c	;volatile
  5104                           
  5105                           ;Display.c: 13:     TRISCbits.TRISC1 = 0;
  5106   0022B8  9294               	bcf	148,1,c	;volatile
  5107                           
  5108                           ;Display.c: 14:     TRISCbits.TRISC0 = 0;
  5109   0022BA  9094               	bcf	148,0,c	;volatile
  5110                           
  5111                           ;Display.c: 15:     TRISCbits.TRISC5 = 0;
  5112   0022BC  9A94               	bcf	148,5,c	;volatile
  5113                           
  5114                           ;Display.c: 16:     TRISBbits.TRISB1 = 0;
  5115   0022BE  9293               	bcf	147,1,c	;volatile
  5116                           
  5117                           ;Display.c: 17:     TRISBbits.TRISB5 = 0;
  5118   0022C0  9A93               	bcf	147,5,c	;volatile
  5119                           
  5120                           ;Display.c: 18:     TRISDbits.TRISD7 = 0;
  5121   0022C2  9E95               	bcf	149,7,c	;volatile
  5122                           
  5123                           ;Display.c: 19:     TRISBbits.TRISB0 = 0;
  5124   0022C4  9093               	bcf	147,0,c	;volatile
  5125                           
  5126                           ;Display.c: 21:     LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATCbits.LATC5 = 
      +                          LATBbits.LATB1 = LATBbits.LATB5 = LATDbits.LATD7 = LATBbits.LATB0 = 1;
  5127   0022C6  808A               	bsf	138,0,c	;volatile
  5128   0022C8  8E8C               	bsf	140,7,c	;volatile
  5129   0022CA  8A8A               	bsf	138,5,c	;volatile
  5130   0022CC  828A               	bsf	138,1,c	;volatile
  5131   0022CE  8A8B               	bsf	139,5,c	;volatile
  5132   0022D0  808B               	bsf	139,0,c	;volatile
  5133   0022D2  828B               	bsf	139,1,c	;volatile
  5134   0022D4  848B               	bsf	139,2,c	;volatile
  5135   0022D6                     
  5136                           ;Display.c: 23:     TLC5917Init();
  5137   0022D6  EC23  F013         	call	_TLC5917Init	;wreg free
  5138   0022DA                     
  5139                           ;Display.c: 25:     for( unsigned char i = 0; i < 7 + 1; i++ ){
  5140   0022DA  0E00               	movlw	0
  5141   0022DC  6E60               	movwf	OpenDisplay@i^0,c
  5142   0022DE                     l5823:
  5143                           
  5144                           ;Display.c: 26:         blink_pos[ i ] = 0;
  5145   0022DE  5060               	movf	OpenDisplay@i^0,w,c
  5146   0022E0  0F80               	addlw	low _blink_pos
  5147   0022E2  6ED9               	movwf	fsr2l,c
  5148   0022E4  6ADA               	clrf	fsr2h,c
  5149   0022E6  6ADF               	clrf	indf2,c
  5150                           
  5151                           ;Display.c: 27:         display_datas[ i ] = 0xff;
  5152   0022E8  5060               	movf	OpenDisplay@i^0,w,c
  5153   0022EA  0F88               	addlw	low _display_datas
  5154   0022EC  6ED9               	movwf	fsr2l,c
  5155   0022EE  6ADA               	clrf	fsr2h,c
  5156   0022F0  0EFF               	movlw	255
  5157   0022F2  6EDF               	movwf	indf2,c
  5158   0022F4                     
  5159                           ;Display.c: 28:     }
  5160   0022F4  2A60               	incf	OpenDisplay@i^0,f,c
  5161   0022F6  0E07               	movlw	7
  5162   0022F8  6460               	cpfsgt	OpenDisplay@i^0,c
  5163   0022FA  EF81  F011         	goto	u3571
  5164   0022FE  EF83  F011         	goto	u3570
  5165   002302                     u3571:
  5166   002302  EF6F  F011         	goto	l5823
  5167   002306                     u3570:
  5168   002306                     
  5169                           ;Display.c: 30:     display_cnt = 0; blink_cnt = 0; blink_enable_flg = 0;
  5170   002306  0E00               	movlw	0
  5171   002308  6E2E               	movwf	_display_cnt^0,c
  5172   00230A  0E00               	movlw	0
  5173   00230C  6E2D               	movwf	_blink_cnt^0,c
  5174   00230E  0E00               	movlw	0
  5175   002310  6E2F               	movwf	_blink_enable_flg^0,c
  5176                           
  5177                           ;Display.c: 31:     BLINK_TIME = 150;
  5178   002312  0E00               	movlw	0
  5179   002314  6E14               	movwf	(_BLINK_TIME+1)^0,c
  5180   002316  0E96               	movlw	150
  5181   002318  6E13               	movwf	_BLINK_TIME^0,c
  5182   00231A  0012               	return		;funcret
  5183   00231C                     __end_of_OpenDisplay:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function _TLC5917Init *****************
  5187 ;; Defined at:
  5188 ;;		line 10 in file "TLC5917.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		None
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5202 ;;      Params:         0       0       0       0       0       0       0
  5203 ;;      Locals:         0       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0
  5205 ;;      Totals:         0       0       0       0       0       0       0
  5206 ;;Total ram usage:        0 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 5
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_OpenDisplay
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text27
  5217   002646                     __ptext27:
  5218                           	callstack 0
  5219   002646                     _TLC5917Init:
  5220                           	callstack 23
  5221   002646                     
  5222                           ;TLC5917.c: 12:     TRISAbits.TRISA0 = 0;
  5223   002646  9092               	bcf	146,0,c	;volatile
  5224                           
  5225                           ;TLC5917.c: 13:     TRISAbits.TRISA1 = 0;
  5226   002648  9292               	bcf	146,1,c	;volatile
  5227                           
  5228                           ;TLC5917.c: 14:     TRISAbits.TRISA5 = 0;
  5229   00264A  9A92               	bcf	146,5,c	;volatile
  5230                           
  5231                           ;TLC5917.c: 15:     TRISAbits.TRISA3 = 0;
  5232   00264C  9692               	bcf	146,3,c	;volatile
  5233                           
  5234                           ;TLC5917.c: 17:     PORTAbits.RA3 = 1;
  5235   00264E  8680               	bsf	128,3,c	;volatile
  5236                           
  5237                           ;TLC5917.c: 18:     PORTAbits.RA5 = 0;
  5238   002650  9A80               	bcf	128,5,c	;volatile
  5239                           
  5240                           ;TLC5917.c: 19:     PORTAbits.RA1 = 0;
  5241   002652  9280               	bcf	128,1,c	;volatile
  5242                           
  5243                           ;TLC5917.c: 20:     PORTAbits.RA0 = 0;
  5244   002654  9080               	bcf	128,0,c	;volatile
  5245   002656  0012               	return		;funcret
  5246   002658                     __end_of_TLC5917Init:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _OpenCounter *****************
  5250 ;; Defined at:
  5251 ;;		line 6 in file "Counter.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5265 ;;      Params:         0       0       0       0       0       0       0
  5266 ;;      Locals:         0       0       0       0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0
  5268 ;;      Totals:         0       0       0       0       0       0       0
  5269 ;;Total ram usage:        0 bytes
  5270 ;; Hardware stack levels used: 1
  5271 ;; Hardware stack levels required when called: 5
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_DeviceInit
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text28
  5280   002408                     __ptext28:
  5281                           	callstack 0
  5282   002408                     _OpenCounter:
  5283                           	callstack 24
  5284   002408                     
  5285                           ;Counter.c: 8:     counter_down_hour = 0;
  5286   002408  0E00               	movlw	0
  5287   00240A  6E3E               	movwf	_counter_down_hour^0,c
  5288                           
  5289                           ;Counter.c: 9:     counter_down_minute = 0;
  5290   00240C  0E00               	movlw	0
  5291   00240E  6E3D               	movwf	_counter_down_minute^0,c
  5292                           
  5293                           ;Counter.c: 10:     counter_down_second = 0;
  5294   002410  0E00               	movlw	0
  5295   002412  6E3C               	movwf	_counter_down_second^0,c
  5296                           
  5297                           ;Counter.c: 12:     counter_down_set_hour = 0;
  5298   002414  0E00               	movlw	0
  5299   002416  6E3B               	movwf	_counter_down_set_hour^0,c
  5300                           
  5301                           ;Counter.c: 13:     counter_down_set_minute = 0;
  5302   002418  0E00               	movlw	0
  5303   00241A  6E3A               	movwf	_counter_down_set_minute^0,c
  5304                           
  5305                           ;Counter.c: 14:     counter_down_set_second = 0;
  5306   00241C  0E00               	movlw	0
  5307   00241E  6E39               	movwf	_counter_down_set_second^0,c
  5308                           
  5309                           ;Counter.c: 16:     counter_up_hour = 0;
  5310   002420  0E00               	movlw	0
  5311   002422  6E38               	movwf	_counter_up_hour^0,c
  5312                           
  5313                           ;Counter.c: 17:     counter_up_minute = 0;
  5314   002424  0E00               	movlw	0
  5315   002426  6E37               	movwf	_counter_up_minute^0,c
  5316                           
  5317                           ;Counter.c: 18:     counter_up_second = 0;
  5318   002428  0E00               	movlw	0
  5319   00242A  6E36               	movwf	_counter_up_second^0,c
  5320                           
  5321                           ;Counter.c: 20:     counter_enable_flg = 0;
  5322   00242C  0E00               	movlw	0
  5323   00242E  6E35               	movwf	_counter_enable_flg^0,c
  5324                           
  5325                           ;Counter.c: 21:     counter_skip_flg = 0;
  5326   002430  0E00               	movlw	0
  5327   002432  6E33               	movwf	_counter_skip_flg^0,c
  5328                           
  5329                           ;Counter.c: 22:     counter_direction_flg = 1;
  5330   002434  0E01               	movlw	1
  5331   002436  6E34               	movwf	_counter_direction_flg^0,c
  5332                           
  5333                           ;Counter.c: 23:     counter_seting_flg = 0;
  5334   002438  0E00               	movlw	0
  5335   00243A  6E32               	movwf	_counter_seting_flg^0,c
  5336                           
  5337                           ;Counter.c: 24:     counter_down_comp_flg = 0;
  5338   00243C  0E00               	movlw	0
  5339   00243E  6E31               	movwf	_counter_down_comp_flg^0,c
  5340                           
  5341                           ;Counter.c: 26:     counter_down_comp_cnt = 0;
  5342   002440  0E00               	movlw	0
  5343   002442  6E30               	movwf	_counter_down_comp_cnt^0,c
  5344   002444                     
  5345                           ;Counter.c: 28:     TRISBbits.TRISB2 = 1;
  5346   002444  8493               	bsf	147,2,c	;volatile
  5347   002446                     
  5348                           ;Counter.c: 29:     INTCON3bits.INT2IP = 0;
  5349   002446  9EF0               	bcf	240,7,c	;volatile
  5350   002448                     
  5351                           ;Counter.c: 30:     INTCON3bits.INT2IF = 0;
  5352   002448  92F0               	bcf	240,1,c	;volatile
  5353   00244A                     
  5354                           ;Counter.c: 31:     INTCON3bits.INT2IE = 1;
  5355   00244A  88F0               	bsf	240,4,c	;volatile
  5356   00244C                     
  5357                           ;Counter.c: 32:     INTCON2bits.INTEDG2 = 1;
  5358   00244C  88F1               	bsf	241,4,c	;volatile
  5359   00244E  0012               	return		;funcret
  5360   002450                     __end_of_OpenCounter:
  5361                           	callstack 0
  5362                           
  5363 ;; *************** function _OpenButtons *****************
  5364 ;; Defined at:
  5365 ;;		line 10 in file "Buttons.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;		None
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5379 ;;      Params:         0       0       0       0       0       0       0
  5380 ;;      Locals:         0       0       0       0       0       0       0
  5381 ;;      Temps:          0       0       0       0       0       0       0
  5382 ;;      Totals:         0       0       0       0       0       0       0
  5383 ;;Total ram usage:        0 bytes
  5384 ;; Hardware stack levels used: 1
  5385 ;; Hardware stack levels required when called: 5
  5386 ;; This function calls:
  5387 ;;		Nothing
  5388 ;; This function is called by:
  5389 ;;		_DeviceInit
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text29
  5394   002248                     __ptext29:
  5395                           	callstack 0
  5396   002248                     _OpenButtons:
  5397                           	callstack 24
  5398   002248                     
  5399                           ;Buttons.c: 12:     TRISAbits.TRISA7 = 1;
  5400   002248  8E92               	bsf	146,7,c	;volatile
  5401                           
  5402                           ;Buttons.c: 13:     TRISAbits.TRISA4 = 1;
  5403   00224A  8892               	bsf	146,4,c	;volatile
  5404                           
  5405                           ;Buttons.c: 14:     TRISAbits.TRISA6 = 1;
  5406   00224C  8C92               	bsf	146,6,c	;volatile
  5407                           
  5408                           ;Buttons.c: 15:     TRISBbits.TRISB4 = 1;
  5409   00224E  8893               	bsf	147,4,c	;volatile
  5410                           
  5411                           ;Buttons.c: 16:     TRISDbits.TRISD6 = 1;
  5412   002250  8C95               	bsf	149,6,c	;volatile
  5413   002252                     
  5414                           ;Buttons.c: 18:     BTN_CLICK_STATE = 0; BTN_CLICK_EVENT = 0;
  5415   002252  0E00               	movlw	0
  5416   002254  6E2C               	movwf	_BTN_CLICK_STATE^0,c
  5417   002256  0E00               	movlw	0
  5418   002258  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  5419                           
  5420                           ;Buttons.c: 20:     hour_btn_pressed_cnt = 0; up_btn_pressed_cnt = 0; down_btn_pressed_c
      +                          nt = 0; sel_btn_pressed_cnt = 0; reset_btn_pressed_cnt = 0;
  5421   00225A  0E00               	movlw	0
  5422   00225C  6E12               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  5423   00225E  0E00               	movlw	0
  5424   002260  6E11               	movwf	_hour_btn_pressed_cnt^0,c
  5425   002262  0E00               	movlw	0
  5426   002264  6E10               	movwf	(_up_btn_pressed_cnt+1)^0,c
  5427   002266  0E00               	movlw	0
  5428   002268  6E0F               	movwf	_up_btn_pressed_cnt^0,c
  5429   00226A  0E00               	movlw	0
  5430   00226C  6E0E               	movwf	(_down_btn_pressed_cnt+1)^0,c
  5431   00226E  0E00               	movlw	0
  5432   002270  6E0D               	movwf	_down_btn_pressed_cnt^0,c
  5433   002272  0E00               	movlw	0
  5434   002274  6E0C               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  5435   002276  0E00               	movlw	0
  5436   002278  6E0B               	movwf	_sel_btn_pressed_cnt^0,c
  5437   00227A  0E00               	movlw	0
  5438   00227C  6E0A               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  5439   00227E  0E00               	movlw	0
  5440   002280  6E09               	movwf	_reset_btn_pressed_cnt^0,c
  5441                           
  5442                           ;Buttons.c: 21:     hour_btn_released_cnt = 0; up_btn_released_cnt = 0; down_btn_release
      +                          d_cnt = 0; sel_btn_released_cnt = 0; reset_btn_released_cnt = 0;
  5443   002282  0E00               	movlw	0
  5444   002284  6E08               	movwf	(_hour_btn_released_cnt+1)^0,c
  5445   002286  0E00               	movlw	0
  5446   002288  6E07               	movwf	_hour_btn_released_cnt^0,c
  5447   00228A  0E00               	movlw	0
  5448   00228C  6E06               	movwf	(_up_btn_released_cnt+1)^0,c
  5449   00228E  0E00               	movlw	0
  5450   002290  6E05               	movwf	_up_btn_released_cnt^0,c
  5451   002292  0E00               	movlw	0
  5452   002294  6E04               	movwf	(_down_btn_released_cnt+1)^0,c
  5453   002296  0E00               	movlw	0
  5454   002298  6E03               	movwf	_down_btn_released_cnt^0,c
  5455   00229A  0E00               	movlw	0
  5456   00229C  6E02               	movwf	(_sel_btn_released_cnt+1)^0,c
  5457   00229E  0E00               	movlw	0
  5458   0022A0  6E01               	movwf	_sel_btn_released_cnt^0,c
  5459   0022A2  0E00               	movlw	0
  5460   0022A4  0100               	movlb	0	; () banked
  5461   0022A6  6FC5               	movwf	(_reset_btn_released_cnt+1)& (0+255),b
  5462   0022A8  0E00               	movlw	0
  5463   0022AA  6FC4               	movwf	_reset_btn_released_cnt& (0+255),b
  5464                           
  5465                           ;Buttons.c: 23:     btn_press_verify_flg = 0; btn_long_press_verify_flg = 0;
  5466   0022AC  0E00               	movlw	0
  5467   0022AE  6E2A               	movwf	_btn_press_verify_flg^0,c
  5468   0022B0  0E00               	movlw	0
  5469   0022B2  6E29               	movwf	_btn_long_press_verify_flg^0,c
  5470   0022B4                     
  5471                           ; BSR set to: 0
  5472   0022B4  0012               	return		;funcret
  5473   0022B6                     __end_of_OpenButtons:
  5474                           	callstack 0
  5475                           
  5476 ;; *************** function _Open1USART *****************
  5477 ;; Defined at:
  5478 ;;		line 4 in file "Uart.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  config          1    wreg     unsigned char 
  5481 ;;  spbrg           2   15[COMRAM] unsigned int 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  config          1   17[COMRAM] unsigned char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      void 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5493 ;;      Params:         2       0       0       0       0       0       0
  5494 ;;      Locals:         1       0       0       0       0       0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0
  5496 ;;      Totals:         3       0       0       0       0       0       0
  5497 ;;Total ram usage:        3 bytes
  5498 ;; Hardware stack levels used: 1
  5499 ;; Hardware stack levels required when called: 5
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		_DeviceInit
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text30
  5508   001DEA                     __ptext30:
  5509                           	callstack 0
  5510   001DEA                     _Open1USART:
  5511                           	callstack 24
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;incstack = 0
  5515                           ;Open1USART@config stored from wreg
  5516   001DEA  6E62               	movwf	Open1USART@config^0,c
  5517   001DEC                     
  5518                           ;Uart.c: 5:     TXSTA1 = 0;
  5519   001DEC  0E00               	movlw	0
  5520   001DEE  6EAC               	movwf	172,c	;volatile
  5521                           
  5522                           ;Uart.c: 6:     RCSTA1 = 0;
  5523   001DF0  0E00               	movlw	0
  5524   001DF2  6EAB               	movwf	171,c	;volatile
  5525   001DF4                     
  5526                           ;Uart.c: 8:     if(config&0x01)
  5527   001DF4  A062               	btfss	Open1USART@config^0,0,c
  5528   001DF6  EFFF  F00E         	goto	u3601
  5529   001DFA  EF01  F00F         	goto	u3600
  5530   001DFE                     u3601:
  5531   001DFE  EF02  F00F         	goto	l5849
  5532   001E02                     u3600:
  5533   001E02                     
  5534                           ;Uart.c: 9:         TXSTA1bits.SYNC = 1;
  5535   001E02  88AC               	bsf	172,4,c	;volatile
  5536   001E04                     l5849:
  5537                           
  5538                           ;Uart.c: 11:     if(config&0x02)
  5539   001E04  A262               	btfss	Open1USART@config^0,1,c
  5540   001E06  EF07  F00F         	goto	u3611
  5541   001E0A  EF09  F00F         	goto	u3610
  5542   001E0E                     u3611:
  5543   001E0E  EF0B  F00F         	goto	l5853
  5544   001E12                     u3610:
  5545   001E12                     
  5546                           ;Uart.c: 12:     {;Uart.c: 13:         TXSTA1bits.TX9 = 1;
  5547   001E12  8CAC               	bsf	172,6,c	;volatile
  5548                           
  5549                           ;Uart.c: 14:         RCSTA1bits.RX9 = 1;
  5550   001E14  8CAB               	bsf	171,6,c	;volatile
  5551   001E16                     l5853:
  5552                           
  5553                           ;Uart.c: 17:     if(config&0x04)
  5554   001E16  A462               	btfss	Open1USART@config^0,2,c
  5555   001E18  EF10  F00F         	goto	u3621
  5556   001E1C  EF12  F00F         	goto	u3620
  5557   001E20                     u3621:
  5558   001E20  EF13  F00F         	goto	l5857
  5559   001E24                     u3620:
  5560   001E24                     
  5561                           ;Uart.c: 18:         TXSTA1bits.CSRC = 1;
  5562   001E24  8EAC               	bsf	172,7,c	;volatile
  5563   001E26                     l5857:
  5564                           
  5565                           ;Uart.c: 20:     if(config&0x08)
  5566   001E26  A662               	btfss	Open1USART@config^0,3,c
  5567   001E28  EF18  F00F         	goto	u3631
  5568   001E2C  EF1A  F00F         	goto	u3630
  5569   001E30                     u3631:
  5570   001E30  EF1D  F00F         	goto	l1678
  5571   001E34                     u3630:
  5572   001E34                     
  5573                           ;Uart.c: 21:         RCSTA1bits.CREN = 1;
  5574   001E34  88AB               	bsf	171,4,c	;volatile
  5575   001E36  EF1E  F00F         	goto	l5861
  5576   001E3A                     l1678:
  5577                           
  5578                           ;Uart.c: 23:         RCSTA1bits.SREN = 1;
  5579   001E3A  8AAB               	bsf	171,5,c	;volatile
  5580   001E3C                     l5861:
  5581                           
  5582                           ;Uart.c: 25:     if(config&0x10)
  5583   001E3C  A862               	btfss	Open1USART@config^0,4,c
  5584   001E3E  EF23  F00F         	goto	u3641
  5585   001E42  EF25  F00F         	goto	u3640
  5586   001E46                     u3641:
  5587   001E46  EF28  F00F         	goto	l1680
  5588   001E4A                     u3640:
  5589   001E4A                     
  5590                           ;Uart.c: 26:         TXSTA1bits.BRGH = 1;
  5591   001E4A  84AC               	bsf	172,2,c	;volatile
  5592   001E4C  EF29  F00F         	goto	l5865
  5593   001E50                     l1680:
  5594                           
  5595                           ;Uart.c: 28:         TXSTA1bits.BRGH = 0;
  5596   001E50  94AC               	bcf	172,2,c	;volatile
  5597   001E52                     l5865:
  5598                           
  5599                           ;Uart.c: 30:     if(config&0x40)
  5600   001E52  AC62               	btfss	Open1USART@config^0,6,c
  5601   001E54  EF2E  F00F         	goto	u3651
  5602   001E58  EF30  F00F         	goto	u3650
  5603   001E5C                     u3651:
  5604   001E5C  EF33  F00F         	goto	l1682
  5605   001E60                     u3650:
  5606   001E60                     
  5607                           ;Uart.c: 31:         PIE1bits.RC1IE = 1;
  5608   001E60  8A9D               	bsf	157,5,c	;volatile
  5609   001E62  EF34  F00F         	goto	l5869
  5610   001E66                     l1682:
  5611                           
  5612                           ;Uart.c: 33:         PIE1bits.RC1IE = 0;
  5613   001E66  9A9D               	bcf	157,5,c	;volatile
  5614   001E68                     l5869:
  5615                           
  5616                           ;Uart.c: 35:     if(config&0x80)
  5617   001E68  AE62               	btfss	Open1USART@config^0,7,c
  5618   001E6A  EF39  F00F         	goto	u3661
  5619   001E6E  EF3B  F00F         	goto	u3660
  5620   001E72                     u3661:
  5621   001E72  EF3E  F00F         	goto	l1684
  5622   001E76                     u3660:
  5623   001E76                     
  5624                           ;Uart.c: 36:         PIE1bits.TX1IE = 1;
  5625   001E76  889D               	bsf	157,4,c	;volatile
  5626   001E78  EF3F  F00F         	goto	l1685
  5627   001E7C                     l1684:
  5628                           
  5629                           ;Uart.c: 38:         PIE1bits.TX1IE = 0;
  5630   001E7C  989D               	bcf	157,4,c	;volatile
  5631   001E7E                     l1685:
  5632                           
  5633                           ;Uart.c: 40:     SPBRG1 = spbrg;
  5634   001E7E  C060  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  5635                           
  5636                           ;Uart.c: 42:     TXSTA1bits.TXEN = 1;
  5637   001E82  8AAC               	bsf	172,5,c	;volatile
  5638                           
  5639                           ;Uart.c: 43:     RCSTA1bits.SPEN = 1;
  5640   001E84  8EAB               	bsf	171,7,c	;volatile
  5641                           
  5642                           ;Uart.c: 44:     TRISCbits.TRISC6 = 0; TRISCbits.TRISC7 = 1;
  5643   001E86  9C94               	bcf	148,6,c	;volatile
  5644   001E88  8E94               	bsf	148,7,c	;volatile
  5645                           
  5646                           ;Uart.c: 45:     if(TXSTA1bits.SYNC && !TXSTA1bits.CSRC)
  5647   001E8A  A8AC               	btfss	172,4,c	;volatile
  5648   001E8C  EF4A  F00F         	goto	u3671
  5649   001E90  EF4C  F00F         	goto	u3670
  5650   001E94                     u3671:
  5651   001E94  EF54  F00F         	goto	l1687
  5652   001E98                     u3670:
  5653   001E98  BEAC               	btfsc	172,7,c	;volatile
  5654   001E9A  EF51  F00F         	goto	u3681
  5655   001E9E  EF53  F00F         	goto	u3680
  5656   001EA2                     u3681:
  5657   001EA2  EF54  F00F         	goto	l1687
  5658   001EA6                     u3680:
  5659   001EA6                     
  5660                           ;Uart.c: 46:         TRISCbits.TRISC6 = 1;
  5661   001EA6  8C94               	bsf	148,6,c	;volatile
  5662   001EA8                     l1687:
  5663   001EA8  0012               	return		;funcret
  5664   001EAA                     __end_of_Open1USART:
  5665                           	callstack 0
  5666                           
  5667 ;; *************** function _InitValue *****************
  5668 ;; Defined at:
  5669 ;;		line 154 in file "Main.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;		None
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5683 ;;      Params:         0       0       0       0       0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0
  5686 ;;      Totals:         0       0       0       0       0       0       0
  5687 ;;Total ram usage:        0 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; Hardware stack levels required when called: 5
  5690 ;; This function calls:
  5691 ;;		Nothing
  5692 ;; This function is called by:
  5693 ;;		_DeviceInit
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           	psect	text31
  5698   0024C6                     __ptext31:
  5699                           	callstack 0
  5700   0024C6                     _InitValue:
  5701                           	callstack 24
  5702   0024C6                     
  5703                           ;Main.c: 155:     if( SYSTEM_STATE_FLG == 100 ){
  5704   0024C6  0E64               	movlw	100
  5705   0024C8  1845               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  5706   0024CA  A4D8               	btfss	status,2,c
  5707   0024CC  EF6A  F012         	goto	u3581
  5708   0024D0  EF6C  F012         	goto	u3580
  5709   0024D4                     u3581:
  5710   0024D4  EF6E  F012         	goto	l5839
  5711   0024D8                     u3580:
  5712   0024D8  EF79  F012         	goto	l360
  5713   0024DC                     l5839:
  5714   0024DC  0EC8               	movlw	200
  5715   0024DE  1845               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  5716   0024E0  A4D8               	btfss	status,2,c
  5717   0024E2  EF75  F012         	goto	u3591
  5718   0024E6  EF77  F012         	goto	u3590
  5719   0024EA                     u3591:
  5720   0024EA  EF79  F012         	goto	l360
  5721   0024EE                     u3590:
  5722   0024EE                     
  5723                           ;Main.c: 158:         counter_skip_flg = 0;
  5724   0024EE  0E00               	movlw	0
  5725   0024F0  6E33               	movwf	_counter_skip_flg^0,c
  5726   0024F2                     l360:
  5727   0024F2  0012               	return		;funcret
  5728   0024F4                     __end_of_InitValue:
  5729                           	callstack 0
  5730                           
  5731 ;; *************** function _EnableAllInterrupts *****************
  5732 ;; Defined at:
  5733 ;;		line 55 in file "Interrupts.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;		None
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;		None
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  1    wreg      void 
  5740 ;; Registers used:
  5741 ;;		None
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5747 ;;      Params:         0       0       0       0       0       0       0
  5748 ;;      Locals:         0       0       0       0       0       0       0
  5749 ;;      Temps:          0       0       0       0       0       0       0
  5750 ;;      Totals:         0       0       0       0       0       0       0
  5751 ;;Total ram usage:        0 bytes
  5752 ;; Hardware stack levels used: 1
  5753 ;; Hardware stack levels required when called: 5
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_DeviceInit
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text32
  5762   00269E                     __ptext32:
  5763                           	callstack 0
  5764   00269E                     _EnableAllInterrupts:
  5765                           	callstack 24
  5766   00269E                     
  5767                           ;Interrupts.c: 56:     (INTCONbits.GIE = 1);
  5768   00269E  8EF2               	bsf	242,7,c	;volatile
  5769   0026A0  0012               	return		;funcret
  5770   0026A2                     __end_of_EnableAllInterrupts:
  5771                           	callstack 0
  5772                           
  5773 ;; *************** function _Ds1307Init *****************
  5774 ;; Defined at:
  5775 ;;		line 11 in file "DS1307.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;		None
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      void 
  5782 ;; Registers used:
  5783 ;;		wreg, status,2, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5789 ;;      Params:         0       0       0       0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0
  5791 ;;      Temps:          0       0       0       0       0       0       0
  5792 ;;      Totals:         0       0       0       0       0       0       0
  5793 ;;Total ram usage:        0 bytes
  5794 ;; Hardware stack levels used: 1
  5795 ;; Hardware stack levels required when called: 6
  5796 ;; This function calls:
  5797 ;;		_I2cInit
  5798 ;; This function is called by:
  5799 ;;		_DeviceInit
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text33
  5804   002678                     __ptext33:
  5805                           	callstack 0
  5806   002678                     _Ds1307Init:
  5807                           	callstack 23
  5808   002678                     
  5809                           ;DS1307.c: 15:     rtc_clock_disp_type = 1;
  5810   002678  0E01               	movlw	1
  5811   00267A  6E49               	movwf	_rtc_clock_disp_type^0,c
  5812                           
  5813                           ;DS1307.c: 16:     rtc_hour_ampm_flg = 1;
  5814   00267C  0E01               	movlw	1
  5815   00267E  6E48               	movwf	_rtc_hour_ampm_flg^0,c
  5816   002680                     
  5817                           ;DS1307.c: 17:     I2cInit();
  5818   002680  ECF5  F012         	call	_I2cInit	;wreg free
  5819   002684  0012               	return		;funcret
  5820   002686                     __end_of_Ds1307Init:
  5821                           	callstack 0
  5822                           
  5823 ;; *************** function _I2cInit *****************
  5824 ;; Defined at:
  5825 ;;		line 10 in file "I2C.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;		None
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;		None
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5839 ;;      Params:         0       0       0       0       0       0       0
  5840 ;;      Locals:         0       0       0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0
  5842 ;;      Totals:         0       0       0       0       0       0       0
  5843 ;;Total ram usage:        0 bytes
  5844 ;; Hardware stack levels used: 1
  5845 ;; Hardware stack levels required when called: 5
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_Ds1307Init
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text34
  5854   0025EA                     __ptext34:
  5855                           	callstack 0
  5856   0025EA                     _I2cInit:
  5857                           	callstack 23
  5858   0025EA                     
  5859                           ;I2C.c: 12:     SSPSTATbits.SMP = 1;
  5860   0025EA  8EC7               	bsf	199,7,c	;volatile
  5861                           
  5862                           ;I2C.c: 13:     SSPSTATbits.CKE = 0;
  5863   0025EC  9CC7               	bcf	199,6,c	;volatile
  5864                           
  5865                           ;I2C.c: 15:     SSPCON1bits.SSPEN = 1;
  5866   0025EE  8AC6               	bsf	198,5,c	;volatile
  5867   0025F0                     
  5868                           ;I2C.c: 16:     SSPCON1bits.SSPM = 0b1000;
  5869   0025F0  50C6               	movf	198,w,c	;volatile
  5870   0025F2  0BF0               	andlw	-16
  5871   0025F4  0908               	iorlw	8
  5872   0025F6  6EC6               	movwf	198,c	;volatile
  5873                           
  5874                           ;I2C.c: 18:     SSPADD = 99;
  5875   0025F8  0E63               	movlw	99
  5876   0025FA  6EC8               	movwf	200,c	;volatile
  5877   0025FC  0012               	return		;funcret
  5878   0025FE                     __end_of_I2cInit:
  5879                           	callstack 0
  5880                           
  5881 ;; *************** function _DetectStatus *****************
  5882 ;; Defined at:
  5883 ;;		line 141 in file "Main.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      void 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5897 ;;      Params:         0       0       0       0       0       0       0
  5898 ;;      Locals:         0       0       0       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0       0       0
  5900 ;;      Totals:         0       0       0       0       0       0       0
  5901 ;;Total ram usage:        0 bytes
  5902 ;; Hardware stack levels used: 1
  5903 ;; Hardware stack levels required when called: 5
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_DeviceInit
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text35
  5912   0021C2                     __ptext35:
  5913                           	callstack 0
  5914   0021C2                     _DetectStatus:
  5915                           	callstack 24
  5916   0021C2                     
  5917                           ;Main.c: 142:     TRISAbits.TRISA0 = 1;
  5918   0021C2  8092               	bsf	146,0,c	;volatile
  5919                           
  5920                           ;Main.c: 143:     TRISAbits.TRISA1 = 1;
  5921   0021C4  8292               	bsf	146,1,c	;volatile
  5922                           
  5923                           ;Main.c: 144:     TRISAbits.TRISA2 = 1;
  5924   0021C6  8492               	bsf	146,2,c	;volatile
  5925                           
  5926                           ;Main.c: 145:     TRISAbits.TRISA5 = 1;
  5927   0021C8  8A92               	bsf	146,5,c	;volatile
  5928                           
  5929                           ;Main.c: 146:     if( PORTAbits.RA0 == 1 && PORTAbits.RA1 == 1 && PORTAbits.RA2 == 1 && 
      +                          PORTAbits.RA5 == 1 ) {
  5930   0021CA  A080               	btfss	128,0,c	;volatile
  5931   0021CC  EFEA  F010         	goto	u3481
  5932   0021D0  EFEC  F010         	goto	u3480
  5933   0021D4                     u3481:
  5934   0021D4  EF05  F011         	goto	l351
  5935   0021D8                     u3480:
  5936   0021D8  A280               	btfss	128,1,c	;volatile
  5937   0021DA  EFF1  F010         	goto	u3491
  5938   0021DE  EFF3  F010         	goto	u3490
  5939   0021E2                     u3491:
  5940   0021E2  EF05  F011         	goto	l351
  5941   0021E6                     u3490:
  5942   0021E6  A480               	btfss	128,2,c	;volatile
  5943   0021E8  EFF8  F010         	goto	u3501
  5944   0021EC  EFFA  F010         	goto	u3500
  5945   0021F0                     u3501:
  5946   0021F0  EF05  F011         	goto	l351
  5947   0021F4                     u3500:
  5948   0021F4  AA80               	btfss	128,5,c	;volatile
  5949   0021F6  EFFF  F010         	goto	u3511
  5950   0021FA  EF01  F011         	goto	u3510
  5951   0021FE                     u3511:
  5952   0021FE  EF05  F011         	goto	l351
  5953   002202                     u3510:
  5954   002202                     
  5955                           ;Main.c: 147:         SYSTEM_STATE_FLG = 201;
  5956   002202  0EC9               	movlw	201
  5957   002204  6E45               	movwf	_SYSTEM_STATE_FLG^0,c
  5958                           
  5959                           ;Main.c: 148:     }
  5960   002206  EF23  F011         	goto	l354
  5961   00220A                     l351:
  5962   00220A  B080               	btfsc	128,0,c	;volatile
  5963   00220C  EF0A  F011         	goto	u3521
  5964   002210  EF0C  F011         	goto	u3520
  5965   002214                     u3521:
  5966   002214  EF23  F011         	goto	l354
  5967   002218                     u3520:
  5968   002218  B280               	btfsc	128,1,c	;volatile
  5969   00221A  EF11  F011         	goto	u3531
  5970   00221E  EF13  F011         	goto	u3530
  5971   002222                     u3531:
  5972   002222  EF23  F011         	goto	l354
  5973   002226                     u3530:
  5974   002226  B480               	btfsc	128,2,c	;volatile
  5975   002228  EF18  F011         	goto	u3541
  5976   00222C  EF1A  F011         	goto	u3540
  5977   002230                     u3541:
  5978   002230  EF23  F011         	goto	l354
  5979   002234                     u3540:
  5980   002234  BA80               	btfsc	128,5,c	;volatile
  5981   002236  EF1F  F011         	goto	u3551
  5982   00223A  EF21  F011         	goto	u3550
  5983   00223E                     u3551:
  5984   00223E  EF23  F011         	goto	l354
  5985   002242                     u3550:
  5986   002242                     
  5987                           ;Main.c: 150:         SYSTEM_STATE_FLG = 100;
  5988   002242  0E64               	movlw	100
  5989   002244  6E45               	movwf	_SYSTEM_STATE_FLG^0,c
  5990   002246                     l354:
  5991   002246  0012               	return		;funcret
  5992   002248                     __end_of_DetectStatus:
  5993                           	callstack 0
  5994                           
  5995 ;; *************** function _ClockSetting *****************
  5996 ;; Defined at:
  5997 ;;		line 120 in file "Main.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;		None
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;		None
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  1    wreg      void 
  6004 ;; Registers used:
  6005 ;;		wreg, status,2, status,0, cstack
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6011 ;;      Params:         0       0       0       0       0       0       0
  6012 ;;      Locals:         0       0       0       0       0       0       0
  6013 ;;      Temps:          0       0       0       0       0       0       0
  6014 ;;      Totals:         0       0       0       0       0       0       0
  6015 ;;Total ram usage:        0 bytes
  6016 ;; Hardware stack levels used: 1
  6017 ;; Hardware stack levels required when called: 6
  6018 ;; This function calls:
  6019 ;;		_MarkDisplay
  6020 ;; This function is called by:
  6021 ;;		_main
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text36
  6026   002376                     __ptext36:
  6027                           	callstack 0
  6028   002376                     _ClockSetting:
  6029                           	callstack 24
  6030   002376                     
  6031                           ;Main.c: 121:     display_datas[0] = MarkDisplay( real_rtc_data[ 2 ] >> 4 );
  6032   002376  384C               	swapf	(_real_rtc_data+2)^0,w,c
  6033   002378  0B0F               	andlw	15
  6034   00237A  EC16  F009         	call	_MarkDisplay
  6035   00237E  0100               	movlb	0	; () banked
  6036   002380  6F88               	movwf	_display_datas& (0+255),b
  6037                           
  6038                           ;Main.c: 122:     display_datas[1] = MarkDisplay( real_rtc_data[ 2 ] % 16 );
  6039   002382  504C               	movf	(_real_rtc_data+2)^0,w,c
  6040   002384  0B0F               	andlw	15
  6041   002386  EC16  F009         	call	_MarkDisplay
  6042   00238A  0100               	movlb	0	; () banked
  6043   00238C  6F89               	movwf	(_display_datas+1)& (0+255),b
  6044                           
  6045                           ;Main.c: 123:     display_datas[2] = MarkDisplay( real_rtc_data[ 1 ] >> 4 );
  6046   00238E  384B               	swapf	(_real_rtc_data+1)^0,w,c
  6047   002390  0B0F               	andlw	15
  6048   002392  EC16  F009         	call	_MarkDisplay
  6049   002396  0100               	movlb	0	; () banked
  6050   002398  6F8A               	movwf	(_display_datas+2)& (0+255),b
  6051                           
  6052                           ;Main.c: 124:     display_datas[3] = MarkDisplay( real_rtc_data[ 1 ] % 16 );
  6053   00239A  504B               	movf	(_real_rtc_data+1)^0,w,c
  6054   00239C  0B0F               	andlw	15
  6055   00239E  EC16  F009         	call	_MarkDisplay
  6056   0023A2  0100               	movlb	0	; () banked
  6057   0023A4  6F8B               	movwf	(_display_datas+3)& (0+255),b
  6058                           
  6059                           ;Main.c: 125:     display_datas[4] = MarkDisplay( real_rtc_data[ 0 ] >> 4 );
  6060   0023A6  384A               	swapf	_real_rtc_data^0,w,c
  6061   0023A8  0B0F               	andlw	15
  6062   0023AA  EC16  F009         	call	_MarkDisplay
  6063   0023AE  0100               	movlb	0	; () banked
  6064   0023B0  6F8C               	movwf	(_display_datas+4)& (0+255),b
  6065                           
  6066                           ;Main.c: 126:     display_datas[5] = MarkDisplay( real_rtc_data[ 0 ] % 16 );
  6067   0023B2  504A               	movf	_real_rtc_data^0,w,c
  6068   0023B4  0B0F               	andlw	15
  6069   0023B6  EC16  F009         	call	_MarkDisplay
  6070   0023BA  0100               	movlb	0	; () banked
  6071   0023BC  6F8D               	movwf	(_display_datas+5)& (0+255),b
  6072   0023BE                     
  6073                           ; BSR set to: 0
  6074   0023BE  0012               	return		;funcret
  6075   0023C0                     __end_of_ClockSetting:
  6076                           	callstack 0
  6077                           
  6078 ;; *************** function _MarkDisplay *****************
  6079 ;; Defined at:
  6080 ;;		line 67 in file "Display.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;  mark            1    wreg     unsigned char 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  mark            1   17[COMRAM] unsigned char 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      unsigned char 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6094 ;;      Params:         0       0       0       0       0       0       0
  6095 ;;      Locals:         1       0       0       0       0       0       0
  6096 ;;      Temps:          2       0       0       0       0       0       0
  6097 ;;      Totals:         3       0       0       0       0       0       0
  6098 ;;Total ram usage:        3 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; Hardware stack levels required when called: 5
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_ClockSetting
  6105 ;;		_UpdateDisplay
  6106 ;; This function uses a non-reentrant model
  6107 ;;
  6108                           
  6109                           	psect	text37
  6110   00122C                     __ptext37:
  6111                           	callstack 0
  6112   00122C                     _MarkDisplay:
  6113                           	callstack 24
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;incstack = 0
  6117                           ;MarkDisplay@mark stored from wreg
  6118   00122C  6E62               	movwf	MarkDisplay@mark^0,c
  6119   00122E                     
  6120                           ;Display.c: 82:     switch( mark ){
  6121   00122E  EF76  F009         	goto	l8791
  6122   001232                     l8637:
  6123   001232  0E3F               	movlw	63
  6124   001234  EF1B  F00A         	goto	l880
  6125   001238                     l8641:
  6126   001238  0E06               	movlw	6
  6127   00123A  EF1B  F00A         	goto	l880
  6128   00123E                     l8645:
  6129   00123E  0E5B               	movlw	91
  6130   001240  EF1B  F00A         	goto	l880
  6131   001244                     l8649:
  6132   001244  0E4F               	movlw	79
  6133   001246  EF1B  F00A         	goto	l880
  6134   00124A                     l8653:
  6135   00124A  0E66               	movlw	102
  6136   00124C  EF1B  F00A         	goto	l880
  6137   001250                     l8657:
  6138   001250  0E6D               	movlw	109
  6139   001252  EF1B  F00A         	goto	l880
  6140   001256                     l8661:
  6141   001256  0E7D               	movlw	125
  6142   001258  EF1B  F00A         	goto	l880
  6143   00125C                     l8665:
  6144   00125C  0E07               	movlw	7
  6145   00125E  EF1B  F00A         	goto	l880
  6146   001262                     l8669:
  6147   001262  0E7F               	movlw	127
  6148   001264  EF1B  F00A         	goto	l880
  6149   001268                     l8673:
  6150   001268  0E6F               	movlw	111
  6151   00126A  EF1B  F00A         	goto	l880
  6152   00126E                     l8677:
  6153   00126E  0E77               	movlw	119
  6154   001270  EF1B  F00A         	goto	l880
  6155   001274                     l8681:
  6156   001274  0E5F               	movlw	95
  6157   001276  EF1B  F00A         	goto	l880
  6158   00127A                     l8689:
  6159   00127A  0E7C               	movlw	124
  6160   00127C  EF1B  F00A         	goto	l880
  6161   001280                     l8693:
  6162   001280  0E39               	movlw	57
  6163   001282  EF1B  F00A         	goto	l880
  6164   001286                     l8697:
  6165   001286  0E58               	movlw	88
  6166   001288  EF1B  F00A         	goto	l880
  6167   00128C                     l8705:
  6168   00128C  0E5E               	movlw	94
  6169   00128E  EF1B  F00A         	goto	l880
  6170   001292                     l8709:
  6171   001292  0E79               	movlw	121
  6172   001294  EF1B  F00A         	goto	l880
  6173   001298                     l8713:
  6174   001298  0E7B               	movlw	123
  6175   00129A  EF1B  F00A         	goto	l880
  6176   00129E                     l8717:
  6177   00129E  0E71               	movlw	113
  6178   0012A0  EF1B  F00A         	goto	l880
  6179   0012A4                     l8729:
  6180   0012A4  0E76               	movlw	118
  6181   0012A6  EF1B  F00A         	goto	l880
  6182   0012AA                     l8733:
  6183   0012AA  0E74               	movlw	116
  6184   0012AC  EF1B  F00A         	goto	l880
  6185   0012B0                     l8741:
  6186   0012B0  0E0E               	movlw	14
  6187   0012B2  EF1B  F00A         	goto	l880
  6188   0012B6                     l8745:
  6189   0012B6  0E38               	movlw	56
  6190   0012B8  EF1B  F00A         	goto	l880
  6191   0012BC                     l8749:
  6192   0012BC  0E54               	movlw	84
  6193   0012BE  EF1B  F00A         	goto	l880
  6194   0012C2                     l8757:
  6195   0012C2  0E5C               	movlw	92
  6196   0012C4  EF1B  F00A         	goto	l880
  6197   0012C8                     l8761:
  6198   0012C8  0E73               	movlw	115
  6199   0012CA  EF1B  F00A         	goto	l880
  6200   0012CE                     l8765:
  6201   0012CE  0E67               	movlw	103
  6202   0012D0  EF1B  F00A         	goto	l880
  6203   0012D4                     l8769:
  6204   0012D4  0E50               	movlw	80
  6205   0012D6  EF1B  F00A         	goto	l880
  6206   0012DA                     l8777:
  6207   0012DA  0E78               	movlw	120
  6208   0012DC  EF1B  F00A         	goto	l880
  6209   0012E0                     l8781:
  6210   0012E0  0E3E               	movlw	62
  6211   0012E2  EF1B  F00A         	goto	l880
  6212   0012E6                     l8785:
  6213   0012E6  0E6E               	movlw	110
  6214   0012E8  EF1B  F00A         	goto	l880
  6215   0012EC                     l8791:
  6216   0012EC  5062               	movf	MarkDisplay@mark^0,w,c
  6217   0012EE  6E60               	movwf	??_MarkDisplay^0,c
  6218   0012F0  6A61               	clrf	(??_MarkDisplay+1)^0,c
  6219                           
  6220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6221                           ; Switch size 1, requested type "simple"
  6222                           ; Number of cases is 1, Range of values is 0 to 0
  6223                           ; switch strategies available:
  6224                           ; Name         Instructions Cycles
  6225                           ; simple_byte            4     3 (average)
  6226                           ;	Chosen strategy is simple_byte
  6227   0012F2  5061               	movf	(??_MarkDisplay+1)^0,w,c
  6228   0012F4  0A00               	xorlw	0	; case 0
  6229   0012F6  B4D8               	btfsc	status,2,c
  6230   0012F8  EF80  F009         	goto	l10325
  6231   0012FC  EF1B  F00A         	goto	l880
  6232   001300                     l10325:
  6233                           
  6234                           ; Switch size 1, requested type "simple"
  6235                           ; Number of cases is 38, Range of values is 0 to 121
  6236                           ; switch strategies available:
  6237                           ; Name         Instructions Cycles
  6238                           ; simple_byte          115    58 (average)
  6239                           ;	Chosen strategy is simple_byte
  6240   001300  5060               	movf	??_MarkDisplay^0,w,c
  6241   001302  0A00               	xorlw	0	; case 0
  6242   001304  B4D8               	btfsc	status,2,c
  6243   001306  EF19  F009         	goto	l8637
  6244   00130A  0A01               	xorlw	1	; case 1
  6245   00130C  B4D8               	btfsc	status,2,c
  6246   00130E  EF1C  F009         	goto	l8641
  6247   001312  0A03               	xorlw	3	; case 2
  6248   001314  B4D8               	btfsc	status,2,c
  6249   001316  EF1F  F009         	goto	l8645
  6250   00131A  0A01               	xorlw	1	; case 3
  6251   00131C  B4D8               	btfsc	status,2,c
  6252   00131E  EF22  F009         	goto	l8649
  6253   001322  0A07               	xorlw	7	; case 4
  6254   001324  B4D8               	btfsc	status,2,c
  6255   001326  EF25  F009         	goto	l8653
  6256   00132A  0A01               	xorlw	1	; case 5
  6257   00132C  B4D8               	btfsc	status,2,c
  6258   00132E  EF28  F009         	goto	l8657
  6259   001332  0A03               	xorlw	3	; case 6
  6260   001334  B4D8               	btfsc	status,2,c
  6261   001336  EF2B  F009         	goto	l8661
  6262   00133A  0A01               	xorlw	1	; case 7
  6263   00133C  B4D8               	btfsc	status,2,c
  6264   00133E  EF2E  F009         	goto	l8665
  6265   001342  0A0F               	xorlw	15	; case 8
  6266   001344  B4D8               	btfsc	status,2,c
  6267   001346  EF31  F009         	goto	l8669
  6268   00134A  0A01               	xorlw	1	; case 9
  6269   00134C  B4D8               	btfsc	status,2,c
  6270   00134E  EF34  F009         	goto	l8673
  6271   001352  0A48               	xorlw	72	; case 65
  6272   001354  B4D8               	btfsc	status,2,c
  6273   001356  EF37  F009         	goto	l8677
  6274   00135A  0A03               	xorlw	3	; case 66
  6275   00135C  B4D8               	btfsc	status,2,c
  6276   00135E  EF31  F009         	goto	l8669
  6277   001362  0A01               	xorlw	1	; case 67
  6278   001364  B4D8               	btfsc	status,2,c
  6279   001366  EF40  F009         	goto	l8693
  6280   00136A  0A07               	xorlw	7	; case 68
  6281   00136C  B4D8               	btfsc	status,2,c
  6282   00136E  EF19  F009         	goto	l8637
  6283   001372  0A01               	xorlw	1	; case 69
  6284   001374  B4D8               	btfsc	status,2,c
  6285   001376  EF49  F009         	goto	l8709
  6286   00137A  0A03               	xorlw	3	; case 70
  6287   00137C  B4D8               	btfsc	status,2,c
  6288   00137E  EF4F  F009         	goto	l8717
  6289   001382  0A01               	xorlw	1	; case 71
  6290   001384  B4D8               	btfsc	status,2,c
  6291   001386  EF2B  F009         	goto	l8661
  6292   00138A  0A0F               	xorlw	15	; case 72
  6293   00138C  B4D8               	btfsc	status,2,c
  6294   00138E  EF52  F009         	goto	l8729
  6295   001392  0A01               	xorlw	1	; case 73
  6296   001394  B4D8               	btfsc	status,2,c
  6297   001396  EF1C  F009         	goto	l8641
  6298   00139A  0A03               	xorlw	3	; case 74
  6299   00139C  B4D8               	btfsc	status,2,c
  6300   00139E  EF58  F009         	goto	l8741
  6301   0013A2  0A06               	xorlw	6	; case 76
  6302   0013A4  B4D8               	btfsc	status,2,c
  6303   0013A6  EF5B  F009         	goto	l8745
  6304   0013AA  0A03               	xorlw	3	; case 79
  6305   0013AC  B4D8               	btfsc	status,2,c
  6306   0013AE  EF19  F009         	goto	l8637
  6307   0013B2  0A1F               	xorlw	31	; case 80
  6308   0013B4  B4D8               	btfsc	status,2,c
  6309   0013B6  EF64  F009         	goto	l8761
  6310   0013BA  0A03               	xorlw	3	; case 83
  6311   0013BC  B4D8               	btfsc	status,2,c
  6312   0013BE  EF28  F009         	goto	l8657
  6313   0013C2  0A06               	xorlw	6	; case 85
  6314   0013C4  B4D8               	btfsc	status,2,c
  6315   0013C6  EF70  F009         	goto	l8781
  6316   0013CA  0A34               	xorlw	52	; case 97
  6317   0013CC  B4D8               	btfsc	status,2,c
  6318   0013CE  EF3A  F009         	goto	l8681
  6319   0013D2  0A03               	xorlw	3	; case 98
  6320   0013D4  B4D8               	btfsc	status,2,c
  6321   0013D6  EF3D  F009         	goto	l8689
  6322   0013DA  0A01               	xorlw	1	; case 99
  6323   0013DC  B4D8               	btfsc	status,2,c
  6324   0013DE  EF43  F009         	goto	l8697
  6325   0013E2  0A07               	xorlw	7	; case 100
  6326   0013E4  B4D8               	btfsc	status,2,c
  6327   0013E6  EF46  F009         	goto	l8705
  6328   0013EA  0A01               	xorlw	1	; case 101
  6329   0013EC  B4D8               	btfsc	status,2,c
  6330   0013EE  EF4C  F009         	goto	l8713
  6331   0013F2  0A02               	xorlw	2	; case 103
  6332   0013F4  B4D8               	btfsc	status,2,c
  6333   0013F6  EF34  F009         	goto	l8673
  6334   0013FA  0A0F               	xorlw	15	; case 104
  6335   0013FC  B4D8               	btfsc	status,2,c
  6336   0013FE  EF55  F009         	goto	l8733
  6337   001402  0A06               	xorlw	6	; case 110
  6338   001404  B4D8               	btfsc	status,2,c
  6339   001406  EF5E  F009         	goto	l8749
  6340   00140A  0A01               	xorlw	1	; case 111
  6341   00140C  B4D8               	btfsc	status,2,c
  6342   00140E  EF61  F009         	goto	l8757
  6343   001412  0A1E               	xorlw	30	; case 113
  6344   001414  B4D8               	btfsc	status,2,c
  6345   001416  EF67  F009         	goto	l8765
  6346   00141A  0A03               	xorlw	3	; case 114
  6347   00141C  B4D8               	btfsc	status,2,c
  6348   00141E  EF6A  F009         	goto	l8769
  6349   001422  0A06               	xorlw	6	; case 116
  6350   001424  B4D8               	btfsc	status,2,c
  6351   001426  EF6D  F009         	goto	l8777
  6352   00142A  0A0D               	xorlw	13	; case 121
  6353   00142C  B4D8               	btfsc	status,2,c
  6354   00142E  EF73  F009         	goto	l8785
  6355   001432  EF1B  F00A         	goto	l880
  6356   001436                     l880:
  6357   001436  0012               	return		;funcret
  6358   001438                     __end_of_MarkDisplay:
  6359                           	callstack 0
  6360                           
  6361 ;; *************** function _BlinkDisable *****************
  6362 ;; Defined at:
  6363 ;;		line 102 in file "Display.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;		None
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  i               1   15[COMRAM] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6377 ;;      Params:         0       0       0       0       0       0       0
  6378 ;;      Locals:         1       0       0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0
  6380 ;;      Totals:         1       0       0       0       0       0       0
  6381 ;;Total ram usage:        1 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 5
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_main
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text38
  6392   002568                     __ptext38:
  6393                           	callstack 0
  6394   002568                     _BlinkDisable:
  6395                           	callstack 25
  6396   002568                     
  6397                           ;Display.c: 103:     for( unsigned char i = 0; i < 7; i ++ ){
  6398   002568  0E00               	movlw	0
  6399   00256A  6E60               	movwf	BlinkDisable@i^0,c
  6400   00256C                     l6805:
  6401                           
  6402                           ;Display.c: 104:         blink_pos[ i ] = 0;
  6403   00256C  5060               	movf	BlinkDisable@i^0,w,c
  6404   00256E  0F80               	addlw	low _blink_pos
  6405   002570  6ED9               	movwf	fsr2l,c
  6406   002572  6ADA               	clrf	fsr2h,c
  6407   002574  6ADF               	clrf	indf2,c
  6408   002576                     
  6409                           ;Display.c: 105:     }
  6410   002576  2A60               	incf	BlinkDisable@i^0,f,c
  6411   002578  0E06               	movlw	6
  6412   00257A  6460               	cpfsgt	BlinkDisable@i^0,c
  6413   00257C  EFC2  F012         	goto	u4601
  6414   002580  EFC4  F012         	goto	u4600
  6415   002584                     u4601:
  6416   002584  EFB6  F012         	goto	l6805
  6417   002588                     u4600:
  6418   002588  0012               	return		;funcret
  6419   00258A                     __end_of_BlinkDisable:
  6420                           	callstack 0
  6421                           
  6422 ;; *************** function _low_isr *****************
  6423 ;; Defined at:
  6424 ;;		line 45 in file "Interrupts.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;		None
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;		None
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  1    wreg      void 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6438 ;;      Params:         0       0       0       0       0       0       0
  6439 ;;      Locals:         0       0       0       0       0       0       0
  6440 ;;      Temps:          3       0       0       0       0       0       0
  6441 ;;      Totals:         3       0       0       0       0       0       0
  6442 ;;Total ram usage:        3 bytes
  6443 ;; Hardware stack levels used: 1
  6444 ;; Hardware stack levels required when called: 4
  6445 ;; This function calls:
  6446 ;;		_ScanCounter
  6447 ;; This function is called by:
  6448 ;;		Interrupt level 1
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	intcodelo
  6453   000018                     __pintcodelo:
  6454                           	callstack 0
  6455   000018                     _low_isr:
  6456                           	callstack 20
  6457                           
  6458                           ;incstack = 0
  6459   000018  8070               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6460   00001A  CFD8 F05D          	movff	status,??_low_isr
  6461   00001E  CFE8 F05E          	movff	wreg,??_low_isr+1
  6462   000022  CFE0 F05F          	movff	bsr,??_low_isr+2
  6463   000026                     
  6464                           ;Interrupts.c: 47:     if( INTCON3bits.INT2IE && INTCON3bits.INT2IF ) {
  6465   000026  A8F0               	btfss	240,4,c	;volatile
  6466   000028  EF18  F000         	goto	i1u214_21
  6467   00002C  EF1A  F000         	goto	i1u214_20
  6468   000030                     i1u214_21:
  6469   000030  EF24  F000         	goto	i1l643
  6470   000034                     i1u214_20:
  6471   000034  A2F0               	btfss	240,1,c	;volatile
  6472   000036  EF1F  F000         	goto	i1u215_21
  6473   00003A  EF21  F000         	goto	i1u215_20
  6474   00003E                     i1u215_21:
  6475   00003E  EF24  F000         	goto	i1l643
  6476   000042                     i1u215_20:
  6477   000042                     
  6478                           ;Interrupts.c: 48:         INTCON3bits.INT2IF = 0;
  6479   000042  92F0               	bcf	240,1,c	;volatile
  6480   000044                     
  6481                           ;Interrupts.c: 50:         ScanCounter();
  6482   000044  ECB9  F00D         	call	_ScanCounter	;wreg free
  6483   000048                     i1l643:
  6484   000048  C05F  FFE0         	movff	??_low_isr+2,bsr
  6485   00004C  C05E  FFE8         	movff	??_low_isr+1,wreg
  6486   000050  C05D  FFD8         	movff	??_low_isr,status
  6487   000054  9070               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6488   000056  0010               	retfie	
  6489   000058                     __end_of_low_isr:
  6490                           	callstack 0
  6491                           
  6492 ;; *************** function _ScanCounter *****************
  6493 ;; Defined at:
  6494 ;;		line 79 in file "Counter.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;		None
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;		None
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  1    wreg      void 
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6508 ;;      Params:         0       0       0       0       0       0       0
  6509 ;;      Locals:         0       0       0       0       0       0       0
  6510 ;;      Temps:          0       0       0       0       0       0       0
  6511 ;;      Totals:         0       0       0       0       0       0       0
  6512 ;;Total ram usage:        0 bytes
  6513 ;; Hardware stack levels used: 1
  6514 ;; Hardware stack levels required when called: 3
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_low_isr
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text40
  6523   001B72                     __ptext40:
  6524                           	callstack 0
  6525   001B72                     _ScanCounter:
  6526                           	callstack 20
  6527   001B72                     
  6528                           ;Counter.c: 80:     if(!counter_enable_flg) return;
  6529   001B72  5035               	movf	_counter_enable_flg^0,w,c
  6530   001B74  A4D8               	btfss	status,2,c
  6531   001B76  EFBF  F00D         	goto	i1u168_21
  6532   001B7A  EFC1  F00D         	goto	i1u168_20
  6533   001B7E                     i1u168_21:
  6534   001B7E  EFC3  F00D         	goto	i1l3927
  6535   001B82                     i1u168_20:
  6536   001B82  EF25  F00E         	goto	i1l754
  6537   001B86                     i1l3927:
  6538                           
  6539                           ;Counter.c: 81:     if( counter_direction_flg == 1 ){
  6540   001B86  0434               	decf	_counter_direction_flg^0,w,c
  6541   001B88  A4D8               	btfss	status,2,c
  6542   001B8A  EFC9  F00D         	goto	i1u169_21
  6543   001B8E  EFCB  F00D         	goto	i1u169_20
  6544   001B92                     i1u169_21:
  6545   001B92  EFE6  F00D         	goto	i1l3943
  6546   001B96                     i1u169_20:
  6547   001B96                     
  6548                           ;Counter.c: 82:         counter_up_second ++;
  6549   001B96  2A36               	incf	_counter_up_second^0,f,c
  6550   001B98                     
  6551                           ;Counter.c: 83:         if( counter_up_second == 60 ){
  6552   001B98  0E3C               	movlw	60
  6553   001B9A  1836               	xorwf	_counter_up_second^0,w,c
  6554   001B9C  A4D8               	btfss	status,2,c
  6555   001B9E  EFD3  F00D         	goto	i1u170_21
  6556   001BA2  EFD5  F00D         	goto	i1u170_20
  6557   001BA6                     i1u170_21:
  6558   001BA6  EF25  F00E         	goto	i1l754
  6559   001BAA                     i1u170_20:
  6560   001BAA                     
  6561                           ;Counter.c: 84:             counter_up_second = 0;
  6562   001BAA  0E00               	movlw	0
  6563   001BAC  6E36               	movwf	_counter_up_second^0,c
  6564   001BAE                     
  6565                           ;Counter.c: 85:             counter_up_minute ++;
  6566   001BAE  2A37               	incf	_counter_up_minute^0,f,c
  6567   001BB0                     
  6568                           ;Counter.c: 86:             if(counter_up_minute == 60){
  6569   001BB0  0E3C               	movlw	60
  6570   001BB2  1837               	xorwf	_counter_up_minute^0,w,c
  6571   001BB4  A4D8               	btfss	status,2,c
  6572   001BB6  EFDF  F00D         	goto	i1u171_21
  6573   001BBA  EFE1  F00D         	goto	i1u171_20
  6574   001BBE                     i1u171_21:
  6575   001BBE  EF25  F00E         	goto	i1l754
  6576   001BC2                     i1u171_20:
  6577   001BC2                     
  6578                           ;Counter.c: 87:                 counter_up_minute = 0;
  6579   001BC2  0E00               	movlw	0
  6580   001BC4  6E37               	movwf	_counter_up_minute^0,c
  6581   001BC6                     
  6582                           ;Counter.c: 88:                 counter_up_hour ++;
  6583   001BC6  2A38               	incf	_counter_up_hour^0,f,c
  6584   001BC8  EF25  F00E         	goto	i1l754
  6585   001BCC                     i1l3943:
  6586   001BCC  5034               	movf	_counter_direction_flg^0,w,c
  6587   001BCE  A4D8               	btfss	status,2,c
  6588   001BD0  EFEC  F00D         	goto	i1u172_21
  6589   001BD4  EFEE  F00D         	goto	i1u172_20
  6590   001BD8                     i1u172_21:
  6591   001BD8  EF25  F00E         	goto	i1l754
  6592   001BDC                     i1u172_20:
  6593   001BDC                     
  6594                           ;Counter.c: 93:         if( counter_down_hour == 0 && counter_down_minute == 0 && counte
      +                          r_down_second == 0 ) {
  6595   001BDC  503E               	movf	_counter_down_hour^0,w,c
  6596   001BDE  A4D8               	btfss	status,2,c
  6597   001BE0  EFF4  F00D         	goto	i1u173_21
  6598   001BE4  EFF6  F00D         	goto	i1u173_20
  6599   001BE8                     i1u173_21:
  6600   001BE8  EF0E  F00E         	goto	i1l3955
  6601   001BEC                     i1u173_20:
  6602   001BEC  503D               	movf	_counter_down_minute^0,w,c
  6603   001BEE  A4D8               	btfss	status,2,c
  6604   001BF0  EFFC  F00D         	goto	i1u174_21
  6605   001BF4  EFFE  F00D         	goto	i1u174_20
  6606   001BF8                     i1u174_21:
  6607   001BF8  EF0E  F00E         	goto	i1l3955
  6608   001BFC                     i1u174_20:
  6609   001BFC  503C               	movf	_counter_down_second^0,w,c
  6610   001BFE  A4D8               	btfss	status,2,c
  6611   001C00  EF04  F00E         	goto	i1u175_21
  6612   001C04  EF06  F00E         	goto	i1u175_20
  6613   001C08                     i1u175_21:
  6614   001C08  EF0E  F00E         	goto	i1l3955
  6615   001C0C                     i1u175_20:
  6616   001C0C                     
  6617                           ;Counter.c: 94:             counter_enable_flg = 0;
  6618   001C0C  0E00               	movlw	0
  6619   001C0E  6E35               	movwf	_counter_enable_flg^0,c
  6620                           
  6621                           ;Counter.c: 95:             counter_down_comp_flg = 1; counter_down_comp_cnt = 0;
  6622   001C10  0E01               	movlw	1
  6623   001C12  6E31               	movwf	_counter_down_comp_flg^0,c
  6624   001C14  0E00               	movlw	0
  6625   001C16  6E30               	movwf	_counter_down_comp_cnt^0,c
  6626   001C18  EF25  F00E         	goto	i1l754
  6627   001C1C                     i1l3955:
  6628                           
  6629                           ;Counter.c: 98:         counter_down_comp_flg = 0;
  6630   001C1C  0E00               	movlw	0
  6631   001C1E  6E31               	movwf	_counter_down_comp_flg^0,c
  6632   001C20                     
  6633                           ;Counter.c: 99:         counter_down_second --;
  6634   001C20  063C               	decf	_counter_down_second^0,f,c
  6635   001C22                     
  6636                           ;Counter.c: 100:         if( counter_down_second < 0 ) {
  6637   001C22  BE3C               	btfsc	_counter_down_second^0,7,c
  6638   001C24  EF18  F00E         	goto	i1u176_20
  6639   001C28  EF16  F00E         	goto	i1u176_21
  6640   001C2C                     i1u176_21:
  6641   001C2C  EF25  F00E         	goto	i1l754
  6642   001C30                     i1u176_20:
  6643   001C30                     
  6644                           ;Counter.c: 101:             counter_down_second = 59;
  6645   001C30  0E3B               	movlw	59
  6646   001C32  6E3C               	movwf	_counter_down_second^0,c
  6647   001C34                     
  6648                           ;Counter.c: 102:             counter_down_minute --;
  6649   001C34  063D               	decf	_counter_down_minute^0,f,c
  6650   001C36                     
  6651                           ;Counter.c: 103:             if( counter_down_minute < 0 ){
  6652   001C36  BE3D               	btfsc	_counter_down_minute^0,7,c
  6653   001C38  EF22  F00E         	goto	i1u177_20
  6654   001C3C  EF20  F00E         	goto	i1u177_21
  6655   001C40                     i1u177_21:
  6656   001C40  EF25  F00E         	goto	i1l754
  6657   001C44                     i1u177_20:
  6658   001C44                     
  6659                           ;Counter.c: 104:                 counter_down_minute = 59;
  6660   001C44  0E3B               	movlw	59
  6661   001C46  6E3D               	movwf	_counter_down_minute^0,c
  6662   001C48                     
  6663                           ;Counter.c: 105:                 counter_down_hour --;
  6664   001C48  063E               	decf	_counter_down_hour^0,f,c
  6665   001C4A                     i1l754:
  6666   001C4A  0012               	return		;funcret
  6667   001C4C                     __end_of_ScanCounter:
  6668                           	callstack 0
  6669                           
  6670 ;; *************** function _high_isr *****************
  6671 ;; Defined at:
  6672 ;;		line 20 in file "Interrupts.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;		None
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6686 ;;      Params:         0       0       0       0       0       0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0
  6688 ;;      Temps:          2       0       0       0       0       0       0
  6689 ;;      Totals:         2       0       0       0       0       0       0
  6690 ;;Total ram usage:        2 bytes
  6691 ;; Hardware stack levels used: 1
  6692 ;; Hardware stack levels required when called: 2
  6693 ;; This function calls:
  6694 ;;		_ScanButtons
  6695 ;;		_ScanDisplay
  6696 ;;		i2_ScanCounter
  6697 ;;		i2_WriteTimer0
  6698 ;; This function is called by:
  6699 ;;		Interrupt level 2
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	intcode
  6704   000008                     __pintcode:
  6705                           	callstack 0
  6706   000008                     _high_isr:
  6707                           	callstack 20
  6708                           
  6709                           ;incstack = 0
  6710   000008  8270               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6711   00000A  EDAD  F00F         	call	int_func,f	;refresh shadow registers
  6712                           
  6713                           	psect	intcode_body
  6714   001F5A                     __pintcode_body:
  6715                           	callstack 20
  6716   001F5A                     int_func:
  6717                           	callstack 20
  6718   001F5A  0006               	pop		; remove dummy address from shadow register refresh
  6719   001F5C  CFD9 F05B          	movff	fsr2l,??_high_isr
  6720   001F60  CFDA F05C          	movff	fsr2h,??_high_isr+1
  6721   001F64                     
  6722                           ;Interrupts.c: 22:     if( INTCONbits.TMR0IE && INTCONbits.TMR0IF ) {
  6723   001F64  AAF2               	btfss	242,5,c	;volatile
  6724   001F66  EFB7  F00F         	goto	i2u513_41
  6725   001F6A  EFB9  F00F         	goto	i2u513_40
  6726   001F6E                     i2u513_41:
  6727   001F6E  EFEA  F00F         	goto	i2l633
  6728   001F72                     i2u513_40:
  6729   001F72  A4F2               	btfss	242,2,c	;volatile
  6730   001F74  EFBE  F00F         	goto	i2u514_41
  6731   001F78  EFC0  F00F         	goto	i2u514_40
  6732   001F7C                     i2u514_41:
  6733   001F7C  EFEA  F00F         	goto	i2l633
  6734   001F80                     i2u514_40:
  6735   001F80                     
  6736                           ;Interrupts.c: 23:         INTCONbits.TMR0IF = 0;
  6737   001F80  94F2               	bcf	242,2,c	;volatile
  6738   001F82                     
  6739                           ;Interrupts.c: 24:         WriteTimer0( 65285 );
  6740   001F82  0EFF               	movlw	255
  6741   001F84  6E52               	movwf	(i2WriteTimer0@timer0+1)^0,c
  6742   001F86  0E05               	movlw	5
  6743   001F88  6E51               	movwf	i2WriteTimer0@timer0^0,c
  6744   001F8A  EC2C  F013         	call	i2_WriteTimer0	;wreg free
  6745   001F8E                     
  6746                           ;Interrupts.c: 25:         ScanDisplay();
  6747   001F8E  EC1C  F00A         	call	_ScanDisplay	;wreg free
  6748   001F92                     
  6749                           ;Interrupts.c: 26:         ScanButtons();
  6750   001F92  EC17  F00B         	call	_ScanButtons	;wreg free
  6751   001F96                     
  6752                           ;Interrupts.c: 27:         cnt ++;
  6753   001F96  0100               	movlb	0	; () banked
  6754   001F98  4BC2               	infsnz	_cnt& (0+255),f,b
  6755   001F9A  2BC3               	incf	(_cnt+1)& (0+255),f,b
  6756   001F9C                     
  6757                           ; BSR set to: 0
  6758                           ;Interrupts.c: 28:         if( cnt == 100 ){
  6759   001F9C  0E64               	movlw	100
  6760   001F9E  19C2               	xorwf	_cnt& (0+255),w,b
  6761   001FA0  11C3               	iorwf	(_cnt+1)& (0+255),w,b
  6762   001FA2  A4D8               	btfss	status,2,c
  6763   001FA4  EFD6  F00F         	goto	i2u515_41
  6764   001FA8  EFD8  F00F         	goto	i2u515_40
  6765   001FAC                     i2u515_41:
  6766   001FAC  EFDD  F00F         	goto	i2l7411
  6767   001FB0                     i2u515_40:
  6768   001FB0                     
  6769                           ; BSR set to: 0
  6770                           ;Interrupts.c: 29:             SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE = 1; cnt = 0;
  6771   001FB0  8046               	bsf	_SYSTEM_ACTION_FLG^0,0,c	;volatile
  6772   001FB2                     
  6773                           ; BSR set to: 0
  6774   001FB2  0E00               	movlw	0
  6775   001FB4  6FC3               	movwf	(_cnt+1)& (0+255),b
  6776   001FB6  0E00               	movlw	0
  6777   001FB8  6FC2               	movwf	_cnt& (0+255),b
  6778   001FBA                     i2l7411:
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;Interrupts.c: 31:         if( SYSTEM_STATE_FLG == 101 ){
  6782   001FBA  0E65               	movlw	101
  6783   001FBC  1845               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  6784   001FBE  A4D8               	btfss	status,2,c
  6785   001FC0  EFE4  F00F         	goto	i2u516_41
  6786   001FC4  EFE6  F00F         	goto	i2u516_40
  6787   001FC8                     i2u516_41:
  6788   001FC8  EFFB  F00F         	goto	i2l636
  6789   001FCC                     i2u516_40:
  6790   001FCC                     
  6791                           ; BSR set to: 0
  6792                           ;Interrupts.c: 32:             set_mode_release_cnt ++;
  6793   001FCC  4A15               	infsnz	_set_mode_release_cnt^0,f,c
  6794   001FCE  2A16               	incf	(_set_mode_release_cnt+1)^0,f,c
  6795   001FD0  EFFB  F00F         	goto	i2l636
  6796   001FD4                     i2l633:
  6797                           
  6798                           ;Interrupts.c: 36:     if( INTCON3bits.INT2IE && INTCON3bits.INT2IF ) {
  6799   001FD4  A8F0               	btfss	240,4,c	;volatile
  6800   001FD6  EFEF  F00F         	goto	i2u517_41
  6801   001FDA  EFF1  F00F         	goto	i2u517_40
  6802   001FDE                     i2u517_41:
  6803   001FDE  EFFB  F00F         	goto	i2l636
  6804   001FE2                     i2u517_40:
  6805   001FE2  A2F0               	btfss	240,1,c	;volatile
  6806   001FE4  EFF6  F00F         	goto	i2u518_41
  6807   001FE8  EFF8  F00F         	goto	i2u518_40
  6808   001FEC                     i2u518_41:
  6809   001FEC  EFFB  F00F         	goto	i2l636
  6810   001FF0                     i2u518_40:
  6811   001FF0                     
  6812                           ;Interrupts.c: 37:         INTCON3bits.INT2IF = 0;
  6813   001FF0  92F0               	bcf	240,1,c	;volatile
  6814   001FF2                     
  6815                           ;Interrupts.c: 38:         ScanCounter();
  6816   001FF2  EC26  F00E         	call	i2_ScanCounter	;wreg free
  6817   001FF6                     i2l636:
  6818   001FF6  C05C  FFDA         	movff	??_high_isr+1,fsr2h
  6819   001FFA  C05B  FFD9         	movff	??_high_isr,fsr2l
  6820   001FFE  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6821   002000  0011               	retfie		f
  6822   002002                     __end_of_high_isr:
  6823                           	callstack 0
  6824                           
  6825 ;; *************** function i2_WriteTimer0 *****************
  6826 ;; Defined at:
  6827 ;;		line 37 in file "Timers.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  timer0          2    0[COMRAM] unsigned int 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  timer           2    2[COMRAM] struct Timers
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  1    wreg      void 
  6834 ;; Registers used:
  6835 ;;		None
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6841 ;;      Params:         2       0       0       0       0       0       0
  6842 ;;      Locals:         2       0       0       0       0       0       0
  6843 ;;      Temps:          0       0       0       0       0       0       0
  6844 ;;      Totals:         4       0       0       0       0       0       0
  6845 ;;Total ram usage:        4 bytes
  6846 ;; Hardware stack levels used: 1
  6847 ;; This function calls:
  6848 ;;		Nothing
  6849 ;; This function is called by:
  6850 ;;		_high_isr
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           	psect	text42
  6855   002658                     __ptext42:
  6856                           	callstack 0
  6857   002658                     i2_WriteTimer0:
  6858                           	callstack 21
  6859   002658                     
  6860                           ;Timers.c: 37: void WriteTimer0(unsigned int timer0);Timers.c: 38: {;Timers.c: 39:     u
      +                          nion Timers timer;;Timers.c: 41:     timer.lt = timer0;
  6861   002658  C051  F053         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  6862   00265C  C052  F054         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  6863                           
  6864                           ;Timers.c: 43:     TMR0H = timer.bt[1];
  6865   002660  C054  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  6866                           
  6867                           ;Timers.c: 44:     TMR0L = timer.bt[0];
  6868   002664  C053  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  6869   002668  0012               	return		;funcret
  6870   00266A                     __end_ofi2_WriteTimer0:
  6871                           	callstack 0
  6872                           
  6873 ;; *************** function i2_ScanCounter *****************
  6874 ;; Defined at:
  6875 ;;		line 79 in file "Counter.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;		None
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;		None
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  1    wreg      void 
  6882 ;; Registers used:
  6883 ;;		wreg, status,2, status,0
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6889 ;;      Params:         0       0       0       0       0       0       0
  6890 ;;      Locals:         0       0       0       0       0       0       0
  6891 ;;      Temps:          0       0       0       0       0       0       0
  6892 ;;      Totals:         0       0       0       0       0       0       0
  6893 ;;Total ram usage:        0 bytes
  6894 ;; Hardware stack levels used: 1
  6895 ;; This function calls:
  6896 ;;		Nothing
  6897 ;; This function is called by:
  6898 ;;		_high_isr
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           	psect	text43
  6903   001C4C                     __ptext43:
  6904                           	callstack 0
  6905   001C4C                     i2_ScanCounter:
  6906                           	callstack 21
  6907   001C4C                     
  6908                           ;Counter.c: 80:     if(!counter_enable_flg) return;
  6909   001C4C  5035               	movf	_counter_enable_flg^0,w,c
  6910   001C4E  A4D8               	btfss	status,2,c
  6911   001C50  EF2C  F00E         	goto	i2u498_41
  6912   001C54  EF2E  F00E         	goto	i2u498_40
  6913   001C58                     i2u498_41:
  6914   001C58  EF30  F00E         	goto	i2l7243
  6915   001C5C                     i2u498_40:
  6916   001C5C  EF92  F00E         	goto	i2l754
  6917   001C60                     i2l7243:
  6918                           
  6919                           ;Counter.c: 81:     if( counter_direction_flg == 1 ){
  6920   001C60  0434               	decf	_counter_direction_flg^0,w,c
  6921   001C62  A4D8               	btfss	status,2,c
  6922   001C64  EF36  F00E         	goto	i2u499_41
  6923   001C68  EF38  F00E         	goto	i2u499_40
  6924   001C6C                     i2u499_41:
  6925   001C6C  EF53  F00E         	goto	i2l7259
  6926   001C70                     i2u499_40:
  6927   001C70                     
  6928                           ;Counter.c: 82:         counter_up_second ++;
  6929   001C70  2A36               	incf	_counter_up_second^0,f,c
  6930   001C72                     
  6931                           ;Counter.c: 83:         if( counter_up_second == 60 ){
  6932   001C72  0E3C               	movlw	60
  6933   001C74  1836               	xorwf	_counter_up_second^0,w,c
  6934   001C76  A4D8               	btfss	status,2,c
  6935   001C78  EF40  F00E         	goto	i2u500_41
  6936   001C7C  EF42  F00E         	goto	i2u500_40
  6937   001C80                     i2u500_41:
  6938   001C80  EF92  F00E         	goto	i2l754
  6939   001C84                     i2u500_40:
  6940   001C84                     
  6941                           ;Counter.c: 84:             counter_up_second = 0;
  6942   001C84  0E00               	movlw	0
  6943   001C86  6E36               	movwf	_counter_up_second^0,c
  6944   001C88                     
  6945                           ;Counter.c: 85:             counter_up_minute ++;
  6946   001C88  2A37               	incf	_counter_up_minute^0,f,c
  6947   001C8A                     
  6948                           ;Counter.c: 86:             if(counter_up_minute == 60){
  6949   001C8A  0E3C               	movlw	60
  6950   001C8C  1837               	xorwf	_counter_up_minute^0,w,c
  6951   001C8E  A4D8               	btfss	status,2,c
  6952   001C90  EF4C  F00E         	goto	i2u501_41
  6953   001C94  EF4E  F00E         	goto	i2u501_40
  6954   001C98                     i2u501_41:
  6955   001C98  EF92  F00E         	goto	i2l754
  6956   001C9C                     i2u501_40:
  6957   001C9C                     
  6958                           ;Counter.c: 87:                 counter_up_minute = 0;
  6959   001C9C  0E00               	movlw	0
  6960   001C9E  6E37               	movwf	_counter_up_minute^0,c
  6961   001CA0                     
  6962                           ;Counter.c: 88:                 counter_up_hour ++;
  6963   001CA0  2A38               	incf	_counter_up_hour^0,f,c
  6964   001CA2  EF92  F00E         	goto	i2l754
  6965   001CA6                     i2l7259:
  6966   001CA6  5034               	movf	_counter_direction_flg^0,w,c
  6967   001CA8  A4D8               	btfss	status,2,c
  6968   001CAA  EF59  F00E         	goto	i2u502_41
  6969   001CAE  EF5B  F00E         	goto	i2u502_40
  6970   001CB2                     i2u502_41:
  6971   001CB2  EF92  F00E         	goto	i2l754
  6972   001CB6                     i2u502_40:
  6973   001CB6                     
  6974                           ;Counter.c: 93:         if( counter_down_hour == 0 && counter_down_minute == 0 && counte
      +                          r_down_second == 0 ) {
  6975   001CB6  503E               	movf	_counter_down_hour^0,w,c
  6976   001CB8  A4D8               	btfss	status,2,c
  6977   001CBA  EF61  F00E         	goto	i2u503_41
  6978   001CBE  EF63  F00E         	goto	i2u503_40
  6979   001CC2                     i2u503_41:
  6980   001CC2  EF7B  F00E         	goto	i2l7271
  6981   001CC6                     i2u503_40:
  6982   001CC6  503D               	movf	_counter_down_minute^0,w,c
  6983   001CC8  A4D8               	btfss	status,2,c
  6984   001CCA  EF69  F00E         	goto	i2u504_41
  6985   001CCE  EF6B  F00E         	goto	i2u504_40
  6986   001CD2                     i2u504_41:
  6987   001CD2  EF7B  F00E         	goto	i2l7271
  6988   001CD6                     i2u504_40:
  6989   001CD6  503C               	movf	_counter_down_second^0,w,c
  6990   001CD8  A4D8               	btfss	status,2,c
  6991   001CDA  EF71  F00E         	goto	i2u505_41
  6992   001CDE  EF73  F00E         	goto	i2u505_40
  6993   001CE2                     i2u505_41:
  6994   001CE2  EF7B  F00E         	goto	i2l7271
  6995   001CE6                     i2u505_40:
  6996   001CE6                     
  6997                           ;Counter.c: 94:             counter_enable_flg = 0;
  6998   001CE6  0E00               	movlw	0
  6999   001CE8  6E35               	movwf	_counter_enable_flg^0,c
  7000                           
  7001                           ;Counter.c: 95:             counter_down_comp_flg = 1; counter_down_comp_cnt = 0;
  7002   001CEA  0E01               	movlw	1
  7003   001CEC  6E31               	movwf	_counter_down_comp_flg^0,c
  7004   001CEE  0E00               	movlw	0
  7005   001CF0  6E30               	movwf	_counter_down_comp_cnt^0,c
  7006   001CF2  EF92  F00E         	goto	i2l754
  7007   001CF6                     i2l7271:
  7008                           
  7009                           ;Counter.c: 98:         counter_down_comp_flg = 0;
  7010   001CF6  0E00               	movlw	0
  7011   001CF8  6E31               	movwf	_counter_down_comp_flg^0,c
  7012   001CFA                     
  7013                           ;Counter.c: 99:         counter_down_second --;
  7014   001CFA  063C               	decf	_counter_down_second^0,f,c
  7015   001CFC                     
  7016                           ;Counter.c: 100:         if( counter_down_second < 0 ) {
  7017   001CFC  BE3C               	btfsc	_counter_down_second^0,7,c
  7018   001CFE  EF85  F00E         	goto	i2u506_40
  7019   001D02  EF83  F00E         	goto	i2u506_41
  7020   001D06                     i2u506_41:
  7021   001D06  EF92  F00E         	goto	i2l754
  7022   001D0A                     i2u506_40:
  7023   001D0A                     
  7024                           ;Counter.c: 101:             counter_down_second = 59;
  7025   001D0A  0E3B               	movlw	59
  7026   001D0C  6E3C               	movwf	_counter_down_second^0,c
  7027   001D0E                     
  7028                           ;Counter.c: 102:             counter_down_minute --;
  7029   001D0E  063D               	decf	_counter_down_minute^0,f,c
  7030   001D10                     
  7031                           ;Counter.c: 103:             if( counter_down_minute < 0 ){
  7032   001D10  BE3D               	btfsc	_counter_down_minute^0,7,c
  7033   001D12  EF8F  F00E         	goto	i2u507_40
  7034   001D16  EF8D  F00E         	goto	i2u507_41
  7035   001D1A                     i2u507_41:
  7036   001D1A  EF92  F00E         	goto	i2l754
  7037   001D1E                     i2u507_40:
  7038   001D1E                     
  7039                           ;Counter.c: 104:                 counter_down_minute = 59;
  7040   001D1E  0E3B               	movlw	59
  7041   001D20  6E3D               	movwf	_counter_down_minute^0,c
  7042   001D22                     
  7043                           ;Counter.c: 105:                 counter_down_hour --;
  7044   001D22  063E               	decf	_counter_down_hour^0,f,c
  7045   001D24                     i2l754:
  7046   001D24  0012               	return		;funcret
  7047   001D26                     __end_ofi2_ScanCounter:
  7048                           	callstack 0
  7049                           
  7050 ;; *************** function _ScanDisplay *****************
  7051 ;; Defined at:
  7052 ;;		line 34 in file "Display.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;		None
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      void 
  7059 ;; Registers used:
  7060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7066 ;;      Params:         0       0       0       0       0       0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0
  7068 ;;      Temps:          4       0       0       0       0       0       0
  7069 ;;      Totals:         4       0       0       0       0       0       0
  7070 ;;Total ram usage:        4 bytes
  7071 ;; Hardware stack levels used: 1
  7072 ;; Hardware stack levels required when called: 1
  7073 ;; This function calls:
  7074 ;;		_TLC5917Write
  7075 ;; This function is called by:
  7076 ;;		_high_isr
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text44
  7081   001438                     __ptext44:
  7082                           	callstack 0
  7083   001438                     _ScanDisplay:
  7084                           	callstack 20
  7085   001438  808A               	bsf	138,0,c	;volatile
  7086   00143A  8E8C               	bsf	140,7,c	;volatile
  7087                           
  7088                           ;Display.c: 36:     LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATCbits.LATC5 = 
      +                          LATBbits.LATB1 = LATBbits.LATB5 = LATDbits.LATD7 = LATBbits.LATB0 = 1;
  7089   00143C  8A8A               	bsf	138,5,c	;volatile
  7090   00143E  828A               	bsf	138,1,c	;volatile
  7091   001440  8A8B               	bsf	139,5,c	;volatile
  7092   001442  808B               	bsf	139,0,c	;volatile
  7093   001444  828B               	bsf	139,1,c	;volatile
  7094   001446  848B               	bsf	139,2,c	;volatile
  7095   001448                     
  7096                           ;Display.c: 37:     display_cnt ++;
  7097   001448  2A2E               	incf	_display_cnt^0,f,c
  7098   00144A                     
  7099                           ;Display.c: 38:     if( blink_pos[ display_cnt - 1 ] && blink_cnt < BLINK_TIME / 2 && bl
      +                          ink_enable_flg ) return;
  7100   00144A  502E               	movf	_display_cnt^0,w,c
  7101   00144C  0F7F               	addlw	low (_blink_pos+255)
  7102   00144E  6ED9               	movwf	fsr2l,c
  7103   001450  6ADA               	clrf	fsr2h,c
  7104   001452  50DF               	movf	indf2,w,c
  7105   001454  B4D8               	btfsc	status,2,c
  7106   001456  EF2F  F00A         	goto	i2u472_41
  7107   00145A  EF31  F00A         	goto	i2u472_40
  7108   00145E                     i2u472_41:
  7109   00145E  EFB7  F00A         	goto	i2l6913
  7110   001462                     i2u472_40:
  7111   001462  90D8               	bcf	status,0,c
  7112   001464  3014               	rrcf	(_BLINK_TIME+1)^0,w,c
  7113   001466  6E58               	movwf	(??_ScanDisplay+1)^0,c
  7114   001468  3013               	rrcf	_BLINK_TIME^0,w,c
  7115   00146A  6E57               	movwf	??_ScanDisplay^0,c
  7116   00146C  502D               	movf	_blink_cnt^0,w,c
  7117   00146E  6E59               	movwf	(??_ScanDisplay+2)^0,c
  7118   001470  6A5A               	clrf	(??_ScanDisplay+3)^0,c
  7119   001472  5057               	movf	??_ScanDisplay^0,w,c
  7120   001474  5C59               	subwf	(??_ScanDisplay+2)^0,w,c
  7121   001476  5058               	movf	(??_ScanDisplay+1)^0,w,c
  7122   001478  585A               	subwfb	(??_ScanDisplay+3)^0,w,c
  7123   00147A  B0D8               	btfsc	status,0,c
  7124   00147C  EF42  F00A         	goto	i2u473_41
  7125   001480  EF44  F00A         	goto	i2u473_40
  7126   001484                     i2u473_41:
  7127   001484  EFB7  F00A         	goto	i2l6913
  7128   001488                     i2u473_40:
  7129   001488  502F               	movf	_blink_enable_flg^0,w,c
  7130   00148A  B4D8               	btfsc	status,2,c
  7131   00148C  EF4A  F00A         	goto	i2u474_41
  7132   001490  EF4C  F00A         	goto	i2u474_40
  7133   001494                     i2u474_41:
  7134   001494  EFB7  F00A         	goto	i2l6913
  7135   001498                     i2u474_40:
  7136   001498  EF16  F00B         	goto	i2l854
  7137   00149C                     i2l6871:
  7138   00149C  0100               	movlb	0	; () banked
  7139   00149E  5188               	movf	_display_datas& (0+255),w,b
  7140   0014A0  6E51               	movwf	TLC5917Write@data^0,c
  7141   0014A2  6A52               	clrf	(TLC5917Write@data+1)^0,c
  7142   0014A4  BE51               	btfsc	TLC5917Write@data^0,7,c
  7143   0014A6  0652               	decf	(TLC5917Write@data+1)^0,f,c
  7144   0014A8  EC9D  F010         	call	_TLC5917Write	;wreg free
  7145   0014AC  948B               	bcf	139,2,c	;volatile
  7146   0014AE  EFE4  F00A         	goto	i2l6915
  7147   0014B2                     i2l6875:
  7148   0014B2  0100               	movlb	0	; () banked
  7149   0014B4  5189               	movf	(_display_datas+1)& (0+255),w,b
  7150   0014B6  6E51               	movwf	TLC5917Write@data^0,c
  7151   0014B8  6A52               	clrf	(TLC5917Write@data+1)^0,c
  7152   0014BA  BE51               	btfsc	TLC5917Write@data^0,7,c
  7153   0014BC  0652               	decf	(TLC5917Write@data+1)^0,f,c
  7154   0014BE  EC9D  F010         	call	_TLC5917Write	;wreg free
  7155   0014C2  928B               	bcf	139,1,c	;volatile
  7156   0014C4  EFE4  F00A         	goto	i2l6915
  7157   0014C8                     i2l6879:
  7158   0014C8  0100               	movlb	0	; () banked
  7159   0014CA  518A               	movf	(_display_datas+2)& (0+255),w,b
  7160   0014CC  6E51               	movwf	TLC5917Write@data^0,c
  7161   0014CE  6A52               	clrf	(TLC5917Write@data+1)^0,c
  7162   0014D0  BE51               	btfsc	TLC5917Write@data^0,7,c
  7163   0014D2  0652               	decf	(TLC5917Write@data+1)^0,f,c
  7164   0014D4  EC9D  F010         	call	_TLC5917Write	;wreg free
  7165   0014D8  908B               	bcf	139,0,c	;volatile
  7166   0014DA  EFE4  F00A         	goto	i2l6915
  7167   0014DE                     i2l6883:
  7168   0014DE  0100               	movlb	0	; () banked
  7169   0014E0  518B               	movf	(_display_datas+3)& (0+255),w,b
  7170   0014E2  6E51               	movwf	TLC5917Write@data^0,c
  7171   0014E4  6A52               	clrf	(TLC5917Write@data+1)^0,c
  7172   0014E6  BE51               	btfsc	TLC5917Write@data^0,7,c
  7173   0014E8  0652               	decf	(TLC5917Write@data+1)^0,f,c
  7174   0014EA  EC9D  F010         	call	_TLC5917Write	;wreg free
  7175   0014EE  9A8B               	bcf	139,5,c	;volatile
  7176   0014F0  EFE4  F00A         	goto	i2l6915
  7177   0014F4                     i2l6887:
  7178   0014F4  0100               	movlb	0	; () banked
  7179   0014F6  518C               	movf	(_display_datas+4)& (0+255),w,b
  7180   0014F8  6E51               	movwf	TLC5917Write@data^0,c
  7181   0014FA  6A52               	clrf	(TLC5917Write@data+1)^0,c
  7182   0014FC  BE51               	btfsc	TLC5917Write@data^0,7,c
  7183   0014FE  0652               	decf	(TLC5917Write@data+1)^0,f,c
  7184   001500  EC9D  F010         	call	_TLC5917Write	;wreg free
  7185   001504  928A               	bcf	138,1,c	;volatile
  7186   001506  EFE4  F00A         	goto	i2l6915
  7187   00150A                     i2l6891:
  7188   00150A  0100               	movlb	0	; () banked
  7189   00150C  518D               	movf	(_display_datas+5)& (0+255),w,b
  7190   00150E  6E51               	movwf	TLC5917Write@data^0,c
  7191   001510  6A52               	clrf	(TLC5917Write@data+1)^0,c
  7192   001512  BE51               	btfsc	TLC5917Write@data^0,7,c
  7193   001514  0652               	decf	(TLC5917Write@data+1)^0,f,c
  7194   001516  EC9D  F010         	call	_TLC5917Write	;wreg free
  7195   00151A  9A8A               	bcf	138,5,c	;volatile
  7196   00151C  EFE4  F00A         	goto	i2l6915
  7197   001520                     i2l6895:
  7198   001520  0100               	movlb	0	; () banked
  7199   001522  5186               	movf	(_blink_pos+6)& (0+255),w,b
  7200   001524  B4D8               	btfsc	status,2,c
  7201   001526  EF97  F00A         	goto	i2u475_41
  7202   00152A  EF99  F00A         	goto	i2u475_40
  7203   00152E                     i2u475_41:
  7204   00152E  EFA0  F00A         	goto	i2l6899
  7205   001532                     i2u475_40:
  7206   001532                     
  7207                           ; BSR set to: 0
  7208   001532  0E00               	movlw	0
  7209   001534  6E52               	movwf	(TLC5917Write@data+1)^0,c
  7210   001536  6851               	setf	TLC5917Write@data^0,c
  7211   001538  EC9D  F010         	call	_TLC5917Write	;wreg free
  7212   00153C  EFA6  F00A         	goto	i2l6901
  7213   001540                     i2l6899:
  7214                           
  7215                           ; BSR set to: 0
  7216   001540  0E00               	movlw	0
  7217   001542  6E52               	movwf	(TLC5917Write@data+1)^0,c
  7218   001544  0E00               	movlw	0
  7219   001546  6E51               	movwf	TLC5917Write@data^0,c
  7220   001548  EC9D  F010         	call	_TLC5917Write	;wreg free
  7221   00154C                     i2l6901:
  7222   00154C  9E8C               	bcf	140,7,c	;volatile
  7223   00154E  EFE4  F00A         	goto	i2l6915
  7224   001552                     i2l6903:
  7225   001552  0100               	movlb	0	; () banked
  7226   001554  518F               	movf	(_display_datas+7)& (0+255),w,b
  7227   001556  6E51               	movwf	TLC5917Write@data^0,c
  7228   001558  6A52               	clrf	(TLC5917Write@data+1)^0,c
  7229   00155A  BE51               	btfsc	TLC5917Write@data^0,7,c
  7230   00155C  0652               	decf	(TLC5917Write@data+1)^0,f,c
  7231   00155E  EC9D  F010         	call	_TLC5917Write	;wreg free
  7232   001562  908A               	bcf	138,0,c	;volatile
  7233   001564  0E00               	movlw	0
  7234   001566  6E2E               	movwf	_display_cnt^0,c
  7235   001568  2A2D               	incf	_blink_cnt^0,f,c
  7236   00156A  EFE4  F00A         	goto	i2l6915
  7237   00156E                     i2l6913:
  7238   00156E  502E               	movf	_display_cnt^0,w,c
  7239   001570  6E57               	movwf	??_ScanDisplay^0,c
  7240   001572  6A58               	clrf	(??_ScanDisplay+1)^0,c
  7241                           
  7242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7243                           ; Switch size 1, requested type "simple"
  7244                           ; Number of cases is 1, Range of values is 0 to 0
  7245                           ; switch strategies available:
  7246                           ; Name         Instructions Cycles
  7247                           ; simple_byte            4     3 (average)
  7248                           ;	Chosen strategy is simple_byte
  7249   001574  5058               	movf	(??_ScanDisplay+1)^0,w,c
  7250   001576  0A00               	xorlw	0	; case 0
  7251   001578  B4D8               	btfsc	status,2,c
  7252   00157A  EFC1  F00A         	goto	i2l10327
  7253   00157E  EFE4  F00A         	goto	i2l6915
  7254   001582                     i2l10327:
  7255                           
  7256                           ; Switch size 1, requested type "simple"
  7257                           ; Number of cases is 8, Range of values is 1 to 8
  7258                           ; switch strategies available:
  7259                           ; Name         Instructions Cycles
  7260                           ; simple_byte           25    13 (average)
  7261                           ;	Chosen strategy is simple_byte
  7262   001582  5057               	movf	??_ScanDisplay^0,w,c
  7263   001584  0A01               	xorlw	1	; case 1
  7264   001586  B4D8               	btfsc	status,2,c
  7265   001588  EF4E  F00A         	goto	i2l6871
  7266   00158C  0A03               	xorlw	3	; case 2
  7267   00158E  B4D8               	btfsc	status,2,c
  7268   001590  EF59  F00A         	goto	i2l6875
  7269   001594  0A01               	xorlw	1	; case 3
  7270   001596  B4D8               	btfsc	status,2,c
  7271   001598  EF64  F00A         	goto	i2l6879
  7272   00159C  0A07               	xorlw	7	; case 4
  7273   00159E  B4D8               	btfsc	status,2,c
  7274   0015A0  EF6F  F00A         	goto	i2l6883
  7275   0015A4  0A01               	xorlw	1	; case 5
  7276   0015A6  B4D8               	btfsc	status,2,c
  7277   0015A8  EF7A  F00A         	goto	i2l6887
  7278   0015AC  0A03               	xorlw	3	; case 6
  7279   0015AE  B4D8               	btfsc	status,2,c
  7280   0015B0  EF85  F00A         	goto	i2l6891
  7281   0015B4  0A01               	xorlw	1	; case 7
  7282   0015B6  B4D8               	btfsc	status,2,c
  7283   0015B8  EF90  F00A         	goto	i2l6895
  7284   0015BC  0A0F               	xorlw	15	; case 8
  7285   0015BE  B4D8               	btfsc	status,2,c
  7286   0015C0  EFA9  F00A         	goto	i2l6903
  7287   0015C4  EFE4  F00A         	goto	i2l6915
  7288   0015C8                     i2l6915:
  7289                           
  7290                           ;Display.c: 49:     if( blink_cnt == BLINK_TIME ) {
  7291   0015C8  502D               	movf	_blink_cnt^0,w,c
  7292   0015CA  6E57               	movwf	??_ScanDisplay^0,c
  7293   0015CC  6A58               	clrf	(??_ScanDisplay+1)^0,c
  7294   0015CE  5013               	movf	_BLINK_TIME^0,w,c
  7295   0015D0  1857               	xorwf	??_ScanDisplay^0,w,c
  7296   0015D2  E107               	bnz	i2u476_41
  7297   0015D4  5014               	movf	(_BLINK_TIME+1)^0,w,c
  7298   0015D6  1858               	xorwf	(??_ScanDisplay+1)^0,w,c
  7299   0015D8  A4D8               	btfss	status,2,c
  7300   0015DA  EFF1  F00A         	goto	i2u476_41
  7301   0015DE  EFF3  F00A         	goto	i2u476_40
  7302   0015E2                     i2u476_41:
  7303   0015E2  EF16  F00B         	goto	i2l854
  7304   0015E6                     i2u476_40:
  7305   0015E6                     
  7306                           ;Display.c: 50:         blink_cnt = 0;
  7307   0015E6  0E00               	movlw	0
  7308   0015E8  6E2D               	movwf	_blink_cnt^0,c
  7309                           
  7310                           ;Display.c: 51:         if( counter_down_comp_flg ) counter_down_comp_cnt ++;
  7311   0015EA  5031               	movf	_counter_down_comp_flg^0,w,c
  7312   0015EC  B4D8               	btfsc	status,2,c
  7313   0015EE  EFFB  F00A         	goto	i2u477_41
  7314   0015F2  EFFD  F00A         	goto	i2u477_40
  7315   0015F6                     i2u477_41:
  7316   0015F6  EFFE  F00A         	goto	i2l6921
  7317   0015FA                     i2u477_40:
  7318   0015FA  2A30               	incf	_counter_down_comp_cnt^0,f,c
  7319   0015FC                     i2l6921:
  7320                           
  7321                           ;Display.c: 52:         if( counter_down_comp_cnt > 5 && counter_down_comp_flg ) {
  7322   0015FC  0E05               	movlw	5
  7323   0015FE  6430               	cpfsgt	_counter_down_comp_cnt^0,c
  7324   001600  EF04  F00B         	goto	i2u478_41
  7325   001604  EF06  F00B         	goto	i2u478_40
  7326   001608                     i2u478_41:
  7327   001608  EF16  F00B         	goto	i2l854
  7328   00160C                     i2u478_40:
  7329   00160C  5031               	movf	_counter_down_comp_flg^0,w,c
  7330   00160E  B4D8               	btfsc	status,2,c
  7331   001610  EF0C  F00B         	goto	i2u479_41
  7332   001614  EF0E  F00B         	goto	i2u479_40
  7333   001618                     i2u479_41:
  7334   001618  EF16  F00B         	goto	i2l854
  7335   00161C                     i2u479_40:
  7336   00161C                     
  7337                           ;Display.c: 53:             counter_down_comp_flg = 0; blink_enable_flg = 0; counter_dow
      +                          n_comp_cnt = 5;
  7338   00161C  0E00               	movlw	0
  7339   00161E  6E31               	movwf	_counter_down_comp_flg^0,c
  7340   001620  0E00               	movlw	0
  7341   001622  6E2F               	movwf	_blink_enable_flg^0,c
  7342   001624  0E05               	movlw	5
  7343   001626  6E30               	movwf	_counter_down_comp_cnt^0,c
  7344                           
  7345                           ;Display.c: 54:             SYSTEM_STATE_FLG = 203;
  7346   001628  0ECB               	movlw	203
  7347   00162A  6E45               	movwf	_SYSTEM_STATE_FLG^0,c
  7348   00162C                     i2l854:
  7349   00162C  0012               	return		;funcret
  7350   00162E                     __end_of_ScanDisplay:
  7351                           	callstack 0
  7352                           
  7353 ;; *************** function _TLC5917Write *****************
  7354 ;; Defined at:
  7355 ;;		line 24 in file "TLC5917.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;  data            2    0[COMRAM] unsigned int 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  i               1    5[COMRAM] unsigned char 
  7360 ;;  temp            2    3[COMRAM] unsigned int 
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      void 
  7363 ;; Registers used:
  7364 ;;		wreg, status,2, status,0
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7370 ;;      Params:         2       0       0       0       0       0       0
  7371 ;;      Locals:         3       0       0       0       0       0       0
  7372 ;;      Temps:          1       0       0       0       0       0       0
  7373 ;;      Totals:         6       0       0       0       0       0       0
  7374 ;;Total ram usage:        6 bytes
  7375 ;; Hardware stack levels used: 1
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_ScanDisplay
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text45
  7384   00213A                     __ptext45:
  7385                           	callstack 0
  7386   00213A                     _TLC5917Write:
  7387                           	callstack 20
  7388   00213A                     
  7389                           ;TLC5917.c: 26:     unsigned int temp = data;
  7390   00213A  C051  F054         	movff	TLC5917Write@data,TLC5917Write@temp
  7391   00213E  C052  F055         	movff	TLC5917Write@data+1,TLC5917Write@temp+1
  7392                           
  7393                           ;TLC5917.c: 27:     PORTAbits.RA0 = 0; PORTAbits.RA5 = 0; PORTAbits.RA3 = 1;
  7394   002142  9080               	bcf	128,0,c	;volatile
  7395   002144  9A80               	bcf	128,5,c	;volatile
  7396   002146  8680               	bsf	128,3,c	;volatile
  7397   002148                     
  7398                           ;TLC5917.c: 28:     for( unsigned char i = 0; i < 8; i++ ){
  7399   002148  0E00               	movlw	0
  7400   00214A  6E56               	movwf	TLC5917Write@i^0,c
  7401   00214C                     i2l6047:
  7402                           
  7403                           ;TLC5917.c: 29:         PORTAbits.RA0 = (temp & 0x80) ? 1 : 0; _delay((unsigned long)((1
      +                          )*(32000000UL/4000000.0)));
  7404   00214C  BE54               	btfsc	TLC5917Write@temp^0,7,c
  7405   00214E  EFAB  F010         	goto	i2u369_41
  7406   002152  EFAF  F010         	goto	i2u369_40
  7407   002156                     i2u369_41:
  7408   002156  6A53               	clrf	??_TLC5917Write^0,c
  7409   002158  2A53               	incf	??_TLC5917Write^0,f,c
  7410   00215A  EFB0  F010         	goto	i2u370_48
  7411   00215E                     i2u369_40:
  7412   00215E  6A53               	clrf	??_TLC5917Write^0,c
  7413   002160                     i2u370_48:
  7414   002160  5080               	movf	128,w,c	;volatile
  7415   002162  1853               	xorwf	??_TLC5917Write^0,w,c
  7416   002164  0BFE               	andlw	-2
  7417   002166  1853               	xorwf	??_TLC5917Write^0,w,c
  7418   002168  6E80               	movwf	128,c	;volatile
  7419   00216A  D000               	nop2		;2 cycle nop
  7420   00216C  D000               	nop2		;2 cycle nop
  7421   00216E  D000               	nop2		;2 cycle nop
  7422   002170  D000               	nop2		;2 cycle nop
  7423   002172                     
  7424                           ;TLC5917.c: 30:         PORTAbits.RA1 = 1; _delay((unsigned long)((1)*(32000000UL/400000
      +                          0.0))); PORTAbits.RA1 = 0; _delay((unsigned long)((1)*(32000000UL/4000000.0)));
  7425   002172  8280               	bsf	128,1,c	;volatile
  7426   002174  D000               	nop2		;2 cycle nop
  7427   002176  D000               	nop2		;2 cycle nop
  7428   002178  D000               	nop2		;2 cycle nop
  7429   00217A  D000               	nop2		;2 cycle nop
  7430   00217C  9280               	bcf	128,1,c	;volatile
  7431   00217E  D000               	nop2		;2 cycle nop
  7432   002180  D000               	nop2		;2 cycle nop
  7433   002182  D000               	nop2		;2 cycle nop
  7434   002184  D000               	nop2		;2 cycle nop
  7435                           
  7436                           ;TLC5917.c: 31:         temp = temp << 1;
  7437   002186  90D8               	bcf	status,0,c
  7438   002188  3454               	rlcf	TLC5917Write@temp^0,w,c
  7439   00218A  6E54               	movwf	TLC5917Write@temp^0,c
  7440   00218C  3455               	rlcf	(TLC5917Write@temp+1)^0,w,c
  7441   00218E  6E55               	movwf	(TLC5917Write@temp+1)^0,c
  7442   002190                     
  7443                           ;TLC5917.c: 32:     }
  7444   002190  2A56               	incf	TLC5917Write@i^0,f,c
  7445   002192  0E07               	movlw	7
  7446   002194  6456               	cpfsgt	TLC5917Write@i^0,c
  7447   002196  EFCF  F010         	goto	i2u371_41
  7448   00219A  EFD1  F010         	goto	i2u371_40
  7449   00219E                     i2u371_41:
  7450   00219E  EFA6  F010         	goto	i2l6047
  7451   0021A2                     i2u371_40:
  7452   0021A2                     
  7453                           ;TLC5917.c: 33:     PORTAbits.RA5 = 1; _delay((unsigned long)((1)*(32000000UL/4000000.0)
      +                          )); PORTAbits.RA5 = 0; _delay((unsigned long)((1)*(32000000UL/4000000.0)));
  7454   0021A2  8A80               	bsf	128,5,c	;volatile
  7455   0021A4  D000               	nop2		;2 cycle nop
  7456   0021A6  D000               	nop2		;2 cycle nop
  7457   0021A8  D000               	nop2		;2 cycle nop
  7458   0021AA  D000               	nop2		;2 cycle nop
  7459   0021AC  9A80               	bcf	128,5,c	;volatile
  7460   0021AE  D000               	nop2		;2 cycle nop
  7461   0021B0  D000               	nop2		;2 cycle nop
  7462   0021B2  D000               	nop2		;2 cycle nop
  7463   0021B4  D000               	nop2		;2 cycle nop
  7464                           
  7465                           ;TLC5917.c: 34:     PORTAbits.RA3 = 0; _delay((unsigned long)((2)*(32000000UL/4000000.0)
      +                          ));
  7466   0021B6  9680               	bcf	128,3,c	;volatile
  7467   0021B8  0E05               	movlw	5
  7468   0021BA                     i2u720_47:
  7469   0021BA  2EE8               	decfsz	wreg,f,c
  7470   0021BC  D7FE               	bra	i2u720_47
  7471   0021BE  0000               	nop	
  7472   0021C0  0012               	return		;funcret
  7473   0021C2                     __end_of_TLC5917Write:
  7474                           	callstack 0
  7475                           
  7476 ;; *************** function _ScanButtons *****************
  7477 ;; Defined at:
  7478 ;;		line 27 in file "Buttons.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;		None
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;		None
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  1    wreg      void 
  7485 ;; Registers used:
  7486 ;;		wreg, status,2, status,0
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7492 ;;      Params:         0       0       0       0       0       0       0
  7493 ;;      Locals:         0       0       0       0       0       0       0
  7494 ;;      Temps:          0       0       0       0       0       0       0
  7495 ;;      Totals:         0       0       0       0       0       0       0
  7496 ;;Total ram usage:        0 bytes
  7497 ;; Hardware stack levels used: 1
  7498 ;; This function calls:
  7499 ;;		Nothing
  7500 ;; This function is called by:
  7501 ;;		_high_isr
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           	psect	text46
  7506   00162E                     __ptext46:
  7507                           	callstack 0
  7508   00162E                     _ScanButtons:
  7509                           	callstack 21
  7510   00162E                     
  7511                           ;Buttons.c: 29:     if( PORTAbits.RA7 == 0 ) { hour_btn_released_cnt = 0; hour_btn_press
      +                          ed_cnt ++; BTN_CLICK_EVENT = 1; }
  7512   00162E  BE80               	btfsc	128,7,c	;volatile
  7513   001630  EF1C  F00B         	goto	i2u480_41
  7514   001634  EF1E  F00B         	goto	i2u480_40
  7515   001638                     i2u480_41:
  7516   001638  EF26  F00B         	goto	i2l6939
  7517   00163C                     i2u480_40:
  7518   00163C  0E00               	movlw	0
  7519   00163E  6E08               	movwf	(_hour_btn_released_cnt+1)^0,c
  7520   001640  0E00               	movlw	0
  7521   001642  6E07               	movwf	_hour_btn_released_cnt^0,c
  7522   001644  4A11               	infsnz	_hour_btn_pressed_cnt^0,f,c
  7523   001646  2A12               	incf	(_hour_btn_pressed_cnt+1)^0,f,c
  7524   001648  0E01               	movlw	1
  7525   00164A  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  7526   00164C                     i2l6939:
  7527                           
  7528                           ;Buttons.c: 30:     if( PORTAbits.RA7 == 1 && BTN_CLICK_EVENT == 1 ){ hour_btn_pressed_c
      +                          nt = 0; hour_btn_released_cnt ++; }
  7529   00164C  AE80               	btfss	128,7,c	;volatile
  7530   00164E  EF2B  F00B         	goto	i2u481_41
  7531   001652  EF2D  F00B         	goto	i2u481_40
  7532   001656                     i2u481_41:
  7533   001656  EF3B  F00B         	goto	i2l6947
  7534   00165A                     i2u481_40:
  7535   00165A  042B               	decf	_BTN_CLICK_EVENT^0,w,c
  7536   00165C  A4D8               	btfss	status,2,c
  7537   00165E  EF33  F00B         	goto	i2u482_41
  7538   001662  EF35  F00B         	goto	i2u482_40
  7539   001666                     i2u482_41:
  7540   001666  EF3B  F00B         	goto	i2l6947
  7541   00166A                     i2u482_40:
  7542   00166A  0E00               	movlw	0
  7543   00166C  6E12               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  7544   00166E  0E00               	movlw	0
  7545   001670  6E11               	movwf	_hour_btn_pressed_cnt^0,c
  7546   001672  4A07               	infsnz	_hour_btn_released_cnt^0,f,c
  7547   001674  2A08               	incf	(_hour_btn_released_cnt+1)^0,f,c
  7548   001676                     i2l6947:
  7549                           
  7550                           ;Buttons.c: 32:     if( PORTAbits.RA4 == 0 ) { up_btn_released_cnt = 0; up_btn_pressed_c
      +                          nt ++; BTN_CLICK_EVENT = 2; }
  7551   001676  B880               	btfsc	128,4,c	;volatile
  7552   001678  EF40  F00B         	goto	i2u483_41
  7553   00167C  EF42  F00B         	goto	i2u483_40
  7554   001680                     i2u483_41:
  7555   001680  EF4A  F00B         	goto	i2l6955
  7556   001684                     i2u483_40:
  7557   001684  0E00               	movlw	0
  7558   001686  6E06               	movwf	(_up_btn_released_cnt+1)^0,c
  7559   001688  0E00               	movlw	0
  7560   00168A  6E05               	movwf	_up_btn_released_cnt^0,c
  7561   00168C  4A0F               	infsnz	_up_btn_pressed_cnt^0,f,c
  7562   00168E  2A10               	incf	(_up_btn_pressed_cnt+1)^0,f,c
  7563   001690  0E02               	movlw	2
  7564   001692  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  7565   001694                     i2l6955:
  7566                           
  7567                           ;Buttons.c: 33:     if( PORTAbits.RA4 == 1 && BTN_CLICK_EVENT == 2 ){ up_btn_pressed_cnt
      +                           = 0; up_btn_released_cnt ++; }
  7568   001694  A880               	btfss	128,4,c	;volatile
  7569   001696  EF4F  F00B         	goto	i2u484_41
  7570   00169A  EF51  F00B         	goto	i2u484_40
  7571   00169E                     i2u484_41:
  7572   00169E  EF60  F00B         	goto	i2l6963
  7573   0016A2                     i2u484_40:
  7574   0016A2  0E02               	movlw	2
  7575   0016A4  182B               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7576   0016A6  A4D8               	btfss	status,2,c
  7577   0016A8  EF58  F00B         	goto	i2u485_41
  7578   0016AC  EF5A  F00B         	goto	i2u485_40
  7579   0016B0                     i2u485_41:
  7580   0016B0  EF60  F00B         	goto	i2l6963
  7581   0016B4                     i2u485_40:
  7582   0016B4  0E00               	movlw	0
  7583   0016B6  6E10               	movwf	(_up_btn_pressed_cnt+1)^0,c
  7584   0016B8  0E00               	movlw	0
  7585   0016BA  6E0F               	movwf	_up_btn_pressed_cnt^0,c
  7586   0016BC  4A05               	infsnz	_up_btn_released_cnt^0,f,c
  7587   0016BE  2A06               	incf	(_up_btn_released_cnt+1)^0,f,c
  7588   0016C0                     i2l6963:
  7589                           
  7590                           ;Buttons.c: 35:     if( PORTAbits.RA6 == 0 ) { down_btn_released_cnt = 0; down_btn_press
      +                          ed_cnt ++; BTN_CLICK_EVENT = 3; }
  7591   0016C0  BC80               	btfsc	128,6,c	;volatile
  7592   0016C2  EF65  F00B         	goto	i2u486_41
  7593   0016C6  EF67  F00B         	goto	i2u486_40
  7594   0016CA                     i2u486_41:
  7595   0016CA  EF6F  F00B         	goto	i2l6971
  7596   0016CE                     i2u486_40:
  7597   0016CE  0E00               	movlw	0
  7598   0016D0  6E04               	movwf	(_down_btn_released_cnt+1)^0,c
  7599   0016D2  0E00               	movlw	0
  7600   0016D4  6E03               	movwf	_down_btn_released_cnt^0,c
  7601   0016D6  4A0D               	infsnz	_down_btn_pressed_cnt^0,f,c
  7602   0016D8  2A0E               	incf	(_down_btn_pressed_cnt+1)^0,f,c
  7603   0016DA  0E03               	movlw	3
  7604   0016DC  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  7605   0016DE                     i2l6971:
  7606                           
  7607                           ;Buttons.c: 36:     if( PORTAbits.RA6 == 1 && BTN_CLICK_EVENT == 3 ){ down_btn_pressed_c
      +                          nt = 0; down_btn_released_cnt ++; }
  7608   0016DE  AC80               	btfss	128,6,c	;volatile
  7609   0016E0  EF74  F00B         	goto	i2u487_41
  7610   0016E4  EF76  F00B         	goto	i2u487_40
  7611   0016E8                     i2u487_41:
  7612   0016E8  EF85  F00B         	goto	i2l6979
  7613   0016EC                     i2u487_40:
  7614   0016EC  0E03               	movlw	3
  7615   0016EE  182B               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7616   0016F0  A4D8               	btfss	status,2,c
  7617   0016F2  EF7D  F00B         	goto	i2u488_41
  7618   0016F6  EF7F  F00B         	goto	i2u488_40
  7619   0016FA                     i2u488_41:
  7620   0016FA  EF85  F00B         	goto	i2l6979
  7621   0016FE                     i2u488_40:
  7622   0016FE  0E00               	movlw	0
  7623   001700  6E0E               	movwf	(_down_btn_pressed_cnt+1)^0,c
  7624   001702  0E00               	movlw	0
  7625   001704  6E0D               	movwf	_down_btn_pressed_cnt^0,c
  7626   001706  4A03               	infsnz	_down_btn_released_cnt^0,f,c
  7627   001708  2A04               	incf	(_down_btn_released_cnt+1)^0,f,c
  7628   00170A                     i2l6979:
  7629                           
  7630                           ;Buttons.c: 38:     if( PORTBbits.RB4 == 0 ) { sel_btn_released_cnt = 0; sel_btn_pressed
      +                          _cnt ++; BTN_CLICK_EVENT = 4; }
  7631   00170A  B881               	btfsc	129,4,c	;volatile
  7632   00170C  EF8A  F00B         	goto	i2u489_41
  7633   001710  EF8C  F00B         	goto	i2u489_40
  7634   001714                     i2u489_41:
  7635   001714  EF94  F00B         	goto	i2l6987
  7636   001718                     i2u489_40:
  7637   001718  0E00               	movlw	0
  7638   00171A  6E02               	movwf	(_sel_btn_released_cnt+1)^0,c
  7639   00171C  0E00               	movlw	0
  7640   00171E  6E01               	movwf	_sel_btn_released_cnt^0,c
  7641   001720  4A0B               	infsnz	_sel_btn_pressed_cnt^0,f,c
  7642   001722  2A0C               	incf	(_sel_btn_pressed_cnt+1)^0,f,c
  7643   001724  0E04               	movlw	4
  7644   001726  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  7645   001728                     i2l6987:
  7646                           
  7647                           ;Buttons.c: 39:     if( PORTBbits.RB4 == 1 && BTN_CLICK_EVENT == 4 ){ sel_btn_pressed_cn
      +                          t = 0; sel_btn_released_cnt ++; }
  7648   001728  A881               	btfss	129,4,c	;volatile
  7649   00172A  EF99  F00B         	goto	i2u490_41
  7650   00172E  EF9B  F00B         	goto	i2u490_40
  7651   001732                     i2u490_41:
  7652   001732  EFAA  F00B         	goto	i2l6995
  7653   001736                     i2u490_40:
  7654   001736  0E04               	movlw	4
  7655   001738  182B               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7656   00173A  A4D8               	btfss	status,2,c
  7657   00173C  EFA2  F00B         	goto	i2u491_41
  7658   001740  EFA4  F00B         	goto	i2u491_40
  7659   001744                     i2u491_41:
  7660   001744  EFAA  F00B         	goto	i2l6995
  7661   001748                     i2u491_40:
  7662   001748  0E00               	movlw	0
  7663   00174A  6E0C               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  7664   00174C  0E00               	movlw	0
  7665   00174E  6E0B               	movwf	_sel_btn_pressed_cnt^0,c
  7666   001750  4A01               	infsnz	_sel_btn_released_cnt^0,f,c
  7667   001752  2A02               	incf	(_sel_btn_released_cnt+1)^0,f,c
  7668   001754                     i2l6995:
  7669                           
  7670                           ;Buttons.c: 41:     if( PORTDbits.RD6 == 0 ) { reset_btn_released_cnt = 0; reset_btn_pre
      +                          ssed_cnt ++; BTN_CLICK_EVENT = 5; }
  7671   001754  BC83               	btfsc	131,6,c	;volatile
  7672   001756  EFAF  F00B         	goto	i2u492_41
  7673   00175A  EFB1  F00B         	goto	i2u492_40
  7674   00175E                     i2u492_41:
  7675   00175E  EFBA  F00B         	goto	i2l7003
  7676   001762                     i2u492_40:
  7677   001762  0E00               	movlw	0
  7678   001764  0100               	movlb	0	; () banked
  7679   001766  6FC5               	movwf	(_reset_btn_released_cnt+1)& (0+255),b
  7680   001768  0E00               	movlw	0
  7681   00176A  6FC4               	movwf	_reset_btn_released_cnt& (0+255),b
  7682   00176C                     
  7683                           ; BSR set to: 0
  7684   00176C  4A09               	infsnz	_reset_btn_pressed_cnt^0,f,c
  7685   00176E  2A0A               	incf	(_reset_btn_pressed_cnt+1)^0,f,c
  7686   001770                     
  7687                           ; BSR set to: 0
  7688   001770  0E05               	movlw	5
  7689   001772  6E2B               	movwf	_BTN_CLICK_EVENT^0,c
  7690   001774                     i2l7003:
  7691                           
  7692                           ;Buttons.c: 42:     if( PORTDbits.RD6 == 1 && BTN_CLICK_EVENT == 5 ){ reset_btn_pressed_
      +                          cnt = 0; reset_btn_released_cnt ++; }
  7693   001774  AC83               	btfss	131,6,c	;volatile
  7694   001776  EFBF  F00B         	goto	i2u493_41
  7695   00177A  EFC1  F00B         	goto	i2u493_40
  7696   00177E                     i2u493_41:
  7697   00177E  EFD1  F00B         	goto	i2l1061
  7698   001782                     i2u493_40:
  7699   001782  0E05               	movlw	5
  7700   001784  182B               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7701   001786  A4D8               	btfss	status,2,c
  7702   001788  EFC8  F00B         	goto	i2u494_41
  7703   00178C  EFCA  F00B         	goto	i2u494_40
  7704   001790                     i2u494_41:
  7705   001790  EFD1  F00B         	goto	i2l1061
  7706   001794                     i2u494_40:
  7707   001794  0E00               	movlw	0
  7708   001796  6E0A               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  7709   001798  0E00               	movlw	0
  7710   00179A  6E09               	movwf	_reset_btn_pressed_cnt^0,c
  7711   00179C  0100               	movlb	0	; () banked
  7712   00179E  4BC4               	infsnz	_reset_btn_released_cnt& (0+255),f,b
  7713   0017A0  2BC5               	incf	(_reset_btn_released_cnt+1)& (0+255),f,b
  7714   0017A2                     i2l1061:
  7715   0017A2  0012               	return		;funcret
  7716   0017A4                     __end_of_ScanButtons:
  7717                           	callstack 0
  7718                           
  7719                           	psect	rparam
  7720   000000                     
  7721                           	psect	temp
  7722   000070                     btemp:
  7723                           	callstack 0
  7724   000070                     	ds	1
  7725   000000                     int$flags	set	btemp
  7726   000000                     wtemp8	set	btemp+1
  7727   000000                     ttemp5	set	btemp+1
  7728   000000                     ttemp6	set	btemp+4
  7729   000000                     ttemp7	set	btemp+8
  7730                           
  7731                           	psect	config
  7732                           
  7733                           ; Padding undefined space
  7734   300000                     	org	3145728
  7735   300000  FF                 	db	255
  7736                           
  7737                           ;Config register CONFIG1H @ 0x300001
  7738                           ;	Oscillator Selection bits
  7739                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7740                           ;	Fail-Safe Clock Monitor Enable bit
  7741                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7742                           ;	Internal/External Oscillator Switchover bit
  7743                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7744   300001                     	org	3145729
  7745   300001  08                 	db	8
  7746                           
  7747                           ;Config register CONFIG2L @ 0x300002
  7748                           ;	Power-up Timer Enable bit
  7749                           ;	PWRT = OFF, PWRT disabled
  7750                           ;	Brown-out Reset Enable bits
  7751                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7752                           ;	Brown Out Reset Voltage bits
  7753                           ;	BORV = 3, Minimum setting
  7754   300002                     	org	3145730
  7755   300002  1F                 	db	31
  7756                           
  7757                           ;Config register CONFIG2H @ 0x300003
  7758                           ;	Watchdog Timer Enable bit
  7759                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7760                           ;	Watchdog Timer Postscale Select bits
  7761                           ;	WDTPS = 32768, 1:32768
  7762   300003                     	org	3145731
  7763   300003  1E                 	db	30
  7764                           
  7765                           ; Padding undefined space
  7766   300004                     	org	3145732
  7767   300004  FF                 	db	255
  7768                           
  7769                           ;Config register CONFIG3H @ 0x300005
  7770                           ;	CCP2 MUX bit
  7771                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7772                           ;	PORTB A/D Enable bit
  7773                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7774                           ;	Low-Power Timer1 Oscillator Enable bit
  7775                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7776                           ;	MCLR Pin Enable bit
  7777                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  7778   300005                     	org	3145733
  7779   300005  01                 	db	1
  7780                           
  7781                           ;Config register CONFIG4L @ 0x300006
  7782                           ;	Stack Full/Underflow Reset Enable bit
  7783                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  7784                           ;	Single-Supply ICSP Enable bit
  7785                           ;	LVP = OFF, Single-Supply ICSP disabled
  7786                           ;	Extended Instruction Set Enable bit
  7787                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7788                           ;	Background Debugger Enable bit
  7789                           ;	DEBUG = 0x1, unprogrammed default
  7790   300006                     	org	3145734
  7791   300006  80                 	db	128
  7792                           
  7793                           ; Padding undefined space
  7794   300007                     	org	3145735
  7795   300007  FF                 	db	255
  7796                           
  7797                           ;Config register CONFIG5L @ 0x300008
  7798                           ;	Code Protection bit
  7799                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  7800                           ;	Code Protection bit
  7801                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  7802                           ;	Code Protection bit
  7803                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  7804                           ;	Code Protection bit
  7805                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  7806   300008                     	org	3145736
  7807   300008  0F                 	db	15
  7808                           
  7809                           ;Config register CONFIG5H @ 0x300009
  7810                           ;	Boot Block Code Protection bit
  7811                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7812                           ;	Data EEPROM Code Protection bit
  7813                           ;	CPD = OFF, Data EEPROM not code-protected
  7814   300009                     	org	3145737
  7815   300009  C0                 	db	192
  7816                           
  7817                           ;Config register CONFIG6L @ 0x30000A
  7818                           ;	Write Protection bit
  7819                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  7820                           ;	Write Protection bit
  7821                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  7822                           ;	Write Protection bit
  7823                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  7824                           ;	Write Protection bit
  7825                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  7826   30000A                     	org	3145738
  7827   30000A  0F                 	db	15
  7828                           
  7829                           ;Config register CONFIG6H @ 0x30000B
  7830                           ;	Configuration Register Write Protection bit
  7831                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7832                           ;	Boot Block Write Protection bit
  7833                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  7834                           ;	Data EEPROM Write Protection bit
  7835                           ;	WRTD = OFF, Data EEPROM not write-protected
  7836   30000B                     	org	3145739
  7837   30000B  E0                 	db	224
  7838                           
  7839                           ;Config register CONFIG7L @ 0x30000C
  7840                           ;	Table Read Protection bit
  7841                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  7842                           ;	Table Read Protection bit
  7843                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  7844                           ;	Table Read Protection bit
  7845                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  7846                           ;	Table Read Protection bit
  7847                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7848   30000C                     	org	3145740
  7849   30000C  0F                 	db	15
  7850                           
  7851                           ;Config register CONFIG7H @ 0x30000D
  7852                           ;	Boot Block Table Read Protection bit
  7853                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7854   30000D                     	org	3145741
  7855   30000D  40                 	db	64
  7856                           tosu	equ	0xFFF
  7857                           tosh	equ	0xFFE
  7858                           tosl	equ	0xFFD
  7859                           stkptr	equ	0xFFC
  7860                           pclatu	equ	0xFFB
  7861                           pclath	equ	0xFFA
  7862                           pcl	equ	0xFF9
  7863                           tblptru	equ	0xFF8
  7864                           tblptrh	equ	0xFF7
  7865                           tblptrl	equ	0xFF6
  7866                           tablat	equ	0xFF5
  7867                           prodh	equ	0xFF4
  7868                           prodl	equ	0xFF3
  7869                           indf0	equ	0xFEF
  7870                           postinc0	equ	0xFEE
  7871                           postdec0	equ	0xFED
  7872                           preinc0	equ	0xFEC
  7873                           plusw0	equ	0xFEB
  7874                           fsr0h	equ	0xFEA
  7875                           fsr0l	equ	0xFE9
  7876                           wreg	equ	0xFE8
  7877                           indf1	equ	0xFE7
  7878                           postinc1	equ	0xFE6
  7879                           postdec1	equ	0xFE5
  7880                           preinc1	equ	0xFE4
  7881                           plusw1	equ	0xFE3
  7882                           fsr1h	equ	0xFE2
  7883                           fsr1l	equ	0xFE1
  7884                           bsr	equ	0xFE0
  7885                           indf2	equ	0xFDF
  7886                           postinc2	equ	0xFDE
  7887                           postdec2	equ	0xFDD
  7888                           preinc2	equ	0xFDC
  7889                           plusw2	equ	0xFDB
  7890                           fsr2h	equ	0xFDA
  7891                           fsr2l	equ	0xFD9
  7892                           status	equ	0xFD8

Data Sizes:
    Strings     76
    Constant    0
    Data        54
    BSS         188
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     23     111
    BANK0           128      2     128
    BANK1           256     15      43
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Ds1307Write@write_datas	PTR unsigned char  size(1) Largest target is 7
		 -> real_rtc_data(COMRAM[7]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    Puts1USART@data	PTR unsigned char  size(1) Largest target is 43
		 -> STR_1(CODE[43]), 

    S3910$buffer	PTR unsigned char  size(2) Largest target is 0

    S3910$source	PTR const unsigned char  size(2) Largest target is 0

    sp__Ds1307Read	PTR unsigned char  size(2) Largest target is 6
		 -> Ds1307Read@ds1307_date_datas(BANK1[6]), 

    sp__ReadCounter	PTR unsigned char  size(2) Largest target is 6
		 -> ReadCounter@counter_datas(BANK1[6]), 

    UpdateDisplay@update_datas	PTR unsigned char  size(2) Largest target is 6
		 -> Ds1307Read@ds1307_date_datas(BANK1[6]), ReadCounter@counter_datas(BANK1[6]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_3(CODE[11]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_VerifyButtons
    _VerifyButtons->_ActionButtons
    _ActionButtons->_Ds1307Write
    _Ds1307Write->_I2cWrite
    _ReadCounter->___awdiv
    _Puts1USART->_Write1USART
    _Ds1307Read->_I2cRead
    _DeviceInit->_WriteTimer0
    _ClockSetting->_MarkDisplay

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_ScanDisplay
    _ScanDisplay->_TLC5917Write

Critical Paths under _main in BANK0

    _main->_ReadCounter
    _UpdateDisplay->_ReadCounter

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UpdateDisplay
    _UpdateDisplay->_Ds1307Read

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8774
                                             13 BANK1      2     2      0
                       _BlinkDisable
                       _ClockSetting
                         _DeviceInit
                         _Ds1307Read
                        _Ds1307Write
                         _LEDProcess
                         _Puts1USART
                        _ReadCounter
                      _UpdateDisplay
                      _VerifyButtons
 ---------------------------------------------------------------------------------
 (1) _VerifyButtons                                        2     2      0    1071
                                             21 COMRAM     2     2      0
                      _ActionButtons
 ---------------------------------------------------------------------------------
 (2) _ActionButtons                                        3     3      0    1071
                                             18 COMRAM     3     3      0
                        _Ds1307Write
                       _StartCounter
                        _StopCounter
 ---------------------------------------------------------------------------------
 (3) _StopCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartCounter                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Ds1307Write                                          2     1      1     722
                                             16 COMRAM     2     1      1
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (1) _UpdateDisplay                                        5     1      4    1885
                                              8 BANK1      5     1      4
                         _Ds1307Read (ARG)
                        _MarkDisplay
                        _ReadCounter (ARG)
 ---------------------------------------------------------------------------------
 (1) _ReadCounter                                          8     6      2    3448
                                              0 BANK0      2     0      2
                                              0 BANK1      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1513
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1525
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Puts1USART                                           2     1      1     142
                                             16 COMRAM     2     1      1
                         _Busy1USART
                        _Write1USART
 ---------------------------------------------------------------------------------
 (2) _Write1USART                                          1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Busy1USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDProcess                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ds1307Read                                          12    10      2     827
                                             17 COMRAM     4     2      2
                                              0 BANK1      8     8      0
                            _I2cRead
                         _I2cRestart
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (4) _I2cWrite                                             1     1      0      31
                                             15 COMRAM     1     1      0
                            _I2cWait
 ---------------------------------------------------------------------------------
 (4) _I2cStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2cRestart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2cRead                                              2     2      0      68
                                             15 COMRAM     2     2      0
                            _I2cWait
 ---------------------------------------------------------------------------------
 (5) _I2cWait                                              0     0      0       0
                            _I2cStop
 ---------------------------------------------------------------------------------
 (6) _I2cStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DeviceInit                                           0     0      0     580
                       _DetectStatus
                         _Ds1307Init
                _EnableAllInterrupts
                          _InitValue
                         _Open1USART
                        _OpenButtons
                        _OpenCounter
                        _OpenDisplay
                         _OpenTimer0
                     _OscillatorInit
                        _StartTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     194
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _StartTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OscillatorInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenDisplay                                          1     1      0      90
                                             15 COMRAM     1     1      0
                        _TLC5917Init
 ---------------------------------------------------------------------------------
 (3) _TLC5917Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenButtons                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     252
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitValue                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EnableAllInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ds1307Init                                           0     0      0       0
                            _I2cInit
 ---------------------------------------------------------------------------------
 (3) _I2cInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DetectStatus                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClockSetting                                         0     0      0      31
                        _MarkDisplay
 ---------------------------------------------------------------------------------
 (2) _MarkDisplay                                          3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _BlinkDisable                                         1     1      0      68
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                              3     3      0       0
                                             12 COMRAM     3     3      0
                        _ScanCounter
 ---------------------------------------------------------------------------------
 (8) _ScanCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_isr                                             2     2      0     892
                                             10 COMRAM     2     2      0
                        _ScanButtons
                        _ScanDisplay
                      i2_ScanCounter
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (10) i2_WriteTimer0                                       4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) i2_ScanCounter                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ScanDisplay                                         4     4      0     798
                                              6 COMRAM     4     4      0
                       _TLC5917Write
 ---------------------------------------------------------------------------------
 (11) _TLC5917Write                                        6     4      2     798
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (10) _ScanButtons                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlinkDisable
   _ClockSetting
     _MarkDisplay
   _DeviceInit
     _DetectStatus
     _Ds1307Init
       _I2cInit
     _EnableAllInterrupts
     _InitValue
     _Open1USART
     _OpenButtons
     _OpenCounter
     _OpenDisplay
       _TLC5917Init
     _OpenTimer0
     _OscillatorInit
     _StartTimer0
     _WriteTimer0
   _Ds1307Read
     _I2cRead
       _I2cWait
         _I2cStop
     _I2cRestart
     _I2cStart
     _I2cStop
     _I2cWrite
       _I2cWait
   _Ds1307Write
     _I2cStart
     _I2cStop
     _I2cWrite
   _LEDProcess
   _Puts1USART
     _Busy1USART
     _Write1USART
   _ReadCounter
     ___awdiv
     ___awmod
   _UpdateDisplay
     _Ds1307Read (ARG)
     _MarkDisplay (ARG)
     _ReadCounter (ARG)
   _VerifyButtons
     _ActionButtons
       _Ds1307Write
       _StartCounter
       _StopCounter

 _low_isr (ROOT)
   _ScanCounter

 _high_isr (ROOT)
   _ScanButtons
   _ScanDisplay
     _TLC5917Write
   i2_ScanCounter
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      F      2B       7       16.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80      2      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     17      6F       1       88.1%
BITBIGSFRhhhll      18      0       0      17        0.0%
BITBIGSFRlhllhh      D      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRllllh       6      0       0      30        0.0%
BITBIGSFRlllh        5      0       0      29        0.0%
BITBIGSFRllh         5      0       0      28        0.0%
BITBIGSFRlhllhl      4      0       0      25        0.0%
BITBIGSFRlhhhh       2      0       0      19        0.0%
BITBIGSFRlhlh        2      0       0      21        0.0%
BITBIGSFRlhllhl      1      0       0      24        0.0%
BITBIGSFRlhllhl      1      0       0      23        0.0%
BITBIGSFRlhllhl      1      0       0      26        0.0%
BITBIGSFRlhhl        1      0       0      20        0.0%
BITBIGSFRlhlll       1      0       0      27        0.0%
BITBIGSFRhl          1      0       0      18        0.0%
BITBIGSFRlllll       1      0       0      31        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11A      32        0.0%
DATA                 0      0     11A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Nov 09 09:04:30 2023

                          l7 2676              ??_UpdateDisplay 0068                  _SSPSTATbits 0FC7  
                         l41 1A60                           l28 2684                           l45 1A96  
                         l49 1B70                 ___awdiv@sign 0065                           bsr 0FE0  
   ReadCounter@counter_datas 0116    UpdateDisplay@end_position 0121                          l100 25FC  
                ?_LEDProcess 0051                          l103 2600                          l112 2632  
                        l121 2546                          l106 260E                          l123 2554  
                        l115 2612                          l131 25A2                          l140 24C4  
                        l109 2624                          l125 2566                          l134 2492  
                        l118 2620                          l303 109E                          l136 24A0  
                        l128 2590                          l137 24B4                          l139 24C2  
                        l334 23BE                          l351 220A                          l360 24F2  
                        l328 2374                          l441 251C                          l354 2246  
                        l450 269C                          l348 20A4                          l439 251A  
                        l447 2644                          l369 2656                          l299 1024  
                        l732 244E                          l646 26A0                          l750 2692  
                        l850 231A                          l738 190A                          l747 2698  
                        l880 1436                          l929 2588                          l875 248C  
       __end_of_BlinkDisable 258A                  ?_Ds1307Init 0051                  ?_Ds1307Read 0062  
                        _cnt 00C2                 ___awmod@sign 0065                          wreg 0FE8  
                 _TXSTA1bits 0FAC                ??_MarkDisplay 0060              __end_of_I2cInit 25FE  
            __end_of_I2cRead 24C6              __end_of_I2cWait 2568              __end_of_I2cStop 2634  
           _SYSTEM_STATE_FLG 0045                         l1102 0FA4                         l1104 101E  
                       l1113 068E                         l1130 0788                         l1122 06E0  
                       l1114 0C82                         l1132 07DC                         l1125 0740  
                       l1070 0CF0                         l1135 0840                         l1048 22B4  
                       l1153 0998                         l1082 0DF6                         l1075 0D54  
                       l1067 0CB2                         l1092 0EC4                         l1085 0E34  
                       l1078 0D92                         l1095 0F02                         l2083 1DE8  
                       l1099 0F66                         l1703 2544                         l1720 2406  
                       l2096 1F58                         l1715 23C0                         l1680 1E50  
                       l1682 1E66                         l1691 25D2                         l1684 1E7C  
                       l1685 1E7E                         l1678 1E3A                         l1687 1EA8  
                       l6503 25D0                         l6511 253E                         l5801 2408  
                       l6513 2540                         l9001 0A8C                         l5811 244C  
                       l5803 2444                         l6507 2520                         l9003 0A8E  
                       l5805 2446                         l5813 22B6                         l6509 252E  
                       l9021 0AC8                         l9005 0AA0                         l5647 25EA  
                       l5751 2680                         l5831 2248                         l5807 2448  
                       l5823 22DE                         l5815 22D6                         l9031 0AD8  
                       l9023 0ACC                         l9015 0ABC                         l5649 25F0  
                       l5841 24EE                         l5833 2252                         l5809 244A  
                       l5825 22F4                         l5817 22DA                         l9201 1DE0  
                       l9113 0BB6                         l9025 0AD0                         l9017 0AC0  
                       l9009 0AA8                         l5771 21E6                         l5835 24C6  
                       l5851 1E12                         l5843 1DEC                         l5827 22F6  
                       l5747 266A                         l6651 2324                         l6811 2002  
                       l9211 1EC4                         l9115 0BDE                         l9107 0BA2  
                       l9019 0AC4                         l9131 0C38                         l6805 256C  
                       l5781 2234                         l5773 21F4                         l5749 2678  
                       l5765 269E                         l5861 1E3C                         l5853 1E16  
                       l5845 1DF4                         l5693 2646                         l5829 2306  
                       l6661 2346                         l6653 232C                         l6821 2042  
                       l6813 2008                         l9221 1EF8                         l9213 1EC8  
                       l9205 1EAA                         l9117 0BE2                         l9061 0B48  
                       l9301 0CAE                         l6807 2576                         l5783 2242  
                       l5775 2202                         l5767 21C2                         l5839 24DC  
                       l5871 1E76                         l5863 1E4A                         l5855 1E24  
                       l5847 1E02                         l5791 2504                         l6671 235A  
                       l6663 234A                         l6655 2330                         l6647 231C  
                       l6831 2090                         l6823 2048                         l6815 201A  
                       l9231 1F32                         l9223 1F00                         l9215 1ED6  
                       l9207 1EAE                         l5695 2694                         l9127 0BEE  
                       l9119 0BE6                         l9071 0B64                         l9047 0B00  
                       l9039 0AEC                         l9303 0CBE                         l6809 2578  
                       l5777 2218                         l5769 21D8                         l5873 1E98  
                       l5865 1E52                         l5857 1E26                         l5849 1E04  
                       l5793 2506                         l5785 24F6                         l6673 2368  
                       l6665 234E                         l6657 2336                         l6649 2320  
                       l9241 1910                         l6825 205A                         l6817 202C  
                       l6497 25BC                         l9161 1D26                         l9225 1F0E  
                       l9233 1F38                         l9217 1EDE                         l9209 1EBC  
                       l8601 1AEE                         l5697 268E                         l9057 0B42  
                       l9401 0FC4                         l9321 0D50                         l9313 0CF8  
                       l9305 0CC6                         l5779 2226                         l5875 1EA6  
                       l5867 1E60                         l5859 1E34                         l5795 2514  
                       l5787 24FC                         l6675 236C                         l6667 2352  
                       l6659 2342                         l9243 1914                         l6827 206C  
                       l6819 203C                         l6499 25CA                         l9171 1D52  
                       l9163 1D2A                         l9235 1F48                         l9227 1F24  
                       l9219 1EF0                         l8611 1B26                         l8603 1AF4  
                       l9067 0B5E                         l9059 0B46                         l9323 0D60  
                       l9315 0D0E                         l9307 0CDC                         l5869 1E68  
                       l5789 2500                         l5797 2634                         l6669 2356  
                       l9261 1954                         l9245 191A                         l6829 207E  
                       l9181 1D80                         l9173 1D5A                         l9165 1D38  
                       l9237 1F50                         l9229 1F2C                         l9421 17A4  
                       l8621 1B6C                         l8613 1B36                         l8605 1AFA  
                       l9077 0B7A                         l9069 0B62                         l9341 0DF2  
                       l9333 0D9A                         l9325 0D68                         l9317 0D2A  
                       l9309 0CEC                         l9405 0FDC                         l5799 269A  
                       l8631 24A8                         l8623 2610                         l9271 199E  
                       l9263 195C                         l9255 1930                         l9247 1924  
                       l9191 1DBA                         l9183 1D88                         l9175 1D5E  
                       l9167 1D40                         l9423 17B4                         l8615 1B46  
                       l8607 1B06                         l9343 0E02                         l9335 0DB0  
                       l9327 0D7E                         l9319 0D40                         l8713 1298  
                       l8705 128C                         l8641 1238                         l8633 24B2  
                       l8625 2490                         l9273 19A8                         l9281 1A20  
                       l9265 1970                         l9257 1940                         l9249 192A  
                       l6793 23C0                         l9193 1DBC                         l9185 1D96  
                       l9177 1D66                         l9169 1D44                         l9425 1848  
                       l8617 1B56                         l8609 1B16                         l8801 0672  
                       l9361 0E92                         l9353 0E3C                         l9345 0E0A  
                       l9337 0DCC                         l9329 0D8E                         l8635 122E  
                       l9419 2376                         l8571 2546                         l8627 2490  
                       l9275 19D0                         l9283 1A54                         l9267 1980  
                       l9259 1944                         l6795 23D4                         l9195 1DC2  
                       l9187 1D9C                         l9179 1D78                         l9427 1858  
                       l8619 1B66                         l9099 0B8E                         l8811 069E  
                       l8803 0682                         l9371 0ED8                         l9363 0E9A  
                       l9355 0E52                         l9347 0E20                         l9339 0DE2  
                       l8741 12B0                         l8733 12AA                         l8717 129E  
                       l8709 1292                         l8661 1256                         l8653 124A  
                       l8645 123E                         l8637 1232                         l8573 2562  
                       l8629 24A4                         l9285 1A58                         l9277 19F8  
                       l9269 198A                         l6797 23E4                         l9189 1DB2  
                       l9197 1DC8                         l9429 1900                         l8581 1A62  
                       l8821 06E4                         l8805 068A                         l9381 0F20  
                       l9373 0EEE                         l9365 0EB0                         l9357 0E7A  
                       l9349 0E30                         l6799 2568                         l8575 25FE  
                       l9199 1DD8                         l8591 1AB6                         l8583 1A70  
                       l8903 08D6                         l8831 073C                         l8823 06E6  
                       l8807 0692                         l9391 0F7A                         l9383 0F3C  
                       l9375 0EFE                         l9367 0EC0                         l9359 0E82  
                       l9295 0C84                         l8761 12C8                         l8745 12B6  
                       l8729 12A4                         l8681 1274                         l8673 1268  
                       l8665 125C                         l8657 1250                         l8649 1244  
                       l8569 2622                         l8577 258C                         l8593 1AC6  
                       l8585 1A80                         l8841 0784                         l8833 0748  
                       l8825 0714                         l9393 0F90                         l9385 0F52  
                       l9369 0ED0                         l9297 0C88                         l8579 259E  
                       l8595 1AD6                         l8587 1A90                         l8915 091A  
                       l8907 08EA                         l8851 07A8                         l8835 0758  
                       l8843 078C                         l8827 0718                         l8819 06A6  
                       l9395 0FA0                         l9387 0F62                         l9379 0F0A  
                       l9299 0C9E                         l8781 12E0                         l8765 12CE  
                       l8757 12C2                         l8749 12BC                         l8693 1280  
                       l8677 126E                         l8669 1262                         l8589 1AAC  
                       l8597 1ADC                         l8941 097C                         l8917 0944  
                       l8909 0912                         l8853 07AA                         l8837 076C  
                       l8829 0728                         l9389 0F72                         l9901 10C2  
                       l8791 12EC                         l8599 1AEA                         l8943 098C  
                       l8871 083C                         l8863 0804                         l8855 07D8  
                       l8847 07A0                         l8839 077C                         l9399 0FAC  
                       l9911 10DE                         l9903 10C6                         l8785 12E6  
                       l8777 12DA                         l8769 12D4                         l8697 1286  
                       l8689 127A                         l8961 09EC                         l8953 09D0  
                       l8937 095C                         l8881 0868                         l8873 0854  
                       l8865 0808                         l8857 07F0                         l8849 07A4  
                       l9921 10FC                         l9913 10E6                         l9905 10CC  
                       l8947 09A4                         l8939 096C                         l8891 08BE  
                       l8883 089A                         l8875 0858                         l8867 080C  
                       l8859 07F4                         l9923 1102                         l9915 10EA  
                       l9907 10D4                         l8981 0A5E                         l8893 08C2  
                       l8885 08AE                         l8869 080E                         l8797 064E  
                       l9941 1186                         l9925 1106                         l9917 10F0  
                       l9909 10D8                         l9863 2450                         l8991 0A6C  
                       l8983 0A62                         l8959 09E4                         l8895 08C6  
                       l8887 08B2                         l8799 065E                         l9951 11CE  
                       l9927 110A                         l9919 10F8                         l9935 1112  
                       l9871 1020                         STR_1 0601                         l9865 245A  
                       l8993 0A6E                         l8969 0A00                         l8897 08CA  
                       l8889 08B6                         l9961 11EC                         l9945 118E  
                       l9937 115E                         l9881 1060                         l9873 1028  
                       STR_3 0642                         STR_4 062C                         l9867 2476  
                       l8995 0A80                         l8979 0A14                         l8899 08CE  
                       l9947 11BA                         l9939 1166                         l9875 103A  
                       l9883 1064                         l9869 247A                         l8989 0A68  
                       l9893 10A0                         l9885 1074                         l9877 1050  
                       l8999 0A88                         l9895 10AC                         l9887 1084  
                       l9879 1058                         l9897 10B4                         l9889 108C  
                       l9899 10B8                         u4100 25CA                         u4101 25C6  
                       u4110 252E                         u4111 252A                         u4120 253E  
                       u4121 253A                         u3500 21F4                         u3501 21F0  
                       u3510 2202                         u3511 21FE                         _PIE1 0F9D  
                       u3520 2218                         u3600 1E02                         u3521 2214  
                       u3601 1DFE                         u3530 2226                         u3610 1E12  
                       u3531 2222                         u3611 1E0E                         u3540 2234  
                       u3620 1E24                         u3541 2230                         u3621 1E20  
                       u3550 2242                         u3630 1E34                         u6110 2632  
                       u3551 223E                         u3631 1E30                         u6111 262E  
                       u4600 2588                         u3480 21D8                         u3640 1E4A  
                       u3560 2514                         u6120 2554                         u6200 1AD6  
                       u7000 0F20                         u4601 2584                         u3481 21D4  
                       u3641 1E46                         u3561 2510                         u6121 2550  
                       u6201 1AD2                         u7001 0F1C                         u3490 21E6  
                       u3650 1E60                         u3570 2306                         u6130 2562  
                       u6210 2620                         u4610 201A                         u7010 0F52  
                       u3491 21E2                         u3651 1E5C                         u3571 2302  
                       u6131 255E                         u6211 261C                         u4611 2016  
                       u7011 0F4E                         u3580 24D8                         u3660 1E76  
                       u6220 24A0                         u6140 260E                         u4620 202C  
                       u6300 0758                         u7020 0F62                         u3581 24D4  
                       u3661 1E72                         u6221 249C                         u6141 260A  
                       u4621 2028                         u6301 0754                         u7021 0F5E  
                       u3590 24EE                         u3670 1E98                         u6150 259E  
                       u4630 203C                         u6310 076C                         u7030 0F90  
                       u3591 24EA                         u3671 1E94                         u6151 259A  
                       u4631 2038                         u6311 0768                         u7031 0F8C  
                       u3680 1EA6                         u6240 24C2                         u4640 205A  
                       u6160 1A80                         u6400 0910                         u6320 077C  
                       u7040 0FA0                         u3681 1EA2                         u6241 24BE  
                       u4641 2056                         u6161 1A7C                         u6321 0778  
                       u7041 0F9C                         u4650 206C                         u6170 1A90  
                       u6410 0958                         u6330 07D8                         u6250 065E  
                       u7050 0FC4                         u6235 24B0                         u4651 2068  
                       u6171 1A8C                         u6411 0954                         u6331 07D4  
                       u6251 065A                         u7051 0FC0                         u6236 24B2  
                       u4660 207E                         u4580 23D4                         u7140 248C  
                       u6180 1AAC                         u6500 0AA0                         u6420 096C  
                       u6340 07F0                         u6260 0682                         u4661 207A  
                       u4581 23D0                         u7141 2488                         u6181 1AA8  
                       u6501 0A9C                         u6421 0968                         u6341 07EC  
                       u6261 067E                         u4670 2090                         u4590 2406  
                       u7070 17B4                         u6190 1AC6                         u6510 0AB8  
                       u6430 098C                         u6350 083C                         u6270 0714  
                       u7150 103A                         u4671 208C                         u4591 2402  
                       u7071 17B0                         u6191 1AC2                         u6511 0AB4  
                       u6431 0988                         u6351 0838                         u6271 0710  
                       u7151 1036                         u4680 20A0                         u7080 1858  
                       u6600 0BDC                         u6520 0AE8                         u6440 09C8  
                       u6360 0854                         u6280 0728                         u7160 1050  
                       u4681 209C                         u7081 1854                         u6521 0AE4  
                       u6441 09C2                         u6361 0850                         u6281 0724  
                       u7161 104C                         u6610 1D38                         u6530 0AFC  
                       u6450 09CA                         u6370 08AE                         u6290 073C  
                       u7170 1074                         u6611 1D34                         u6531 0AF8  
                       u6371 08AA                         u6291 0738                         u7171 1070  
                       u6620 1D52                         u6700 1F0E                         u6540 0B5A  
                       u6460 09E0                         u6380 08E6                         u7180 109A  
                       u6621 1D4E                         u6701 1F0A                         u6541 0B56  
                       u6461 09DC                         u6381 08E2                         u7181 1096  
                       u6630 1D78                         u6710 1F24                         u6550 0B76  
                       u6470 09FC                         u6390 090E                         u7190 11CA  
                       u6631 1D74                         u6711 1F20                         u6551 0B72  
                       u6471 09F8                         u6391 0908                         u7191 11C6  
                       u6640 1D96                         u6720 1F48                         u6560 0B8A  
                       u6480 0A10                         u6800 0CAE                         u6641 1D92  
                       u6721 1F44                         u6561 0B86                         u6481 0A0C  
                       u6801 0CAA                         u6730 1954                         u6650 1DB2  
                       u6570 0B9E                         u6490 0A80                         u6810 0CDC  
                       u6731 1950                         u6651 1DAE                         u6571 0B9A  
                       u6491 0A7C                         u6811 0CD8                         u6740 196C  
                       u6660 1DD8                         u6580 0BB2                         u6900 0DF2  
                       u6820 0CEC                         u6741 1966                         u6661 1DD4  
                       u6581 0BAE                         u6901 0DEE                         u6821 0CE8  
                       u6750 196E                         u6670 1EBC                         u6590 0BDA  
                       u6910 0E20                         u6830 0D0E                         u6671 1EB8  
                       u6591 0BD4                         u6911 0E1C                         u6831 0D0A  
                       u6760 1980                         u6680 1ED6                         u6920 0E30  
                       u6840 0D40                         u6761 197C                         u6681 1ED2  
                       u6921 0E2C                         u6841 0D3C                         u6770 199A  
                       u6690 1EF0                         u6930 0E52                         u6850 0D50  
                       u6771 1994                         u6691 1EEC                         u6931 0E4E  
                       u6851 0D4C                         u6780 199C                         u6940 0E7A  
                       u6860 0D7E                         u6941 0E76                         u6861 0D7A  
                       u6950 0E92                         u6870 0D8E                         u6790 0C9E  
                       u6951 0E8E                         u6871 0D8A                         u6791 0C9A  
                       u6960 0EB0                         u6880 0DB0                         u6961 0EAC  
                       u6881 0DAC                         u6970 0EC0                         u6890 0DE2  
                       u6971 0EBC                         u6891 0DDE                         u6980 0EEE  
                       u6981 0EEA                         u6990 0EFE                         u6991 0EFA  
                       _TMR2 0FCC         __end_of_DetectStatus 2248                         _main 1020  
               ?_Ds1307Write 0061                         fsr2h 0FDA                         indf1 0FE7  
                       indf2 0FDF                         fsr1l 0FE1                         fsr2l 0FD9  
                       btemp 0070                         start 0058                 ?_TLC5917Init 0051  
              ??_ReadCounter 0068                 ___param_bank 0000             __end_of_I2cStart 2610  
           __end_of_I2cWrite 25A4                   _DeviceInit 231C         __end_of_ClockSetting 23C0  
                      l10301 1128                        l10311 087C                        l10303 11A4  
                      l10321 0C4C                        l10313 092E                        l10305 1202  
                      l10323 1A36                        l10315 0A28                        l10307 0FF0  
                      l10325 1300                        l10317 0B14                        l10309 06BA  
                      l10319 0C02              ??i2_ScanCounter 0051                        ?_main 0051  
              ??_ScanDisplay 0057              __end_of___awdiv 1DEA                        _EEADR 0FA9  
            __end_of___awmod 1F5A                   _Gateway_IP 009C                        _T0CON 0FD5  
            ___awdiv@divisor 0062                        _T1CON 0FCD                        _T2CON 0FCA  
                      _T3CON 0FB1                ??_ScanCounter 005D                        i1l643 0048  
                      i1l754 1C4A                        i2l373 21A2                        i2l374 21C0  
                      i2l447 2668                        i2l633 1FD4                        i2l636 1FF6  
                      i2l754 1D24                        i2l854 162C              ___awdiv@counter 0064  
              ??_ScanButtons 0051                        _TMR0H 0FD7                        _TMR1H 0FCF  
                      _TMR0L 0FD6                        _TMR1L 0FCE                        _TMR3H 0FB3  
                      _TMR3L 0FB2           _rtc_default_values 0100  Ds1307Read@ds1307_date_datas 0118  
                 _Busy1USART 25BC              __end_of_low_isr 0058                        tablat 0FF5  
        __end_of_MarkDisplay 1438                        ttemp5 0071                        ttemp6 0074  
                      ttemp7 0078                        status 0FD8                        wtemp8 0071  
            __initialization 20A6                  Ds1307Read@i 0117                 __end_of_main 122C  
              ?_TLC5917Write 0051          _up_btn_released_cnt 0005                ??_OpenDisplay 0060  
              ??_OpenCounter 0060                   _Open1USART 1DEA                ??_OpenButtons 0060  
UpdateDisplay@start_position 0120                       ??_main 0123          __end_of_ReadCounter 190C  
              i2_WriteTimer0 2658                    ??_I2cInit 0060                    ??_I2cRead 0060  
                  ??_I2cWait 0060               _OscillatorInit 266A                __activetblptr 0002  
                  ??_I2cStop 0060          __end_of_ScanDisplay 162E                       _ADCON0 0FC2  
                     _ADCON1 0FC1       Ds1307Write@write_datas 0061                       _EEDATA 0FA8  
        __end_of_ScanCounter 1C4C                       _EECON2 0FA7             ___awdiv@dividend 0060  
        __end_of_ScanButtons 17A4                       _S0_DIP 00E2                       _S1_DIP 00DE  
                     i2l1061 17A2                       _S2_DIP 00DA                       i1l4541 0044  
                     i1l4535 0026                       i1l4537 0034                       i1l3931 1B98  
                     i1l3923 1B72                       i1l4539 0042                       i1l3941 1BC6  
                     i1l3933 1BAA                       i1l3951 1C0C                       i1l3935 1BAE  
                     i1l3943 1BCC                       i1l3927 1B86                       i1l3961 1C30  
                     i1l3945 1BDC                       i1l3937 1BB0                       i1l3929 1B96  
                 _OpenTimer0 24F4                       _S3_DIP 00D6                       i1l3963 1C34  
                     i1l3947 1BEC                       i1l3955 1C1C                       i1l3939 1BC2  
                     i1l3965 1C36                       i1l3957 1C20                       i1l3949 1BFC  
                     i1l3967 1C44                       i1l3959 1C22                       i1l3969 1C48  
                     i2l7001 1770                       i2l6041 2148                       _S4_DIP 00D2  
                     i2l7003 1774                       i2l6051 2172                       i2l7005 1782  
                     i2l6061 2192                       i2l6053 2174                       i2l7007 1794  
                     i2l6063 21B8                       i2l6055 217C                       i2l6047 214C  
                     i2l6039 213A                       i2l7009 179C                       i2l6057 217E  
                     i2l6049 216A                       i2l6059 2190                       i2l7401 1F92  
                     _S5_DIP 00CE                       i2l7251 1C88                       i2l7243 1C60  
                     i2l7411 1FBA                       i2l7403 1F96                       i2l7261 1CB6  
                     i2l7253 1C8A                       i2l7245 1C70                       i2l7237 2658  
                     i2l7421 1FF2                       i2l7413 1FCC                       i2l7405 1F9C  
                     i2l7263 1CC6                       i2l7271 1CF6                       i2l7255 1C9C  
                     i2l7247 1C72                       i2l7239 1C4C                       i2l7407 1FB0  
                     i2l7281 1D10                       i2l7273 1CFA                       i2l7265 1CD6  
                     i2l7257 1CA0                       i2l7249 1C84                       i2l7417 1FE2  
                     i2l7409 1FB2                       i2l7283 1D1E                       i2l7275 1CFC  
                     i2l7267 1CE6                       i2l7259 1CA6                       i2l7419 1FF0  
                     i2l6901 154C                       i2l7285 1D22                       i2l7277 1D0A  
                     i2l6903 1552                       i2l7279 1D0E                       i2l7391 1F64  
                     i2l6921 15FC                       i2l6905 1562                       i2l6913 156E  
                     i2l7393 1F72                       _S6_DIP 00CA                       i2l6931 162E  
                     i2l6923 160C                       i2l6907 1564                       i2l6915 15C8  
                     i2l7395 1F80                       i2l6941 165A                       i2l6933 163C  
                     i2l6925 161C                       i2l6917 15E6                       i2l6909 1568  
                     i2l6861 1448                       i2l7397 1F82                       i2l6951 168C  
                     i2l6943 166A                       i2l6935 1644                       i2l6919 15FA  
                     i2l6871 149C                       i2l6863 144A                       i2l7399 1F8E  
                     i2l6961 16BC                       i2l6953 1690                       i2l6945 1672  
                     i2l6937 1648                       i2l6881 14D8                       i2l6873 14AC  
                     i2l6865 1462                       i2l6971 16DE                       i2l6963 16C0  
                     i2l6955 1694                       i2l6947 1676                       i2l6939 164C  
                     i2l6891 150A                       i2l6883 14DE                       i2l6875 14B2  
                     i2l6867 1488                       i2l6859 1438                       i2l6981 1718  
                     i2l6973 16EC                       i2l6965 16CE                       i2l6957 16A2  
                     i2l6949 1684                       i2l6893 151A                       i2l6885 14EE  
                     i2l6877 14C2                       i2l6991 1748                       i2l6983 1720  
                     i2l6975 16FE                       i2l6967 16D6                       i2l6959 16B4  
                     i2l6895 1520                       i2l6887 14F4                       i2l6879 14C8  
                     i2l6993 1750                       i2l6985 1724                       i2l6977 1706  
                     i2l6969 16DA                       i2l6897 1532                       i2l6889 1504  
                     _S7_DIP 00C6                       i2l6995 1754                       i2l6987 1728  
                     i2l6979 170A                       i2l6899 1540                       i2l6997 1762  
                     i2l6989 1736                       i2l6999 176C                       _RCREG1 0FAE  
                     _RCSTA1 0FAB                       _SPBRG1 0FAF            _temp_system_state 0041  
                     _SSPADD 0FC8                       _SSPBUF 0FC9                       _TXREG1 0FAD  
                     _TXSTA1 0FAC         _sel_btn_released_cnt 0001       _counter_hour_set_value 0044  
           __end_of_high_isr 2002               ??_TLC5917Write 0053                    ??___awdiv 0064  
                  ??___awmod 0064                  ?_DeviceInit 0051             OpenTimer0@config 0060  
     __end_of_OscillatorInit 2678                       clear_0 211A                       clear_1 2126  
           ___awdiv@quotient 0066              ___awmod@divisor 0062                   _Puts1USART 23C0  
                     isa$std 0001               ?i2_WriteTimer0 0051              ___awmod@counter 0064  
               __pdataCOMRAM 0068          _rtc_clock_disp_mode 0040          _rtc_clock_disp_type 0049  
        __end_of_OpenDisplay 231C                 __mediumconst 0000                    ??_low_isr 005D  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
        __end_of_OpenCounter 2450         _hour_btn_pressed_cnt 0011                  ?_Busy1USART 0051  
                _MarkDisplay 122C          __end_of_OpenButtons 22B6         Ds1307Write@hour_temp 0062  
               ??_I2cRestart 0060                    ?_I2cStart 0051                    ?_I2cWrite 0051  
        _EnableAllInterrupts 269E                   __accesstop 0080      __end_of__initialization 212C  
              ___rparam_used 0001                 _BlinkDisable 2568               __pcstackCOMRAM 0051  
                _ReadCounter 17A4                 __pidataBANK0 25A4                 __pidataBANK1 25D4  
              ??_StartTimer0 0060         ?_EnableAllInterrupts 0051              ?_OscillatorInit 0051  
                ?_Open1USART 0060                 ??_LEDProcess 0060           __end_of_I2cRestart 2622  
               _DetectStatus 21C2            __end_of_InitValue 24F4                  _ScanDisplay 1438  
               ??_Ds1307Init 0060                 ??_Ds1307Read 0064                  _ScanCounter 1B72  
      _hour_btn_released_cnt 0007                  _ScanButtons 162E                ??_StopCounter 0060  
      _counter_down_comp_flg 0031        _counter_down_comp_cnt 0030      _counter_down_set_minute 003A  
    _counter_down_set_second 0039    _btn_long_press_verify_flg 0029                BlinkDisable@i 0060  
                 __pbssBANK0 0080                   __pbssBANK1 0125                   ??_I2cStart 0060  
                ?_OpenTimer0 0051                   ??_I2cWrite 0060                 _ClockSetting 2376  
              ??_Write1USART 0060        _counter_down_set_hour 003B           __end_of_LEDProcess 20A6  
         __end_of_Ds1307Init 2686           __end_of_Ds1307Read 1A62        __end_of_VerifyButtons 1020  
             I2cRead@receive 0061              ??i2_WriteTimer0 0053        ??_EnableAllInterrupts 0060  
           WriteTimer0@timer 0062        __end_of_UpdateDisplay 248E                ??_WriteTimer0 0062  
                _OpenDisplay 22B6                  ?_Puts1USART 0061                  _OpenCounter 2408  
                _OpenButtons 2248                      _I2cInit 25EA                      _I2cRead 248E  
                    _I2cWait 2546                      _I2cStop 2622             Open1USART@config 0062  
                    i2l10327 1582          __end_of_StartTimer0 269E          Ds1307Read@disp_type 0116  
                    _S0_Data 001F                      _S1_Data 001E           _counter_enable_flg 0035  
                    _S2_Data 001D                      _S3_Data 001C                      _S0_Mode 006F  
                    _S4_Data 001B                      _S1_Mode 006E                      _S5_Data 001A  
                    _S2_Mode 006D                      _S0_Port 00C0                _ActionButtons 064E  
                    _S6_Data 0019                      _S3_Mode 006C                      _S1_Port 00BE  
                    _S7_Data 0018                      _S4_Mode 006B                      _S2_Port 00BC  
                    _S5_Mode 006A                      _S3_Port 00BA                      _S6_Mode 0069  
                    _S4_Port 00B8                      _S7_Mode 0068                      _S5_Port 00B6  
                    _IP_Addr 0094                      _S6_Port 00B4                      _S7_Port 00B2  
       __end_of_TLC5917Write 21C2                      _SSPCON1 0FC6             _counter_skip_flg 0033  
                  ?_high_isr 0051                      _SSPSTAT 0FC7          __end_of_StopCounter 2694  
        i2WriteTimer0@timer0 0051                      __Hparam 0000                      __Lparam 0000  
        __end_of_Write1USART 2546                      ___awdiv 1D26                      ___awmod 1EAA  
               __psmallconst 0600         _btn_press_verify_flg 002A                      __pcinit 20A6  
                    __ramtop 0600                      __ptext0 1020                      __ptext1 0C84  
                    __ptext2 064E                      __ptext3 268E                      __ptext4 2694  
                    __ptext5 1A62                      __ptext6 2450                      __ptext7 17A4  
                    __ptext8 1EAA                      __ptext9 1D26                    _T0CONbits 0FD5  
             OpenS5500@F2860 00EA               OpenS5500@F2862 00E6               OpenS5500@F2856 010A  
             OpenS5500@F2858 00EE                    _T1CONbits 0FCD                    _T2CONbits 0FCA  
      __end_ofi2_ScanCounter 1D26                      _int_cnt 0047               ?_ActionButtons 0051  
                  _T3CONbits 0FB1             ___awmod@dividend 0060                _real_rtc_data 004A  
        __end_of_WriteTimer0 2646                      _low_isr 0018            _rtc_hour_ampm_flg 0048  
                 ??_high_isr 005B               __pintcode_body 1F5A         end_of_initialization 212C  
              __Lmediumconst 0000                      int_func 1F5A                   I2cRead@ack 0060  
                    postdec1 0FE5               Puts1USART@data 0061                      postinc0 0FEE  
               ??_DeviceInit 0064                ?_StartCounter 0051                  _StartTimer0 269A  
                  _UDP_DPORT 00A0                    _PORTAbits 0F80                    _PORTBbits 0F81  
                  _PORTDbits 0F83               OpenW5500@F2683 0110               OpenW5500@F2685 00FA  
             OpenW5500@F2687 00F6               OpenW5500@F2689 00F2           _counter_seting_flg 0032  
                  _TRISAbits 0F92                    _TRISBbits 0F93                    _TRISCbits 0F94  
                _StopCounter 268E                    _TRISDbits 0F95                 ??_Busy1USART 0060  
               ?_MarkDisplay 0051       _reset_btn_released_cnt 00C4           __end_of_DeviceInit 2376  
      _counter_min_set_value 0043                  _Write1USART 251E                 OpenDisplay@i 0060  
           ??_OscillatorInit 0060                 ?_ReadCounter 00FE               ??_StartCounter 0060  
         __end_of_Busy1USART 25D4                __pidataCOMRAM 2686                 ??_Open1USART 0062  
                _WriteTimer0 2634              ??_ActionButtons 0063                 ?_ScanDisplay 0051  
               ?_ScanCounter 0051                 ?_ScanButtons 0051          start_initialization 20A6  
       _down_btn_pressed_cnt 000D                    _InitValue 24C6                 ??_OpenTimer0 0060  
              ??_Ds1307Write 0062    UpdateDisplay@update_datas 011E           __end_of_Open1USART 1EAA  
              ??_TLC5917Init 0060        _counter_sec_set_value 0042             TLC5917Write@data 0051  
            _BTN_CLICK_EVENT 002B             TLC5917Write@temp 0054                 _TLC5917Write 213A  
            _BTN_CLICK_STATE 002C                  __pdataBANK0 00E6                  __pdataBANK1 0100  
               ?_OpenDisplay 0051                 ??_Puts1USART 0062                 ?_OpenCounter 0051  
               ?_OpenButtons 0051                     ?_I2cInit 0051           __end_of_OpenTimer0 251E  
                   ?_I2cRead 0051                     ?_I2cWait 0051                     ?_I2cStop 0051  
                __pbssCOMRAM 0001              MarkDisplay@mark 0062                __pcstackBANK0 00FE  
              __pcstackBANK1 0116                   ?_InitValue 0051           _rtc_clock_set_mode 003F  
         _up_btn_pressed_cnt 000F           __end_of_Puts1USART 2408  __end_of_EnableAllInterrupts 26A2  
                  __pintcode 0008          __end_of_Ds1307Write 1B72                    _blink_cnt 002D  
                  _blink_pos 0080                     ?___awdiv 0060                     ?___awmod 0060  
                __pintcodelo 0018              Open1USART@spbrg 0060          _sel_btn_pressed_cnt 000B  
      __end_ofi2_WriteTimer0 266A          __end_of_TLC5917Init 2658              _counter_up_hour 0038  
                __smallconst 0600            WriteTimer0@timer0 0060           i2WriteTimer0@timer 0053  
                   ?_low_isr 0051                TLC5917Write@i 0056            _counter_down_hour 003E  
            Write1USART@data 0060         __end_of_StartCounter 269A                     _I2cStart 25FE  
                   _I2cWrite 258A                     _LATBbits 0F8A                     _LATCbits 0F8B  
                   _LATDbits 0F8C                     _S0_DPort 00B0                     _S1_DPort 00AE  
                   _S2_DPort 00AC                     _S3_DPort 00AA                     _PIE1bits 0F9D  
                   _PIE2bits 0FA0         _set_mode_release_cnt 0015                     _S4_DPort 00A8  
                   _S5_DPort 00A6                     _S6_DPort 00A4                     i1u214_20 0034  
                   i1u214_21 0030                     i1u215_20 0042                     i1u215_21 003E  
                   i1u170_20 1BAA                     i1u170_21 1BA6                     i1u171_20 1BC2  
                   i1u171_21 1BBE                     i1u172_20 1BDC                     i1u172_21 1BD8  
                   _S7_DPort 00A2                     i1u173_20 1BEC                     i1u173_21 1BE8  
                   i1u174_20 1BFC                     i1u174_21 1BF8                     _S0_State 0027  
                   i1u175_20 1C0C                     i1u175_21 1C08                     i1u176_20 1C30  
                   i1u168_20 1B82                     i1u176_21 1C2C                     i1u168_21 1B7E  
                   i1u177_20 1C44                     i1u169_20 1B96                     i1u177_21 1C40  
                   i1u169_21 1B92                     _S1_State 0026                     i2u500_40 1C84  
                   i2u500_41 1C80                     i2u501_40 1C9C                     i2u501_41 1C98  
                   _S2_State 0025                     i2u502_40 1CB6                     i2u502_41 1CB2  
                   i2u503_40 1CC6                     i2u503_41 1CC2                     i2u504_40 1CD6  
                   i2u504_41 1CD2                     i2u505_40 1CE6                     i2u513_40 1F72  
                   i2u505_41 1CE2                     i2u513_41 1F6E                     _PIR1bits 0F9E  
                   i2u506_40 1D0A                     i2u514_40 1F80                     i2u506_41 1D06  
                   i2u514_41 1F7C                     i2u371_40 21A2                     i2u370_48 2160  
                   i2u507_40 1D1E                     i2u515_40 1FB0                     i2u371_41 219E  
                   i2u507_41 1D1A                     i2u515_41 1FAC                     _PIR2bits 0FA1  
                   i2u516_40 1FCC                     i2u516_41 1FC8                     i2u517_40 1FE2  
                   i2u517_41 1FDE                     _S3_State 0024                     i2u518_40 1FF0  
                   i2u518_41 1FEC                     i2u480_40 163C                     i2u472_40 1462  
                   i2u480_41 1638                     i2u472_41 145E                     i2u720_47 21BA  
                   i2u481_40 165A                     i2u369_40 215E                     i2u473_40 1488  
                   i2u481_41 1656                     i2u369_41 2156                     i2u473_41 1484  
                   i2u490_40 1736                     i2u482_40 166A                     i2u474_40 1498  
                   i2u490_41 1732                     i2u482_41 1666                     i2u474_41 1494  
                   i2u491_40 1748                     i2u483_40 1684                     i2u475_40 1532  
                   i2u491_41 1744                     i2u483_41 1680                     i2u475_41 152E  
                   i2u492_40 1762                     i2u484_40 16A2                     i2u476_40 15E6  
                   i2u492_41 175E                     i2u484_41 169E                     i2u476_41 15E2  
                   i2u493_40 1782                     i2u485_40 16B4                     i2u477_40 15FA  
                   i2u493_41 177E                     i2u485_41 16B0                     i2u477_41 15F6  
                   _S4_State 0023                     i2u494_40 1794                     i2u486_40 16CE  
                   i2u478_40 160C                     i2u494_41 1790                     i2u486_41 16CA  
                   i2u478_41 1608                     i2u487_40 16EC                     i2u479_40 161C  
                   i2u487_41 16E8                     i2u479_41 1618                     i2u488_40 16FE  
                   i2u488_41 16FA                     i2u489_40 1718                     i2u489_41 1714  
                   i2u498_40 1C5C                     i2u498_41 1C58                     i2u499_40 1C70  
                   i2u499_41 1C6C                     _S5_State 0022                     _S6_State 0021  
                   _RCONbits 0FD0                     _S7_State 0020                     _UDP_DIPR 0090  
               ?_StartTimer0 0051                  _display_cnt 002E            _counter_up_minute 0037  
          _counter_up_second 0036                 ?_StopCounter 0051                  ??_InitValue 0060  
                _INTCON2bits 0FF1                  _INTCON3bits 0FF0                    copy_data0 20BA  
                  copy_data1 20DA                    copy_data2 20FA                 ?_Write1USART 0051  
                _Ds1307Write 1A62                   _EECON1bits 0FA6                ?_BlinkDisable 0051  
                   _Phy_Addr 0125                     __Hrparam 0000                     __Lrparam 0000  
                _TLC5917Init 2646                     _Sub_Mask 0098                _VerifyButtons 0C84  
             UpdateDisplay@i 0122              _W5500_Interrupt 0017                   _BLINK_TIME 0013  
               ?_WriteTimer0 0060                _UpdateDisplay 2450                ?_DetectStatus 0051  
        _counter_down_minute 003D          _counter_down_second 003C                     __ptext10 23C0  
                   __ptext11 251E                     __ptext20 2622                     __ptext12 25BC  
                   __ptext21 231C                     __ptext13 2002                     __ptext30 1DEA  
                   __ptext22 2634                     __ptext14 190C                     __ptext31 24C6  
                   __ptext23 269A                     __ptext15 258A                     __ptext40 1B72  
                   __ptext32 269E                     __ptext24 266A                     __ptext16 25FE  
                   __ptext33 2678                     __ptext25 24F4                     __ptext17 2610  
                   __ptext42 2658                     __ptext34 25EA                     __ptext26 22B6  
                   __ptext18 248E                     __ptext43 1C4C                     __ptext35 21C2  
                   __ptext27 2646                     __ptext19 2546                     __ptext44 1438  
                   __ptext36 2376                     __ptext28 2408                     __ptext45 213A  
                   __ptext37 122C                     __ptext29 2248                     __ptext46 162E  
                   __ptext38 2568        _reset_btn_pressed_cnt 0009                     _high_isr 0008  
              ?_ClockSetting 0051                   _I2cRestart 2610               ??_BlinkDisable 0060  
             ?_VerifyButtons 0051                     isa$xinst 0000                     int$flags 0070  
             ?_UpdateDisplay 011E               ??_DetectStatus 0060            _SYSTEM_ACTION_FLG 0046  
              _USART1_Status 0028                   _LEDProcess 2002                   _Ds1307Init 2678  
                 _Ds1307Read 190C             _blink_enable_flg 002F                  _OSCTUNEbits 0F9B  
      __end_of_ActionButtons 0C84                   _INTCONbits 0FF2                i2_ScanCounter 1C4C  
             ??_ClockSetting 0063                     intlevel1 0000                     intlevel2 0000  
                 _RCSTA1bits 0FAB                   _OSCCONbits 0FD3                 _StartCounter 2694  
      _down_btn_released_cnt 0003               ?i2_ScanCounter 0051                  _SSPCON1bits 0FC6  
                _SSPCON2bits 0FC5                 I2cWrite@data 0060                  ?_I2cRestart 0051  
              _display_datas 0088        _counter_direction_flg 0034            ActionButtons@temp 0065  
            ??_VerifyButtons 0066  
