

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Nov 06 15:41:42 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68   000000                     
    69                           ; Generated 23/03/2023 GMT
    70                           ; 
    71                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F4520 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103   000000                     
   104                           	psect	idataCOMRAM
   105   002988                     __pidataCOMRAM:
   106                           	callstack 0
   107                           
   108                           ;initializer for _S7_Mode
   109   002988  03                 	db	3
   110                           
   111                           ;initializer for _S6_Mode
   112   002989  03                 	db	3
   113                           
   114                           ;initializer for _S5_Mode
   115   00298A  03                 	db	3
   116                           
   117                           ;initializer for _S4_Mode
   118   00298B  03                 	db	3
   119                           
   120                           ;initializer for _S3_Mode
   121   00298C  03                 	db	3
   122                           
   123                           ;initializer for _S2_Mode
   124   00298D  03                 	db	3
   125                           
   126                           ;initializer for _S1_Mode
   127   00298E  03                 	db	3
   128                           
   129                           ;initializer for _S0_Mode
   130   00298F  03                 	db	3
   131                           
   132                           	psect	idataBANK0
   133   002870                     __pidataBANK0:
   134                           	callstack 0
   135                           
   136                           ;initializer for OpenS5500@F2846
   137   002870  F4                 	db	244
   138   002871  6B                 	db	107
   139   002872  8C                 	db	140
   140   002873  CE                 	db	206
   141   002874  67                 	db	103
   142   002875  4B                 	db	75
   143                           
   144                           ;initializer for OpenW5500@F2673
   145   002876  F4                 	db	244
   146   002877  6B                 	db	107
   147   002878  8C                 	db	140
   148   002879  CE                 	db	206
   149   00287A  67                 	db	103
   150   00287B  4B                 	db	75
   151                           
   152                           ;initializer for OpenS5500@F2852
   153   00287C  0A                 	db	10
   154   00287D  0A                 	db	10
   155   00287E  0F                 	db	15
   156   00287F  01                 	db	1
   157                           
   158                           ;initializer for OpenS5500@F2850
   159   002880  FF                 	db	255
   160   002881  FF                 	db	255
   161   002882  FF                 	db	255
   162   002883  00                 	db	0
   163                           
   164                           ;initializer for OpenS5500@F2848
   165   002884  0A                 	db	10
   166   002885  0A                 	db	10
   167   002886  0F                 	db	15
   168   002887  DF                 	db	223
   169                           
   170                           ;initializer for OpenW5500@F2679
   171   002888  0A                 	db	10
   172   002889  0A                 	db	10
   173   00288A  0F                 	db	15
   174   00288B  01                 	db	1
   175                           
   176                           ;initializer for OpenW5500@F2677
   177   00288C  FF                 	db	255
   178   00288D  FF                 	db	255
   179   00288E  FF                 	db	255
   180   00288F  00                 	db	0
   181                           
   182                           ;initializer for OpenW5500@F2675
   183   002890  0A                 	db	10
   184   002891  0A                 	db	10
   185   002892  0F                 	db	15
   186   002893  DF                 	db	223
   187                           
   188                           	psect	idataBANK1
   189   00297E                     __pidataBANK1:
   190                           	callstack 0
   191                           
   192                           ;initializer for _rtc_default_values
   193   00297E  10                 	db	16
   194   00297F  12                 	db	18
   195   002980  09                 	db	9
   196   002981  05                 	db	5
   197   002982  03                 	db	3
   198   002983  11                 	db	17
   199   002984  23                 	db	35
   200   002985  00                 	db	0
   201   002986  00                 	db	0
   202   002987  00                 	db	0
   203   000000                     _EECON2	set	4007
   204   000000                     _EEDATA	set	4008
   205   000000                     _EEADR	set	4009
   206   000000                     _TXREG1	set	4013
   207   000000                     _RCREG1	set	4014
   208   000000                     _SPBRG1	set	4015
   209   000000                     _INTCON2bits	set	4081
   210   000000                     _TRISBbits	set	3987
   211   000000                     _TMR3L	set	4018
   212   000000                     _TMR3H	set	4019
   213   000000                     _TMR1L	set	4046
   214   000000                     _TMR1H	set	4047
   215   000000                     _TMR0L	set	4054
   216   000000                     _TMR0H	set	4055
   217   000000                     _SSPCON1	set	4038
   218   000000                     _SSPSTAT	set	4039
   219   000000                     _PIE1	set	3997
   220   000000                     _RCSTA1bits	set	4011
   221   000000                     _TXSTA1bits	set	4012
   222   000000                     _T3CONbits	set	4017
   223   000000                     _T2CONbits	set	4042
   224   000000                     _T1CONbits	set	4045
   225   000000                     _T0CONbits	set	4053
   226   000000                     _PORTBbits	set	3969
   227   000000                     _PORTDbits	set	3971
   228   000000                     _LATBbits	set	3978
   229   000000                     _LATCbits	set	3979
   230   000000                     _PORTAbits	set	3968
   231   000000                     _TRISAbits	set	3986
   232   000000                     _TRISCbits	set	3988
   233   000000                     _OSCTUNEbits	set	3995
   234   000000                     _OSCCONbits	set	4051
   235   000000                     _T0CON	set	4053
   236   000000                     _PIE1bits	set	3997
   237   000000                     _PIR1bits	set	3998
   238   000000                     _ADCON1	set	4033
   239   000000                     _ADCON0	set	4034
   240   000000                     _SSPCON2bits	set	4037
   241   000000                     _SSPCON1bits	set	4038
   242   000000                     _SSPSTATbits	set	4039
   243   000000                     _TRISDbits	set	3989
   244   000000                     _TMR2	set	4044
   245   000000                     _T2CON	set	4042
   246   000000                     _T1CON	set	4045
   247   000000                     _SSPBUF	set	4041
   248   000000                     _SSPADD	set	4040
   249   000000                     _INTCON3bits	set	4080
   250   000000                     _INTCONbits	set	4082
   251   000000                     _RCONbits	set	4048
   252   000000                     _PIE2bits	set	4000
   253   000000                     _PIR2bits	set	4001
   254   000000                     _T3CON	set	4017
   255   000000                     _EECON1bits	set	4006
   256   000000                     _RCSTA1	set	4011
   257   000000                     _TXSTA1	set	4012
   258   000000                     _LATDbits	set	3980
   259                           
   260                           	psect	smallconst
   261   000600                     __psmallconst:
   262                           	callstack 0
   263   000600  00                 	db	0
   264   000601                     STR_3:
   265   000601  57                 	db	87	;'W'
   266   000602  35                 	db	53	;'5'
   267   000603  35                 	db	53	;'5'
   268   000604  30                 	db	48	;'0'
   269   000605  30                 	db	48	;'0'
   270   000606  20                 	db	32
   271   000607  49                 	db	73	;'I'
   272   000608  6E                 	db	110	;'n'
   273   000609  69                 	db	105	;'i'
   274   00060A  74                 	db	116	;'t'
   275   00060B  20                 	db	32
   276   00060C  43                 	db	67	;'C'
   277   00060D  6F                 	db	111	;'o'
   278   00060E  6D                 	db	109	;'m'
   279   00060F  70                 	db	112	;'p'
   280   000610  6C                 	db	108	;'l'
   281   000611  65                 	db	101	;'e'
   282   000612  74                 	db	116	;'t'
   283   000613  65                 	db	101	;'e'
   284   000614  21                 	db	33
   285   000615  0A                 	db	10
   286   000616  00                 	db	0
   287   000617  57                 	db	87	;'W'
   288   000618  35                 	db	53	;'5'
   289   000619  35                 	db	53	;'5'
   290   00061A  30                 	db	48	;'0'
   291   00061B  30                 	db	48	;'0'
   292   00061C  2D                 	db	45
   293   00061D  3E                 	db	62	;'>'
   294   00061E  25                 	db	37
   295   00061F  64                 	db	100	;'d'
   296   000620  0A                 	db	10
   297   000621  00                 	db	0
   298   000622  00                 	db	0	; dummy byte at the end
   299   000000                     
   300                           ; #config settings
   301                           
   302                           	psect	cinit
   303   00242E                     __pcinit:
   304                           	callstack 0
   305   00242E                     start_initialization:
   306                           	callstack 0
   307   00242E                     __initialization:
   308                           	callstack 0
   309                           
   310                           ; Initialize objects allocated to BANK1 (10 bytes)
   311                           ; load TBLPTR registers with __pidataBANK1
   312   00242E  0E7E               	movlw	low __pidataBANK1
   313   002430  6EF6               	movwf	tblptrl,c
   314   002432  0E29               	movlw	high __pidataBANK1
   315   002434  6EF7               	movwf	tblptrh,c
   316   002436  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   317   002438  6EF8               	movwf	tblptru,c
   318   00243A  EE01  F000         	lfsr	0,__pdataBANK1
   319   00243E  EE10 F00A          	lfsr	1,10
   320   002442                     copy_data0:
   321   002442  0009               	tblrd		*+
   322   002444  CFF5 FFEE          	movff	tablat,postinc0
   323   002448  50E5               	movf	postdec1,w,c
   324   00244A  50E1               	movf	fsr1l,w,c
   325   00244C  E1FA               	bnz	copy_data0
   326                           
   327                           ; Initialize objects allocated to BANK0 (36 bytes)
   328                           ; load TBLPTR registers with __pidataBANK0
   329   00244E  0E70               	movlw	low __pidataBANK0
   330   002450  6EF6               	movwf	tblptrl,c
   331   002452  0E28               	movlw	high __pidataBANK0
   332   002454  6EF7               	movwf	tblptrh,c
   333   002456  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   334   002458  6EF8               	movwf	tblptru,c
   335   00245A  EE00  F0D8         	lfsr	0,__pdataBANK0
   336   00245E  EE10 F024          	lfsr	1,36
   337   002462                     copy_data1:
   338   002462  0009               	tblrd		*+
   339   002464  CFF5 FFEE          	movff	tablat,postinc0
   340   002468  50E5               	movf	postdec1,w,c
   341   00246A  50E1               	movf	fsr1l,w,c
   342   00246C  E1FA               	bnz	copy_data1
   343                           
   344                           ; Initialize objects allocated to COMRAM (8 bytes)
   345                           ; load TBLPTR registers with __pidataCOMRAM
   346   00246E  0E88               	movlw	low __pidataCOMRAM
   347   002470  6EF6               	movwf	tblptrl,c
   348   002472  0E29               	movlw	high __pidataCOMRAM
   349   002474  6EF7               	movwf	tblptrh,c
   350   002476  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   351   002478  6EF8               	movwf	tblptru,c
   352   00247A  EE00  F06C         	lfsr	0,__pdataCOMRAM
   353   00247E  EE10 F008          	lfsr	1,8
   354   002482                     copy_data2:
   355   002482  0009               	tblrd		*+
   356   002484  CFF5 FFEE          	movff	tablat,postinc0
   357   002488  50E5               	movf	postdec1,w,c
   358   00248A  50E1               	movf	fsr1l,w,c
   359   00248C  E1FA               	bnz	copy_data2
   360                           
   361                           ; Clear objects allocated to BANK1 (6 bytes)
   362   00248E  0101               	movlb	1
   363   002490  6B17               	clrf	(__pbssBANK1+5)& (0+255),b
   364   002492  6B16               	clrf	(__pbssBANK1+4)& (0+255),b
   365   002494  6B15               	clrf	(__pbssBANK1+3)& (0+255),b
   366   002496  6B14               	clrf	(__pbssBANK1+2)& (0+255),b
   367   002498  6B13               	clrf	(__pbssBANK1+1)& (0+255),b
   368   00249A  6B12               	clrf	__pbssBANK1& (0+255),b
   369                           
   370                           ; Clear objects allocated to BANK0 (88 bytes)
   371   00249C  EE00  F080         	lfsr	0,__pbssBANK0
   372   0024A0  0E58               	movlw	88
   373   0024A2                     clear_0:
   374   0024A2  6AEE               	clrf	postinc0,c
   375   0024A4  06E8               	decf	wreg,f,c
   376   0024A6  E1FD               	bnz	clear_0
   377                           
   378                           ; Clear objects allocated to COMRAM (83 bytes)
   379   0024A8  EE00  F001         	lfsr	0,__pbssCOMRAM
   380   0024AC  0E53               	movlw	83
   381   0024AE                     clear_1:
   382   0024AE  6AEE               	clrf	postinc0,c
   383   0024B0  06E8               	decf	wreg,f,c
   384   0024B2  E1FD               	bnz	clear_1
   385   0024B4                     end_of_initialization:
   386                           	callstack 0
   387   0024B4                     __end_of__initialization:
   388                           	callstack 0
   389   0024B4  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   390   0024B6  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   391   0024B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   392   0024BA  6EF8               	movwf	tblptru,c
   393   0024BC  0100               	movlb	0
   394   0024BE  EF8E  F00B         	goto	_main	;jump to C main() function
   395                           
   396                           	psect	bssCOMRAM
   397   000001                     __pbssCOMRAM:
   398                           	callstack 0
   399   000001                     _display_datas:
   400                           	callstack 0
   401   000001                     	ds	8
   402   000009                     _S0_Port:
   403                           	callstack 0
   404   000009                     	ds	2
   405   00000B                     _reset_btn_released_cnt:
   406                           	callstack 0
   407   00000B                     	ds	2
   408   00000D                     _sel_btn_released_cnt:
   409                           	callstack 0
   410   00000D                     	ds	2
   411   00000F                     _down_btn_released_cnt:
   412                           	callstack 0
   413   00000F                     	ds	2
   414   000011                     _up_btn_released_cnt:
   415                           	callstack 0
   416   000011                     	ds	2
   417   000013                     _hour_btn_released_cnt:
   418                           	callstack 0
   419   000013                     	ds	2
   420   000015                     _reset_btn_pressed_cnt:
   421                           	callstack 0
   422   000015                     	ds	2
   423   000017                     _sel_btn_pressed_cnt:
   424                           	callstack 0
   425   000017                     	ds	2
   426   000019                     _down_btn_pressed_cnt:
   427                           	callstack 0
   428   000019                     	ds	2
   429   00001B                     _up_btn_pressed_cnt:
   430                           	callstack 0
   431   00001B                     	ds	2
   432   00001D                     _hour_btn_pressed_cnt:
   433                           	callstack 0
   434   00001D                     	ds	2
   435   00001F                     _W5500_Interrupt:
   436                           	callstack 0
   437   00001F                     	ds	1
   438   000020                     _S7_Data:
   439                           	callstack 0
   440   000020                     	ds	1
   441   000021                     _S6_Data:
   442                           	callstack 0
   443   000021                     	ds	1
   444   000022                     _S5_Data:
   445                           	callstack 0
   446   000022                     	ds	1
   447   000023                     _S4_Data:
   448                           	callstack 0
   449   000023                     	ds	1
   450   000024                     _S3_Data:
   451                           	callstack 0
   452   000024                     	ds	1
   453   000025                     _S2_Data:
   454                           	callstack 0
   455   000025                     	ds	1
   456   000026                     _S1_Data:
   457                           	callstack 0
   458   000026                     	ds	1
   459   000027                     _S0_Data:
   460                           	callstack 0
   461   000027                     	ds	1
   462   000028                     _S7_State:
   463                           	callstack 0
   464   000028                     	ds	1
   465   000029                     _S6_State:
   466                           	callstack 0
   467   000029                     	ds	1
   468   00002A                     _S5_State:
   469                           	callstack 0
   470   00002A                     	ds	1
   471   00002B                     _S4_State:
   472                           	callstack 0
   473   00002B                     	ds	1
   474   00002C                     _S3_State:
   475                           	callstack 0
   476   00002C                     	ds	1
   477   00002D                     _S2_State:
   478                           	callstack 0
   479   00002D                     	ds	1
   480   00002E                     _S1_State:
   481                           	callstack 0
   482   00002E                     	ds	1
   483   00002F                     _S0_State:
   484                           	callstack 0
   485   00002F                     	ds	1
   486   000030                     _USART1_Status:
   487                           	callstack 0
   488   000030                     	ds	1
   489   000031                     _btn_long_press_verify_flg:
   490                           	callstack 0
   491   000031                     	ds	1
   492   000032                     _btn_press_verify_flg:
   493                           	callstack 0
   494   000032                     	ds	1
   495   000033                     _BTN_CLICK_EVENT:
   496                           	callstack 0
   497   000033                     	ds	1
   498   000034                     _BTN_CLICK_STATE:
   499                           	callstack 0
   500   000034                     	ds	1
   501   000035                     _blink_cnt:
   502                           	callstack 0
   503   000035                     	ds	1
   504   000036                     _display_cnt:
   505                           	callstack 0
   506   000036                     	ds	1
   507   000037                     _blink_enable_flg:
   508                           	callstack 0
   509   000037                     	ds	1
   510   000038                     _counter_seting_flg:
   511                           	callstack 0
   512   000038                     	ds	1
   513   000039                     _counter_skip_flg:
   514                           	callstack 0
   515   000039                     	ds	1
   516   00003A                     _counter_direction_flg:
   517                           	callstack 0
   518   00003A                     	ds	1
   519   00003B                     _counter_enable_flg:
   520                           	callstack 0
   521   00003B                     	ds	1
   522   00003C                     _set_counter_second:
   523                           	callstack 0
   524   00003C                     	ds	1
   525   00003D                     _set_counter_minute:
   526                           	callstack 0
   527   00003D                     	ds	1
   528   00003E                     _set_counter_hour:
   529                           	callstack 0
   530   00003E                     	ds	1
   531   00003F                     _counter_second:
   532                           	callstack 0
   533   00003F                     	ds	1
   534   000040                     _counter_minute:
   535                           	callstack 0
   536   000040                     	ds	1
   537   000041                     _counter_hour:
   538                           	callstack 0
   539   000041                     	ds	1
   540   000042                     _rtc_clock_set_mode:
   541                           	callstack 0
   542   000042                     	ds	1
   543   000043                     _rtc_clock_disp_mode:
   544                           	callstack 0
   545   000043                     	ds	1
   546   000044                     _temp_system_state:
   547                           	callstack 0
   548   000044                     	ds	1
   549   000045                     _counter_sec_set_value:
   550                           	callstack 0
   551   000045                     	ds	1
   552   000046                     _counter_min_set_value:
   553                           	callstack 0
   554   000046                     	ds	1
   555   000047                     _counter_hour_set_value:
   556                           	callstack 0
   557   000047                     	ds	1
   558   000048                     _SYSTEM_STATE_FLG:
   559                           	callstack 0
   560   000048                     	ds	1
   561   000049                     _SYSTEM_ACTION_FLG:
   562                           	callstack 0
   563   000049                     	ds	1
   564   00004A                     _int_cnt:
   565                           	callstack 0
   566   00004A                     	ds	1
   567   00004B                     _rtc_hour_ampm_flg:
   568                           	callstack 0
   569   00004B                     	ds	1
   570   00004C                     _rtc_clock_disp_type:
   571                           	callstack 0
   572   00004C                     	ds	1
   573   00004D                     _real_rtc_data:
   574                           	callstack 0
   575   00004D                     	ds	7
   576                           
   577                           	psect	dataCOMRAM
   578   00006C                     __pdataCOMRAM:
   579                           	callstack 0
   580   00006C                     _S7_Mode:
   581                           	callstack 0
   582   00006C                     	ds	1
   583   00006D                     _S6_Mode:
   584                           	callstack 0
   585   00006D                     	ds	1
   586   00006E                     _S5_Mode:
   587                           	callstack 0
   588   00006E                     	ds	1
   589   00006F                     _S4_Mode:
   590                           	callstack 0
   591   00006F                     	ds	1
   592   000070                     _S3_Mode:
   593                           	callstack 0
   594   000070                     	ds	1
   595   000071                     _S2_Mode:
   596                           	callstack 0
   597   000071                     	ds	1
   598   000072                     _S1_Mode:
   599                           	callstack 0
   600   000072                     	ds	1
   601   000073                     _S0_Mode:
   602                           	callstack 0
   603   000073                     	ds	1
   604                           
   605                           	psect	bssBANK0
   606   000080                     __pbssBANK0:
   607                           	callstack 0
   608   000080                     _blink_pos:
   609                           	callstack 0
   610   000080                     	ds	8
   611   000088                     _UDP_DIPR:
   612                           	callstack 0
   613   000088                     	ds	4
   614   00008C                     _IP_Addr:
   615                           	callstack 0
   616   00008C                     	ds	4
   617   000090                     _Sub_Mask:
   618                           	callstack 0
   619   000090                     	ds	4
   620   000094                     _Gateway_IP:
   621                           	callstack 0
   622   000094                     	ds	4
   623   000098                     _UDP_DPORT:
   624                           	callstack 0
   625   000098                     	ds	2
   626   00009A                     _S7_DPort:
   627                           	callstack 0
   628   00009A                     	ds	2
   629   00009C                     _S6_DPort:
   630                           	callstack 0
   631   00009C                     	ds	2
   632   00009E                     _S5_DPort:
   633                           	callstack 0
   634   00009E                     	ds	2
   635   0000A0                     _S4_DPort:
   636                           	callstack 0
   637   0000A0                     	ds	2
   638   0000A2                     _S3_DPort:
   639                           	callstack 0
   640   0000A2                     	ds	2
   641   0000A4                     _S2_DPort:
   642                           	callstack 0
   643   0000A4                     	ds	2
   644   0000A6                     _S1_DPort:
   645                           	callstack 0
   646   0000A6                     	ds	2
   647   0000A8                     _S0_DPort:
   648                           	callstack 0
   649   0000A8                     	ds	2
   650   0000AA                     _S7_Port:
   651                           	callstack 0
   652   0000AA                     	ds	2
   653   0000AC                     _S6_Port:
   654                           	callstack 0
   655   0000AC                     	ds	2
   656   0000AE                     _S5_Port:
   657                           	callstack 0
   658   0000AE                     	ds	2
   659   0000B0                     _S4_Port:
   660                           	callstack 0
   661   0000B0                     	ds	2
   662   0000B2                     _S3_Port:
   663                           	callstack 0
   664   0000B2                     	ds	2
   665   0000B4                     _S2_Port:
   666                           	callstack 0
   667   0000B4                     	ds	2
   668   0000B6                     _S1_Port:
   669                           	callstack 0
   670   0000B6                     	ds	2
   671   0000B8                     _S7_DIP:
   672                           	callstack 0
   673   0000B8                     	ds	4
   674   0000BC                     _S6_DIP:
   675                           	callstack 0
   676   0000BC                     	ds	4
   677   0000C0                     _S5_DIP:
   678                           	callstack 0
   679   0000C0                     	ds	4
   680   0000C4                     _S4_DIP:
   681                           	callstack 0
   682   0000C4                     	ds	4
   683   0000C8                     _S3_DIP:
   684                           	callstack 0
   685   0000C8                     	ds	4
   686   0000CC                     _S2_DIP:
   687                           	callstack 0
   688   0000CC                     	ds	4
   689   0000D0                     _S1_DIP:
   690                           	callstack 0
   691   0000D0                     	ds	4
   692   0000D4                     _S0_DIP:
   693                           	callstack 0
   694   0000D4                     	ds	4
   695                           
   696                           	psect	dataBANK0
   697   0000D8                     __pdataBANK0:
   698                           	callstack 0
   699   0000D8                     OpenS5500@F2846:
   700                           	callstack 0
   701   0000D8                     	ds	6
   702   0000DE                     OpenW5500@F2673:
   703                           	callstack 0
   704   0000DE                     	ds	6
   705   0000E4                     OpenS5500@F2852:
   706                           	callstack 0
   707   0000E4                     	ds	4
   708   0000E8                     OpenS5500@F2850:
   709                           	callstack 0
   710   0000E8                     	ds	4
   711   0000EC                     OpenS5500@F2848:
   712                           	callstack 0
   713   0000EC                     	ds	4
   714   0000F0                     OpenW5500@F2679:
   715                           	callstack 0
   716   0000F0                     	ds	4
   717   0000F4                     OpenW5500@F2677:
   718                           	callstack 0
   719   0000F4                     	ds	4
   720   0000F8                     OpenW5500@F2675:
   721                           	callstack 0
   722   0000F8                     	ds	4
   723                           
   724                           	psect	bssBANK1
   725   000112                     __pbssBANK1:
   726                           	callstack 0
   727   000112                     _Phy_Addr:
   728                           	callstack 0
   729   000112                     	ds	6
   730                           
   731                           	psect	dataBANK1
   732   000100                     __pdataBANK1:
   733                           	callstack 0
   734   000100                     _rtc_default_values:
   735                           	callstack 0
   736   000100                     	ds	10
   737                           
   738                           	psect	cstackBANK1
   739   00010A                     __pcstackBANK1:
   740                           	callstack 0
   741   00010A                     Ds1307Read@disp_type:
   742                           	callstack 0
   743   00010A                     ReadCounter@counter_datas:
   744                           	callstack 0
   745                           
   746                           ; 6 bytes @ 0x0
   747   00010A                     	ds	1
   748   00010B                     Ds1307Read@i:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x1
   752   00010B                     	ds	1
   753   00010C                     Ds1307Read@ds1307_date_datas:
   754                           	callstack 0
   755                           
   756                           ; 6 bytes @ 0x2
   757   00010C                     	ds	6
   758                           
   759                           	psect	cstackBANK0
   760   0000FC                     __pcstackBANK0:
   761                           	callstack 0
   762   0000FC                     UpdateDisplay@update_datas:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x0
   766   0000FC                     	ds	2
   767   0000FE                     UpdateDisplay@start_position:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x2
   771   0000FE                     	ds	1
   772   0000FF                     UpdateDisplay@end_position:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x3
   776   0000FF                     	ds	1
   777                           
   778                           	psect	cstackCOMRAM
   779   000054                     __pcstackCOMRAM:
   780                           	callstack 0
   781   000054                     ??_ScanCounter:
   782   000054                     TLC5917Write@data:
   783                           	callstack 0
   784   000054                     i2WriteTimer0@timer0:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x0
   788   000054                     	ds	2
   789   000056                     ??_TLC5917Write:
   790   000056                     i2WriteTimer0@timer:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x2
   794   000056                     	ds	1
   795   000057                     TLC5917Write@temp:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x3
   799   000057                     	ds	2
   800   000059                     TLC5917Write@i:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x5
   804   000059                     	ds	1
   805   00005A                     ??_ScanDisplay:
   806                           
   807                           ; 1 bytes @ 0x6
   808   00005A                     	ds	2
   809   00005C                     ??_high_isr:
   810                           
   811                           ; 1 bytes @ 0x8
   812   00005C                     	ds	2
   813   00005E                     ??_low_isr:
   814                           
   815                           ; 1 bytes @ 0xA
   816   00005E                     	ds	1
   817   00005F                     ??_MarkDisplay:
   818   00005F                     ?___awdiv:
   819                           	callstack 0
   820   00005F                     ?___awmod:
   821                           	callstack 0
   822   00005F                     I2cWrite@data:
   823                           	callstack 0
   824   00005F                     I2cRead@ack:
   825                           	callstack 0
   826   00005F                     OpenTimer0@config:
   827                           	callstack 0
   828   00005F                     SetCounter@minute:
   829                           	callstack 0
   830   00005F                     OpenDisplay@i:
   831                           	callstack 0
   832   00005F                     BlinkDisable@i:
   833                           	callstack 0
   834   00005F                     WriteTimer0@timer0:
   835                           	callstack 0
   836   00005F                     MCP41010Write@cmd:
   837                           	callstack 0
   838   00005F                     ___awdiv@dividend:
   839                           	callstack 0
   840   00005F                     ___awmod@dividend:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0xB
   844   00005F                     	ds	1
   845   000060                     I2cRead@receive:
   846                           	callstack 0
   847   000060                     SetCounter@second:
   848                           	callstack 0
   849   000060                     Ds1307Write@write_datas:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0xC
   853   000060                     	ds	1
   854   000061                     ?_Ds1307Read:
   855                           	callstack 0
   856   000061                     SetCounter@hour:
   857                           	callstack 0
   858   000061                     MarkDisplay@mark:
   859                           	callstack 0
   860   000061                     WriteTimer0@timer:
   861                           	callstack 0
   862   000061                     MCP41010Write@data:
   863                           	callstack 0
   864   000061                     ___awdiv@divisor:
   865                           	callstack 0
   866   000061                     ___awmod@divisor:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0xD
   870   000061                     	ds	1
   871   000062                     ??_ClockSetting:
   872   000062                     Ds1307Write@hour_temp:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0xE
   876   000062                     	ds	1
   877   000063                     ??_Ds1307Read:
   878   000063                     ??_MCP41010Write:
   879   000063                     ??_ActionButtons:
   880   000063                     ___awdiv@counter:
   881                           	callstack 0
   882   000063                     ___awmod@counter:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0xF
   886   000063                     	ds	1
   887   000064                     ClockSetting@set_mod:
   888                           	callstack 0
   889   000064                     MCP41010Write@i:
   890                           	callstack 0
   891   000064                     ___awdiv@sign:
   892                           	callstack 0
   893   000064                     ___awmod@sign:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x10
   897   000064                     	ds	1
   898   000065                     ActionButtons@temp:
   899                           	callstack 0
   900   000065                     MCP41010Write@i_3246:
   901                           	callstack 0
   902   000065                     ___awdiv@quotient:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x11
   906   000065                     	ds	1
   907   000066                     ??_VerifyButtons:
   908   000066                     MCP41010Write@temp:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x12
   912   000066                     	ds	1
   913   000067                     ?_ReadCounter:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x13
   917   000067                     	ds	1
   918   000068                     
   919                           ; 1 bytes @ 0x14
   920   000068                     	ds	1
   921   000069                     UpdateDisplay@i:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x15
   925   000069                     	ds	1
   926   00006A                     ??_main:
   927                           
   928                           ; 1 bytes @ 0x16
   929   00006A                     	ds	2
   930                           
   931 ;;
   932 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   933 ;;
   934 ;; *************** function _main *****************
   935 ;; Defined at:
   936 ;;		line 22 in file "Main.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   950 ;;      Params:         0       0       0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0       0       0
   952 ;;      Temps:          2       0       0       0       0       0       0
   953 ;;      Totals:         2       0       0       0       0       0       0
   954 ;;Total ram usage:        2 bytes
   955 ;; Hardware stack levels required when called: 10
   956 ;; This function calls:
   957 ;;		_BlinkDisable
   958 ;;		_ClockSetting
   959 ;;		_CounterSetting
   960 ;;		_DeviceInit
   961 ;;		_Ds1307Read
   962 ;;		_LEDProcess
   963 ;;		_ReadCounter
   964 ;;		_UpdateDisplay
   965 ;;		_VerifyButtons
   966 ;; This function is called by:
   967 ;;		Startup code after reset
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text0
   972   00171C                     __ptext0:
   973                           	callstack 0
   974   00171C                     _main:
   975                           	callstack 21
   976   00171C                     
   977                           ;Main.c: 24:     DeviceInit();
   978   00171C  ECA5  F012         	call	_DeviceInit	;wreg free
   979   001720                     l283:
   980                           
   981                           ;Main.c: 27:     {;Main.c: 29:         VerifyButtons();
   982   001720  ECE1  F008         	call	_VerifyButtons	;wreg free
   983   001724                     
   984                           ;Main.c: 31:         if( !SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE ) continue;
   985   001724  B049               	btfsc	_SYSTEM_ACTION_FLG^0,0,c	;volatile
   986   001726  EF97  F00B         	goto	u6401
   987   00172A  EF99  F00B         	goto	u6400
   988   00172E                     u6401:
   989   00172E  EF9B  F00B         	goto	l284
   990   001732                     u6400:
   991   001732  EF90  F00B         	goto	l283
   992   001736                     l284:
   993                           
   994                           ;Main.c: 32:         SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE = 0;
   995   001736  9049               	bcf	_SYSTEM_ACTION_FLG^0,0,c	;volatile
   996                           
   997                           ;Main.c: 34:         switch( blink_enable_flg ) {
   998   001738  EFC0  F00B         	goto	l10001
   999   00173C                     l9977:
  1000   00173C  EC25  F014         	call	_BlinkDisable	;wreg free
  1001   001740  0E01               	movlw	1
  1002   001742  0100               	movlb	0	; () banked
  1003   001744  6F86               	movwf	(_blink_pos+6)& (0+255),b
  1004   001746  EFDD  F00B         	goto	l10003
  1005   00174A                     l9981:
  1006   00174A  EC25  F014         	call	_BlinkDisable	;wreg free
  1007   00174E  0E01               	movlw	1
  1008   001750  0100               	movlb	0	; () banked
  1009   001752  6F80               	movwf	_blink_pos& (0+255),b
  1010   001754                     
  1011                           ; BSR set to: 0
  1012   001754  0E01               	movlw	1
  1013   001756  6F81               	movwf	(_blink_pos+1)& (0+255),b
  1014   001758  EFDD  F00B         	goto	l10003
  1015   00175C                     l9987:
  1016   00175C  EC25  F014         	call	_BlinkDisable	;wreg free
  1017   001760  0E01               	movlw	1
  1018   001762  0100               	movlb	0	; () banked
  1019   001764  6F82               	movwf	(_blink_pos+2)& (0+255),b
  1020   001766                     
  1021                           ; BSR set to: 0
  1022   001766  0E01               	movlw	1
  1023   001768  6F83               	movwf	(_blink_pos+3)& (0+255),b
  1024   00176A  EFDD  F00B         	goto	l10003
  1025   00176E                     l9993:
  1026   00176E  EC25  F014         	call	_BlinkDisable	;wreg free
  1027   001772  0E01               	movlw	1
  1028   001774  0100               	movlb	0	; () banked
  1029   001776  6F84               	movwf	(_blink_pos+4)& (0+255),b
  1030   001778                     
  1031                           ; BSR set to: 0
  1032   001778  0E01               	movlw	1
  1033   00177A  6F85               	movwf	(_blink_pos+5)& (0+255),b
  1034   00177C  EFDD  F00B         	goto	l10003
  1035   001780                     l10001:
  1036   001780  5037               	movf	_blink_enable_flg^0,w,c
  1037   001782  6E6A               	movwf	??_main^0,c
  1038   001784  6A6B               	clrf	(??_main+1)^0,c
  1039                           
  1040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1041                           ; Switch size 1, requested type "simple"
  1042                           ; Number of cases is 1, Range of values is 0 to 0
  1043                           ; switch strategies available:
  1044                           ; Name         Instructions Cycles
  1045                           ; simple_byte            4     3 (average)
  1046                           ;	Chosen strategy is simple_byte
  1047   001786  506B               	movf	(??_main+1)^0,w,c
  1048   001788  0A00               	xorlw	0	; case 0
  1049   00178A  B4D8               	btfsc	status,2,c
  1050   00178C  EFCA  F00B         	goto	l10489
  1051   001790  EFDD  F00B         	goto	l10003
  1052   001794                     l10489:
  1053                           
  1054                           ; Switch size 1, requested type "simple"
  1055                           ; Number of cases is 4, Range of values is 1 to 4
  1056                           ; switch strategies available:
  1057                           ; Name         Instructions Cycles
  1058                           ; simple_byte           13     7 (average)
  1059                           ;	Chosen strategy is simple_byte
  1060   001794  506A               	movf	??_main^0,w,c
  1061   001796  0A01               	xorlw	1	; case 1
  1062   001798  B4D8               	btfsc	status,2,c
  1063   00179A  EF9E  F00B         	goto	l9977
  1064   00179E  0A03               	xorlw	3	; case 2
  1065   0017A0  B4D8               	btfsc	status,2,c
  1066   0017A2  EFA5  F00B         	goto	l9981
  1067   0017A6  0A01               	xorlw	1	; case 3
  1068   0017A8  B4D8               	btfsc	status,2,c
  1069   0017AA  EFAE  F00B         	goto	l9987
  1070   0017AE  0A07               	xorlw	7	; case 4
  1071   0017B0  B4D8               	btfsc	status,2,c
  1072   0017B2  EFB7  F00B         	goto	l9993
  1073   0017B6  EFDD  F00B         	goto	l10003
  1074   0017BA                     l10003:
  1075                           
  1076                           ;Main.c: 41:         LEDProcess();
  1077   0017BA  ECF9  F013         	call	_LEDProcess	;wreg free
  1078                           
  1079                           ;Main.c: 44:         switch( SYSTEM_STATE_FLG ) {
  1080   0017BE  EFF6  F00B         	goto	l10011
  1081   0017C2                     l10005:
  1082   0017C2  5043               	movf	_rtc_clock_disp_mode^0,w,c
  1083   0017C4  EC35  F00F         	call	_Ds1307Read
  1084   0017C8  C061  F0FC         	movff	?_Ds1307Read,UpdateDisplay@update_datas
  1085   0017CC  C062  F0FD         	movff	?_Ds1307Read+1,UpdateDisplay@update_datas+1
  1086   0017D0  0E01               	movlw	1
  1087   0017D2  0100               	movlb	0	; () banked
  1088   0017D4  6FFE               	movwf	UpdateDisplay@start_position& (0+255),b
  1089   0017D6  0E06               	movlw	6
  1090   0017D8  6FFF               	movwf	UpdateDisplay@end_position& (0+255),b
  1091   0017DA  EC84  F013         	call	_UpdateDisplay	;wreg free
  1092   0017DE  EF27  F00C         	goto	l10013
  1093   0017E2                     l298:
  1094   0017E2                     l10007:
  1095   0017E2  5042               	movf	_rtc_clock_set_mode^0,w,c
  1096   0017E4  ECE2  F00F         	call	_ClockSetting
  1097   0017E8  EF27  F00C         	goto	l10013
  1098   0017EC                     l10011:
  1099   0017EC  5048               	movf	_SYSTEM_STATE_FLG^0,w,c
  1100   0017EE  6E6A               	movwf	??_main^0,c
  1101   0017F0  6A6B               	clrf	(??_main+1)^0,c
  1102                           
  1103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1104                           ; Switch size 1, requested type "simple"
  1105                           ; Number of cases is 1, Range of values is 0 to 0
  1106                           ; switch strategies available:
  1107                           ; Name         Instructions Cycles
  1108                           ; simple_byte            4     3 (average)
  1109                           ;	Chosen strategy is simple_byte
  1110   0017F2  506B               	movf	(??_main+1)^0,w,c
  1111   0017F4  0A00               	xorlw	0	; case 0
  1112   0017F6  B4D8               	btfsc	status,2,c
  1113   0017F8  EF00  F00C         	goto	l10491
  1114   0017FC  EF27  F00C         	goto	l10013
  1115   001800                     l10491:
  1116                           
  1117                           ; Switch size 1, requested type "simple"
  1118                           ; Number of cases is 9, Range of values is 100 to 108
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte           28    15 (average)
  1122                           ;	Chosen strategy is simple_byte
  1123   001800  506A               	movf	??_main^0,w,c
  1124   001802  0A64               	xorlw	100	; case 100
  1125   001804  B4D8               	btfsc	status,2,c
  1126   001806  EFE1  F00B         	goto	l10005
  1127   00180A  0A01               	xorlw	1	; case 101
  1128   00180C  B4D8               	btfsc	status,2,c
  1129   00180E  EFF1  F00B         	goto	l298
  1130   001812  0A03               	xorlw	3	; case 102
  1131   001814  B4D8               	btfsc	status,2,c
  1132   001816  EFF1  F00B         	goto	l10007
  1133   00181A  0A01               	xorlw	1	; case 103
  1134   00181C  B4D8               	btfsc	status,2,c
  1135   00181E  EFF1  F00B         	goto	l10007
  1136   001822  0A0F               	xorlw	15	; case 104
  1137   001824  B4D8               	btfsc	status,2,c
  1138   001826  EFF1  F00B         	goto	l10007
  1139   00182A  0A01               	xorlw	1	; case 105
  1140   00182C  B4D8               	btfsc	status,2,c
  1141   00182E  EFF1  F00B         	goto	l10007
  1142   001832  0A03               	xorlw	3	; case 106
  1143   001834  B4D8               	btfsc	status,2,c
  1144   001836  EFF1  F00B         	goto	l10007
  1145   00183A  0A01               	xorlw	1	; case 107
  1146   00183C  B4D8               	btfsc	status,2,c
  1147   00183E  EFF1  F00B         	goto	l10007
  1148   001842  0A07               	xorlw	7	; case 108
  1149   001844  B4D8               	btfsc	status,2,c
  1150   001846  EFF1  F00B         	goto	l10007
  1151   00184A  EF27  F00C         	goto	l10013
  1152   00184E                     l10013:
  1153                           
  1154                           ;Main.c: 57:         if( counter_skip_flg ) continue;
  1155   00184E  5039               	movf	_counter_skip_flg^0,w,c
  1156   001850  B4D8               	btfsc	status,2,c
  1157   001852  EF2D  F00C         	goto	u6411
  1158   001856  EF2F  F00C         	goto	u6410
  1159   00185A                     u6411:
  1160   00185A  EF44  F00C         	goto	l10025
  1161   00185E                     u6410:
  1162   00185E  EF90  F00B         	goto	l283
  1163   001862                     l10017:
  1164   001862  EC17  F011         	call	_ReadCounter	;wreg free
  1165   001866  C067  F0FC         	movff	?_ReadCounter,UpdateDisplay@update_datas
  1166   00186A  C068  F0FD         	movff	?_ReadCounter+1,UpdateDisplay@update_datas+1
  1167   00186E  0E01               	movlw	1
  1168   001870  0100               	movlb	0	; () banked
  1169   001872  6FFE               	movwf	UpdateDisplay@start_position& (0+255),b
  1170   001874  0E06               	movlw	6
  1171   001876  6FFF               	movwf	UpdateDisplay@end_position& (0+255),b
  1172   001878  EC84  F013         	call	_UpdateDisplay	;wreg free
  1173   00187C  EF90  F00B         	goto	l283
  1174   001880                     l10021:
  1175   001880  ECC8  F011         	call	_CounterSetting	;wreg free
  1176   001884  EF90  F00B         	goto	l283
  1177   001888                     l10025:
  1178   001888  5048               	movf	_SYSTEM_STATE_FLG^0,w,c
  1179   00188A  6E6A               	movwf	??_main^0,c
  1180   00188C  6A6B               	clrf	(??_main+1)^0,c
  1181                           
  1182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1183                           ; Switch size 1, requested type "simple"
  1184                           ; Number of cases is 1, Range of values is 0 to 0
  1185                           ; switch strategies available:
  1186                           ; Name         Instructions Cycles
  1187                           ; simple_byte            4     3 (average)
  1188                           ;	Chosen strategy is simple_byte
  1189   00188E  506B               	movf	(??_main+1)^0,w,c
  1190   001890  0A00               	xorlw	0	; case 0
  1191   001892  B4D8               	btfsc	status,2,c
  1192   001894  EF4E  F00C         	goto	l10493
  1193   001898  EF90  F00B         	goto	l283
  1194   00189C                     l10493:
  1195                           
  1196                           ; Switch size 1, requested type "simple"
  1197                           ; Number of cases is 5, Range of values is 200 to 204
  1198                           ; switch strategies available:
  1199                           ; Name         Instructions Cycles
  1200                           ; simple_byte           16     9 (average)
  1201                           ;	Chosen strategy is simple_byte
  1202   00189C  506A               	movf	??_main^0,w,c
  1203   00189E  0AC8               	xorlw	200	; case 200
  1204   0018A0  B4D8               	btfsc	status,2,c
  1205   0018A2  EF31  F00C         	goto	l10017
  1206   0018A6  0A01               	xorlw	1	; case 201
  1207   0018A8  B4D8               	btfsc	status,2,c
  1208   0018AA  EF31  F00C         	goto	l10017
  1209   0018AE  0A03               	xorlw	3	; case 202
  1210   0018B0  B4D8               	btfsc	status,2,c
  1211   0018B2  EF40  F00C         	goto	l10021
  1212   0018B6  0A01               	xorlw	1	; case 203
  1213   0018B8  B4D8               	btfsc	status,2,c
  1214   0018BA  EF40  F00C         	goto	l10021
  1215   0018BE  0A07               	xorlw	7	; case 204
  1216   0018C0  B4D8               	btfsc	status,2,c
  1217   0018C2  EF40  F00C         	goto	l10021
  1218   0018C6  EF90  F00B         	goto	l283
  1219   0018CA  EF13  F000         	goto	start
  1220   0018CE                     __end_of_main:
  1221                           	callstack 0
  1222                           
  1223 ;; *************** function _VerifyButtons *****************
  1224 ;; Defined at:
  1225 ;;		line 45 in file "Buttons.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1239 ;;      Params:         0       0       0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0       0       0
  1241 ;;      Temps:          2       0       0       0       0       0       0
  1242 ;;      Totals:         2       0       0       0       0       0       0
  1243 ;;Total ram usage:        2 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; Hardware stack levels required when called: 9
  1246 ;; This function calls:
  1247 ;;		_ActionButtons
  1248 ;; This function is called by:
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text1
  1254   0011C2                     __ptext1:
  1255                           	callstack 0
  1256   0011C2                     _VerifyButtons:
  1257                           	callstack 21
  1258   0011C2                     
  1259                           ;Buttons.c: 47:     switch( BTN_CLICK_EVENT ) {
  1260   0011C2  EF66  F00A         	goto	l9925
  1261   0011C6                     l9823:
  1262   0011C6  0E21               	movlw	33
  1263   0011C8  5C1D               	subwf	_hour_btn_pressed_cnt^0,w,c
  1264   0011CA  0E03               	movlw	3
  1265   0011CC  581E               	subwfb	(_hour_btn_pressed_cnt+1)^0,w,c
  1266   0011CE  A0D8               	btfss	status,0,c
  1267   0011D0  EFEC  F008         	goto	u6141
  1268   0011D4  EFEE  F008         	goto	u6140
  1269   0011D8                     u6141:
  1270   0011D8  EFF6  F008         	goto	l9827
  1271   0011DC                     u6140:
  1272   0011DC  0E01               	movlw	1
  1273   0011DE  6E31               	movwf	_btn_long_press_verify_flg^0,c
  1274   0011E0  0E03               	movlw	3
  1275   0011E2  6E1E               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  1276   0011E4  0E20               	movlw	32
  1277   0011E6  6E1D               	movwf	_hour_btn_pressed_cnt^0,c
  1278   0011E8  EF03  F009         	goto	l9831
  1279   0011EC                     l9827:
  1280   0011EC  501E               	movf	(_hour_btn_pressed_cnt+1)^0,w,c
  1281   0011EE  E109               	bnz	u6150
  1282   0011F0  0E65               	movlw	101
  1283   0011F2  5C1D               	subwf	_hour_btn_pressed_cnt^0,w,c
  1284   0011F4  A0D8               	btfss	status,0,c
  1285   0011F6  EFFF  F008         	goto	u6151
  1286   0011FA  EF01  F009         	goto	u6150
  1287   0011FE                     u6151:
  1288   0011FE  EF03  F009         	goto	l9831
  1289   001202                     u6150:
  1290   001202  0E01               	movlw	1
  1291   001204  6E32               	movwf	_btn_press_verify_flg^0,c
  1292   001206                     l9831:
  1293                           
  1294                           ;Buttons.c: 51:                 if( hour_btn_released_cnt > 40 ) {
  1295   001206  5014               	movf	(_hour_btn_released_cnt+1)^0,w,c
  1296   001208  E109               	bnz	u6160
  1297   00120A  0E29               	movlw	41
  1298   00120C  5C13               	subwf	_hour_btn_released_cnt^0,w,c
  1299   00120E  A0D8               	btfss	status,0,c
  1300   001210  EF0C  F009         	goto	u6161
  1301   001214  EF0E  F009         	goto	u6160
  1302   001218                     u6161:
  1303   001218  EF2E  F009         	goto	l9841
  1304   00121C                     u6160:
  1305   00121C                     
  1306                           ;Buttons.c: 52:                     hour_btn_released_cnt = 0; BTN_CLICK_EVENT = 0;
  1307   00121C  0E00               	movlw	0
  1308   00121E  6E14               	movwf	(_hour_btn_released_cnt+1)^0,c
  1309   001220  0E00               	movlw	0
  1310   001222  6E13               	movwf	_hour_btn_released_cnt^0,c
  1311   001224  0E00               	movlw	0
  1312   001226  6E33               	movwf	_BTN_CLICK_EVENT^0,c
  1313                           
  1314                           ;Buttons.c: 53:                     if( btn_long_press_verify_flg ) { BTN_CLICK_STATE = 
      +                          16; btn_long_press_verify_flg = 0; }
  1315   001228  5031               	movf	_btn_long_press_verify_flg^0,w,c
  1316   00122A  B4D8               	btfsc	status,2,c
  1317   00122C  EF1A  F009         	goto	u6171
  1318   001230  EF1C  F009         	goto	u6170
  1319   001234                     u6171:
  1320   001234  EF22  F009         	goto	l9837
  1321   001238                     u6170:
  1322   001238  0E10               	movlw	16
  1323   00123A  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1324   00123C  0E00               	movlw	0
  1325   00123E  6E31               	movwf	_btn_long_press_verify_flg^0,c
  1326   001240  EF2E  F009         	goto	l9841
  1327   001244                     l9837:
  1328   001244  5032               	movf	_btn_press_verify_flg^0,w,c
  1329   001246  B4D8               	btfsc	status,2,c
  1330   001248  EF28  F009         	goto	u6181
  1331   00124C  EF2A  F009         	goto	u6180
  1332   001250                     u6181:
  1333   001250  EF2E  F009         	goto	l9841
  1334   001254                     u6180:
  1335   001254  0E0B               	movlw	11
  1336   001256  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1337   001258  0E00               	movlw	0
  1338   00125A  6E32               	movwf	_btn_press_verify_flg^0,c
  1339   00125C                     l9841:
  1340                           
  1341                           ;Buttons.c: 56:                 ActionButtons(); break;
  1342   00125C  EC12  F003         	call	_ActionButtons	;wreg free
  1343   001260  EF87  F00A         	goto	l948
  1344   001264                     l9843:
  1345   001264  0E21               	movlw	33
  1346   001266  5C1B               	subwf	_up_btn_pressed_cnt^0,w,c
  1347   001268  0E03               	movlw	3
  1348   00126A  581C               	subwfb	(_up_btn_pressed_cnt+1)^0,w,c
  1349   00126C  A0D8               	btfss	status,0,c
  1350   00126E  EF3B  F009         	goto	u6191
  1351   001272  EF3D  F009         	goto	u6190
  1352   001276                     u6191:
  1353   001276  EF45  F009         	goto	l9847
  1354   00127A                     u6190:
  1355   00127A  0E01               	movlw	1
  1356   00127C  6E31               	movwf	_btn_long_press_verify_flg^0,c
  1357   00127E  0E03               	movlw	3
  1358   001280  6E1C               	movwf	(_up_btn_pressed_cnt+1)^0,c
  1359   001282  0E20               	movlw	32
  1360   001284  6E1B               	movwf	_up_btn_pressed_cnt^0,c
  1361   001286  EF52  F009         	goto	l9851
  1362   00128A                     l9847:
  1363   00128A  501C               	movf	(_up_btn_pressed_cnt+1)^0,w,c
  1364   00128C  E109               	bnz	u6200
  1365   00128E  0E65               	movlw	101
  1366   001290  5C1B               	subwf	_up_btn_pressed_cnt^0,w,c
  1367   001292  A0D8               	btfss	status,0,c
  1368   001294  EF4E  F009         	goto	u6201
  1369   001298  EF50  F009         	goto	u6200
  1370   00129C                     u6201:
  1371   00129C  EF52  F009         	goto	l9851
  1372   0012A0                     u6200:
  1373   0012A0  0E01               	movlw	1
  1374   0012A2  6E32               	movwf	_btn_press_verify_flg^0,c
  1375   0012A4                     l9851:
  1376                           
  1377                           ;Buttons.c: 60:                 if( up_btn_released_cnt > 40 ) {
  1378   0012A4  5012               	movf	(_up_btn_released_cnt+1)^0,w,c
  1379   0012A6  E109               	bnz	u6210
  1380   0012A8  0E29               	movlw	41
  1381   0012AA  5C11               	subwf	_up_btn_released_cnt^0,w,c
  1382   0012AC  A0D8               	btfss	status,0,c
  1383   0012AE  EF5B  F009         	goto	u6211
  1384   0012B2  EF5D  F009         	goto	u6210
  1385   0012B6                     u6211:
  1386   0012B6  EF2E  F009         	goto	l9841
  1387   0012BA                     u6210:
  1388   0012BA                     
  1389                           ;Buttons.c: 61:                     up_btn_released_cnt = 0; BTN_CLICK_EVENT = 0;
  1390   0012BA  0E00               	movlw	0
  1391   0012BC  6E12               	movwf	(_up_btn_released_cnt+1)^0,c
  1392   0012BE  0E00               	movlw	0
  1393   0012C0  6E11               	movwf	_up_btn_released_cnt^0,c
  1394   0012C2  0E00               	movlw	0
  1395   0012C4  6E33               	movwf	_BTN_CLICK_EVENT^0,c
  1396                           
  1397                           ;Buttons.c: 62:                     if( btn_long_press_verify_flg ) { BTN_CLICK_STATE = 
      +                          17; btn_long_press_verify_flg = 0; }
  1398   0012C6  5031               	movf	_btn_long_press_verify_flg^0,w,c
  1399   0012C8  B4D8               	btfsc	status,2,c
  1400   0012CA  EF69  F009         	goto	u6221
  1401   0012CE  EF6B  F009         	goto	u6220
  1402   0012D2                     u6221:
  1403   0012D2  EF71  F009         	goto	l9857
  1404   0012D6                     u6220:
  1405   0012D6  0E11               	movlw	17
  1406   0012D8  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1407   0012DA  0E00               	movlw	0
  1408   0012DC  6E31               	movwf	_btn_long_press_verify_flg^0,c
  1409   0012DE  EF2E  F009         	goto	l9841
  1410   0012E2                     l9857:
  1411   0012E2  5032               	movf	_btn_press_verify_flg^0,w,c
  1412   0012E4  B4D8               	btfsc	status,2,c
  1413   0012E6  EF77  F009         	goto	u6231
  1414   0012EA  EF79  F009         	goto	u6230
  1415   0012EE                     u6231:
  1416   0012EE  EF2E  F009         	goto	l9841
  1417   0012F2                     u6230:
  1418   0012F2  0E0C               	movlw	12
  1419   0012F4  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1420   0012F6  0E00               	movlw	0
  1421   0012F8  6E32               	movwf	_btn_press_verify_flg^0,c
  1422   0012FA  EF2E  F009         	goto	l9841
  1423   0012FE                     l9863:
  1424   0012FE  0E21               	movlw	33
  1425   001300  5C19               	subwf	_down_btn_pressed_cnt^0,w,c
  1426   001302  0E03               	movlw	3
  1427   001304  581A               	subwfb	(_down_btn_pressed_cnt+1)^0,w,c
  1428   001306  A0D8               	btfss	status,0,c
  1429   001308  EF88  F009         	goto	u6241
  1430   00130C  EF8A  F009         	goto	u6240
  1431   001310                     u6241:
  1432   001310  EF92  F009         	goto	l9867
  1433   001314                     u6240:
  1434   001314  0E01               	movlw	1
  1435   001316  6E31               	movwf	_btn_long_press_verify_flg^0,c
  1436   001318  0E03               	movlw	3
  1437   00131A  6E1A               	movwf	(_down_btn_pressed_cnt+1)^0,c
  1438   00131C  0E20               	movlw	32
  1439   00131E  6E19               	movwf	_down_btn_pressed_cnt^0,c
  1440   001320  EF9F  F009         	goto	l9871
  1441   001324                     l9867:
  1442   001324  501A               	movf	(_down_btn_pressed_cnt+1)^0,w,c
  1443   001326  E109               	bnz	u6250
  1444   001328  0E65               	movlw	101
  1445   00132A  5C19               	subwf	_down_btn_pressed_cnt^0,w,c
  1446   00132C  A0D8               	btfss	status,0,c
  1447   00132E  EF9B  F009         	goto	u6251
  1448   001332  EF9D  F009         	goto	u6250
  1449   001336                     u6251:
  1450   001336  EF9F  F009         	goto	l9871
  1451   00133A                     u6250:
  1452   00133A  0E01               	movlw	1
  1453   00133C  6E32               	movwf	_btn_press_verify_flg^0,c
  1454   00133E                     l9871:
  1455                           
  1456                           ;Buttons.c: 69:                 if( down_btn_released_cnt > 40 ) {
  1457   00133E  5010               	movf	(_down_btn_released_cnt+1)^0,w,c
  1458   001340  E109               	bnz	u6260
  1459   001342  0E29               	movlw	41
  1460   001344  5C0F               	subwf	_down_btn_released_cnt^0,w,c
  1461   001346  A0D8               	btfss	status,0,c
  1462   001348  EFA8  F009         	goto	u6261
  1463   00134C  EFAA  F009         	goto	u6260
  1464   001350                     u6261:
  1465   001350  EF2E  F009         	goto	l9841
  1466   001354                     u6260:
  1467   001354                     
  1468                           ;Buttons.c: 70:                     down_btn_released_cnt = 0; BTN_CLICK_EVENT = 0;
  1469   001354  0E00               	movlw	0
  1470   001356  6E10               	movwf	(_down_btn_released_cnt+1)^0,c
  1471   001358  0E00               	movlw	0
  1472   00135A  6E0F               	movwf	_down_btn_released_cnt^0,c
  1473   00135C  0E00               	movlw	0
  1474   00135E  6E33               	movwf	_BTN_CLICK_EVENT^0,c
  1475                           
  1476                           ;Buttons.c: 71:                     if( btn_long_press_verify_flg ) { BTN_CLICK_STATE = 
      +                          18; btn_long_press_verify_flg = 0; }
  1477   001360  5031               	movf	_btn_long_press_verify_flg^0,w,c
  1478   001362  B4D8               	btfsc	status,2,c
  1479   001364  EFB6  F009         	goto	u6271
  1480   001368  EFB8  F009         	goto	u6270
  1481   00136C                     u6271:
  1482   00136C  EFBE  F009         	goto	l9877
  1483   001370                     u6270:
  1484   001370  0E12               	movlw	18
  1485   001372  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1486   001374  0E00               	movlw	0
  1487   001376  6E31               	movwf	_btn_long_press_verify_flg^0,c
  1488   001378  EF2E  F009         	goto	l9841
  1489   00137C                     l9877:
  1490   00137C  5032               	movf	_btn_press_verify_flg^0,w,c
  1491   00137E  B4D8               	btfsc	status,2,c
  1492   001380  EFC4  F009         	goto	u6281
  1493   001384  EFC6  F009         	goto	u6280
  1494   001388                     u6281:
  1495   001388  EF2E  F009         	goto	l9841
  1496   00138C                     u6280:
  1497   00138C  0E0D               	movlw	13
  1498   00138E  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1499   001390  0E00               	movlw	0
  1500   001392  6E32               	movwf	_btn_press_verify_flg^0,c
  1501   001394  EF2E  F009         	goto	l9841
  1502   001398                     l9883:
  1503   001398  0E21               	movlw	33
  1504   00139A  5C17               	subwf	_sel_btn_pressed_cnt^0,w,c
  1505   00139C  0E03               	movlw	3
  1506   00139E  5818               	subwfb	(_sel_btn_pressed_cnt+1)^0,w,c
  1507   0013A0  A0D8               	btfss	status,0,c
  1508   0013A2  EFD5  F009         	goto	u6291
  1509   0013A6  EFD7  F009         	goto	u6290
  1510   0013AA                     u6291:
  1511   0013AA  EFDF  F009         	goto	l9887
  1512   0013AE                     u6290:
  1513   0013AE  0E01               	movlw	1
  1514   0013B0  6E31               	movwf	_btn_long_press_verify_flg^0,c
  1515   0013B2  0E03               	movlw	3
  1516   0013B4  6E18               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  1517   0013B6  0E20               	movlw	32
  1518   0013B8  6E17               	movwf	_sel_btn_pressed_cnt^0,c
  1519   0013BA  EFEC  F009         	goto	l9891
  1520   0013BE                     l9887:
  1521   0013BE  5018               	movf	(_sel_btn_pressed_cnt+1)^0,w,c
  1522   0013C0  E109               	bnz	u6300
  1523   0013C2  0E65               	movlw	101
  1524   0013C4  5C17               	subwf	_sel_btn_pressed_cnt^0,w,c
  1525   0013C6  A0D8               	btfss	status,0,c
  1526   0013C8  EFE8  F009         	goto	u6301
  1527   0013CC  EFEA  F009         	goto	u6300
  1528   0013D0                     u6301:
  1529   0013D0  EFEC  F009         	goto	l9891
  1530   0013D4                     u6300:
  1531   0013D4  0E01               	movlw	1
  1532   0013D6  6E32               	movwf	_btn_press_verify_flg^0,c
  1533   0013D8                     l9891:
  1534                           
  1535                           ;Buttons.c: 78:                 if( sel_btn_released_cnt > 40 ) {
  1536   0013D8  500E               	movf	(_sel_btn_released_cnt+1)^0,w,c
  1537   0013DA  E109               	bnz	u6310
  1538   0013DC  0E29               	movlw	41
  1539   0013DE  5C0D               	subwf	_sel_btn_released_cnt^0,w,c
  1540   0013E0  A0D8               	btfss	status,0,c
  1541   0013E2  EFF5  F009         	goto	u6311
  1542   0013E6  EFF7  F009         	goto	u6310
  1543   0013EA                     u6311:
  1544   0013EA  EF2E  F009         	goto	l9841
  1545   0013EE                     u6310:
  1546   0013EE                     
  1547                           ;Buttons.c: 79:                     sel_btn_released_cnt = 0; BTN_CLICK_EVENT = 0;
  1548   0013EE  0E00               	movlw	0
  1549   0013F0  6E0E               	movwf	(_sel_btn_released_cnt+1)^0,c
  1550   0013F2  0E00               	movlw	0
  1551   0013F4  6E0D               	movwf	_sel_btn_released_cnt^0,c
  1552   0013F6  0E00               	movlw	0
  1553   0013F8  6E33               	movwf	_BTN_CLICK_EVENT^0,c
  1554                           
  1555                           ;Buttons.c: 80:                     if( btn_long_press_verify_flg ) { BTN_CLICK_STATE = 
      +                          19; btn_long_press_verify_flg = 0; }
  1556   0013FA  5031               	movf	_btn_long_press_verify_flg^0,w,c
  1557   0013FC  B4D8               	btfsc	status,2,c
  1558   0013FE  EF03  F00A         	goto	u6321
  1559   001402  EF05  F00A         	goto	u6320
  1560   001406                     u6321:
  1561   001406  EF0B  F00A         	goto	l9897
  1562   00140A                     u6320:
  1563   00140A  0E13               	movlw	19
  1564   00140C  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1565   00140E  0E00               	movlw	0
  1566   001410  6E31               	movwf	_btn_long_press_verify_flg^0,c
  1567   001412  EF2E  F009         	goto	l9841
  1568   001416                     l9897:
  1569   001416  5032               	movf	_btn_press_verify_flg^0,w,c
  1570   001418  B4D8               	btfsc	status,2,c
  1571   00141A  EF11  F00A         	goto	u6331
  1572   00141E  EF13  F00A         	goto	u6330
  1573   001422                     u6331:
  1574   001422  EF2E  F009         	goto	l9841
  1575   001426                     u6330:
  1576   001426  0E0E               	movlw	14
  1577   001428  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1578   00142A  0E00               	movlw	0
  1579   00142C  6E32               	movwf	_btn_press_verify_flg^0,c
  1580   00142E  EF2E  F009         	goto	l9841
  1581   001432                     l9903:
  1582   001432  0E21               	movlw	33
  1583   001434  5C15               	subwf	_reset_btn_pressed_cnt^0,w,c
  1584   001436  0E03               	movlw	3
  1585   001438  5816               	subwfb	(_reset_btn_pressed_cnt+1)^0,w,c
  1586   00143A  A0D8               	btfss	status,0,c
  1587   00143C  EF22  F00A         	goto	u6341
  1588   001440  EF24  F00A         	goto	u6340
  1589   001444                     u6341:
  1590   001444  EF2C  F00A         	goto	l9907
  1591   001448                     u6340:
  1592   001448  0E01               	movlw	1
  1593   00144A  6E31               	movwf	_btn_long_press_verify_flg^0,c
  1594   00144C  0E03               	movlw	3
  1595   00144E  6E16               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  1596   001450  0E20               	movlw	32
  1597   001452  6E15               	movwf	_reset_btn_pressed_cnt^0,c
  1598   001454  EF39  F00A         	goto	l9911
  1599   001458                     l9907:
  1600   001458  5016               	movf	(_reset_btn_pressed_cnt+1)^0,w,c
  1601   00145A  E109               	bnz	u6350
  1602   00145C  0E65               	movlw	101
  1603   00145E  5C15               	subwf	_reset_btn_pressed_cnt^0,w,c
  1604   001460  A0D8               	btfss	status,0,c
  1605   001462  EF35  F00A         	goto	u6351
  1606   001466  EF37  F00A         	goto	u6350
  1607   00146A                     u6351:
  1608   00146A  EF39  F00A         	goto	l9911
  1609   00146E                     u6350:
  1610   00146E  0E01               	movlw	1
  1611   001470  6E32               	movwf	_btn_press_verify_flg^0,c
  1612   001472                     l9911:
  1613                           
  1614                           ;Buttons.c: 87:                 if( reset_btn_released_cnt > 40 ) {
  1615   001472  500C               	movf	(_reset_btn_released_cnt+1)^0,w,c
  1616   001474  E109               	bnz	u6360
  1617   001476  0E29               	movlw	41
  1618   001478  5C0B               	subwf	_reset_btn_released_cnt^0,w,c
  1619   00147A  A0D8               	btfss	status,0,c
  1620   00147C  EF42  F00A         	goto	u6361
  1621   001480  EF44  F00A         	goto	u6360
  1622   001484                     u6361:
  1623   001484  EF2E  F009         	goto	l9841
  1624   001488                     u6360:
  1625   001488                     
  1626                           ;Buttons.c: 88:                     reset_btn_released_cnt = 0; BTN_CLICK_EVENT = 0;
  1627   001488  0E00               	movlw	0
  1628   00148A  6E0C               	movwf	(_reset_btn_released_cnt+1)^0,c
  1629   00148C  0E00               	movlw	0
  1630   00148E  6E0B               	movwf	_reset_btn_released_cnt^0,c
  1631   001490  0E00               	movlw	0
  1632   001492  6E33               	movwf	_BTN_CLICK_EVENT^0,c
  1633                           
  1634                           ;Buttons.c: 89:                     if( btn_long_press_verify_flg ) { BTN_CLICK_STATE = 
      +                          20; btn_long_press_verify_flg = 0; }
  1635   001494  5031               	movf	_btn_long_press_verify_flg^0,w,c
  1636   001496  B4D8               	btfsc	status,2,c
  1637   001498  EF50  F00A         	goto	u6371
  1638   00149C  EF52  F00A         	goto	u6370
  1639   0014A0                     u6371:
  1640   0014A0  EF58  F00A         	goto	l9917
  1641   0014A4                     u6370:
  1642   0014A4  0E14               	movlw	20
  1643   0014A6  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1644   0014A8  0E00               	movlw	0
  1645   0014AA  6E31               	movwf	_btn_long_press_verify_flg^0,c
  1646   0014AC  EF2E  F009         	goto	l9841
  1647   0014B0                     l9917:
  1648   0014B0  5032               	movf	_btn_press_verify_flg^0,w,c
  1649   0014B2  B4D8               	btfsc	status,2,c
  1650   0014B4  EF5E  F00A         	goto	u6381
  1651   0014B8  EF60  F00A         	goto	u6380
  1652   0014BC                     u6381:
  1653   0014BC  EF2E  F009         	goto	l9841
  1654   0014C0                     u6380:
  1655   0014C0  0E0F               	movlw	15
  1656   0014C2  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1657   0014C4  0E00               	movlw	0
  1658   0014C6  6E32               	movwf	_btn_press_verify_flg^0,c
  1659   0014C8  EF2E  F009         	goto	l9841
  1660   0014CC                     l9925:
  1661   0014CC  5033               	movf	_BTN_CLICK_EVENT^0,w,c
  1662   0014CE  6E66               	movwf	??_VerifyButtons^0,c
  1663   0014D0  6A67               	clrf	(??_VerifyButtons+1)^0,c
  1664                           
  1665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1666                           ; Switch size 1, requested type "simple"
  1667                           ; Number of cases is 1, Range of values is 0 to 0
  1668                           ; switch strategies available:
  1669                           ; Name         Instructions Cycles
  1670                           ; simple_byte            4     3 (average)
  1671                           ;	Chosen strategy is simple_byte
  1672   0014D2  5067               	movf	(??_VerifyButtons+1)^0,w,c
  1673   0014D4  0A00               	xorlw	0	; case 0
  1674   0014D6  B4D8               	btfsc	status,2,c
  1675   0014D8  EF70  F00A         	goto	l10495
  1676   0014DC  EF87  F00A         	goto	l948
  1677   0014E0                     l10495:
  1678                           
  1679                           ; Switch size 1, requested type "simple"
  1680                           ; Number of cases is 5, Range of values is 1 to 5
  1681                           ; switch strategies available:
  1682                           ; Name         Instructions Cycles
  1683                           ; simple_byte           16     9 (average)
  1684                           ;	Chosen strategy is simple_byte
  1685   0014E0  5066               	movf	??_VerifyButtons^0,w,c
  1686   0014E2  0A01               	xorlw	1	; case 1
  1687   0014E4  B4D8               	btfsc	status,2,c
  1688   0014E6  EFE3  F008         	goto	l9823
  1689   0014EA  0A03               	xorlw	3	; case 2
  1690   0014EC  B4D8               	btfsc	status,2,c
  1691   0014EE  EF32  F009         	goto	l9843
  1692   0014F2  0A01               	xorlw	1	; case 3
  1693   0014F4  B4D8               	btfsc	status,2,c
  1694   0014F6  EF7F  F009         	goto	l9863
  1695   0014FA  0A07               	xorlw	7	; case 4
  1696   0014FC  B4D8               	btfsc	status,2,c
  1697   0014FE  EFCC  F009         	goto	l9883
  1698   001502  0A01               	xorlw	1	; case 5
  1699   001504  B4D8               	btfsc	status,2,c
  1700   001506  EF19  F00A         	goto	l9903
  1701   00150A  EF87  F00A         	goto	l948
  1702   00150E                     l948:
  1703   00150E  0012               	return		;funcret
  1704   001510                     __end_of_VerifyButtons:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _ActionButtons *****************
  1708 ;; Defined at:
  1709 ;;		line 96 in file "Buttons.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  temp            1   17[COMRAM] char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1723 ;;      Params:         0       0       0       0       0       0       0
  1724 ;;      Locals:         1       0       0       0       0       0       0
  1725 ;;      Temps:          2       0       0       0       0       0       0
  1726 ;;      Totals:         3       0       0       0       0       0       0
  1727 ;;Total ram usage:        3 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 8
  1730 ;; This function calls:
  1731 ;;		_Ds1307Write
  1732 ;;		_SetCounter
  1733 ;;		_StartCounter
  1734 ;;		_StopCounter
  1735 ;; This function is called by:
  1736 ;;		_VerifyButtons
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text2
  1741   000624                     __ptext2:
  1742                           	callstack 0
  1743   000624                     _ActionButtons:
  1744                           	callstack 21
  1745   000624                     
  1746                           ;Buttons.c: 102:     signed char temp;;Buttons.c: 103:     switch( SYSTEM_STATE_FLG ){
  1747   000624  EF39  F008         	goto	l9553
  1748   000628                     l9053:
  1749                           
  1750                           ;Buttons.c: 108:                     SYSTEM_STATE_FLG = 201; BTN_CLICK_STATE = 0;
  1751   000628  0EC9               	movlw	201
  1752   00062A  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  1753   00062C  0E00               	movlw	0
  1754   00062E  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1755                           
  1756                           ;Buttons.c: 109:                     counter_direction_flg = 1; blink_enable_flg = 0; te
      +                          mp_system_state = SYSTEM_STATE_FLG;
  1757   000630  0E01               	movlw	1
  1758   000632  6E3A               	movwf	_counter_direction_flg^0,c
  1759   000634  0E00               	movlw	0
  1760   000636  6E37               	movwf	_blink_enable_flg^0,c
  1761   000638  C048  F044         	movff	_SYSTEM_STATE_FLG,_temp_system_state
  1762   00063C                     
  1763                           ;Buttons.c: 110:                     SetCounter( counter_hour_set_value, counter_min_set
      +                          _value, counter_sec_set_value ); StopCounter();
  1764   00063C  C046  F05F         	movff	_counter_min_set_value,SetCounter@minute
  1765   000640  C045  F060         	movff	_counter_sec_set_value,SetCounter@second
  1766   000644  5047               	movf	_counter_hour_set_value^0,w,c
  1767   000646  ECA5  F013         	call	_SetCounter
  1768   00064A                     l9059:
  1769   00064A  ECC8  F014         	call	_StopCounter	;wreg free
  1770   00064E  EFE0  F008         	goto	l955
  1771   000652                     l9063:
  1772                           
  1773                           ;Buttons.c: 113:                     if( rtc_clock_disp_type == 0 ) rtc_clock_disp_type 
      +                          = 1;
  1774   000652  504C               	movf	_rtc_clock_disp_type^0,w,c
  1775   000654  A4D8               	btfss	status,2,c
  1776   000656  EF2F  F003         	goto	u5481
  1777   00065A  EF31  F003         	goto	u5480
  1778   00065E                     u5481:
  1779   00065E  EF35  F003         	goto	l9067
  1780   000662                     u5480:
  1781   000662  0E01               	movlw	1
  1782   000664  6E4C               	movwf	_rtc_clock_disp_type^0,c
  1783   000666  EF37  F003         	goto	l958
  1784   00066A                     l9067:
  1785   00066A  0E00               	movlw	0
  1786   00066C  6E4C               	movwf	_rtc_clock_disp_type^0,c
  1787   00066E                     l958:
  1788                           
  1789                           ;Buttons.c: 115:                     BTN_CLICK_STATE = 0; Ds1307Write( &real_rtc_data );
  1790   00066E  0E00               	movlw	0
  1791   000670  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1792   000672                     l9069:
  1793   000672  0E4D               	movlw	low _real_rtc_data
  1794   000674  6E60               	movwf	Ds1307Write@write_datas^0,c
  1795   000676  0E00               	movlw	high _real_rtc_data
  1796   000678  6E61               	movwf	(Ds1307Write@write_datas+1)^0,c
  1797   00067A  ECD6  F00D         	call	_Ds1307Write	;wreg free
  1798   00067E  EFE0  F008         	goto	l955
  1799   000682                     l9073:
  1800                           
  1801                           ;Buttons.c: 118:                     rtc_clock_disp_mode ++;
  1802   000682  2A43               	incf	_rtc_clock_disp_mode^0,f,c
  1803   000684                     
  1804                           ;Buttons.c: 119:                     if( rtc_clock_disp_mode >= 3 ) rtc_clock_disp_mode 
      +                          = 0;
  1805   000684  0E02               	movlw	2
  1806   000686  6443               	cpfsgt	_rtc_clock_disp_mode^0,c
  1807   000688  EF48  F003         	goto	u5491
  1808   00068C  EF4A  F003         	goto	u5490
  1809   000690                     u5491:
  1810   000690  EF4C  F003         	goto	l960
  1811   000694                     u5490:
  1812   000694  0E00               	movlw	0
  1813   000696  6E43               	movwf	_rtc_clock_disp_mode^0,c
  1814   000698                     l960:
  1815                           
  1816                           ;Buttons.c: 120:                     BTN_CLICK_STATE = 0;
  1817   000698  0E00               	movlw	0
  1818   00069A  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1819   00069C  EFE0  F008         	goto	l955
  1820   0006A0                     l9081:
  1821                           
  1822                           ;Buttons.c: 123:                     SYSTEM_STATE_FLG = 101; rtc_clock_set_mode = 0;
  1823   0006A0  0E65               	movlw	101
  1824   0006A2  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  1825   0006A4  0E00               	movlw	0
  1826   0006A6  6E42               	movwf	_rtc_clock_set_mode^0,c
  1827                           
  1828                           ;Buttons.c: 124:                     blink_enable_flg = 2; BTN_CLICK_STATE = 0;
  1829   0006A8  0E02               	movlw	2
  1830   0006AA  6E37               	movwf	_blink_enable_flg^0,c
  1831   0006AC  0E00               	movlw	0
  1832   0006AE  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1833   0006B0  EFE0  F008         	goto	l955
  1834   0006B4                     l9085:
  1835                           
  1836                           ;Buttons.c: 127:                     SYSTEM_STATE_FLG = 105; rtc_clock_set_mode = 1;
  1837   0006B4  0E69               	movlw	105
  1838   0006B6  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  1839   0006B8  0E01               	movlw	1
  1840   0006BA  6E42               	movwf	_rtc_clock_set_mode^0,c
  1841                           
  1842                           ;Buttons.c: 128:                     blink_enable_flg = 2; BTN_CLICK_STATE = 0;
  1843   0006BC  0E02               	movlw	2
  1844   0006BE  6E37               	movwf	_blink_enable_flg^0,c
  1845   0006C0  0E00               	movlw	0
  1846   0006C2  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1847   0006C4  EFE0  F008         	goto	l955
  1848   0006C8                     l9089:
  1849                           
  1850                           ;Buttons.c: 131:                     SYSTEM_STATE_FLG = 104; rtc_clock_set_mode = 2;
  1851   0006C8  0E68               	movlw	104
  1852   0006CA  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  1853   0006CC  0E02               	movlw	2
  1854   0006CE  6E42               	movwf	_rtc_clock_set_mode^0,c
  1855                           
  1856                           ;Buttons.c: 132:                     blink_enable_flg = 2; BTN_CLICK_STATE = 0;
  1857   0006D0  0E02               	movlw	2
  1858   0006D2  6E37               	movwf	_blink_enable_flg^0,c
  1859   0006D4  0E00               	movlw	0
  1860   0006D6  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1861   0006D8  EFE0  F008         	goto	l955
  1862   0006DC                     l9095:
  1863   0006DC  5034               	movf	_BTN_CLICK_STATE^0,w,c
  1864   0006DE  6E63               	movwf	??_ActionButtons^0,c
  1865   0006E0  6A64               	clrf	(??_ActionButtons+1)^0,c
  1866                           
  1867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1868                           ; Switch size 1, requested type "simple"
  1869                           ; Number of cases is 1, Range of values is 0 to 0
  1870                           ; switch strategies available:
  1871                           ; Name         Instructions Cycles
  1872                           ; simple_byte            4     3 (average)
  1873                           ;	Chosen strategy is simple_byte
  1874   0006E2  5064               	movf	(??_ActionButtons+1)^0,w,c
  1875   0006E4  0A00               	xorlw	0	; case 0
  1876   0006E6  B4D8               	btfsc	status,2,c
  1877   0006E8  EF78  F003         	goto	l10497
  1878   0006EC  EF7E  F008         	goto	l9555
  1879   0006F0                     l10497:
  1880                           
  1881                           ; Switch size 1, requested type "simple"
  1882                           ; Number of cases is 6, Range of values is 14 to 19
  1883                           ; switch strategies available:
  1884                           ; Name         Instructions Cycles
  1885                           ; simple_byte           19    10 (average)
  1886                           ;	Chosen strategy is simple_byte
  1887   0006F0  5063               	movf	??_ActionButtons^0,w,c
  1888   0006F2  0A0E               	xorlw	14	; case 14
  1889   0006F4  B4D8               	btfsc	status,2,c
  1890   0006F6  EF29  F003         	goto	l9063
  1891   0006FA  0A01               	xorlw	1	; case 15
  1892   0006FC  B4D8               	btfsc	status,2,c
  1893   0006FE  EF41  F003         	goto	l9073
  1894   000702  0A1F               	xorlw	31	; case 16
  1895   000704  B4D8               	btfsc	status,2,c
  1896   000706  EF50  F003         	goto	l9081
  1897   00070A  0A01               	xorlw	1	; case 17
  1898   00070C  B4D8               	btfsc	status,2,c
  1899   00070E  EF5A  F003         	goto	l9085
  1900   000712  0A03               	xorlw	3	; case 18
  1901   000714  B4D8               	btfsc	status,2,c
  1902   000716  EF64  F003         	goto	l9089
  1903   00071A  0A01               	xorlw	1	; case 19
  1904   00071C  B4D8               	btfsc	status,2,c
  1905   00071E  EF14  F003         	goto	l9053
  1906   000722  EF7E  F008         	goto	l9555
  1907   000726                     l968:
  1908                           
  1909                           ;Buttons.c: 140:                     temp = real_rtc_data[ 6 ]; temp ++;
  1910   000726  C053  F065         	movff	_real_rtc_data+6,ActionButtons@temp
  1911   00072A  2A65               	incf	ActionButtons@temp^0,f,c
  1912   00072C                     
  1913                           ;Buttons.c: 141:                     if( temp % 16 >= 10 ) temp += 6; if( temp > 0x99 ) 
      +                          temp = 23;
  1914   00072C  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  1915   000730  6A64               	clrf	(??_ActionButtons+1)^0,c
  1916   000732  BE63               	btfsc	??_ActionButtons^0,7,c
  1917   000734  0664               	decf	(??_ActionButtons+1)^0,f,c
  1918   000736  0E0F               	movlw	15
  1919   000738  1663               	andwf	??_ActionButtons^0,f,c
  1920   00073A  0E00               	movlw	0
  1921   00073C  1664               	andwf	(??_ActionButtons+1)^0,f,c
  1922   00073E  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  1923   000740  EFAB  F003         	goto	u5501
  1924   000744  5064               	movf	(??_ActionButtons+1)^0,w,c
  1925   000746  E109               	bnz	u5500
  1926   000748  0E0A               	movlw	10
  1927   00074A  5C63               	subwf	??_ActionButtons^0,w,c
  1928   00074C  A0D8               	btfss	status,0,c
  1929   00074E  EFAB  F003         	goto	u5501
  1930   000752  EFAD  F003         	goto	u5500
  1931   000756                     u5501:
  1932   000756  EFAF  F003         	goto	l9105
  1933   00075A                     u5500:
  1934   00075A  0E06               	movlw	6
  1935   00075C  2665               	addwf	ActionButtons@temp^0,f,c
  1936   00075E                     l9105:
  1937                           
  1938                           ;Buttons.c: 142:                     real_rtc_data[ 6 ] = temp;
  1939   00075E  C065  F053         	movff	ActionButtons@temp,_real_rtc_data+6
  1940                           
  1941                           ;Buttons.c: 143:                     BTN_CLICK_STATE = 0;
  1942   000762  0E00               	movlw	0
  1943   000764  6E34               	movwf	_BTN_CLICK_STATE^0,c
  1944   000766  EFE0  F008         	goto	l955
  1945   00076A                     l971:
  1946                           
  1947                           ;Buttons.c: 146:                     temp = real_rtc_data[ 6 ]; temp --;
  1948   00076A  C053  F065         	movff	_real_rtc_data+6,ActionButtons@temp
  1949   00076E  0665               	decf	ActionButtons@temp^0,f,c
  1950   000770                     
  1951                           ;Buttons.c: 147:                     if( temp == 0x22 ) temp = 0x23;
  1952   000770  0E22               	movlw	34
  1953   000772  1865               	xorwf	ActionButtons@temp^0,w,c
  1954   000774  A4D8               	btfss	status,2,c
  1955   000776  EFBF  F003         	goto	u5511
  1956   00077A  EFC1  F003         	goto	u5510
  1957   00077E                     u5511:
  1958   00077E  EFC5  F003         	goto	l9115
  1959   000782                     u5510:
  1960   000782  0E23               	movlw	35
  1961   000784  6E65               	movwf	ActionButtons@temp^0,c
  1962   000786  EFDE  F003         	goto	l9119
  1963   00078A                     l9115:
  1964   00078A  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  1965   00078E  6A64               	clrf	(??_ActionButtons+1)^0,c
  1966   000790  BE63               	btfsc	??_ActionButtons^0,7,c
  1967   000792  0664               	decf	(??_ActionButtons+1)^0,f,c
  1968   000794  0E0F               	movlw	15
  1969   000796  1663               	andwf	??_ActionButtons^0,f,c
  1970   000798  0E00               	movlw	0
  1971   00079A  1664               	andwf	(??_ActionButtons+1)^0,f,c
  1972   00079C  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  1973   00079E  EFDA  F003         	goto	u5521
  1974   0007A2  5064               	movf	(??_ActionButtons+1)^0,w,c
  1975   0007A4  E109               	bnz	u5520
  1976   0007A6  0E0A               	movlw	10
  1977   0007A8  5C63               	subwf	??_ActionButtons^0,w,c
  1978   0007AA  A0D8               	btfss	status,0,c
  1979   0007AC  EFDA  F003         	goto	u5521
  1980   0007B0  EFDC  F003         	goto	u5520
  1981   0007B4                     u5521:
  1982   0007B4  EFDE  F003         	goto	l9119
  1983   0007B8                     u5520:
  1984   0007B8                     l9117:
  1985   0007B8  0EFA               	movlw	250
  1986   0007BA  2665               	addwf	ActionButtons@temp^0,f,c
  1987   0007BC                     l9119:
  1988                           
  1989                           ;Buttons.c: 149:                     real_rtc_data[ 6 ] = temp;
  1990   0007BC  C065  F053         	movff	ActionButtons@temp,_real_rtc_data+6
  1991   0007C0  EF4C  F003         	goto	l960
  1992   0007C4                     l9125:
  1993                           
  1994                           ;Buttons.c: 153:                     SYSTEM_STATE_FLG = 102; blink_enable_flg = 3; BTN_C
      +                          LICK_STATE = 0;
  1995   0007C4  0E66               	movlw	102
  1996   0007C6  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  1997   0007C8  0E03               	movlw	3
  1998   0007CA  6E37               	movwf	_blink_enable_flg^0,c
  1999   0007CC  0E00               	movlw	0
  2000   0007CE  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2001   0007D0  EFE0  F008         	goto	l955
  2002   0007D4                     l9129:
  2003                           
  2004                           ;Buttons.c: 156:                     SYSTEM_STATE_FLG = 100; blink_enable_flg = 1; BTN_C
      +                          LICK_STATE = 0;
  2005   0007D4  0E64               	movlw	100
  2006   0007D6  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  2007   0007D8  0E01               	movlw	1
  2008   0007DA  6E37               	movwf	_blink_enable_flg^0,c
  2009   0007DC  0E00               	movlw	0
  2010   0007DE  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2011   0007E0  EF39  F003         	goto	l9069
  2012   0007E4                     l9137:
  2013   0007E4  5034               	movf	_BTN_CLICK_STATE^0,w,c
  2014   0007E6  6E63               	movwf	??_ActionButtons^0,c
  2015   0007E8  6A64               	clrf	(??_ActionButtons+1)^0,c
  2016                           
  2017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2018                           ; Switch size 1, requested type "simple"
  2019                           ; Number of cases is 1, Range of values is 0 to 0
  2020                           ; switch strategies available:
  2021                           ; Name         Instructions Cycles
  2022                           ; simple_byte            4     3 (average)
  2023                           ;	Chosen strategy is simple_byte
  2024   0007EA  5064               	movf	(??_ActionButtons+1)^0,w,c
  2025   0007EC  0A00               	xorlw	0	; case 0
  2026   0007EE  B4D8               	btfsc	status,2,c
  2027   0007F0  EFFC  F003         	goto	l10499
  2028   0007F4  EF7E  F008         	goto	l9555
  2029   0007F8                     l10499:
  2030                           
  2031                           ; Switch size 1, requested type "simple"
  2032                           ; Number of cases is 4, Range of values is 11 to 20
  2033                           ; switch strategies available:
  2034                           ; Name         Instructions Cycles
  2035                           ; simple_byte           13     7 (average)
  2036                           ;	Chosen strategy is simple_byte
  2037   0007F8  5063               	movf	??_ActionButtons^0,w,c
  2038   0007FA  0A0B               	xorlw	11	; case 11
  2039   0007FC  B4D8               	btfsc	status,2,c
  2040   0007FE  EFE2  F003         	goto	l9125
  2041   000802  0A07               	xorlw	7	; case 12
  2042   000804  B4D8               	btfsc	status,2,c
  2043   000806  EF93  F003         	goto	l968
  2044   00080A  0A01               	xorlw	1	; case 13
  2045   00080C  B4D8               	btfsc	status,2,c
  2046   00080E  EFB5  F003         	goto	l971
  2047   000812  0A19               	xorlw	25	; case 20
  2048   000814  B4D8               	btfsc	status,2,c
  2049   000816  EFEA  F003         	goto	l9129
  2050   00081A  EF7E  F008         	goto	l9555
  2051   00081E                     l980:
  2052                           
  2053                           ;Buttons.c: 163:                     temp = real_rtc_data[ 5 ]; temp ++;
  2054   00081E  C052  F065         	movff	_real_rtc_data+5,ActionButtons@temp
  2055   000822  2A65               	incf	ActionButtons@temp^0,f,c
  2056   000824                     
  2057                           ;Buttons.c: 164:                     if( temp % 16 >= 10 ) temp += 6; if( temp > 0x12 ) 
      +                          temp = 1;
  2058   000824  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2059   000828  6A64               	clrf	(??_ActionButtons+1)^0,c
  2060   00082A  BE63               	btfsc	??_ActionButtons^0,7,c
  2061   00082C  0664               	decf	(??_ActionButtons+1)^0,f,c
  2062   00082E  0E0F               	movlw	15
  2063   000830  1663               	andwf	??_ActionButtons^0,f,c
  2064   000832  0E00               	movlw	0
  2065   000834  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2066   000836  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2067   000838  EF27  F004         	goto	u5531
  2068   00083C  5064               	movf	(??_ActionButtons+1)^0,w,c
  2069   00083E  E109               	bnz	u5530
  2070   000840  0E0A               	movlw	10
  2071   000842  5C63               	subwf	??_ActionButtons^0,w,c
  2072   000844  A0D8               	btfss	status,0,c
  2073   000846  EF27  F004         	goto	u5531
  2074   00084A  EF29  F004         	goto	u5530
  2075   00084E                     u5531:
  2076   00084E  EF2B  F004         	goto	l981
  2077   000852                     u5530:
  2078   000852  0E06               	movlw	6
  2079   000854  2665               	addwf	ActionButtons@temp^0,f,c
  2080   000856                     l981:
  2081   000856  5065               	movf	ActionButtons@temp^0,w,c
  2082   000858  0A80               	xorlw	128
  2083   00085A  0F6D               	addlw	-147
  2084   00085C  A0D8               	btfss	status,0,c
  2085   00085E  EF33  F004         	goto	u5541
  2086   000862  EF35  F004         	goto	u5540
  2087   000866                     u5541:
  2088   000866  EF37  F004         	goto	l9147
  2089   00086A                     u5540:
  2090   00086A                     l9145:
  2091   00086A  0E01               	movlw	1
  2092   00086C  6E65               	movwf	ActionButtons@temp^0,c
  2093   00086E                     l9147:
  2094                           
  2095                           ;Buttons.c: 165:                     real_rtc_data[ 5 ] = temp;
  2096   00086E  C065  F052         	movff	ActionButtons@temp,_real_rtc_data+5
  2097                           
  2098                           ;Buttons.c: 166:                     BTN_CLICK_STATE = 0;
  2099   000872  0E00               	movlw	0
  2100   000874  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2101   000876  EFE0  F008         	goto	l955
  2102   00087A                     l983:
  2103                           
  2104                           ;Buttons.c: 169:                     temp = real_rtc_data[ 5 ]; temp --;
  2105   00087A  C052  F065         	movff	_real_rtc_data+5,ActionButtons@temp
  2106   00087E  0665               	decf	ActionButtons@temp^0,f,c
  2107   000880                     
  2108                           ;Buttons.c: 170:                     if( temp == 0x00 ) temp = 0x12;
  2109   000880  5065               	movf	ActionButtons@temp^0,w,c
  2110   000882  A4D8               	btfss	status,2,c
  2111   000884  EF46  F004         	goto	u5551
  2112   000888  EF48  F004         	goto	u5550
  2113   00088C                     u5551:
  2114   00088C  EF4C  F004         	goto	l9157
  2115   000890                     u5550:
  2116   000890                     l9155:
  2117   000890  0E12               	movlw	18
  2118   000892  6E65               	movwf	ActionButtons@temp^0,c
  2119   000894  EF65  F004         	goto	l9161
  2120   000898                     l9157:
  2121   000898  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2122   00089C  6A64               	clrf	(??_ActionButtons+1)^0,c
  2123   00089E  BE63               	btfsc	??_ActionButtons^0,7,c
  2124   0008A0  0664               	decf	(??_ActionButtons+1)^0,f,c
  2125   0008A2  0E0F               	movlw	15
  2126   0008A4  1663               	andwf	??_ActionButtons^0,f,c
  2127   0008A6  0E00               	movlw	0
  2128   0008A8  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2129   0008AA  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2130   0008AC  EF61  F004         	goto	u5561
  2131   0008B0  5064               	movf	(??_ActionButtons+1)^0,w,c
  2132   0008B2  E109               	bnz	u5560
  2133   0008B4  0E0A               	movlw	10
  2134   0008B6  5C63               	subwf	??_ActionButtons^0,w,c
  2135   0008B8  A0D8               	btfss	status,0,c
  2136   0008BA  EF61  F004         	goto	u5561
  2137   0008BE  EF63  F004         	goto	u5560
  2138   0008C2                     u5561:
  2139   0008C2  EF65  F004         	goto	l9161
  2140   0008C6                     u5560:
  2141   0008C6                     l9159:
  2142   0008C6  0EFA               	movlw	250
  2143   0008C8  2665               	addwf	ActionButtons@temp^0,f,c
  2144   0008CA                     l9161:
  2145                           
  2146                           ;Buttons.c: 172:                     real_rtc_data[ 5 ] = temp;
  2147   0008CA  C065  F052         	movff	ActionButtons@temp,_real_rtc_data+5
  2148   0008CE  EF4C  F003         	goto	l960
  2149   0008D2                     l9167:
  2150                           
  2151                           ;Buttons.c: 176:                     SYSTEM_STATE_FLG = 103; blink_enable_flg = 4; BTN_C
      +                          LICK_STATE = 0;
  2152   0008D2  0E67               	movlw	103
  2153   0008D4  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  2154   0008D6  0E04               	movlw	4
  2155   0008D8  6E37               	movwf	_blink_enable_flg^0,c
  2156   0008DA  0E00               	movlw	0
  2157   0008DC  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2158   0008DE  EFE0  F008         	goto	l955
  2159   0008E2                     l9179:
  2160   0008E2  5034               	movf	_BTN_CLICK_STATE^0,w,c
  2161   0008E4  6E63               	movwf	??_ActionButtons^0,c
  2162   0008E6  6A64               	clrf	(??_ActionButtons+1)^0,c
  2163                           
  2164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2165                           ; Switch size 1, requested type "simple"
  2166                           ; Number of cases is 1, Range of values is 0 to 0
  2167                           ; switch strategies available:
  2168                           ; Name         Instructions Cycles
  2169                           ; simple_byte            4     3 (average)
  2170                           ;	Chosen strategy is simple_byte
  2171   0008E8  5064               	movf	(??_ActionButtons+1)^0,w,c
  2172   0008EA  0A00               	xorlw	0	; case 0
  2173   0008EC  B4D8               	btfsc	status,2,c
  2174   0008EE  EF7B  F004         	goto	l10501
  2175   0008F2  EFF0  F004         	goto	l9221
  2176   0008F6                     l10501:
  2177                           
  2178                           ; Switch size 1, requested type "simple"
  2179                           ; Number of cases is 4, Range of values is 11 to 20
  2180                           ; switch strategies available:
  2181                           ; Name         Instructions Cycles
  2182                           ; simple_byte           13     7 (average)
  2183                           ;	Chosen strategy is simple_byte
  2184   0008F6  5063               	movf	??_ActionButtons^0,w,c
  2185   0008F8  0A0B               	xorlw	11	; case 11
  2186   0008FA  B4D8               	btfsc	status,2,c
  2187   0008FC  EF69  F004         	goto	l9167
  2188   000900  0A07               	xorlw	7	; case 12
  2189   000902  B4D8               	btfsc	status,2,c
  2190   000904  EF0F  F004         	goto	l980
  2191   000908  0A01               	xorlw	1	; case 13
  2192   00090A  B4D8               	btfsc	status,2,c
  2193   00090C  EF3D  F004         	goto	l983
  2194   000910  0A19               	xorlw	25	; case 20
  2195   000912  B4D8               	btfsc	status,2,c
  2196   000914  EFEA  F003         	goto	l9129
  2197   000918  EFF0  F004         	goto	l9221
  2198   00091C                     l992:
  2199                           
  2200                           ;Buttons.c: 185:                     temp = real_rtc_data[ 4 ]; temp ++;
  2201   00091C  C051  F065         	movff	_real_rtc_data+4,ActionButtons@temp
  2202   000920  2A65               	incf	ActionButtons@temp^0,f,c
  2203   000922                     
  2204                           ;Buttons.c: 186:                     if( temp % 16 >= 10 ) temp += 6; if( temp > 0x31 ) 
      +                          temp = 1;
  2205   000922  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2206   000926  6A64               	clrf	(??_ActionButtons+1)^0,c
  2207   000928  BE63               	btfsc	??_ActionButtons^0,7,c
  2208   00092A  0664               	decf	(??_ActionButtons+1)^0,f,c
  2209   00092C  0E0F               	movlw	15
  2210   00092E  1663               	andwf	??_ActionButtons^0,f,c
  2211   000930  0E00               	movlw	0
  2212   000932  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2213   000934  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2214   000936  EFA6  F004         	goto	u5571
  2215   00093A  5064               	movf	(??_ActionButtons+1)^0,w,c
  2216   00093C  E109               	bnz	u5570
  2217   00093E  0E0A               	movlw	10
  2218   000940  5C63               	subwf	??_ActionButtons^0,w,c
  2219   000942  A0D8               	btfss	status,0,c
  2220   000944  EFA6  F004         	goto	u5571
  2221   000948  EFA8  F004         	goto	u5570
  2222   00094C                     u5571:
  2223   00094C  EFAA  F004         	goto	l993
  2224   000950                     u5570:
  2225   000950  0E06               	movlw	6
  2226   000952  2665               	addwf	ActionButtons@temp^0,f,c
  2227   000954                     l993:
  2228   000954  5065               	movf	ActionButtons@temp^0,w,c
  2229   000956  0A80               	xorlw	128
  2230   000958  0F4E               	addlw	-178
  2231   00095A  A0D8               	btfss	status,0,c
  2232   00095C  EFB2  F004         	goto	u5581
  2233   000960  EFB4  F004         	goto	u5580
  2234   000964                     u5581:
  2235   000964  EFB6  F004         	goto	l9189
  2236   000968                     u5580:
  2237   000968  0E01               	movlw	1
  2238   00096A  6E65               	movwf	ActionButtons@temp^0,c
  2239   00096C                     l9189:
  2240                           
  2241                           ;Buttons.c: 187:                     real_rtc_data[ 4 ] = temp;
  2242   00096C  C065  F051         	movff	ActionButtons@temp,_real_rtc_data+4
  2243                           
  2244                           ;Buttons.c: 188:                     BTN_CLICK_STATE = 0;
  2245   000970  0E00               	movlw	0
  2246   000972  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2247   000974  EFE0  F008         	goto	l955
  2248   000978                     l995:
  2249                           
  2250                           ;Buttons.c: 191:                     temp = real_rtc_data[ 4 ]; temp --;
  2251   000978  C051  F065         	movff	_real_rtc_data+4,ActionButtons@temp
  2252   00097C  0665               	decf	ActionButtons@temp^0,f,c
  2253   00097E                     
  2254                           ;Buttons.c: 192:                     if( temp == 0x00 ) temp = 0x31;
  2255   00097E  5065               	movf	ActionButtons@temp^0,w,c
  2256   000980  A4D8               	btfss	status,2,c
  2257   000982  EFC5  F004         	goto	u5591
  2258   000986  EFC7  F004         	goto	u5590
  2259   00098A                     u5591:
  2260   00098A  EFCB  F004         	goto	l9199
  2261   00098E                     u5590:
  2262   00098E  0E31               	movlw	49
  2263   000990  6E65               	movwf	ActionButtons@temp^0,c
  2264   000992  EFE4  F004         	goto	l9203
  2265   000996                     l9199:
  2266   000996  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2267   00099A  6A64               	clrf	(??_ActionButtons+1)^0,c
  2268   00099C  BE63               	btfsc	??_ActionButtons^0,7,c
  2269   00099E  0664               	decf	(??_ActionButtons+1)^0,f,c
  2270   0009A0  0E0F               	movlw	15
  2271   0009A2  1663               	andwf	??_ActionButtons^0,f,c
  2272   0009A4  0E00               	movlw	0
  2273   0009A6  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2274   0009A8  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2275   0009AA  EFE0  F004         	goto	u5601
  2276   0009AE  5064               	movf	(??_ActionButtons+1)^0,w,c
  2277   0009B0  E109               	bnz	u5600
  2278   0009B2  0E0A               	movlw	10
  2279   0009B4  5C63               	subwf	??_ActionButtons^0,w,c
  2280   0009B6  A0D8               	btfss	status,0,c
  2281   0009B8  EFE0  F004         	goto	u5601
  2282   0009BC  EFE2  F004         	goto	u5600
  2283   0009C0                     u5601:
  2284   0009C0  EFE4  F004         	goto	l9203
  2285   0009C4                     u5600:
  2286   0009C4  0EFA               	movlw	250
  2287   0009C6  2665               	addwf	ActionButtons@temp^0,f,c
  2288   0009C8                     l9203:
  2289                           
  2290                           ;Buttons.c: 194:                     real_rtc_data[ 4 ] = temp;
  2291   0009C8  C065  F051         	movff	ActionButtons@temp,_real_rtc_data+4
  2292   0009CC  EF4C  F003         	goto	l960
  2293   0009D0                     l9209:
  2294                           
  2295                           ;Buttons.c: 198:                     SYSTEM_STATE_FLG = 101; blink_enable_flg = 2; BTN_C
      +                          LICK_STATE = 0;
  2296   0009D0  0E65               	movlw	101
  2297   0009D2  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  2298   0009D4  0E02               	movlw	2
  2299   0009D6  6E37               	movwf	_blink_enable_flg^0,c
  2300   0009D8  0E00               	movlw	0
  2301   0009DA  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2302   0009DC  EFE0  F008         	goto	l955
  2303   0009E0                     l9221:
  2304   0009E0  5034               	movf	_BTN_CLICK_STATE^0,w,c
  2305   0009E2  6E63               	movwf	??_ActionButtons^0,c
  2306   0009E4  6A64               	clrf	(??_ActionButtons+1)^0,c
  2307                           
  2308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2309                           ; Switch size 1, requested type "simple"
  2310                           ; Number of cases is 1, Range of values is 0 to 0
  2311                           ; switch strategies available:
  2312                           ; Name         Instructions Cycles
  2313                           ; simple_byte            4     3 (average)
  2314                           ;	Chosen strategy is simple_byte
  2315   0009E6  5064               	movf	(??_ActionButtons+1)^0,w,c
  2316   0009E8  0A00               	xorlw	0	; case 0
  2317   0009EA  B4D8               	btfsc	status,2,c
  2318   0009EC  EFFA  F004         	goto	l10503
  2319   0009F0  EF67  F005         	goto	l9263
  2320   0009F4                     l10503:
  2321                           
  2322                           ; Switch size 1, requested type "simple"
  2323                           ; Number of cases is 4, Range of values is 11 to 20
  2324                           ; switch strategies available:
  2325                           ; Name         Instructions Cycles
  2326                           ; simple_byte           13     7 (average)
  2327                           ;	Chosen strategy is simple_byte
  2328   0009F4  5063               	movf	??_ActionButtons^0,w,c
  2329   0009F6  0A0B               	xorlw	11	; case 11
  2330   0009F8  B4D8               	btfsc	status,2,c
  2331   0009FA  EFE8  F004         	goto	l9209
  2332   0009FE  0A07               	xorlw	7	; case 12
  2333   000A00  B4D8               	btfsc	status,2,c
  2334   000A02  EF8E  F004         	goto	l992
  2335   000A06  0A01               	xorlw	1	; case 13
  2336   000A08  B4D8               	btfsc	status,2,c
  2337   000A0A  EFBC  F004         	goto	l995
  2338   000A0E  0A19               	xorlw	25	; case 20
  2339   000A10  B4D8               	btfsc	status,2,c
  2340   000A12  EFEA  F003         	goto	l9129
  2341   000A16  EF67  F005         	goto	l9263
  2342   000A1A                     l1004:
  2343                           
  2344                           ;Buttons.c: 208:                     temp = real_rtc_data[ 6 ]; temp ++;
  2345   000A1A  C053  F065         	movff	_real_rtc_data+6,ActionButtons@temp
  2346   000A1E  2A65               	incf	ActionButtons@temp^0,f,c
  2347   000A20                     
  2348                           ;Buttons.c: 209:                     if( temp % 16 >= 10 ) temp += 6; if( temp > 0x24 ) 
      +                          temp = 1;
  2349   000A20  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2350   000A24  6A64               	clrf	(??_ActionButtons+1)^0,c
  2351   000A26  BE63               	btfsc	??_ActionButtons^0,7,c
  2352   000A28  0664               	decf	(??_ActionButtons+1)^0,f,c
  2353   000A2A  0E0F               	movlw	15
  2354   000A2C  1663               	andwf	??_ActionButtons^0,f,c
  2355   000A2E  0E00               	movlw	0
  2356   000A30  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2357   000A32  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2358   000A34  EF25  F005         	goto	u5611
  2359   000A38  5064               	movf	(??_ActionButtons+1)^0,w,c
  2360   000A3A  E109               	bnz	u5610
  2361   000A3C  0E0A               	movlw	10
  2362   000A3E  5C63               	subwf	??_ActionButtons^0,w,c
  2363   000A40  A0D8               	btfss	status,0,c
  2364   000A42  EF25  F005         	goto	u5611
  2365   000A46  EF27  F005         	goto	u5610
  2366   000A4A                     u5611:
  2367   000A4A  EF29  F005         	goto	l1005
  2368   000A4E                     u5610:
  2369   000A4E  0E06               	movlw	6
  2370   000A50  2665               	addwf	ActionButtons@temp^0,f,c
  2371   000A52                     l1005:
  2372   000A52  5065               	movf	ActionButtons@temp^0,w,c
  2373   000A54  0A80               	xorlw	128
  2374   000A56  0F5B               	addlw	-165
  2375   000A58  A0D8               	btfss	status,0,c
  2376   000A5A  EF31  F005         	goto	u5621
  2377   000A5E  EF33  F005         	goto	u5620
  2378   000A62                     u5621:
  2379   000A62  EFAF  F003         	goto	l9105
  2380   000A66                     u5620:
  2381   000A66  0E01               	movlw	1
  2382   000A68  6E65               	movwf	ActionButtons@temp^0,c
  2383   000A6A  EFAF  F003         	goto	l9105
  2384   000A6E                     l1007:
  2385                           
  2386                           ;Buttons.c: 214:                     temp = real_rtc_data[ 6 ]; temp --;
  2387   000A6E  C053  F065         	movff	_real_rtc_data+6,ActionButtons@temp
  2388   000A72  0665               	decf	ActionButtons@temp^0,f,c
  2389   000A74                     
  2390                           ;Buttons.c: 215:                     if( temp == 0x00 ) temp = 0x24;
  2391   000A74  5065               	movf	ActionButtons@temp^0,w,c
  2392   000A76  A4D8               	btfss	status,2,c
  2393   000A78  EF40  F005         	goto	u5631
  2394   000A7C  EF42  F005         	goto	u5630
  2395   000A80                     u5631:
  2396   000A80  EF46  F005         	goto	l9241
  2397   000A84                     u5630:
  2398   000A84  0E24               	movlw	36
  2399   000A86  6E65               	movwf	ActionButtons@temp^0,c
  2400   000A88  EFDE  F003         	goto	l9119
  2401   000A8C                     l9241:
  2402   000A8C  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2403   000A90  6A64               	clrf	(??_ActionButtons+1)^0,c
  2404   000A92  BE63               	btfsc	??_ActionButtons^0,7,c
  2405   000A94  0664               	decf	(??_ActionButtons+1)^0,f,c
  2406   000A96  0E0F               	movlw	15
  2407   000A98  1663               	andwf	??_ActionButtons^0,f,c
  2408   000A9A  0E00               	movlw	0
  2409   000A9C  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2410   000A9E  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2411   000AA0  EF5B  F005         	goto	u5641
  2412   000AA4  5064               	movf	(??_ActionButtons+1)^0,w,c
  2413   000AA6  E109               	bnz	u5640
  2414   000AA8  0E0A               	movlw	10
  2415   000AAA  5C63               	subwf	??_ActionButtons^0,w,c
  2416   000AAC  A0D8               	btfss	status,0,c
  2417   000AAE  EF5B  F005         	goto	u5641
  2418   000AB2  EF5D  F005         	goto	u5640
  2419   000AB6                     u5641:
  2420   000AB6  EFDE  F003         	goto	l9119
  2421   000ABA                     u5640:
  2422   000ABA  EFDC  F003         	goto	l9117
  2423   000ABE                     l9251:
  2424                           
  2425                           ;Buttons.c: 221:                     SYSTEM_STATE_FLG = 106; blink_enable_flg = 3; BTN_C
      +                          LICK_STATE = 0;
  2426   000ABE  0E6A               	movlw	106
  2427   000AC0  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  2428   000AC2  0E03               	movlw	3
  2429   000AC4  6E37               	movwf	_blink_enable_flg^0,c
  2430   000AC6  0E00               	movlw	0
  2431   000AC8  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2432   000ACA  EFE0  F008         	goto	l955
  2433   000ACE                     l9263:
  2434   000ACE  5034               	movf	_BTN_CLICK_STATE^0,w,c
  2435   000AD0  6E63               	movwf	??_ActionButtons^0,c
  2436   000AD2  6A64               	clrf	(??_ActionButtons+1)^0,c
  2437                           
  2438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2439                           ; Switch size 1, requested type "simple"
  2440                           ; Number of cases is 1, Range of values is 0 to 0
  2441                           ; switch strategies available:
  2442                           ; Name         Instructions Cycles
  2443                           ; simple_byte            4     3 (average)
  2444                           ;	Chosen strategy is simple_byte
  2445   000AD4  5064               	movf	(??_ActionButtons+1)^0,w,c
  2446   000AD6  0A00               	xorlw	0	; case 0
  2447   000AD8  B4D8               	btfsc	status,2,c
  2448   000ADA  EF71  F005         	goto	l10505
  2449   000ADE  EF7E  F008         	goto	l9555
  2450   000AE2                     l10505:
  2451                           
  2452                           ; Switch size 1, requested type "simple"
  2453                           ; Number of cases is 4, Range of values is 11 to 20
  2454                           ; switch strategies available:
  2455                           ; Name         Instructions Cycles
  2456                           ; simple_byte           13     7 (average)
  2457                           ;	Chosen strategy is simple_byte
  2458   000AE2  5063               	movf	??_ActionButtons^0,w,c
  2459   000AE4  0A0B               	xorlw	11	; case 11
  2460   000AE6  B4D8               	btfsc	status,2,c
  2461   000AE8  EF5F  F005         	goto	l9251
  2462   000AEC  0A07               	xorlw	7	; case 12
  2463   000AEE  B4D8               	btfsc	status,2,c
  2464   000AF0  EF0D  F005         	goto	l1004
  2465   000AF4  0A01               	xorlw	1	; case 13
  2466   000AF6  B4D8               	btfsc	status,2,c
  2467   000AF8  EF37  F005         	goto	l1007
  2468   000AFC  0A19               	xorlw	25	; case 20
  2469   000AFE  B4D8               	btfsc	status,2,c
  2470   000B00  EFEA  F003         	goto	l9129
  2471   000B04  EF7E  F008         	goto	l9555
  2472   000B08                     l1016:
  2473                           
  2474                           ;Buttons.c: 231:                     temp = real_rtc_data[ 5 ]; temp ++;
  2475   000B08  C052  F065         	movff	_real_rtc_data+5,ActionButtons@temp
  2476   000B0C  2A65               	incf	ActionButtons@temp^0,f,c
  2477   000B0E                     
  2478                           ;Buttons.c: 232:                     if( temp % 16 >= 10 ) temp += 6; if( temp > 0x12 ) 
      +                          temp = 1;
  2479   000B0E  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2480   000B12  6A64               	clrf	(??_ActionButtons+1)^0,c
  2481   000B14  BE63               	btfsc	??_ActionButtons^0,7,c
  2482   000B16  0664               	decf	(??_ActionButtons+1)^0,f,c
  2483   000B18  0E0F               	movlw	15
  2484   000B1A  1663               	andwf	??_ActionButtons^0,f,c
  2485   000B1C  0E00               	movlw	0
  2486   000B1E  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2487   000B20  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2488   000B22  EF9C  F005         	goto	u5651
  2489   000B26  5064               	movf	(??_ActionButtons+1)^0,w,c
  2490   000B28  E109               	bnz	u5650
  2491   000B2A  0E0A               	movlw	10
  2492   000B2C  5C63               	subwf	??_ActionButtons^0,w,c
  2493   000B2E  A0D8               	btfss	status,0,c
  2494   000B30  EF9C  F005         	goto	u5651
  2495   000B34  EF9E  F005         	goto	u5650
  2496   000B38                     u5651:
  2497   000B38  EFA0  F005         	goto	l1017
  2498   000B3C                     u5650:
  2499   000B3C  0E06               	movlw	6
  2500   000B3E  2665               	addwf	ActionButtons@temp^0,f,c
  2501   000B40                     l1017:
  2502   000B40  5065               	movf	ActionButtons@temp^0,w,c
  2503   000B42  0A80               	xorlw	128
  2504   000B44  0F6D               	addlw	-147
  2505   000B46  A0D8               	btfss	status,0,c
  2506   000B48  EFA8  F005         	goto	u5661
  2507   000B4C  EFAA  F005         	goto	u5660
  2508   000B50                     u5661:
  2509   000B50  EF37  F004         	goto	l9147
  2510   000B54                     u5660:
  2511   000B54  EF35  F004         	goto	l9145
  2512   000B58                     l1019:
  2513                           
  2514                           ;Buttons.c: 237:                     temp = real_rtc_data[ 5 ]; temp --;
  2515   000B58  C052  F065         	movff	_real_rtc_data+5,ActionButtons@temp
  2516   000B5C  0665               	decf	ActionButtons@temp^0,f,c
  2517   000B5E                     
  2518                           ;Buttons.c: 238:                     if( temp == 0x00 ) temp = 0x12;
  2519   000B5E  5065               	movf	ActionButtons@temp^0,w,c
  2520   000B60  A4D8               	btfss	status,2,c
  2521   000B62  EFB5  F005         	goto	u5671
  2522   000B66  EFB7  F005         	goto	u5670
  2523   000B6A                     u5671:
  2524   000B6A  EFB9  F005         	goto	l9283
  2525   000B6E                     u5670:
  2526   000B6E  EF48  F004         	goto	l9155
  2527   000B72                     l9283:
  2528   000B72  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2529   000B76  6A64               	clrf	(??_ActionButtons+1)^0,c
  2530   000B78  BE63               	btfsc	??_ActionButtons^0,7,c
  2531   000B7A  0664               	decf	(??_ActionButtons+1)^0,f,c
  2532   000B7C  0E0F               	movlw	15
  2533   000B7E  1663               	andwf	??_ActionButtons^0,f,c
  2534   000B80  0E00               	movlw	0
  2535   000B82  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2536   000B84  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2537   000B86  EFCE  F005         	goto	u5681
  2538   000B8A  5064               	movf	(??_ActionButtons+1)^0,w,c
  2539   000B8C  E109               	bnz	u5680
  2540   000B8E  0E0A               	movlw	10
  2541   000B90  5C63               	subwf	??_ActionButtons^0,w,c
  2542   000B92  A0D8               	btfss	status,0,c
  2543   000B94  EFCE  F005         	goto	u5681
  2544   000B98  EFD0  F005         	goto	u5680
  2545   000B9C                     u5681:
  2546   000B9C  EF65  F004         	goto	l9161
  2547   000BA0                     u5680:
  2548   000BA0  EF63  F004         	goto	l9159
  2549   000BA4                     l9293:
  2550                           
  2551                           ;Buttons.c: 244:                     SYSTEM_STATE_FLG = 107; blink_enable_flg = 4; BTN_C
      +                          LICK_STATE = 0;
  2552   000BA4  0E6B               	movlw	107
  2553   000BA6  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  2554   000BA8  0E04               	movlw	4
  2555   000BAA  6E37               	movwf	_blink_enable_flg^0,c
  2556   000BAC  0E00               	movlw	0
  2557   000BAE  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2558   000BB0  EFE0  F008         	goto	l955
  2559   000BB4                     l9305:
  2560   000BB4  5034               	movf	_BTN_CLICK_STATE^0,w,c
  2561   000BB6  6E63               	movwf	??_ActionButtons^0,c
  2562   000BB8  6A64               	clrf	(??_ActionButtons+1)^0,c
  2563                           
  2564                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2565                           ; Switch size 1, requested type "simple"
  2566                           ; Number of cases is 1, Range of values is 0 to 0
  2567                           ; switch strategies available:
  2568                           ; Name         Instructions Cycles
  2569                           ; simple_byte            4     3 (average)
  2570                           ;	Chosen strategy is simple_byte
  2571   000BBA  5064               	movf	(??_ActionButtons+1)^0,w,c
  2572   000BBC  0A00               	xorlw	0	; case 0
  2573   000BBE  B4D8               	btfsc	status,2,c
  2574   000BC0  EFE4  F005         	goto	l10507
  2575   000BC4  EF58  F006         	goto	l9347
  2576   000BC8                     l10507:
  2577                           
  2578                           ; Switch size 1, requested type "simple"
  2579                           ; Number of cases is 4, Range of values is 11 to 20
  2580                           ; switch strategies available:
  2581                           ; Name         Instructions Cycles
  2582                           ; simple_byte           13     7 (average)
  2583                           ;	Chosen strategy is simple_byte
  2584   000BC8  5063               	movf	??_ActionButtons^0,w,c
  2585   000BCA  0A0B               	xorlw	11	; case 11
  2586   000BCC  B4D8               	btfsc	status,2,c
  2587   000BCE  EFD2  F005         	goto	l9293
  2588   000BD2  0A07               	xorlw	7	; case 12
  2589   000BD4  B4D8               	btfsc	status,2,c
  2590   000BD6  EF84  F005         	goto	l1016
  2591   000BDA  0A01               	xorlw	1	; case 13
  2592   000BDC  B4D8               	btfsc	status,2,c
  2593   000BDE  EFAC  F005         	goto	l1019
  2594   000BE2  0A19               	xorlw	25	; case 20
  2595   000BE4  B4D8               	btfsc	status,2,c
  2596   000BE6  EFEA  F003         	goto	l9129
  2597   000BEA  EF58  F006         	goto	l9347
  2598   000BEE                     l1028:
  2599                           
  2600                           ;Buttons.c: 253:                     temp = real_rtc_data[ 0 ]; temp ++;
  2601   000BEE  C04D  F065         	movff	_real_rtc_data,ActionButtons@temp
  2602   000BF2  2A65               	incf	ActionButtons@temp^0,f,c
  2603   000BF4                     
  2604                           ;Buttons.c: 254:                     if( temp % 16 >= 10 ) temp += 6; if( temp > 0x59 ) 
      +                          temp = 0;
  2605   000BF4  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2606   000BF8  6A64               	clrf	(??_ActionButtons+1)^0,c
  2607   000BFA  BE63               	btfsc	??_ActionButtons^0,7,c
  2608   000BFC  0664               	decf	(??_ActionButtons+1)^0,f,c
  2609   000BFE  0E0F               	movlw	15
  2610   000C00  1663               	andwf	??_ActionButtons^0,f,c
  2611   000C02  0E00               	movlw	0
  2612   000C04  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2613   000C06  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2614   000C08  EF0F  F006         	goto	u5691
  2615   000C0C  5064               	movf	(??_ActionButtons+1)^0,w,c
  2616   000C0E  E109               	bnz	u5690
  2617   000C10  0E0A               	movlw	10
  2618   000C12  5C63               	subwf	??_ActionButtons^0,w,c
  2619   000C14  A0D8               	btfss	status,0,c
  2620   000C16  EF0F  F006         	goto	u5691
  2621   000C1A  EF11  F006         	goto	u5690
  2622   000C1E                     u5691:
  2623   000C1E  EF13  F006         	goto	l1029
  2624   000C22                     u5690:
  2625   000C22  0E06               	movlw	6
  2626   000C24  2665               	addwf	ActionButtons@temp^0,f,c
  2627   000C26                     l1029:
  2628   000C26  5065               	movf	ActionButtons@temp^0,w,c
  2629   000C28  0A80               	xorlw	128
  2630   000C2A  0F26               	addlw	-218
  2631   000C2C  A0D8               	btfss	status,0,c
  2632   000C2E  EF1B  F006         	goto	u5701
  2633   000C32  EF1D  F006         	goto	u5700
  2634   000C36                     u5701:
  2635   000C36  EF1F  F006         	goto	l9315
  2636   000C3A                     u5700:
  2637   000C3A  0E00               	movlw	0
  2638   000C3C  6E65               	movwf	ActionButtons@temp^0,c
  2639   000C3E                     l9315:
  2640                           
  2641                           ;Buttons.c: 255:                     real_rtc_data[ 0 ] = temp;
  2642   000C3E  C065  F04D         	movff	ActionButtons@temp,_real_rtc_data
  2643                           
  2644                           ;Buttons.c: 256:                     BTN_CLICK_STATE = 0;
  2645   000C42  0E00               	movlw	0
  2646   000C44  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2647   000C46  EFE0  F008         	goto	l955
  2648   000C4A                     l1031:
  2649                           
  2650                           ;Buttons.c: 259:                     temp = real_rtc_data[ 0 ]; temp --;
  2651   000C4A  C04D  F065         	movff	_real_rtc_data,ActionButtons@temp
  2652   000C4E  0665               	decf	ActionButtons@temp^0,f,c
  2653   000C50                     
  2654                           ;Buttons.c: 260:                     if( temp < 0x00 ) temp = 0x59;
  2655   000C50  BE65               	btfsc	ActionButtons@temp^0,7,c
  2656   000C52  EF2F  F006         	goto	u5710
  2657   000C56  EF2D  F006         	goto	u5711
  2658   000C5A                     u5711:
  2659   000C5A  EF33  F006         	goto	l9325
  2660   000C5E                     u5710:
  2661   000C5E  0E59               	movlw	89
  2662   000C60  6E65               	movwf	ActionButtons@temp^0,c
  2663   000C62  EF4C  F006         	goto	l9329
  2664   000C66                     l9325:
  2665   000C66  C065  F063         	movff	ActionButtons@temp,??_ActionButtons
  2666   000C6A  6A64               	clrf	(??_ActionButtons+1)^0,c
  2667   000C6C  BE63               	btfsc	??_ActionButtons^0,7,c
  2668   000C6E  0664               	decf	(??_ActionButtons+1)^0,f,c
  2669   000C70  0E0F               	movlw	15
  2670   000C72  1663               	andwf	??_ActionButtons^0,f,c
  2671   000C74  0E00               	movlw	0
  2672   000C76  1664               	andwf	(??_ActionButtons+1)^0,f,c
  2673   000C78  BE64               	btfsc	(??_ActionButtons+1)^0,7,c
  2674   000C7A  EF48  F006         	goto	u5721
  2675   000C7E  5064               	movf	(??_ActionButtons+1)^0,w,c
  2676   000C80  E109               	bnz	u5720
  2677   000C82  0E0A               	movlw	10
  2678   000C84  5C63               	subwf	??_ActionButtons^0,w,c
  2679   000C86  A0D8               	btfss	status,0,c
  2680   000C88  EF48  F006         	goto	u5721
  2681   000C8C  EF4A  F006         	goto	u5720
  2682   000C90                     u5721:
  2683   000C90  EF4C  F006         	goto	l9329
  2684   000C94                     u5720:
  2685   000C94  0EFA               	movlw	250
  2686   000C96  2665               	addwf	ActionButtons@temp^0,f,c
  2687   000C98                     l9329:
  2688                           
  2689                           ;Buttons.c: 262:                     real_rtc_data[ 0 ] = temp;
  2690   000C98  C065  F04D         	movff	ActionButtons@temp,_real_rtc_data
  2691   000C9C  EF4C  F003         	goto	l960
  2692   000CA0                     l9335:
  2693                           
  2694                           ;Buttons.c: 266:                     SYSTEM_STATE_FLG = 105; blink_enable_flg = 2; BTN_C
      +                          LICK_STATE = 0;
  2695   000CA0  0E69               	movlw	105
  2696   000CA2  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  2697   000CA4  0E02               	movlw	2
  2698   000CA6  6E37               	movwf	_blink_enable_flg^0,c
  2699   000CA8  0E00               	movlw	0
  2700   000CAA  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2701   000CAC  EFE0  F008         	goto	l955
  2702   000CB0                     l9347:
  2703   000CB0  5034               	movf	_BTN_CLICK_STATE^0,w,c
  2704   000CB2  6E63               	movwf	??_ActionButtons^0,c
  2705   000CB4  6A64               	clrf	(??_ActionButtons+1)^0,c
  2706                           
  2707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2708                           ; Switch size 1, requested type "simple"
  2709                           ; Number of cases is 1, Range of values is 0 to 0
  2710                           ; switch strategies available:
  2711                           ; Name         Instructions Cycles
  2712                           ; simple_byte            4     3 (average)
  2713                           ;	Chosen strategy is simple_byte
  2714   000CB6  5064               	movf	(??_ActionButtons+1)^0,w,c
  2715   000CB8  0A00               	xorlw	0	; case 0
  2716   000CBA  B4D8               	btfsc	status,2,c
  2717   000CBC  EF62  F006         	goto	l10509
  2718   000CC0  EFA1  F006         	goto	l9381
  2719   000CC4                     l10509:
  2720                           
  2721                           ; Switch size 1, requested type "simple"
  2722                           ; Number of cases is 4, Range of values is 11 to 20
  2723                           ; switch strategies available:
  2724                           ; Name         Instructions Cycles
  2725                           ; simple_byte           13     7 (average)
  2726                           ;	Chosen strategy is simple_byte
  2727   000CC4  5063               	movf	??_ActionButtons^0,w,c
  2728   000CC6  0A0B               	xorlw	11	; case 11
  2729   000CC8  B4D8               	btfsc	status,2,c
  2730   000CCA  EF50  F006         	goto	l9335
  2731   000CCE  0A07               	xorlw	7	; case 12
  2732   000CD0  B4D8               	btfsc	status,2,c
  2733   000CD2  EFF7  F005         	goto	l1028
  2734   000CD6  0A01               	xorlw	1	; case 13
  2735   000CD8  B4D8               	btfsc	status,2,c
  2736   000CDA  EF25  F006         	goto	l1031
  2737   000CDE  0A19               	xorlw	25	; case 20
  2738   000CE0  B4D8               	btfsc	status,2,c
  2739   000CE2  EFEA  F003         	goto	l9129
  2740   000CE6  EFA1  F006         	goto	l9381
  2741   000CEA                     l1040:
  2742                           
  2743                           ;Buttons.c: 276:                     temp = real_rtc_data[ 3 ]; temp ++;
  2744   000CEA  C050  F065         	movff	_real_rtc_data+3,ActionButtons@temp
  2745   000CEE  2A65               	incf	ActionButtons@temp^0,f,c
  2746   000CF0                     
  2747                           ;Buttons.c: 277:                     if( temp > 0x07 ) temp = 1;
  2748   000CF0  5065               	movf	ActionButtons@temp^0,w,c
  2749   000CF2  0A80               	xorlw	128
  2750   000CF4  0F78               	addlw	-136
  2751   000CF6  A0D8               	btfss	status,0,c
  2752   000CF8  EF80  F006         	goto	u5731
  2753   000CFC  EF82  F006         	goto	u5730
  2754   000D00                     u5731:
  2755   000D00  EF84  F006         	goto	l9355
  2756   000D04                     u5730:
  2757   000D04  0E01               	movlw	1
  2758   000D06  6E65               	movwf	ActionButtons@temp^0,c
  2759   000D08                     l9355:
  2760                           
  2761                           ;Buttons.c: 278:                     real_rtc_data[ 3 ] = temp;
  2762   000D08  C065  F050         	movff	ActionButtons@temp,_real_rtc_data+3
  2763                           
  2764                           ;Buttons.c: 279:                     BTN_CLICK_STATE = 0;
  2765   000D0C  0E00               	movlw	0
  2766   000D0E  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2767   000D10  EFE0  F008         	goto	l955
  2768   000D14                     l1042:
  2769                           
  2770                           ;Buttons.c: 282:                     temp = real_rtc_data[ 3 ]; temp --;
  2771   000D14  C050  F065         	movff	_real_rtc_data+3,ActionButtons@temp
  2772   000D18  0665               	decf	ActionButtons@temp^0,f,c
  2773   000D1A                     
  2774                           ;Buttons.c: 283:                     if( temp == 0 ) temp = 7;
  2775   000D1A  5065               	movf	ActionButtons@temp^0,w,c
  2776   000D1C  A4D8               	btfss	status,2,c
  2777   000D1E  EF93  F006         	goto	u5741
  2778   000D22  EF95  F006         	goto	u5740
  2779   000D26                     u5741:
  2780   000D26  EF84  F006         	goto	l9355
  2781   000D2A                     u5740:
  2782   000D2A  0E07               	movlw	7
  2783   000D2C  6E65               	movwf	ActionButtons@temp^0,c
  2784   000D2E  EF84  F006         	goto	l9355
  2785   000D32                     l9369:
  2786                           
  2787                           ;Buttons.c: 288:                     SYSTEM_STATE_FLG = 108; blink_enable_flg = 3; BTN_C
      +                          LICK_STATE = 0;
  2788   000D32  0E6C               	movlw	108
  2789   000D34  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  2790   000D36  0E03               	movlw	3
  2791   000D38  6E37               	movwf	_blink_enable_flg^0,c
  2792   000D3A  0E00               	movlw	0
  2793   000D3C  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2794   000D3E  EFE0  F008         	goto	l955
  2795   000D42                     l9381:
  2796   000D42  5034               	movf	_BTN_CLICK_STATE^0,w,c
  2797   000D44  6E63               	movwf	??_ActionButtons^0,c
  2798   000D46  6A64               	clrf	(??_ActionButtons+1)^0,c
  2799                           
  2800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2801                           ; Switch size 1, requested type "simple"
  2802                           ; Number of cases is 1, Range of values is 0 to 0
  2803                           ; switch strategies available:
  2804                           ; Name         Instructions Cycles
  2805                           ; simple_byte            4     3 (average)
  2806                           ;	Chosen strategy is simple_byte
  2807   000D48  5064               	movf	(??_ActionButtons+1)^0,w,c
  2808   000D4A  0A00               	xorlw	0	; case 0
  2809   000D4C  B4D8               	btfsc	status,2,c
  2810   000D4E  EFAB  F006         	goto	l10511
  2811   000D52  EF7E  F008         	goto	l9555
  2812   000D56                     l10511:
  2813                           
  2814                           ; Switch size 1, requested type "simple"
  2815                           ; Number of cases is 4, Range of values is 11 to 20
  2816                           ; switch strategies available:
  2817                           ; Name         Instructions Cycles
  2818                           ; simple_byte           13     7 (average)
  2819                           ;	Chosen strategy is simple_byte
  2820   000D56  5063               	movf	??_ActionButtons^0,w,c
  2821   000D58  0A0B               	xorlw	11	; case 11
  2822   000D5A  B4D8               	btfsc	status,2,c
  2823   000D5C  EF99  F006         	goto	l9369
  2824   000D60  0A07               	xorlw	7	; case 12
  2825   000D62  B4D8               	btfsc	status,2,c
  2826   000D64  EF75  F006         	goto	l1040
  2827   000D68  0A01               	xorlw	1	; case 13
  2828   000D6A  B4D8               	btfsc	status,2,c
  2829   000D6C  EF8A  F006         	goto	l1042
  2830   000D70  0A19               	xorlw	25	; case 20
  2831   000D72  B4D8               	btfsc	status,2,c
  2832   000D74  EFEA  F003         	goto	l9129
  2833   000D78  EF7E  F008         	goto	l9555
  2834   000D7C                     l9383:
  2835                           
  2836                           ;Buttons.c: 298:                     rtc_hour_ampm_flg = 0;
  2837   000D7C  0E00               	movlw	0
  2838   000D7E  6E4B               	movwf	_rtc_hour_ampm_flg^0,c
  2839                           
  2840                           ;Buttons.c: 299:                     BTN_CLICK_STATE = 0;
  2841   000D80  0E00               	movlw	0
  2842   000D82  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2843   000D84  EFE0  F008         	goto	l955
  2844   000D88                     l9387:
  2845                           
  2846                           ;Buttons.c: 302:                     rtc_hour_ampm_flg = 1;
  2847   000D88  0E01               	movlw	1
  2848   000D8A  6E4B               	movwf	_rtc_hour_ampm_flg^0,c
  2849                           
  2850                           ;Buttons.c: 303:                     BTN_CLICK_STATE = 0;
  2851   000D8C  0E00               	movlw	0
  2852   000D8E  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2853   000D90  EFE0  F008         	goto	l955
  2854   000D94                     l9391:
  2855                           
  2856                           ;Buttons.c: 306:                     SYSTEM_STATE_FLG = 104; blink_enable_flg = 2; BTN_C
      +                          LICK_STATE = 0;
  2857   000D94  0E68               	movlw	104
  2858   000D96  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  2859   000D98  0E02               	movlw	2
  2860   000D9A  6E37               	movwf	_blink_enable_flg^0,c
  2861   000D9C  0E00               	movlw	0
  2862   000D9E  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2863   000DA0  EFE0  F008         	goto	l955
  2864   000DA4                     l9403:
  2865   000DA4  5034               	movf	_BTN_CLICK_STATE^0,w,c
  2866   000DA6  6E63               	movwf	??_ActionButtons^0,c
  2867   000DA8  6A64               	clrf	(??_ActionButtons+1)^0,c
  2868                           
  2869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2870                           ; Switch size 1, requested type "simple"
  2871                           ; Number of cases is 1, Range of values is 0 to 0
  2872                           ; switch strategies available:
  2873                           ; Name         Instructions Cycles
  2874                           ; simple_byte            4     3 (average)
  2875                           ;	Chosen strategy is simple_byte
  2876   000DAA  5064               	movf	(??_ActionButtons+1)^0,w,c
  2877   000DAC  0A00               	xorlw	0	; case 0
  2878   000DAE  B4D8               	btfsc	status,2,c
  2879   000DB0  EFDC  F006         	goto	l10513
  2880   000DB4  EF58  F007         	goto	l9451
  2881   000DB8                     l10513:
  2882                           
  2883                           ; Switch size 1, requested type "simple"
  2884                           ; Number of cases is 4, Range of values is 11 to 20
  2885                           ; switch strategies available:
  2886                           ; Name         Instructions Cycles
  2887                           ; simple_byte           13     7 (average)
  2888                           ;	Chosen strategy is simple_byte
  2889   000DB8  5063               	movf	??_ActionButtons^0,w,c
  2890   000DBA  0A0B               	xorlw	11	; case 11
  2891   000DBC  B4D8               	btfsc	status,2,c
  2892   000DBE  EFCA  F006         	goto	l9391
  2893   000DC2  0A07               	xorlw	7	; case 12
  2894   000DC4  B4D8               	btfsc	status,2,c
  2895   000DC6  EFBE  F006         	goto	l9383
  2896   000DCA  0A01               	xorlw	1	; case 13
  2897   000DCC  B4D8               	btfsc	status,2,c
  2898   000DCE  EFC4  F006         	goto	l9387
  2899   000DD2  0A19               	xorlw	25	; case 20
  2900   000DD4  B4D8               	btfsc	status,2,c
  2901   000DD6  EFEA  F003         	goto	l9129
  2902   000DDA  EF58  F007         	goto	l9451
  2903   000DDE                     l9405:
  2904                           
  2905                           ;Buttons.c: 316:                     SYSTEM_STATE_FLG = 100; blink_enable_flg = 1;
  2906   000DDE  0E64               	movlw	100
  2907   000DE0  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  2908   000DE2  0E01               	movlw	1
  2909   000DE4  6E37               	movwf	_blink_enable_flg^0,c
  2910                           
  2911                           ;Buttons.c: 317:                     BTN_CLICK_STATE = 0; StopCounter();
  2912   000DE6  0E00               	movlw	0
  2913   000DE8  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2914   000DEA  EF25  F003         	goto	l9059
  2915   000DEE                     l9411:
  2916                           
  2917                           ;Buttons.c: 320:                     counter_skip_flg = 0;
  2918   000DEE  0E00               	movlw	0
  2919   000DF0  6E39               	movwf	_counter_skip_flg^0,c
  2920                           
  2921                           ;Buttons.c: 321:                     if( !counter_enable_flg ) { SYSTEM_STATE_FLG = 200;
      +                           StartCounter(); blink_enable_flg = 1; }
  2922   000DF2  503B               	movf	_counter_enable_flg^0,w,c
  2923   000DF4  A4D8               	btfss	status,2,c
  2924   000DF6  EFFF  F006         	goto	u5751
  2925   000DFA  EF01  F007         	goto	u5750
  2926   000DFE                     u5751:
  2927   000DFE  EF09  F007         	goto	l9419
  2928   000E02                     u5750:
  2929   000E02                     l9413:
  2930   000E02  0EC8               	movlw	200
  2931   000E04  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  2932   000E06  ECCB  F014         	call	_StartCounter	;wreg free
  2933   000E0A  0E01               	movlw	1
  2934   000E0C  6E37               	movwf	_blink_enable_flg^0,c
  2935   000E0E  EF0F  F007         	goto	l9425
  2936   000E12                     l9419:
  2937   000E12  0EC9               	movlw	201
  2938   000E14  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  2939   000E16  ECC8  F014         	call	_StopCounter	;wreg free
  2940   000E1A  0E00               	movlw	0
  2941   000E1C  6E37               	movwf	_blink_enable_flg^0,c
  2942   000E1E                     l9425:
  2943                           
  2944                           ;Buttons.c: 323:                     BTN_CLICK_STATE = 0; temp_system_state = SYSTEM_STA
      +                          TE_FLG;
  2945   000E1E  0E00               	movlw	0
  2946   000E20  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2947   000E22  C048  F044         	movff	_SYSTEM_STATE_FLG,_temp_system_state
  2948   000E26  EFE0  F008         	goto	l955
  2949   000E2A                     l9431:
  2950                           
  2951                           ;Buttons.c: 326:                     counter_direction_flg = 1 - counter_direction_flg;
  2952   000E2A  0E01               	movlw	1
  2953   000E2C  6E63               	movwf	??_ActionButtons^0,c
  2954   000E2E  0E00               	movlw	0
  2955   000E30  6E64               	movwf	(??_ActionButtons+1)^0,c
  2956   000E32  503A               	movf	_counter_direction_flg^0,w,c
  2957   000E34  5E63               	subwf	??_ActionButtons^0,f,c
  2958   000E36  0E00               	movlw	0
  2959   000E38  5A64               	subwfb	(??_ActionButtons+1)^0,f,c
  2960   000E3A  5063               	movf	??_ActionButtons^0,w,c
  2961   000E3C  1064               	iorwf	(??_ActionButtons+1)^0,w,c
  2962   000E3E  A4D8               	btfss	status,2,c
  2963   000E40  EF24  F007         	goto	u5761
  2964   000E44  EF27  F007         	goto	u5760
  2965   000E48                     u5761:
  2966   000E48  0E01               	movlw	1
  2967   000E4A  EF28  F007         	goto	u5770
  2968   000E4E                     u5760:
  2969   000E4E  0E00               	movlw	0
  2970   000E50                     u5770:
  2971   000E50  6E3A               	movwf	_counter_direction_flg^0,c
  2972   000E52                     
  2973                           ;Buttons.c: 327:                     SetCounter( counter_hour_set_value, counter_min_set
      +                          _value, counter_sec_set_value ); StopCounter(); blink_enable_flg = 0;
  2974   000E52  C046  F05F         	movff	_counter_min_set_value,SetCounter@minute
  2975   000E56  C045  F060         	movff	_counter_sec_set_value,SetCounter@second
  2976   000E5A  5047               	movf	_counter_hour_set_value^0,w,c
  2977   000E5C  ECA5  F013         	call	_SetCounter
  2978   000E60  ECC8  F014         	call	_StopCounter	;wreg free
  2979   000E64  0E00               	movlw	0
  2980   000E66  6E37               	movwf	_blink_enable_flg^0,c
  2981                           
  2982                           ;Buttons.c: 328:                     BTN_CLICK_STATE = 0;
  2983   000E68  0E00               	movlw	0
  2984   000E6A  6E34               	movwf	_BTN_CLICK_STATE^0,c
  2985   000E6C  EFE0  F008         	goto	l955
  2986   000E70                     l9439:
  2987                           
  2988                           ;Buttons.c: 331:                     if( !counter_enable_flg ) return;
  2989   000E70  503B               	movf	_counter_enable_flg^0,w,c
  2990   000E72  A4D8               	btfss	status,2,c
  2991   000E74  EF3E  F007         	goto	u5781
  2992   000E78  EF40  F007         	goto	u5780
  2993   000E7C                     u5781:
  2994   000E7C  EF42  F007         	goto	l9443
  2995   000E80                     u5780:
  2996   000E80  EFE0  F008         	goto	l955
  2997   000E84                     l9443:
  2998                           
  2999                           ;Buttons.c: 332:                     counter_skip_flg = 1 - counter_skip_flg;
  3000   000E84  0E01               	movlw	1
  3001   000E86  6E63               	movwf	??_ActionButtons^0,c
  3002   000E88  0E00               	movlw	0
  3003   000E8A  6E64               	movwf	(??_ActionButtons+1)^0,c
  3004   000E8C  5039               	movf	_counter_skip_flg^0,w,c
  3005   000E8E  5E63               	subwf	??_ActionButtons^0,f,c
  3006   000E90  0E00               	movlw	0
  3007   000E92  5A64               	subwfb	(??_ActionButtons+1)^0,f,c
  3008   000E94  5063               	movf	??_ActionButtons^0,w,c
  3009   000E96  1064               	iorwf	(??_ActionButtons+1)^0,w,c
  3010   000E98  A4D8               	btfss	status,2,c
  3011   000E9A  EF51  F007         	goto	u5791
  3012   000E9E  EF54  F007         	goto	u5790
  3013   000EA2                     u5791:
  3014   000EA2  0E01               	movlw	1
  3015   000EA4  EF55  F007         	goto	u5800
  3016   000EA8                     u5790:
  3017   000EA8  0E00               	movlw	0
  3018   000EAA                     u5800:
  3019   000EAA  6E39               	movwf	_counter_skip_flg^0,c
  3020   000EAC  EF4C  F003         	goto	l960
  3021   000EB0                     l9451:
  3022   000EB0  5034               	movf	_BTN_CLICK_STATE^0,w,c
  3023   000EB2  6E63               	movwf	??_ActionButtons^0,c
  3024   000EB4  6A64               	clrf	(??_ActionButtons+1)^0,c
  3025                           
  3026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3027                           ; Switch size 1, requested type "simple"
  3028                           ; Number of cases is 1, Range of values is 0 to 0
  3029                           ; switch strategies available:
  3030                           ; Name         Instructions Cycles
  3031                           ; simple_byte            4     3 (average)
  3032                           ;	Chosen strategy is simple_byte
  3033   000EB6  5064               	movf	(??_ActionButtons+1)^0,w,c
  3034   000EB8  0A00               	xorlw	0	; case 0
  3035   000EBA  B4D8               	btfsc	status,2,c
  3036   000EBC  EF62  F007         	goto	l10515
  3037   000EC0  EF7E  F008         	goto	l9555
  3038   000EC4                     l10515:
  3039                           
  3040                           ; Switch size 1, requested type "simple"
  3041                           ; Number of cases is 4, Range of values is 14 to 20
  3042                           ; switch strategies available:
  3043                           ; Name         Instructions Cycles
  3044                           ; simple_byte           13     7 (average)
  3045                           ;	Chosen strategy is simple_byte
  3046   000EC4  5063               	movf	??_ActionButtons^0,w,c
  3047   000EC6  0A0E               	xorlw	14	; case 14
  3048   000EC8  B4D8               	btfsc	status,2,c
  3049   000ECA  EFF7  F006         	goto	l9411
  3050   000ECE  0A01               	xorlw	1	; case 15
  3051   000ED0  B4D8               	btfsc	status,2,c
  3052   000ED2  EF38  F007         	goto	l9439
  3053   000ED6  0A1C               	xorlw	28	; case 19
  3054   000ED8  B4D8               	btfsc	status,2,c
  3055   000EDA  EFEF  F006         	goto	l9405
  3056   000EDE  0A07               	xorlw	7	; case 20
  3057   000EE0  B4D8               	btfsc	status,2,c
  3058   000EE2  EF15  F007         	goto	l9431
  3059   000EE6  EF7E  F008         	goto	l9555
  3060   000EEA                     l9453:
  3061                           
  3062                           ;Buttons.c: 339:             if( BTN_CLICK_STATE == 14 ) {
  3063   000EEA  0E0E               	movlw	14
  3064   000EEC  1834               	xorwf	_BTN_CLICK_STATE^0,w,c
  3065   000EEE  A4D8               	btfss	status,2,c
  3066   000EF0  EF7C  F007         	goto	u5811
  3067   000EF4  EF7E  F007         	goto	u5810
  3068   000EF8                     u5811:
  3069   000EF8  EFAA  F007         	goto	l9497
  3070   000EFC                     u5810:
  3071   000EFC                     
  3072                           ;Buttons.c: 340:                 counter_skip_flg = 0;
  3073   000EFC  0E00               	movlw	0
  3074   000EFE  6E39               	movwf	_counter_skip_flg^0,c
  3075                           
  3076                           ;Buttons.c: 341:                 if( !counter_enable_flg ) { SYSTEM_STATE_FLG = 200; Sta
      +                          rtCounter(); blink_enable_flg = 1; }
  3077   000F00  503B               	movf	_counter_enable_flg^0,w,c
  3078   000F02  A4D8               	btfss	status,2,c
  3079   000F04  EF86  F007         	goto	u5821
  3080   000F08  EF88  F007         	goto	u5820
  3081   000F0C                     u5821:
  3082   000F0C  EF09  F007         	goto	l9419
  3083   000F10                     u5820:
  3084   000F10  EF01  F007         	goto	l9413
  3085   000F14                     l9475:
  3086                           
  3087                           ;Buttons.c: 350:                     blink_enable_flg = 2; counter_hour_set_value ++;
  3088   000F14  0E02               	movlw	2
  3089   000F16  6E37               	movwf	_blink_enable_flg^0,c
  3090   000F18  2A47               	incf	_counter_hour_set_value^0,f,c
  3091   000F1A                     
  3092                           ;Buttons.c: 351:                     SetCounter( counter_hour_set_value, counter_min_set
      +                          _value, counter_sec_set_value );
  3093   000F1A  C046  F05F         	movff	_counter_min_set_value,SetCounter@minute
  3094   000F1E  C045  F060         	movff	_counter_sec_set_value,SetCounter@second
  3095   000F22  5047               	movf	_counter_hour_set_value^0,w,c
  3096   000F24  ECA5  F013         	call	_SetCounter
  3097   000F28  EF4C  F003         	goto	l960
  3098   000F2C                     l9485:
  3099                           
  3100                           ;Buttons.c: 355:                     blink_enable_flg = 2; if(counter_hour_set_value>0) 
      +                          counter_hour_set_value --;
  3101   000F2C  0E02               	movlw	2
  3102   000F2E  6E37               	movwf	_blink_enable_flg^0,c
  3103   000F30  5047               	movf	_counter_hour_set_value^0,w,c
  3104   000F32  B4D8               	btfsc	status,2,c
  3105   000F34  EF9E  F007         	goto	u5831
  3106   000F38  EFA0  F007         	goto	u5830
  3107   000F3C                     u5831:
  3108   000F3C  EFA1  F007         	goto	l9489
  3109   000F40                     u5830:
  3110   000F40  0647               	decf	_counter_hour_set_value^0,f,c
  3111   000F42                     l9489:
  3112                           
  3113                           ;Buttons.c: 356:                     SetCounter( counter_hour_set_value, counter_min_set
      +                          _value, counter_sec_set_value );
  3114   000F42  C046  F05F         	movff	_counter_min_set_value,SetCounter@minute
  3115   000F46  C045  F060         	movff	_counter_sec_set_value,SetCounter@second
  3116   000F4A  5047               	movf	_counter_hour_set_value^0,w,c
  3117   000F4C  ECA5  F013         	call	_SetCounter
  3118   000F50  EF4C  F003         	goto	l960
  3119   000F54                     l9497:
  3120   000F54  5034               	movf	_BTN_CLICK_STATE^0,w,c
  3121   000F56  6E63               	movwf	??_ActionButtons^0,c
  3122   000F58  6A64               	clrf	(??_ActionButtons+1)^0,c
  3123                           
  3124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3125                           ; Switch size 1, requested type "simple"
  3126                           ; Number of cases is 1, Range of values is 0 to 0
  3127                           ; switch strategies available:
  3128                           ; Name         Instructions Cycles
  3129                           ; simple_byte            4     3 (average)
  3130                           ;	Chosen strategy is simple_byte
  3131   000F5A  5064               	movf	(??_ActionButtons+1)^0,w,c
  3132   000F5C  0A00               	xorlw	0	; case 0
  3133   000F5E  B4D8               	btfsc	status,2,c
  3134   000F60  EFB4  F007         	goto	l10517
  3135   000F64  EF7E  F008         	goto	l9555
  3136   000F68                     l10517:
  3137                           
  3138                           ; Switch size 1, requested type "simple"
  3139                           ; Number of cases is 2, Range of values is 12 to 13
  3140                           ; switch strategies available:
  3141                           ; Name         Instructions Cycles
  3142                           ; simple_byte            7     4 (average)
  3143                           ;	Chosen strategy is simple_byte
  3144   000F68  5063               	movf	??_ActionButtons^0,w,c
  3145   000F6A  0A0C               	xorlw	12	; case 12
  3146   000F6C  B4D8               	btfsc	status,2,c
  3147   000F6E  EF8A  F007         	goto	l9475
  3148   000F72  0A01               	xorlw	1	; case 13
  3149   000F74  B4D8               	btfsc	status,2,c
  3150   000F76  EF96  F007         	goto	l9485
  3151   000F7A  EF7E  F008         	goto	l9555
  3152   000F7E                     l9499:
  3153                           
  3154                           ;Buttons.c: 366:                     blink_enable_flg = 3; if(counter_min_set_value<59) 
      +                          counter_min_set_value ++;
  3155   000F7E  0E03               	movlw	3
  3156   000F80  6E37               	movwf	_blink_enable_flg^0,c
  3157   000F82  0E3B               	movlw	59
  3158   000F84  6046               	cpfslt	_counter_min_set_value^0,c
  3159   000F86  EFC7  F007         	goto	u5841
  3160   000F8A  EFC9  F007         	goto	u5840
  3161   000F8E                     u5841:
  3162   000F8E  EFCA  F007         	goto	l9505
  3163   000F92                     u5840:
  3164   000F92  2A46               	incf	_counter_min_set_value^0,f,c
  3165   000F94                     l9505:
  3166                           
  3167                           ;Buttons.c: 367:                     SetCounter( counter_hour_set_value, counter_min_set
      +                          _value, counter_sec_set_value );
  3168   000F94  C046  F05F         	movff	_counter_min_set_value,SetCounter@minute
  3169   000F98  C045  F060         	movff	_counter_sec_set_value,SetCounter@second
  3170   000F9C  5047               	movf	_counter_hour_set_value^0,w,c
  3171   000F9E  ECA5  F013         	call	_SetCounter
  3172   000FA2  EF4C  F003         	goto	l960
  3173   000FA6                     l9511:
  3174                           
  3175                           ;Buttons.c: 371:                     blink_enable_flg = 3; if(counter_min_set_value>0) c
      +                          ounter_min_set_value --;
  3176   000FA6  0E03               	movlw	3
  3177   000FA8  6E37               	movwf	_blink_enable_flg^0,c
  3178   000FAA  5046               	movf	_counter_min_set_value^0,w,c
  3179   000FAC  B4D8               	btfsc	status,2,c
  3180   000FAE  EFDB  F007         	goto	u5851
  3181   000FB2  EFDD  F007         	goto	u5850
  3182   000FB6                     u5851:
  3183   000FB6  EFDE  F007         	goto	l9515
  3184   000FBA                     u5850:
  3185   000FBA  0646               	decf	_counter_min_set_value^0,f,c
  3186   000FBC                     l9515:
  3187                           
  3188                           ;Buttons.c: 372:                     SetCounter( counter_hour_set_value, counter_min_set
      +                          _value, counter_sec_set_value );
  3189   000FBC  C046  F05F         	movff	_counter_min_set_value,SetCounter@minute
  3190   000FC0  C045  F060         	movff	_counter_sec_set_value,SetCounter@second
  3191   000FC4  5047               	movf	_counter_hour_set_value^0,w,c
  3192   000FC6  ECA5  F013         	call	_SetCounter
  3193   000FCA  EF4C  F003         	goto	l960
  3194   000FCE                     l9523:
  3195   000FCE  5034               	movf	_BTN_CLICK_STATE^0,w,c
  3196   000FD0  6E63               	movwf	??_ActionButtons^0,c
  3197   000FD2  6A64               	clrf	(??_ActionButtons+1)^0,c
  3198                           
  3199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3200                           ; Switch size 1, requested type "simple"
  3201                           ; Number of cases is 1, Range of values is 0 to 0
  3202                           ; switch strategies available:
  3203                           ; Name         Instructions Cycles
  3204                           ; simple_byte            4     3 (average)
  3205                           ;	Chosen strategy is simple_byte
  3206   000FD4  5064               	movf	(??_ActionButtons+1)^0,w,c
  3207   000FD6  0A00               	xorlw	0	; case 0
  3208   000FD8  B4D8               	btfsc	status,2,c
  3209   000FDA  EFF1  F007         	goto	l10519
  3210   000FDE  EF7E  F008         	goto	l9555
  3211   000FE2                     l10519:
  3212                           
  3213                           ; Switch size 1, requested type "simple"
  3214                           ; Number of cases is 2, Range of values is 12 to 13
  3215                           ; switch strategies available:
  3216                           ; Name         Instructions Cycles
  3217                           ; simple_byte            7     4 (average)
  3218                           ;	Chosen strategy is simple_byte
  3219   000FE2  5063               	movf	??_ActionButtons^0,w,c
  3220   000FE4  0A0C               	xorlw	12	; case 12
  3221   000FE6  B4D8               	btfsc	status,2,c
  3222   000FE8  EFBF  F007         	goto	l9499
  3223   000FEC  0A01               	xorlw	1	; case 13
  3224   000FEE  B4D8               	btfsc	status,2,c
  3225   000FF0  EFD3  F007         	goto	l9511
  3226   000FF4  EF7E  F008         	goto	l9555
  3227   000FF8                     l9525:
  3228                           
  3229                           ;Buttons.c: 382:                     blink_enable_flg = 4; if(counter_sec_set_value<59) 
      +                          counter_sec_set_value ++;
  3230   000FF8  0E04               	movlw	4
  3231   000FFA  6E37               	movwf	_blink_enable_flg^0,c
  3232   000FFC  0E3B               	movlw	59
  3233   000FFE  6045               	cpfslt	_counter_sec_set_value^0,c
  3234   001000  EF04  F008         	goto	u5861
  3235   001004  EF06  F008         	goto	u5860
  3236   001008                     u5861:
  3237   001008  EF07  F008         	goto	l9531
  3238   00100C                     u5860:
  3239   00100C  2A45               	incf	_counter_sec_set_value^0,f,c
  3240   00100E                     l9531:
  3241                           
  3242                           ;Buttons.c: 383:                     SetCounter( counter_hour_set_value, counter_min_set
      +                          _value, counter_sec_set_value );
  3243   00100E  C046  F05F         	movff	_counter_min_set_value,SetCounter@minute
  3244   001012  C045  F060         	movff	_counter_sec_set_value,SetCounter@second
  3245   001016  5047               	movf	_counter_hour_set_value^0,w,c
  3246   001018  ECA5  F013         	call	_SetCounter
  3247   00101C  EF4C  F003         	goto	l960
  3248   001020                     l9537:
  3249                           
  3250                           ;Buttons.c: 387:                     blink_enable_flg = 4; if(counter_sec_set_value>0) c
      +                          ounter_sec_set_value --;
  3251   001020  0E04               	movlw	4
  3252   001022  6E37               	movwf	_blink_enable_flg^0,c
  3253   001024  5045               	movf	_counter_sec_set_value^0,w,c
  3254   001026  B4D8               	btfsc	status,2,c
  3255   001028  EF18  F008         	goto	u5871
  3256   00102C  EF1A  F008         	goto	u5870
  3257   001030                     u5871:
  3258   001030  EF1B  F008         	goto	l9541
  3259   001034                     u5870:
  3260   001034  0645               	decf	_counter_sec_set_value^0,f,c
  3261   001036                     l9541:
  3262                           
  3263                           ;Buttons.c: 388:                     SetCounter( counter_hour_set_value, counter_min_set
      +                          _value, counter_sec_set_value );
  3264   001036  C046  F05F         	movff	_counter_min_set_value,SetCounter@minute
  3265   00103A  C045  F060         	movff	_counter_sec_set_value,SetCounter@second
  3266   00103E  5047               	movf	_counter_hour_set_value^0,w,c
  3267   001040  ECA5  F013         	call	_SetCounter
  3268   001044  EF4C  F003         	goto	l960
  3269   001048                     l9549:
  3270   001048  5034               	movf	_BTN_CLICK_STATE^0,w,c
  3271   00104A  6E63               	movwf	??_ActionButtons^0,c
  3272   00104C  6A64               	clrf	(??_ActionButtons+1)^0,c
  3273                           
  3274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3275                           ; Switch size 1, requested type "simple"
  3276                           ; Number of cases is 1, Range of values is 0 to 0
  3277                           ; switch strategies available:
  3278                           ; Name         Instructions Cycles
  3279                           ; simple_byte            4     3 (average)
  3280                           ;	Chosen strategy is simple_byte
  3281   00104E  5064               	movf	(??_ActionButtons+1)^0,w,c
  3282   001050  0A00               	xorlw	0	; case 0
  3283   001052  B4D8               	btfsc	status,2,c
  3284   001054  EF2E  F008         	goto	l10521
  3285   001058  EF7E  F008         	goto	l9555
  3286   00105C                     l10521:
  3287                           
  3288                           ; Switch size 1, requested type "simple"
  3289                           ; Number of cases is 2, Range of values is 12 to 13
  3290                           ; switch strategies available:
  3291                           ; Name         Instructions Cycles
  3292                           ; simple_byte            7     4 (average)
  3293                           ;	Chosen strategy is simple_byte
  3294   00105C  5063               	movf	??_ActionButtons^0,w,c
  3295   00105E  0A0C               	xorlw	12	; case 12
  3296   001060  B4D8               	btfsc	status,2,c
  3297   001062  EFFC  F007         	goto	l9525
  3298   001066  0A01               	xorlw	1	; case 13
  3299   001068  B4D8               	btfsc	status,2,c
  3300   00106A  EF10  F008         	goto	l9537
  3301   00106E  EF7E  F008         	goto	l9555
  3302   001072                     l9553:
  3303   001072  5048               	movf	_SYSTEM_STATE_FLG^0,w,c
  3304   001074  6E63               	movwf	??_ActionButtons^0,c
  3305   001076  6A64               	clrf	(??_ActionButtons+1)^0,c
  3306                           
  3307                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3308                           ; Switch size 1, requested type "simple"
  3309                           ; Number of cases is 1, Range of values is 0 to 0
  3310                           ; switch strategies available:
  3311                           ; Name         Instructions Cycles
  3312                           ; simple_byte            4     3 (average)
  3313                           ;	Chosen strategy is simple_byte
  3314   001078  5064               	movf	(??_ActionButtons+1)^0,w,c
  3315   00107A  0A00               	xorlw	0	; case 0
  3316   00107C  B4D8               	btfsc	status,2,c
  3317   00107E  EF43  F008         	goto	l10523
  3318   001082  EF7E  F008         	goto	l9555
  3319   001086                     l10523:
  3320                           
  3321                           ; Switch size 1, requested type "simple"
  3322                           ; Number of cases is 14, Range of values is 100 to 204
  3323                           ; switch strategies available:
  3324                           ; Name         Instructions Cycles
  3325                           ; simple_byte           43    22 (average)
  3326                           ;	Chosen strategy is simple_byte
  3327   001086  5063               	movf	??_ActionButtons^0,w,c
  3328   001088  0A64               	xorlw	100	; case 100
  3329   00108A  B4D8               	btfsc	status,2,c
  3330   00108C  EF6E  F003         	goto	l9095
  3331   001090  0A01               	xorlw	1	; case 101
  3332   001092  B4D8               	btfsc	status,2,c
  3333   001094  EFF2  F003         	goto	l9137
  3334   001098  0A03               	xorlw	3	; case 102
  3335   00109A  B4D8               	btfsc	status,2,c
  3336   00109C  EF71  F004         	goto	l9179
  3337   0010A0  0A01               	xorlw	1	; case 103
  3338   0010A2  B4D8               	btfsc	status,2,c
  3339   0010A4  EFF0  F004         	goto	l9221
  3340   0010A8  0A0F               	xorlw	15	; case 104
  3341   0010AA  B4D8               	btfsc	status,2,c
  3342   0010AC  EFA1  F006         	goto	l9381
  3343   0010B0  0A01               	xorlw	1	; case 105
  3344   0010B2  B4D8               	btfsc	status,2,c
  3345   0010B4  EF67  F005         	goto	l9263
  3346   0010B8  0A03               	xorlw	3	; case 106
  3347   0010BA  B4D8               	btfsc	status,2,c
  3348   0010BC  EFDA  F005         	goto	l9305
  3349   0010C0  0A01               	xorlw	1	; case 107
  3350   0010C2  B4D8               	btfsc	status,2,c
  3351   0010C4  EF58  F006         	goto	l9347
  3352   0010C8  0A07               	xorlw	7	; case 108
  3353   0010CA  B4D8               	btfsc	status,2,c
  3354   0010CC  EFD2  F006         	goto	l9403
  3355   0010D0  0AA4               	xorlw	164	; case 200
  3356   0010D2  B4D8               	btfsc	status,2,c
  3357   0010D4  EF58  F007         	goto	l9451
  3358   0010D8  0A01               	xorlw	1	; case 201
  3359   0010DA  B4D8               	btfsc	status,2,c
  3360   0010DC  EF75  F007         	goto	l9453
  3361   0010E0  0A03               	xorlw	3	; case 202
  3362   0010E2  B4D8               	btfsc	status,2,c
  3363   0010E4  EFAA  F007         	goto	l9497
  3364   0010E8  0A01               	xorlw	1	; case 203
  3365   0010EA  B4D8               	btfsc	status,2,c
  3366   0010EC  EFE7  F007         	goto	l9523
  3367   0010F0  0A07               	xorlw	7	; case 204
  3368   0010F2  B4D8               	btfsc	status,2,c
  3369   0010F4  EF24  F008         	goto	l9549
  3370   0010F8  EF7E  F008         	goto	l9555
  3371   0010FC                     l9555:
  3372                           
  3373                           ;Buttons.c: 397:     if( SYSTEM_STATE_FLG >= 201 && BTN_CLICK_STATE == 16 ){
  3374   0010FC  0EC8               	movlw	200
  3375   0010FE  6448               	cpfsgt	_SYSTEM_STATE_FLG^0,c
  3376   001100  EF84  F008         	goto	u5881
  3377   001104  EF86  F008         	goto	u5880
  3378   001108                     u5881:
  3379   001108  EF97  F008         	goto	l9563
  3380   00110C                     u5880:
  3381   00110C  0E10               	movlw	16
  3382   00110E  1834               	xorwf	_BTN_CLICK_STATE^0,w,c
  3383   001110  A4D8               	btfss	status,2,c
  3384   001112  EF8D  F008         	goto	u5891
  3385   001116  EF8F  F008         	goto	u5890
  3386   00111A                     u5891:
  3387   00111A  EF97  F008         	goto	l9563
  3388   00111E                     u5890:
  3389   00111E                     
  3390                           ;Buttons.c: 398:         blink_enable_flg = 2; SYSTEM_STATE_FLG = 202;
  3391   00111E  0E02               	movlw	2
  3392   001120  6E37               	movwf	_blink_enable_flg^0,c
  3393   001122  0ECA               	movlw	202
  3394   001124  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  3395                           
  3396                           ;Buttons.c: 400:         BTN_CLICK_STATE = 0; return;
  3397   001126  0E00               	movlw	0
  3398   001128  6E34               	movwf	_BTN_CLICK_STATE^0,c
  3399   00112A  EFE0  F008         	goto	l955
  3400   00112E                     l9563:
  3401                           
  3402                           ;Buttons.c: 404:     if( SYSTEM_STATE_FLG >= 201 && BTN_CLICK_STATE == 17 ){
  3403   00112E  0EC8               	movlw	200
  3404   001130  6448               	cpfsgt	_SYSTEM_STATE_FLG^0,c
  3405   001132  EF9D  F008         	goto	u5901
  3406   001136  EF9F  F008         	goto	u5900
  3407   00113A                     u5901:
  3408   00113A  EFB0  F008         	goto	l9571
  3409   00113E                     u5900:
  3410   00113E  0E11               	movlw	17
  3411   001140  1834               	xorwf	_BTN_CLICK_STATE^0,w,c
  3412   001142  A4D8               	btfss	status,2,c
  3413   001144  EFA6  F008         	goto	u5911
  3414   001148  EFA8  F008         	goto	u5910
  3415   00114C                     u5911:
  3416   00114C  EFB0  F008         	goto	l9571
  3417   001150                     u5910:
  3418   001150                     
  3419                           ;Buttons.c: 405:         blink_enable_flg = 3; SYSTEM_STATE_FLG = 203;
  3420   001150  0E03               	movlw	3
  3421   001152  6E37               	movwf	_blink_enable_flg^0,c
  3422   001154  0ECB               	movlw	203
  3423   001156  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  3424                           
  3425                           ;Buttons.c: 407:         BTN_CLICK_STATE = 0; return;
  3426   001158  0E00               	movlw	0
  3427   00115A  6E34               	movwf	_BTN_CLICK_STATE^0,c
  3428   00115C  EFE0  F008         	goto	l955
  3429   001160                     l9571:
  3430                           
  3431                           ;Buttons.c: 411:     if( SYSTEM_STATE_FLG >= 201 && BTN_CLICK_STATE == 18 ){
  3432   001160  0EC8               	movlw	200
  3433   001162  6448               	cpfsgt	_SYSTEM_STATE_FLG^0,c
  3434   001164  EFB6  F008         	goto	u5921
  3435   001168  EFB8  F008         	goto	u5920
  3436   00116C                     u5921:
  3437   00116C  EFC9  F008         	goto	l9579
  3438   001170                     u5920:
  3439   001170  0E12               	movlw	18
  3440   001172  1834               	xorwf	_BTN_CLICK_STATE^0,w,c
  3441   001174  A4D8               	btfss	status,2,c
  3442   001176  EFBF  F008         	goto	u5931
  3443   00117A  EFC1  F008         	goto	u5930
  3444   00117E                     u5931:
  3445   00117E  EFC9  F008         	goto	l9579
  3446   001182                     u5930:
  3447   001182                     
  3448                           ;Buttons.c: 412:         blink_enable_flg = 4; SYSTEM_STATE_FLG = 204;
  3449   001182  0E04               	movlw	4
  3450   001184  6E37               	movwf	_blink_enable_flg^0,c
  3451   001186  0ECC               	movlw	204
  3452   001188  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  3453                           
  3454                           ;Buttons.c: 414:         BTN_CLICK_STATE = 0; return;
  3455   00118A  0E00               	movlw	0
  3456   00118C  6E34               	movwf	_BTN_CLICK_STATE^0,c
  3457   00118E  EFE0  F008         	goto	l955
  3458   001192                     l9579:
  3459                           
  3460                           ;Buttons.c: 418:     if( SYSTEM_STATE_FLG >= 202 && BTN_CLICK_STATE == 20 ){
  3461   001192  0EC9               	movlw	201
  3462   001194  6448               	cpfsgt	_SYSTEM_STATE_FLG^0,c
  3463   001196  EFCF  F008         	goto	u5941
  3464   00119A  EFD1  F008         	goto	u5940
  3465   00119E                     u5941:
  3466   00119E  EFE0  F008         	goto	l955
  3467   0011A2                     u5940:
  3468   0011A2  0E14               	movlw	20
  3469   0011A4  1834               	xorwf	_BTN_CLICK_STATE^0,w,c
  3470   0011A6  A4D8               	btfss	status,2,c
  3471   0011A8  EFD8  F008         	goto	u5951
  3472   0011AC  EFDA  F008         	goto	u5950
  3473   0011B0                     u5951:
  3474   0011B0  EFE0  F008         	goto	l955
  3475   0011B4                     u5950:
  3476   0011B4                     
  3477                           ;Buttons.c: 419:         blink_enable_flg = 1; SYSTEM_STATE_FLG = temp_system_state;
  3478   0011B4  0E01               	movlw	1
  3479   0011B6  6E37               	movwf	_blink_enable_flg^0,c
  3480   0011B8  C044  F048         	movff	_temp_system_state,_SYSTEM_STATE_FLG
  3481                           
  3482                           ;Buttons.c: 421:         BTN_CLICK_STATE = 0; return;
  3483   0011BC  0E00               	movlw	0
  3484   0011BE  6E34               	movwf	_BTN_CLICK_STATE^0,c
  3485   0011C0                     l955:
  3486   0011C0  0012               	return		;funcret
  3487   0011C2                     __end_of_ActionButtons:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function _StopCounter *****************
  3491 ;; Defined at:
  3492 ;;		line 63 in file "Counter.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3506 ;;      Params:         0       0       0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0       0       0
  3508 ;;      Temps:          0       0       0       0       0       0       0
  3509 ;;      Totals:         0       0       0       0       0       0       0
  3510 ;;Total ram usage:        0 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 4
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_ActionButtons
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text3
  3521   002990                     __ptext3:
  3522                           	callstack 0
  3523   002990                     _StopCounter:
  3524                           	callstack 24
  3525   002990                     
  3526                           ;Counter.c: 64:     counter_enable_flg = 0;
  3527   002990  0E00               	movlw	0
  3528   002992  6E3B               	movwf	_counter_enable_flg^0,c
  3529   002994  0012               	return		;funcret
  3530   002996                     __end_of_StopCounter:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _StartCounter *****************
  3534 ;; Defined at:
  3535 ;;		line 59 in file "Counter.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;		None
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3549 ;;      Params:         0       0       0       0       0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0
  3552 ;;      Totals:         0       0       0       0       0       0       0
  3553 ;;Total ram usage:        0 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 4
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_ActionButtons
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text4
  3564   002996                     __ptext4:
  3565                           	callstack 0
  3566   002996                     _StartCounter:
  3567                           	callstack 24
  3568   002996                     
  3569                           ;Counter.c: 60:     counter_enable_flg = 1;
  3570   002996  0E01               	movlw	1
  3571   002998  6E3B               	movwf	_counter_enable_flg^0,c
  3572   00299A  0012               	return		;funcret
  3573   00299C                     __end_of_StartCounter:
  3574                           	callstack 0
  3575                           
  3576 ;; *************** function _SetCounter *****************
  3577 ;; Defined at:
  3578 ;;		line 43 in file "Counter.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  hour            1    wreg     unsigned char 
  3581 ;;  minute          1   11[COMRAM] unsigned char 
  3582 ;;  second          1   12[COMRAM] unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  hour            1   13[COMRAM] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3594 ;;      Params:         2       0       0       0       0       0       0
  3595 ;;      Locals:         1       0       0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0
  3597 ;;      Totals:         3       0       0       0       0       0       0
  3598 ;;Total ram usage:        3 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; Hardware stack levels required when called: 4
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_ActionButtons
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text5
  3609   00274A                     __ptext5:
  3610                           	callstack 0
  3611   00274A                     _SetCounter:
  3612                           	callstack 24
  3613                           
  3614                           ;incstack = 0
  3615                           ;SetCounter@hour stored from wreg
  3616   00274A  6E61               	movwf	SetCounter@hour^0,c
  3617   00274C                     
  3618                           ;Counter.c: 46:     if( counter_direction_flg == 1 ) {
  3619   00274C  043A               	decf	_counter_direction_flg^0,w,c
  3620   00274E  A4D8               	btfss	status,2,c
  3621   002750  EFAC  F013         	goto	u3091
  3622   002754  EFAE  F013         	goto	u3090
  3623   002758                     u3091:
  3624   002758  EFBC  F013         	goto	l649
  3625   00275C                     u3090:
  3626   00275C                     
  3627                           ;Counter.c: 47:         set_counter_hour = hour; counter_hour = 0;
  3628   00275C  C061  F03E         	movff	SetCounter@hour,_set_counter_hour
  3629   002760  0E00               	movlw	0
  3630   002762  6E41               	movwf	_counter_hour^0,c
  3631   002764                     
  3632                           ;Counter.c: 48:         set_counter_minute = minute; counter_minute = 0;
  3633   002764  C05F  F03D         	movff	SetCounter@minute,_set_counter_minute
  3634   002768  0E00               	movlw	0
  3635   00276A  6E40               	movwf	_counter_minute^0,c
  3636   00276C                     
  3637                           ;Counter.c: 49:         set_counter_second = second; counter_second = 0;
  3638   00276C  C060  F03C         	movff	SetCounter@second,_set_counter_second
  3639   002770  0E00               	movlw	0
  3640   002772  6E3F               	movwf	_counter_second^0,c
  3641                           
  3642                           ;Counter.c: 50:     }
  3643   002774  EFC2  F013         	goto	l651
  3644   002778                     l649:
  3645                           
  3646                           ;Counter.c: 52:         counter_hour = hour;
  3647   002778  C061  F041         	movff	SetCounter@hour,_counter_hour
  3648                           
  3649                           ;Counter.c: 53:         counter_minute = minute;
  3650   00277C  C05F  F040         	movff	SetCounter@minute,_counter_minute
  3651                           
  3652                           ;Counter.c: 54:         counter_second = second;
  3653   002780  C060  F03F         	movff	SetCounter@second,_counter_second
  3654   002784                     l651:
  3655   002784  0012               	return		;funcret
  3656   002786                     __end_of_SetCounter:
  3657                           	callstack 0
  3658                           
  3659 ;; *************** function _UpdateDisplay *****************
  3660 ;; Defined at:
  3661 ;;		line 50 in file "Display.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  update_datas    2    0[BANK0 ] PTR unsigned char 
  3664 ;;		 -> ReadCounter@counter_datas(6), Ds1307Read@ds1307_date_datas(6), 
  3665 ;;  start_positi    1    2[BANK0 ] unsigned char 
  3666 ;;  end_position    1    3[BANK0 ] unsigned char 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  i               1   21[COMRAM] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3678 ;;      Params:         0       4       0       0       0       0       0
  3679 ;;      Locals:         1       0       0       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0
  3681 ;;      Totals:         1       4       0       0       0       0       0
  3682 ;;Total ram usage:        5 bytes
  3683 ;; Hardware stack levels used: 1
  3684 ;; Hardware stack levels required when called: 5
  3685 ;; This function calls:
  3686 ;;		_MarkDisplay
  3687 ;; This function is called by:
  3688 ;;		_main
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text6
  3693   002708                     __ptext6:
  3694                           	callstack 0
  3695   002708                     _UpdateDisplay:
  3696                           	callstack 25
  3697   002708                     
  3698                           ;Display.c: 52:     for( unsigned char i = start_position - 1; i < end_position; i ++ ) 
      +                          {
  3699   002708  0100               	movlb	0	; () banked
  3700   00270A  05FE               	decf	UpdateDisplay@start_position& (0+255),w,b
  3701   00270C  6E69               	movwf	UpdateDisplay@i^0,c
  3702   00270E  EF9A  F013         	goto	l9937
  3703   002712                     l9933:
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;Display.c: 53:         display_datas[ i ] = MarkDisplay( update_datas[ i ] );
  3707   002712  0E01               	movlw	low _display_datas
  3708   002714  2469               	addwf	UpdateDisplay@i^0,w,c
  3709   002716  6ED9               	movwf	fsr2l,c
  3710   002718  6ADA               	clrf	fsr2h,c
  3711   00271A  0E00               	movlw	high _display_datas
  3712   00271C  22DA               	addwfc	fsr2h,f,c
  3713   00271E  5069               	movf	UpdateDisplay@i^0,w,c
  3714   002720  25FC               	addwf	UpdateDisplay@update_datas& (0+255),w,b
  3715   002722  6EE1               	movwf	fsr1l,c
  3716   002724  0E00               	movlw	0
  3717   002726  21FD               	addwfc	(UpdateDisplay@update_datas+1)& (0+255),w,b
  3718   002728  6EE2               	movwf	fsr1h,c
  3719   00272A  50E7               	movf	indf1,w,c
  3720   00272C  EC88  F00A         	call	_MarkDisplay
  3721   002730  6EDF               	movwf	indf2,c
  3722   002732                     
  3723                           ;Display.c: 54:     }
  3724   002732  2A69               	incf	UpdateDisplay@i^0,f,c
  3725   002734                     l9937:
  3726   002734  0100               	movlb	0	; () banked
  3727   002736  51FF               	movf	UpdateDisplay@end_position& (0+255),w,b
  3728   002738  5C69               	subwf	UpdateDisplay@i^0,w,c
  3729   00273A  A0D8               	btfss	status,0,c
  3730   00273C  EFA2  F013         	goto	u6391
  3731   002740  EFA4  F013         	goto	u6390
  3732   002744                     u6391:
  3733   002744  EF89  F013         	goto	l9933
  3734   002748                     u6390:
  3735   002748                     
  3736                           ; BSR set to: 0
  3737   002748  0012               	return		;funcret
  3738   00274A                     __end_of_UpdateDisplay:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function _ReadCounter *****************
  3742 ;; Defined at:
  3743 ;;		line 28 in file "Counter.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  counter_data    6    0[BANK1 ] unsigned char [6]
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  2   19[COMRAM] PTR unsigned char 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3757 ;;      Params:         2       0       0       0       0       0       0
  3758 ;;      Locals:         0       0       6       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0
  3760 ;;      Totals:         2       0       6       0       0       0       0
  3761 ;;Total ram usage:        8 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 5
  3764 ;; This function calls:
  3765 ;;		___awdiv
  3766 ;;		___awmod
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text7
  3773   00222E                     __ptext7:
  3774                           	callstack 0
  3775   00222E                     _ReadCounter:
  3776                           	callstack 25
  3777   00222E                     
  3778                           ;Counter.c: 30:     unsigned char counter_datas[ 6 ];;Counter.c: 32:     counter_datas[ 
      +                          0 + 1 ] = counter_hour % 10;
  3779   00222E  5041               	movf	_counter_hour^0,w,c
  3780   002230  6E5F               	movwf	___awmod@dividend^0,c
  3781   002232  6A60               	clrf	(___awmod@dividend+1)^0,c
  3782   002234  BE5F               	btfsc	___awmod@dividend^0,7,c
  3783   002236  0660               	decf	(___awmod@dividend+1)^0,f,c
  3784   002238  0E00               	movlw	0
  3785   00223A  6E62               	movwf	(___awmod@divisor+1)^0,c
  3786   00223C  0E0A               	movlw	10
  3787   00223E  6E61               	movwf	___awmod@divisor^0,c
  3788   002240  EC70  F011         	call	___awmod	;wreg free
  3789   002244  505F               	movf	?___awmod^0,w,c
  3790   002246  0101               	movlb	1	; () banked
  3791   002248  6F0B               	movwf	(ReadCounter@counter_datas+1)& (0+255),b
  3792                           
  3793                           ;Counter.c: 33:     counter_datas[ 0 ] = counter_hour / 10;
  3794   00224A  5041               	movf	_counter_hour^0,w,c
  3795   00224C  6E5F               	movwf	___awdiv@dividend^0,c
  3796   00224E  6A60               	clrf	(___awdiv@dividend+1)^0,c
  3797   002250  BE5F               	btfsc	___awdiv@dividend^0,7,c
  3798   002252  0660               	decf	(___awdiv@dividend+1)^0,f,c
  3799   002254  0E00               	movlw	0
  3800   002256  6E62               	movwf	(___awdiv@divisor+1)^0,c
  3801   002258  0E0A               	movlw	10
  3802   00225A  6E61               	movwf	___awdiv@divisor^0,c
  3803   00225C  ECB5  F010         	call	___awdiv	;wreg free
  3804   002260  505F               	movf	?___awdiv^0,w,c
  3805   002262  0101               	movlb	1	; () banked
  3806   002264  6F0A               	movwf	ReadCounter@counter_datas& (0+255),b
  3807                           
  3808                           ;Counter.c: 34:     counter_datas[ 2 + 1 ] = counter_minute % 10;
  3809   002266  5040               	movf	_counter_minute^0,w,c
  3810   002268  6E5F               	movwf	___awmod@dividend^0,c
  3811   00226A  6A60               	clrf	(___awmod@dividend+1)^0,c
  3812   00226C  BE5F               	btfsc	___awmod@dividend^0,7,c
  3813   00226E  0660               	decf	(___awmod@dividend+1)^0,f,c
  3814   002270  0E00               	movlw	0
  3815   002272  6E62               	movwf	(___awmod@divisor+1)^0,c
  3816   002274  0E0A               	movlw	10
  3817   002276  6E61               	movwf	___awmod@divisor^0,c
  3818   002278  EC70  F011         	call	___awmod	;wreg free
  3819   00227C  505F               	movf	?___awmod^0,w,c
  3820   00227E  0101               	movlb	1	; () banked
  3821   002280  6F0D               	movwf	(ReadCounter@counter_datas+3)& (0+255),b
  3822                           
  3823                           ;Counter.c: 35:     counter_datas[ 2 ] = counter_minute / 10;
  3824   002282  5040               	movf	_counter_minute^0,w,c
  3825   002284  6E5F               	movwf	___awdiv@dividend^0,c
  3826   002286  6A60               	clrf	(___awdiv@dividend+1)^0,c
  3827   002288  BE5F               	btfsc	___awdiv@dividend^0,7,c
  3828   00228A  0660               	decf	(___awdiv@dividend+1)^0,f,c
  3829   00228C  0E00               	movlw	0
  3830   00228E  6E62               	movwf	(___awdiv@divisor+1)^0,c
  3831   002290  0E0A               	movlw	10
  3832   002292  6E61               	movwf	___awdiv@divisor^0,c
  3833   002294  ECB5  F010         	call	___awdiv	;wreg free
  3834   002298  505F               	movf	?___awdiv^0,w,c
  3835   00229A  0101               	movlb	1	; () banked
  3836   00229C  6F0C               	movwf	(ReadCounter@counter_datas+2)& (0+255),b
  3837                           
  3838                           ;Counter.c: 36:     counter_datas[ 4 + 1 ] = counter_second % 10;
  3839   00229E  503F               	movf	_counter_second^0,w,c
  3840   0022A0  6E5F               	movwf	___awmod@dividend^0,c
  3841   0022A2  6A60               	clrf	(___awmod@dividend+1)^0,c
  3842   0022A4  BE5F               	btfsc	___awmod@dividend^0,7,c
  3843   0022A6  0660               	decf	(___awmod@dividend+1)^0,f,c
  3844   0022A8  0E00               	movlw	0
  3845   0022AA  6E62               	movwf	(___awmod@divisor+1)^0,c
  3846   0022AC  0E0A               	movlw	10
  3847   0022AE  6E61               	movwf	___awmod@divisor^0,c
  3848   0022B0  EC70  F011         	call	___awmod	;wreg free
  3849   0022B4  505F               	movf	?___awmod^0,w,c
  3850   0022B6  0101               	movlb	1	; () banked
  3851   0022B8  6F0F               	movwf	(ReadCounter@counter_datas+5)& (0+255),b
  3852                           
  3853                           ;Counter.c: 37:     counter_datas[ 4 ] = counter_second / 10;
  3854   0022BA  503F               	movf	_counter_second^0,w,c
  3855   0022BC  6E5F               	movwf	___awdiv@dividend^0,c
  3856   0022BE  6A60               	clrf	(___awdiv@dividend+1)^0,c
  3857   0022C0  BE5F               	btfsc	___awdiv@dividend^0,7,c
  3858   0022C2  0660               	decf	(___awdiv@dividend+1)^0,f,c
  3859   0022C4  0E00               	movlw	0
  3860   0022C6  6E62               	movwf	(___awdiv@divisor+1)^0,c
  3861   0022C8  0E0A               	movlw	10
  3862   0022CA  6E61               	movwf	___awdiv@divisor^0,c
  3863   0022CC  ECB5  F010         	call	___awdiv	;wreg free
  3864   0022D0  505F               	movf	?___awdiv^0,w,c
  3865   0022D2  0101               	movlb	1	; () banked
  3866   0022D4  6F0E               	movwf	(ReadCounter@counter_datas+4)& (0+255),b
  3867   0022D6                     
  3868                           ; BSR set to: 1
  3869                           ;Counter.c: 39:     return counter_datas;
  3870   0022D6  0E0A               	movlw	low ReadCounter@counter_datas
  3871   0022D8  6E67               	movwf	?_ReadCounter^0,c
  3872   0022DA  0E01               	movlw	high ReadCounter@counter_datas
  3873   0022DC  6E68               	movwf	(?_ReadCounter+1)^0,c
  3874   0022DE                     
  3875                           ; BSR set to: 1
  3876   0022DE  0012               	return		;funcret
  3877   0022E0                     __end_of_ReadCounter:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function _LEDProcess *****************
  3881 ;; Defined at:
  3882 ;;		line 141 in file "Main.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;		None
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      void 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3896 ;;      Params:         0       0       0       0       0       0       0
  3897 ;;      Locals:         0       0       0       0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0
  3899 ;;      Totals:         0       0       0       0       0       0       0
  3900 ;;Total ram usage:        0 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 4
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_main
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text8
  3911   0027F2                     __ptext8:
  3912                           	callstack 0
  3913   0027F2                     _LEDProcess:
  3914                           	callstack 26
  3915   0027F2                     
  3916                           ;Main.c: 142:     display_datas[ 7 ] |= 0xff;
  3917   0027F2  6808               	setf	(_display_datas+7)^0,c
  3918   0027F4                     
  3919                           ;Main.c: 143:     if( SYSTEM_STATE_FLG == 100 ) {
  3920   0027F4  0E64               	movlw	100
  3921   0027F6  1848               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  3922   0027F8  A4D8               	btfss	status,2,c
  3923   0027FA  EF01  F014         	goto	u4251
  3924   0027FE  EF03  F014         	goto	u4250
  3925   002802                     u4251:
  3926   002802  EF0F  F014         	goto	l332
  3927   002806                     u4250:
  3928   002806                     
  3929                           ;Main.c: 144:         if( rtc_clock_disp_type == 0 ) display_datas[ 7 ] &= 0xfe;
  3930   002806  504C               	movf	_rtc_clock_disp_type^0,w,c
  3931   002808  A4D8               	btfss	status,2,c
  3932   00280A  EF09  F014         	goto	u4261
  3933   00280E  EF0B  F014         	goto	u4260
  3934   002812                     u4261:
  3935   002812  EF0E  F014         	goto	l7079
  3936   002816                     u4260:
  3937   002816  9008               	bcf	(_display_datas+7)^0,0,c
  3938   002818  EF0F  F014         	goto	l332
  3939   00281C                     l7079:
  3940   00281C  9208               	bcf	(_display_datas+7)^0,1,c
  3941   00281E                     l332:
  3942   00281E  0012               	return		;funcret
  3943   002820                     __end_of_LEDProcess:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function _Ds1307Read *****************
  3947 ;; Defined at:
  3948 ;;		line 20 in file "DS1307.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  disp_type       1    wreg     unsigned char 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  disp_type       1    0[BANK1 ] unsigned char 
  3953 ;;  i               1    1[BANK1 ] unsigned char 
  3954 ;;  ds1307_date_    6    2[BANK1 ] unsigned char [6]
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  2   13[COMRAM] PTR unsigned char 
  3957 ;; Registers used:
  3958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3964 ;;      Params:         2       0       0       0       0       0       0
  3965 ;;      Locals:         0       0       8       0       0       0       0
  3966 ;;      Temps:          2       0       0       0       0       0       0
  3967 ;;      Totals:         4       0       8       0       0       0       0
  3968 ;;Total ram usage:       12 bytes
  3969 ;; Hardware stack levels used: 1
  3970 ;; Hardware stack levels required when called: 7
  3971 ;; This function calls:
  3972 ;;		_I2cRead
  3973 ;;		_I2cRestart
  3974 ;;		_I2cStart
  3975 ;;		_I2cStop
  3976 ;;		_I2cWrite
  3977 ;; This function is called by:
  3978 ;;		_main
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text9
  3983   001E6A                     __ptext9:
  3984                           	callstack 0
  3985   001E6A                     _Ds1307Read:
  3986                           	callstack 23
  3987                           
  3988                           ;incstack = 0
  3989                           ;Ds1307Read@disp_type stored from wreg
  3990   001E6A  0101               	movlb	1	; () banked
  3991   001E6C  6F0A               	movwf	Ds1307Read@disp_type& (0+255),b
  3992   001E6E                     
  3993                           ;DS1307.c: 22:     I2cStart();
  3994   001E6E  EC96  F014         	call	_I2cStart	;wreg free
  3995   001E72                     
  3996                           ;DS1307.c: 23:     I2cWrite( (0xD0) );
  3997   001E72  0ED0               	movlw	208
  3998   001E74  EC5B  F014         	call	_I2cWrite
  3999   001E78                     
  4000                           ;DS1307.c: 24:     I2cWrite( 0x00 );
  4001   001E78  0E00               	movlw	0
  4002   001E7A  EC5B  F014         	call	_I2cWrite
  4003                           
  4004                           ;DS1307.c: 26:     I2cRestart();
  4005   001E7E  EC72  F014         	call	_I2cRestart	;wreg free
  4006   001E82                     
  4007                           ;DS1307.c: 27:     I2cWrite( (0xD1) );
  4008   001E82  0ED1               	movlw	209
  4009   001E84  EC5B  F014         	call	_I2cWrite
  4010   001E88                     
  4011                           ;DS1307.c: 29:     unsigned char ds1307_date_datas[ 6 ];;DS1307.c: 31:     for( unsigned
      +                           char i = 0; i < 6; i++ ) real_rtc_data[ i ] = I2cRead( 0 ); real_rtc_data[ 6 ] = I2cRea
      +                          d( 1 );
  4012   001E88  0E00               	movlw	0
  4013   001E8A  0101               	movlb	1	; () banked
  4014   001E8C  6F0B               	movwf	Ds1307Read@i& (0+255),b
  4015   001E8E                     l9739:
  4016                           
  4017                           ; BSR set to: 1
  4018   001E8E  0E4D               	movlw	low _real_rtc_data
  4019   001E90  250B               	addwf	Ds1307Read@i& (0+255),w,b
  4020   001E92  6ED9               	movwf	fsr2l,c
  4021   001E94  6ADA               	clrf	fsr2h,c
  4022   001E96  0E00               	movlw	high _real_rtc_data
  4023   001E98  22DA               	addwfc	fsr2h,f,c
  4024   001E9A  0E00               	movlw	0
  4025   001E9C  ECC3  F013         	call	_I2cRead
  4026   001EA0  6EDF               	movwf	indf2,c
  4027   001EA2  0101               	movlb	1	; () banked
  4028   001EA4  2B0B               	incf	Ds1307Read@i& (0+255),f,b
  4029   001EA6                     
  4030                           ; BSR set to: 1
  4031   001EA6  0E05               	movlw	5
  4032   001EA8  650B               	cpfsgt	Ds1307Read@i& (0+255),b
  4033   001EAA  EF59  F00F         	goto	u6081
  4034   001EAE  EF5B  F00F         	goto	u6080
  4035   001EB2                     u6081:
  4036   001EB2  EF47  F00F         	goto	l9739
  4037   001EB6                     u6080:
  4038   001EB6                     
  4039                           ; BSR set to: 1
  4040   001EB6  0E01               	movlw	1
  4041   001EB8  ECC3  F013         	call	_I2cRead
  4042   001EBC  6E53               	movwf	(_real_rtc_data+6)^0,c
  4043   001EBE                     
  4044                           ;DS1307.c: 33:     rtc_clock_disp_type = ( real_rtc_data[ 2 ] & 0x40 ) ? 1 : 0;
  4045   001EBE  BC4F               	btfsc	(_real_rtc_data+2)^0,6,c
  4046   001EC0  EF64  F00F         	goto	u6091
  4047   001EC4  EF67  F00F         	goto	u6090
  4048   001EC8                     u6091:
  4049   001EC8  0E01               	movlw	1
  4050   001ECA  EF68  F00F         	goto	u6100
  4051   001ECE                     u6090:
  4052   001ECE  0E00               	movlw	0
  4053   001ED0                     u6100:
  4054   001ED0  6E4C               	movwf	_rtc_clock_disp_type^0,c
  4055   001ED2                     
  4056                           ;DS1307.c: 34:     if( rtc_clock_disp_type == 0 ) real_rtc_data[ 2 ] = real_rtc_data[ 2 
      +                          ] & 0x3f;
  4057   001ED2  504C               	movf	_rtc_clock_disp_type^0,w,c
  4058   001ED4  A4D8               	btfss	status,2,c
  4059   001ED6  EF6F  F00F         	goto	u6111
  4060   001EDA  EF71  F00F         	goto	u6110
  4061   001EDE                     u6111:
  4062   001EDE  EF76  F00F         	goto	l9753
  4063   001EE2                     u6110:
  4064   001EE2  504F               	movf	(_real_rtc_data+2)^0,w,c
  4065   001EE4  0B3F               	andlw	63
  4066   001EE6  6E4F               	movwf	(_real_rtc_data+2)^0,c
  4067   001EE8  EFC1  F00F         	goto	l9765
  4068   001EEC                     l9753:
  4069   001EEC  BA4F               	btfsc	(_real_rtc_data+2)^0,5,c
  4070   001EEE  EF7B  F00F         	goto	u6121
  4071   001EF2  EF7E  F00F         	goto	u6120
  4072   001EF6                     u6121:
  4073   001EF6  0E01               	movlw	1
  4074   001EF8  EF7F  F00F         	goto	u6130
  4075   001EFC                     u6120:
  4076   001EFC  0E00               	movlw	0
  4077   001EFE                     u6130:
  4078   001EFE  6E4B               	movwf	_rtc_hour_ampm_flg^0,c
  4079   001F00  504F               	movf	(_real_rtc_data+2)^0,w,c
  4080   001F02  0B1F               	andlw	31
  4081   001F04  6E4F               	movwf	(_real_rtc_data+2)^0,c
  4082   001F06  EFC1  F00F         	goto	l9765
  4083   001F0A                     l9757:
  4084                           
  4085                           ; BSR set to: 1
  4086                           ;DS1307.c: 39:                 ds1307_date_datas[ 0 ] = real_rtc_data[ 2 ] >> 4; ds1307_
      +                          date_datas[ 1 ] = real_rtc_data[ 2 ] % 16;
  4087   001F0A  384F               	swapf	(_real_rtc_data+2)^0,w,c
  4088   001F0C  0B0F               	andlw	15
  4089   001F0E  6F0C               	movwf	Ds1307Read@ds1307_date_datas& (0+255),b
  4090   001F10  504F               	movf	(_real_rtc_data+2)^0,w,c
  4091   001F12  0B0F               	andlw	15
  4092   001F14  6F0D               	movwf	(Ds1307Read@ds1307_date_datas+1)& (0+255),b
  4093                           
  4094                           ;DS1307.c: 40:                 ds1307_date_datas[ 2 ] = real_rtc_data[ 1 ] >> 4; ds1307_
      +                          date_datas[ 3 ] = real_rtc_data[ 1 ] % 16;
  4095   001F16  384E               	swapf	(_real_rtc_data+1)^0,w,c
  4096   001F18  0B0F               	andlw	15
  4097   001F1A  6F0E               	movwf	(Ds1307Read@ds1307_date_datas+2)& (0+255),b
  4098   001F1C  504E               	movf	(_real_rtc_data+1)^0,w,c
  4099   001F1E  0B0F               	andlw	15
  4100   001F20  6F0F               	movwf	(Ds1307Read@ds1307_date_datas+3)& (0+255),b
  4101                           
  4102                           ;DS1307.c: 41:                 ds1307_date_datas[ 4 ] = real_rtc_data[ 0 ] >> 4; ds1307_
      +                          date_datas[ 5 ] = real_rtc_data[ 0 ] % 16;
  4103   001F22  384D               	swapf	_real_rtc_data^0,w,c
  4104   001F24  0B0F               	andlw	15
  4105   001F26  6F10               	movwf	(Ds1307Read@ds1307_date_datas+4)& (0+255),b
  4106   001F28  504D               	movf	_real_rtc_data^0,w,c
  4107   001F2A  0B0F               	andlw	15
  4108   001F2C  6F11               	movwf	(Ds1307Read@ds1307_date_datas+5)& (0+255),b
  4109                           
  4110                           ;DS1307.c: 42:                 break;
  4111   001F2E  EFDB  F00F         	goto	l9767
  4112   001F32                     l9759:
  4113                           
  4114                           ; BSR set to: 1
  4115                           ;DS1307.c: 44:                 ds1307_date_datas[ 0 ] = real_rtc_data[ 2 ] >> 4; ds1307_
      +                          date_datas[ 1 ] = real_rtc_data[ 2 ] % 16;
  4116   001F32  384F               	swapf	(_real_rtc_data+2)^0,w,c
  4117   001F34  0B0F               	andlw	15
  4118   001F36  6F0C               	movwf	Ds1307Read@ds1307_date_datas& (0+255),b
  4119   001F38  504F               	movf	(_real_rtc_data+2)^0,w,c
  4120   001F3A  0B0F               	andlw	15
  4121   001F3C  6F0D               	movwf	(Ds1307Read@ds1307_date_datas+1)& (0+255),b
  4122                           
  4123                           ;DS1307.c: 45:                 ds1307_date_datas[ 2 ] = real_rtc_data[ 1 ] >> 4; ds1307_
      +                          date_datas[ 3 ] = real_rtc_data[ 1 ] % 16;
  4124   001F3E  384E               	swapf	(_real_rtc_data+1)^0,w,c
  4125   001F40  0B0F               	andlw	15
  4126   001F42  6F0E               	movwf	(Ds1307Read@ds1307_date_datas+2)& (0+255),b
  4127   001F44  504E               	movf	(_real_rtc_data+1)^0,w,c
  4128   001F46  0B0F               	andlw	15
  4129   001F48  6F0F               	movwf	(Ds1307Read@ds1307_date_datas+3)& (0+255),b
  4130                           
  4131                           ;DS1307.c: 46:                 ds1307_date_datas[ 4 ] = real_rtc_data[ 3 ] >> 4; ds1307_
      +                          date_datas[ 5 ] = real_rtc_data[ 3 ] % 16;
  4132   001F4A  3850               	swapf	(_real_rtc_data+3)^0,w,c
  4133   001F4C  0B0F               	andlw	15
  4134   001F4E  6F10               	movwf	(Ds1307Read@ds1307_date_datas+4)& (0+255),b
  4135   001F50  5050               	movf	(_real_rtc_data+3)^0,w,c
  4136   001F52  0B0F               	andlw	15
  4137   001F54  6F11               	movwf	(Ds1307Read@ds1307_date_datas+5)& (0+255),b
  4138                           
  4139                           ;DS1307.c: 47:                 break;
  4140   001F56  EFDB  F00F         	goto	l9767
  4141   001F5A                     l9761:
  4142                           
  4143                           ; BSR set to: 1
  4144                           ;DS1307.c: 49:                 ds1307_date_datas[ 0 ] = real_rtc_data[ 6 ] >> 4; ds1307_
      +                          date_datas[ 1 ] = real_rtc_data[ 6 ] % 16;
  4145   001F5A  3853               	swapf	(_real_rtc_data+6)^0,w,c
  4146   001F5C  0B0F               	andlw	15
  4147   001F5E  6F0C               	movwf	Ds1307Read@ds1307_date_datas& (0+255),b
  4148   001F60  5053               	movf	(_real_rtc_data+6)^0,w,c
  4149   001F62  0B0F               	andlw	15
  4150   001F64  6F0D               	movwf	(Ds1307Read@ds1307_date_datas+1)& (0+255),b
  4151                           
  4152                           ;DS1307.c: 50:                 ds1307_date_datas[ 2 ] = real_rtc_data[ 5 ] >> 4; ds1307_
      +                          date_datas[ 3 ] = real_rtc_data[ 5 ] % 16;
  4153   001F66  3852               	swapf	(_real_rtc_data+5)^0,w,c
  4154   001F68  0B0F               	andlw	15
  4155   001F6A  6F0E               	movwf	(Ds1307Read@ds1307_date_datas+2)& (0+255),b
  4156   001F6C  5052               	movf	(_real_rtc_data+5)^0,w,c
  4157   001F6E  0B0F               	andlw	15
  4158   001F70  6F0F               	movwf	(Ds1307Read@ds1307_date_datas+3)& (0+255),b
  4159                           
  4160                           ;DS1307.c: 51:                 ds1307_date_datas[ 4 ] = real_rtc_data[ 4 ] >> 4; ds1307_
      +                          date_datas[ 5 ] = real_rtc_data[ 4 ] % 16;
  4161   001F72  3851               	swapf	(_real_rtc_data+4)^0,w,c
  4162   001F74  0B0F               	andlw	15
  4163   001F76  6F10               	movwf	(Ds1307Read@ds1307_date_datas+4)& (0+255),b
  4164   001F78  5051               	movf	(_real_rtc_data+4)^0,w,c
  4165   001F7A  0B0F               	andlw	15
  4166   001F7C  6F11               	movwf	(Ds1307Read@ds1307_date_datas+5)& (0+255),b
  4167                           
  4168                           ;DS1307.c: 52:                 break;
  4169   001F7E  EFDB  F00F         	goto	l9767
  4170   001F82                     l9765:
  4171   001F82  0101               	movlb	1	; () banked
  4172   001F84  510A               	movf	Ds1307Read@disp_type& (0+255),w,b
  4173   001F86  6E63               	movwf	??_Ds1307Read^0,c
  4174   001F88  6A64               	clrf	(??_Ds1307Read+1)^0,c
  4175                           
  4176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4177                           ; Switch size 1, requested type "simple"
  4178                           ; Number of cases is 1, Range of values is 0 to 0
  4179                           ; switch strategies available:
  4180                           ; Name         Instructions Cycles
  4181                           ; simple_byte            4     3 (average)
  4182                           ;	Chosen strategy is simple_byte
  4183   001F8A  5064               	movf	(??_Ds1307Read+1)^0,w,c
  4184   001F8C  0A00               	xorlw	0	; case 0
  4185   001F8E  B4D8               	btfsc	status,2,c
  4186   001F90  EFCC  F00F         	goto	l10525
  4187   001F94  EFDB  F00F         	goto	l9767
  4188   001F98                     l10525:
  4189                           
  4190                           ; BSR set to: 1
  4191                           ; Switch size 1, requested type "simple"
  4192                           ; Number of cases is 3, Range of values is 0 to 2
  4193                           ; switch strategies available:
  4194                           ; Name         Instructions Cycles
  4195                           ; simple_byte           10     6 (average)
  4196                           ;	Chosen strategy is simple_byte
  4197   001F98  5063               	movf	??_Ds1307Read^0,w,c
  4198   001F9A  0A00               	xorlw	0	; case 0
  4199   001F9C  B4D8               	btfsc	status,2,c
  4200   001F9E  EF85  F00F         	goto	l9757
  4201   001FA2  0A01               	xorlw	1	; case 1
  4202   001FA4  B4D8               	btfsc	status,2,c
  4203   001FA6  EF99  F00F         	goto	l9759
  4204   001FAA  0A03               	xorlw	3	; case 2
  4205   001FAC  B4D8               	btfsc	status,2,c
  4206   001FAE  EFAD  F00F         	goto	l9761
  4207   001FB2  EFDB  F00F         	goto	l9767
  4208   001FB6                     l9767:
  4209                           
  4210                           ; BSR set to: 1
  4211                           ;DS1307.c: 56:     I2cStop();
  4212   001FB6  EC8D  F014         	call	_I2cStop	;wreg free
  4213   001FBA                     
  4214                           ;DS1307.c: 57:     return ds1307_date_datas;
  4215   001FBA  0E0C               	movlw	low Ds1307Read@ds1307_date_datas
  4216   001FBC  6E61               	movwf	?_Ds1307Read^0,c
  4217   001FBE  0E01               	movlw	high Ds1307Read@ds1307_date_datas
  4218   001FC0  6E62               	movwf	(?_Ds1307Read+1)^0,c
  4219   001FC2  0012               	return		;funcret
  4220   001FC4                     __end_of_Ds1307Read:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _I2cRestart *****************
  4224 ;; Defined at:
  4225 ;;		line 31 in file "I2C.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		None
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4239 ;;      Params:         0       0       0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0
  4242 ;;      Totals:         0       0       0       0       0       0       0
  4243 ;;Total ram usage:        0 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; Hardware stack levels required when called: 4
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_Ds1307Read
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text10
  4254   0028E4                     __ptext10:
  4255                           	callstack 0
  4256   0028E4                     _I2cRestart:
  4257                           	callstack 25
  4258   0028E4                     
  4259                           ;I2C.c: 32:     SSPCON2bits.RSEN = 1;
  4260   0028E4  82C5               	bsf	197,1,c	;volatile
  4261   0028E6                     l119:
  4262   0028E6  B2C5               	btfsc	197,1,c	;volatile
  4263   0028E8  EF78  F014         	goto	u5441
  4264   0028EC  EF7A  F014         	goto	u5440
  4265   0028F0                     u5441:
  4266   0028F0  EF73  F014         	goto	l119
  4267   0028F4                     u5440:
  4268   0028F4  0012               	return		;funcret
  4269   0028F6                     __end_of_I2cRestart:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function _I2cRead *****************
  4273 ;; Defined at:
  4274 ;;		line 50 in file "I2C.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  ack             1    wreg     unsigned char 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  ack             1   11[COMRAM] unsigned char 
  4279 ;;  receive         1   12[COMRAM] unsigned char 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      unsigned char 
  4282 ;; Registers used:
  4283 ;;		wreg, status,2, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4289 ;;      Params:         0       0       0       0       0       0       0
  4290 ;;      Locals:         2       0       0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0
  4292 ;;      Totals:         2       0       0       0       0       0       0
  4293 ;;Total ram usage:        2 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 6
  4296 ;; This function calls:
  4297 ;;		_I2cWait
  4298 ;; This function is called by:
  4299 ;;		_Ds1307Read
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text11
  4304   002786                     __ptext11:
  4305                           	callstack 0
  4306   002786                     _I2cRead:
  4307                           	callstack 23
  4308                           
  4309                           ;incstack = 0
  4310                           ;I2cRead@ack stored from wreg
  4311   002786  6E5F               	movwf	I2cRead@ack^0,c
  4312   002788                     
  4313                           ;I2C.c: 52:     SSPCON2bits.RCEN = 1;
  4314   002788  86C5               	bsf	197,3,c	;volatile
  4315   00278A                     l138:
  4316   00278A  A0C7               	btfss	199,0,c	;volatile
  4317   00278C  EFCA  F013         	goto	u5451
  4318   002790  EFCC  F013         	goto	u5450
  4319   002794                     u5451:
  4320   002794  EFC5  F013         	goto	l138
  4321   002798                     u5450:
  4322   002798                     
  4323                           ;I2C.c: 54:     receive = SSPBUF;
  4324   002798  CFC9 F060          	movff	4041,I2cRead@receive	;volatile
  4325   00279C                     
  4326                           ;I2C.c: 55:     I2cWait();
  4327   00279C  EC4A  F014         	call	_I2cWait	;wreg free
  4328   0027A0                     
  4329                           ;I2C.c: 56:     SSPCON2bits.ACKDT = ack;
  4330   0027A0  B05F               	btfsc	I2cRead@ack^0,0,c
  4331   0027A2  D002               	bra	u5465
  4332   0027A4  9AC5               	bcf	197,5,c	;volatile
  4333   0027A6  D001               	bra	u5466
  4334   0027A8                     u5465:
  4335   0027A8  8AC5               	bsf	197,5,c	;volatile
  4336   0027AA                     u5466:
  4337   0027AA                     
  4338                           ;I2C.c: 57:     SSPCON2bits.ACKEN=1;
  4339   0027AA  88C5               	bsf	197,4,c	;volatile
  4340   0027AC                     l141:
  4341   0027AC  B8C5               	btfsc	197,4,c	;volatile
  4342   0027AE  EFDB  F013         	goto	u5471
  4343   0027B2  EFDD  F013         	goto	u5470
  4344   0027B6                     u5471:
  4345   0027B6  EFD6  F013         	goto	l141
  4346   0027BA                     u5470:
  4347   0027BA                     
  4348                           ;I2C.c: 59:     return receive;
  4349   0027BA  5060               	movf	I2cRead@receive^0,w,c
  4350   0027BC  0012               	return		;funcret
  4351   0027BE                     __end_of_I2cRead:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function _DeviceInit *****************
  4355 ;; Defined at:
  4356 ;;		line 68 in file "Main.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4370 ;;      Params:         0       0       0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; Hardware stack levels required when called: 8
  4377 ;; This function calls:
  4378 ;;		_Ds1307Init
  4379 ;;		_Ds1307Write
  4380 ;;		_EnableAllInterrupts
  4381 ;;		_MCP41010Init
  4382 ;;		_MCP41010Write
  4383 ;;		_OpenButtons
  4384 ;;		_OpenCounter
  4385 ;;		_OpenDisplay
  4386 ;;		_OpenTimer0
  4387 ;;		_OscillatorInit
  4388 ;;		_StartTimer0
  4389 ;;		_WriteTimer0
  4390 ;; This function is called by:
  4391 ;;		_main
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text12
  4396   00254A                     __ptext12:
  4397                           	callstack 0
  4398   00254A                     _DeviceInit:
  4399                           	callstack 22
  4400   00254A                     
  4401                           ;Main.c: 70:     OscillatorInit();
  4402   00254A  ECB1  F014         	call	_OscillatorInit	;wreg free
  4403   00254E                     
  4404                           ;Main.c: 72:     ADCON0 = 0x00; ADCON1 = 0x0F;
  4405   00254E  0E00               	movlw	0
  4406   002550  6EC2               	movwf	194,c	;volatile
  4407   002552  0E0F               	movlw	15
  4408   002554  6EC1               	movwf	193,c	;volatile
  4409                           
  4410                           ;Main.c: 73:     EnableAllInterrupts();
  4411   002556  ECD0  F014         	call	_EnableAllInterrupts	;wreg free
  4412   00255A                     
  4413                           ;Main.c: 75:     OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110010 );
  4414   00255A  0E92               	movlw	146
  4415   00255C  EC10  F014         	call	_OpenTimer0
  4416   002560                     
  4417                           ;Main.c: 76:     WriteTimer0( 65000 ); StartTimer0();
  4418   002560  0EFD               	movlw	253
  4419   002562  6E60               	movwf	(WriteTimer0@timer0+1)^0,c
  4420   002564  0EE8               	movlw	232
  4421   002566  6E5F               	movwf	WriteTimer0@timer0^0,c
  4422   002568  EC7B  F014         	call	_WriteTimer0	;wreg free
  4423   00256C  ECCE  F014         	call	_StartTimer0	;wreg free
  4424   002570                     
  4425                           ;Main.c: 78:     OpenCounter();
  4426   002570  ECDF  F013         	call	_OpenCounter	;wreg free
  4427   002574                     
  4428                           ;Main.c: 79:     OpenDisplay();
  4429   002574  EC51  F013         	call	_OpenDisplay	;wreg free
  4430   002578                     
  4431                           ;Main.c: 80:     OpenButtons();
  4432   002578  EC1B  F013         	call	_OpenButtons	;wreg free
  4433   00257C                     
  4434                           ;Main.c: 81:     Ds1307Init();
  4435   00257C  EC9F  F014         	call	_Ds1307Init	;wreg free
  4436   002580                     
  4437                           ;Main.c: 82:     Ds1307Write( &rtc_default_values );
  4438   002580  0E00               	movlw	low _rtc_default_values
  4439   002582  6E60               	movwf	Ds1307Write@write_datas^0,c
  4440   002584  0E01               	movlw	high _rtc_default_values
  4441   002586  6E61               	movwf	(Ds1307Write@write_datas+1)^0,c
  4442   002588  ECD6  F00D         	call	_Ds1307Write	;wreg free
  4443   00258C                     
  4444                           ;Main.c: 84:     MCP41010Init();
  4445   00258C  ECB8  F014         	call	_MCP41010Init	;wreg free
  4446   002590                     
  4447                           ;Main.c: 85:     MCP41010Write( 0x00010000 | 0x00000001, 200 );
  4448   002590  0E00               	movlw	0
  4449   002592  6E60               	movwf	(MCP41010Write@cmd+1)^0,c
  4450   002594  0E01               	movlw	1
  4451   002596  6E5F               	movwf	MCP41010Write@cmd^0,c
  4452   002598  0E00               	movlw	0
  4453   00259A  6E62               	movwf	(MCP41010Write@data+1)^0,c
  4454   00259C  0EC8               	movlw	200
  4455   00259E  6E61               	movwf	MCP41010Write@data^0,c
  4456   0025A0  EC4F  F010         	call	_MCP41010Write	;wreg free
  4457   0025A4                     
  4458                           ;Main.c: 95:     counter_hour_set_value = 10; counter_min_set_value = 30; counter_sec_se
      +                          t_value = 50; counter_enable_flg = 1;
  4459   0025A4  0E0A               	movlw	10
  4460   0025A6  6E47               	movwf	_counter_hour_set_value^0,c
  4461   0025A8  0E1E               	movlw	30
  4462   0025AA  6E46               	movwf	_counter_min_set_value^0,c
  4463   0025AC  0E32               	movlw	50
  4464   0025AE  6E45               	movwf	_counter_sec_set_value^0,c
  4465   0025B0  0E01               	movlw	1
  4466   0025B2  6E3B               	movwf	_counter_enable_flg^0,c
  4467   0025B4                     
  4468                           ;Main.c: 97:     SYSTEM_STATE_FLG = 100;
  4469   0025B4  0E64               	movlw	100
  4470   0025B6  6E48               	movwf	_SYSTEM_STATE_FLG^0,c
  4471   0025B8                     
  4472                           ;Main.c: 98:     rtc_clock_disp_mode = 0;
  4473   0025B8  0E00               	movlw	0
  4474   0025BA  6E43               	movwf	_rtc_clock_disp_mode^0,c
  4475   0025BC                     
  4476                           ;Main.c: 99:     rtc_clock_set_mode = 0;
  4477   0025BC  0E00               	movlw	0
  4478   0025BE  6E42               	movwf	_rtc_clock_set_mode^0,c
  4479   0025C0                     
  4480                           ;Main.c: 100:     blink_enable_flg = 1;
  4481   0025C0  0E01               	movlw	1
  4482   0025C2  6E37               	movwf	_blink_enable_flg^0,c
  4483   0025C4  0012               	return		;funcret
  4484   0025C6                     __end_of_DeviceInit:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _WriteTimer0 *****************
  4488 ;; Defined at:
  4489 ;;		line 37 in file "Timers.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  timer0          2   11[COMRAM] unsigned int 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  timer           2   13[COMRAM] struct Timers
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		None
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4503 ;;      Params:         2       0       0       0       0       0       0
  4504 ;;      Locals:         2       0       0       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0
  4506 ;;      Totals:         4       0       0       0       0       0       0
  4507 ;;Total ram usage:        4 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 4
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_DeviceInit
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text13
  4518   0028F6                     __ptext13:
  4519                           	callstack 0
  4520   0028F6                     _WriteTimer0:
  4521                           	callstack 25
  4522   0028F6                     
  4523                           ;Timers.c: 37: void WriteTimer0(unsigned int timer0);Timers.c: 38: {;Timers.c: 39:     u
      +                          nion Timers timer;;Timers.c: 41:     timer.lt = timer0;
  4524   0028F6  C05F  F061         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4525   0028FA  C060  F062         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4526                           
  4527                           ;Timers.c: 43:     TMR0H = timer.bt[1];
  4528   0028FE  C062  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4529                           
  4530                           ;Timers.c: 44:     TMR0L = timer.bt[0];
  4531   002902  C061  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4532   002906  0012               	return		;funcret
  4533   002908                     __end_of_WriteTimer0:
  4534                           	callstack 0
  4535                           
  4536 ;; *************** function _StartTimer0 *****************
  4537 ;; Defined at:
  4538 ;;		line 47 in file "Timers.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;		None
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		None
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4552 ;;      Params:         0       0       0       0       0       0       0
  4553 ;;      Locals:         0       0       0       0       0       0       0
  4554 ;;      Temps:          0       0       0       0       0       0       0
  4555 ;;      Totals:         0       0       0       0       0       0       0
  4556 ;;Total ram usage:        0 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; Hardware stack levels required when called: 4
  4559 ;; This function calls:
  4560 ;;		Nothing
  4561 ;; This function is called by:
  4562 ;;		_DeviceInit
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           	psect	text14
  4567   00299C                     __ptext14:
  4568                           	callstack 0
  4569   00299C                     _StartTimer0:
  4570                           	callstack 25
  4571   00299C                     
  4572                           ;Timers.c: 48:     T0CONbits.TMR0ON = 1;
  4573   00299C  8ED5               	bsf	213,7,c	;volatile
  4574   00299E  0012               	return		;funcret
  4575   0029A0                     __end_of_StartTimer0:
  4576                           	callstack 0
  4577                           
  4578 ;; *************** function _OscillatorInit *****************
  4579 ;; Defined at:
  4580 ;;		line 69 in file "Config.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      void 
  4587 ;; Registers used:
  4588 ;;		None
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4594 ;;      Params:         0       0       0       0       0       0       0
  4595 ;;      Locals:         0       0       0       0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0
  4597 ;;      Totals:         0       0       0       0       0       0       0
  4598 ;;Total ram usage:        0 bytes
  4599 ;; Hardware stack levels used: 1
  4600 ;; Hardware stack levels required when called: 4
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_DeviceInit
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text15
  4609   002962                     __ptext15:
  4610                           	callstack 0
  4611   002962                     _OscillatorInit:
  4612                           	callstack 25
  4613   002962                     
  4614                           ;Config.c: 70:     OSCCONbits.SCS0 = 1;
  4615   002962  80D3               	bsf	211,0,c	;volatile
  4616                           
  4617                           ;Config.c: 71:     OSCCONbits.SCS1 = 1;
  4618   002964  82D3               	bsf	211,1,c	;volatile
  4619                           
  4620                           ;Config.c: 72:     OSCCONbits.IRCF0 = 1;
  4621   002966  88D3               	bsf	211,4,c	;volatile
  4622                           
  4623                           ;Config.c: 73:     OSCCONbits.IRCF1 = 1;
  4624   002968  8AD3               	bsf	211,5,c	;volatile
  4625                           
  4626                           ;Config.c: 74:     OSCCONbits.IRCF2 = 1;
  4627   00296A  8CD3               	bsf	211,6,c	;volatile
  4628                           
  4629                           ;Config.c: 75:     OSCTUNEbits.PLLEN = 1;
  4630   00296C  8C9B               	bsf	155,6,c	;volatile
  4631   00296E  0012               	return		;funcret
  4632   002970                     __end_of_OscillatorInit:
  4633                           	callstack 0
  4634                           
  4635 ;; *************** function _OpenTimer0 *****************
  4636 ;; Defined at:
  4637 ;;		line 13 in file "Timers.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  config          1    wreg     unsigned char 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  config          1   11[COMRAM] unsigned char 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4651 ;;      Params:         0       0       0       0       0       0       0
  4652 ;;      Locals:         1       0       0       0       0       0       0
  4653 ;;      Temps:          0       0       0       0       0       0       0
  4654 ;;      Totals:         1       0       0       0       0       0       0
  4655 ;;Total ram usage:        1 bytes
  4656 ;; Hardware stack levels used: 1
  4657 ;; Hardware stack levels required when called: 4
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_DeviceInit
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text16
  4666   002820                     __ptext16:
  4667                           	callstack 0
  4668   002820                     _OpenTimer0:
  4669                           	callstack 25
  4670                           
  4671                           ;incstack = 0
  4672                           ;OpenTimer0@config stored from wreg
  4673   002820  6E5F               	movwf	OpenTimer0@config^0,c
  4674   002822                     
  4675                           ;Timers.c: 13: void OpenTimer0(unsigned char config);Timers.c: 14: {;Timers.c: 15:     T
      +                          0CON = (0x7f & config);
  4676   002822  505F               	movf	OpenTimer0@config^0,w,c
  4677   002824  0B7F               	andlw	127
  4678   002826  6ED5               	movwf	213,c	;volatile
  4679   002828                     
  4680                           ;Timers.c: 16:     TMR0H = 0;
  4681   002828  0E00               	movlw	0
  4682   00282A  6ED7               	movwf	215,c	;volatile
  4683   00282C                     
  4684                           ;Timers.c: 17:     TMR0L = 0;
  4685   00282C  0E00               	movlw	0
  4686   00282E  6ED6               	movwf	214,c	;volatile
  4687   002830                     
  4688                           ;Timers.c: 18:     INTCONbits.TMR0IF = 0;
  4689   002830  94F2               	bcf	242,2,c	;volatile
  4690   002832                     
  4691                           ;Timers.c: 20:     if(config&0x80)
  4692   002832  AE5F               	btfss	OpenTimer0@config^0,7,c
  4693   002834  EF1E  F014         	goto	u3201
  4694   002838  EF20  F014         	goto	u3200
  4695   00283C                     u3201:
  4696   00283C  EF23  F014         	goto	l411
  4697   002840                     u3200:
  4698   002840                     
  4699                           ;Timers.c: 21:         INTCONbits.TMR0IE = 1;
  4700   002840  8AF2               	bsf	242,5,c	;volatile
  4701   002842  EF24  F014         	goto	l413
  4702   002846                     l411:
  4703                           
  4704                           ;Timers.c: 23:         INTCONbits.TMR0IE = 0;
  4705   002846  9AF2               	bcf	242,5,c	;volatile
  4706   002848                     l413:
  4707   002848  0012               	return		;funcret
  4708   00284A                     __end_of_OpenTimer0:
  4709                           	callstack 0
  4710                           
  4711 ;; *************** function _OpenDisplay *****************
  4712 ;; Defined at:
  4713 ;;		line 7 in file "Display.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  i               1   11[COMRAM] unsigned char 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4727 ;;      Params:         0       0       0       0       0       0       0
  4728 ;;      Locals:         1       0       0       0       0       0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0
  4730 ;;      Totals:         1       0       0       0       0       0       0
  4731 ;;Total ram usage:        1 bytes
  4732 ;; Hardware stack levels used: 1
  4733 ;; Hardware stack levels required when called: 5
  4734 ;; This function calls:
  4735 ;;		_TLC5917Init
  4736 ;; This function is called by:
  4737 ;;		_DeviceInit
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text17
  4742   0026A2                     __ptext17:
  4743                           	callstack 0
  4744   0026A2                     _OpenDisplay:
  4745                           	callstack 24
  4746   0026A2                     
  4747                           ;Display.c: 10:     TRISCbits.TRISC2 = 0;
  4748   0026A2  9494               	bcf	148,2,c	;volatile
  4749                           
  4750                           ;Display.c: 11:     TRISCbits.TRISC1 = 0;
  4751   0026A4  9294               	bcf	148,1,c	;volatile
  4752                           
  4753                           ;Display.c: 12:     TRISCbits.TRISC0 = 0;
  4754   0026A6  9094               	bcf	148,0,c	;volatile
  4755                           
  4756                           ;Display.c: 13:     TRISCbits.TRISC5 = 0;
  4757   0026A8  9A94               	bcf	148,5,c	;volatile
  4758                           
  4759                           ;Display.c: 14:     TRISBbits.TRISB1 = 0;
  4760   0026AA  9293               	bcf	147,1,c	;volatile
  4761                           
  4762                           ;Display.c: 15:     TRISBbits.TRISB5 = 0;
  4763   0026AC  9A93               	bcf	147,5,c	;volatile
  4764                           
  4765                           ;Display.c: 16:     TRISDbits.TRISD7 = 0;
  4766   0026AE  9E95               	bcf	149,7,c	;volatile
  4767                           
  4768                           ;Display.c: 17:     TRISBbits.TRISB0 = 0;
  4769   0026B0  9093               	bcf	147,0,c	;volatile
  4770                           
  4771                           ;Display.c: 19:     LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATCbits.LATC5 = 
      +                          LATBbits.LATB1 = LATBbits.LATB5 = LATDbits.LATD7 = LATBbits.LATB0 = 1;
  4772   0026B2  808A               	bsf	138,0,c	;volatile
  4773   0026B4  8E8C               	bsf	140,7,c	;volatile
  4774   0026B6  8A8A               	bsf	138,5,c	;volatile
  4775   0026B8  828A               	bsf	138,1,c	;volatile
  4776   0026BA  8A8B               	bsf	139,5,c	;volatile
  4777   0026BC  808B               	bsf	139,0,c	;volatile
  4778   0026BE  828B               	bsf	139,1,c	;volatile
  4779   0026C0  848B               	bsf	139,2,c	;volatile
  4780   0026C2                     
  4781                           ;Display.c: 22:     TLC5917Init();
  4782   0026C2  EC84  F014         	call	_TLC5917Init	;wreg free
  4783   0026C6                     
  4784                           ;Display.c: 24:     for( unsigned char i = 0; i < 7 + 1; i++ ){
  4785   0026C6  0E00               	movlw	0
  4786   0026C8  6E5F               	movwf	OpenDisplay@i^0,c
  4787   0026CA                     l5849:
  4788                           
  4789                           ;Display.c: 25:         blink_pos[ i ] = 0;
  4790   0026CA  0E80               	movlw	low _blink_pos
  4791   0026CC  245F               	addwf	OpenDisplay@i^0,w,c
  4792   0026CE  6ED9               	movwf	fsr2l,c
  4793   0026D0  6ADA               	clrf	fsr2h,c
  4794   0026D2  0E00               	movlw	high _blink_pos
  4795   0026D4  22DA               	addwfc	fsr2h,f,c
  4796   0026D6  6ADF               	clrf	indf2,c
  4797                           
  4798                           ;Display.c: 26:         display_datas[ i ] = 0xff;
  4799   0026D8  0E01               	movlw	low _display_datas
  4800   0026DA  245F               	addwf	OpenDisplay@i^0,w,c
  4801   0026DC  6ED9               	movwf	fsr2l,c
  4802   0026DE  6ADA               	clrf	fsr2h,c
  4803   0026E0  0E00               	movlw	high _display_datas
  4804   0026E2  22DA               	addwfc	fsr2h,f,c
  4805   0026E4  0EFF               	movlw	255
  4806   0026E6  6EDF               	movwf	indf2,c
  4807   0026E8                     
  4808                           ;Display.c: 27:     }
  4809   0026E8  2A5F               	incf	OpenDisplay@i^0,f,c
  4810   0026EA  0E07               	movlw	7
  4811   0026EC  645F               	cpfsgt	OpenDisplay@i^0,c
  4812   0026EE  EF7B  F013         	goto	u3211
  4813   0026F2  EF7D  F013         	goto	u3210
  4814   0026F6                     u3211:
  4815   0026F6  EF65  F013         	goto	l5849
  4816   0026FA                     u3210:
  4817   0026FA                     
  4818                           ;Display.c: 29:     display_cnt = 0; blink_cnt = 0; blink_enable_flg = 0;
  4819   0026FA  0E00               	movlw	0
  4820   0026FC  6E36               	movwf	_display_cnt^0,c
  4821   0026FE  0E00               	movlw	0
  4822   002700  6E35               	movwf	_blink_cnt^0,c
  4823   002702  0E00               	movlw	0
  4824   002704  6E37               	movwf	_blink_enable_flg^0,c
  4825   002706  0012               	return		;funcret
  4826   002708                     __end_of_OpenDisplay:
  4827                           	callstack 0
  4828                           
  4829 ;; *************** function _TLC5917Init *****************
  4830 ;; Defined at:
  4831 ;;		line 10 in file "TLC5917.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      void 
  4838 ;; Registers used:
  4839 ;;		None
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4845 ;;      Params:         0       0       0       0       0       0       0
  4846 ;;      Locals:         0       0       0       0       0       0       0
  4847 ;;      Temps:          0       0       0       0       0       0       0
  4848 ;;      Totals:         0       0       0       0       0       0       0
  4849 ;;Total ram usage:        0 bytes
  4850 ;; Hardware stack levels used: 1
  4851 ;; Hardware stack levels required when called: 4
  4852 ;; This function calls:
  4853 ;;		Nothing
  4854 ;; This function is called by:
  4855 ;;		_OpenDisplay
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text18
  4860   002908                     __ptext18:
  4861                           	callstack 0
  4862   002908                     _TLC5917Init:
  4863                           	callstack 24
  4864   002908                     
  4865                           ;TLC5917.c: 12:     TRISAbits.TRISA0 = 0;
  4866   002908  9092               	bcf	146,0,c	;volatile
  4867                           
  4868                           ;TLC5917.c: 13:     TRISAbits.TRISA1 = 0;
  4869   00290A  9292               	bcf	146,1,c	;volatile
  4870                           
  4871                           ;TLC5917.c: 14:     TRISAbits.TRISA5 = 0;
  4872   00290C  9A92               	bcf	146,5,c	;volatile
  4873                           
  4874                           ;TLC5917.c: 15:     TRISAbits.TRISA3 = 0;
  4875   00290E  9692               	bcf	146,3,c	;volatile
  4876                           
  4877                           ;TLC5917.c: 17:     PORTAbits.RA3 = 1;
  4878   002910  8680               	bsf	128,3,c	;volatile
  4879                           
  4880                           ;TLC5917.c: 18:     PORTAbits.RA5 = 0;
  4881   002912  9A80               	bcf	128,5,c	;volatile
  4882                           
  4883                           ;TLC5917.c: 19:     PORTAbits.RA1 = 0;
  4884   002914  9280               	bcf	128,1,c	;volatile
  4885                           
  4886                           ;TLC5917.c: 20:     PORTAbits.RA0 = 0;
  4887   002916  9080               	bcf	128,0,c	;volatile
  4888   002918  0012               	return		;funcret
  4889   00291A                     __end_of_TLC5917Init:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function _OpenCounter *****************
  4893 ;; Defined at:
  4894 ;;		line 4 in file "Counter.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4908 ;;      Params:         0       0       0       0       0       0       0
  4909 ;;      Locals:         0       0       0       0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0
  4911 ;;      Totals:         0       0       0       0       0       0       0
  4912 ;;Total ram usage:        0 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 4
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_DeviceInit
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text19
  4923   0027BE                     __ptext19:
  4924                           	callstack 0
  4925   0027BE                     _OpenCounter:
  4926                           	callstack 25
  4927   0027BE                     
  4928                           ;Counter.c: 6:     counter_enable_flg = 0;
  4929   0027BE  0E00               	movlw	0
  4930   0027C0  6E3B               	movwf	_counter_enable_flg^0,c
  4931                           
  4932                           ;Counter.c: 7:     counter_skip_flg = 0;
  4933   0027C2  0E00               	movlw	0
  4934   0027C4  6E39               	movwf	_counter_skip_flg^0,c
  4935                           
  4936                           ;Counter.c: 9:     counter_hour = 0;
  4937   0027C6  0E00               	movlw	0
  4938   0027C8  6E41               	movwf	_counter_hour^0,c
  4939                           
  4940                           ;Counter.c: 10:     counter_minute = 0;
  4941   0027CA  0E00               	movlw	0
  4942   0027CC  6E40               	movwf	_counter_minute^0,c
  4943                           
  4944                           ;Counter.c: 11:     counter_second = 0;
  4945   0027CE  0E00               	movlw	0
  4946   0027D0  6E3F               	movwf	_counter_second^0,c
  4947                           
  4948                           ;Counter.c: 13:     set_counter_hour = 0;
  4949   0027D2  0E00               	movlw	0
  4950   0027D4  6E3E               	movwf	_set_counter_hour^0,c
  4951                           
  4952                           ;Counter.c: 14:     set_counter_minute = 0;
  4953   0027D6  0E00               	movlw	0
  4954   0027D8  6E3D               	movwf	_set_counter_minute^0,c
  4955                           
  4956                           ;Counter.c: 15:     set_counter_second = 0;
  4957   0027DA  0E00               	movlw	0
  4958   0027DC  6E3C               	movwf	_set_counter_second^0,c
  4959                           
  4960                           ;Counter.c: 17:     counter_direction_flg = 1;
  4961   0027DE  0E01               	movlw	1
  4962   0027E0  6E3A               	movwf	_counter_direction_flg^0,c
  4963                           
  4964                           ;Counter.c: 18:     counter_seting_flg = 0;
  4965   0027E2  0E00               	movlw	0
  4966   0027E4  6E38               	movwf	_counter_seting_flg^0,c
  4967   0027E6                     
  4968                           ;Counter.c: 20:     TRISBbits.TRISB2 = 1;
  4969   0027E6  8493               	bsf	147,2,c	;volatile
  4970   0027E8                     
  4971                           ;Counter.c: 21:     INTCON3bits.INT2IP = 0;
  4972   0027E8  9EF0               	bcf	240,7,c	;volatile
  4973   0027EA                     
  4974                           ;Counter.c: 22:     INTCON3bits.INT2IF = 0;
  4975   0027EA  92F0               	bcf	240,1,c	;volatile
  4976   0027EC                     
  4977                           ;Counter.c: 23:     INTCON3bits.INT2IE = 1;
  4978   0027EC  88F0               	bsf	240,4,c	;volatile
  4979   0027EE                     
  4980                           ;Counter.c: 24:     INTCON2bits.INTEDG2 = 1;
  4981   0027EE  88F1               	bsf	241,4,c	;volatile
  4982   0027F0  0012               	return		;funcret
  4983   0027F2                     __end_of_OpenCounter:
  4984                           	callstack 0
  4985                           
  4986 ;; *************** function _OpenButtons *****************
  4987 ;; Defined at:
  4988 ;;		line 9 in file "Buttons.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;		None
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5002 ;;      Params:         0       0       0       0       0       0       0
  5003 ;;      Locals:         0       0       0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0
  5005 ;;      Totals:         0       0       0       0       0       0       0
  5006 ;;Total ram usage:        0 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 4
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_DeviceInit
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text20
  5017   002636                     __ptext20:
  5018                           	callstack 0
  5019   002636                     _OpenButtons:
  5020                           	callstack 25
  5021   002636                     
  5022                           ;Buttons.c: 11:     TRISAbits.TRISA7 = 1;
  5023   002636  8E92               	bsf	146,7,c	;volatile
  5024                           
  5025                           ;Buttons.c: 12:     TRISAbits.TRISA4 = 1;
  5026   002638  8892               	bsf	146,4,c	;volatile
  5027                           
  5028                           ;Buttons.c: 13:     TRISAbits.TRISA6 = 1;
  5029   00263A  8C92               	bsf	146,6,c	;volatile
  5030                           
  5031                           ;Buttons.c: 14:     TRISDbits.TRISD6 = 1;
  5032   00263C  8C95               	bsf	149,6,c	;volatile
  5033                           
  5034                           ;Buttons.c: 15:     TRISBbits.TRISB4 = 1;
  5035   00263E  8893               	bsf	147,4,c	;volatile
  5036   002640                     
  5037                           ;Buttons.c: 17:     BTN_CLICK_STATE = 0; BTN_CLICK_EVENT = 0;
  5038   002640  0E00               	movlw	0
  5039   002642  6E34               	movwf	_BTN_CLICK_STATE^0,c
  5040   002644  0E00               	movlw	0
  5041   002646  6E33               	movwf	_BTN_CLICK_EVENT^0,c
  5042                           
  5043                           ;Buttons.c: 19:     hour_btn_pressed_cnt = 0; up_btn_pressed_cnt = 0; down_btn_pressed_c
      +                          nt = 0; sel_btn_pressed_cnt = 0; reset_btn_pressed_cnt = 0;
  5044   002648  0E00               	movlw	0
  5045   00264A  6E1E               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  5046   00264C  0E00               	movlw	0
  5047   00264E  6E1D               	movwf	_hour_btn_pressed_cnt^0,c
  5048   002650  0E00               	movlw	0
  5049   002652  6E1C               	movwf	(_up_btn_pressed_cnt+1)^0,c
  5050   002654  0E00               	movlw	0
  5051   002656  6E1B               	movwf	_up_btn_pressed_cnt^0,c
  5052   002658  0E00               	movlw	0
  5053   00265A  6E1A               	movwf	(_down_btn_pressed_cnt+1)^0,c
  5054   00265C  0E00               	movlw	0
  5055   00265E  6E19               	movwf	_down_btn_pressed_cnt^0,c
  5056   002660  0E00               	movlw	0
  5057   002662  6E18               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  5058   002664  0E00               	movlw	0
  5059   002666  6E17               	movwf	_sel_btn_pressed_cnt^0,c
  5060   002668  0E00               	movlw	0
  5061   00266A  6E16               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  5062   00266C  0E00               	movlw	0
  5063   00266E  6E15               	movwf	_reset_btn_pressed_cnt^0,c
  5064                           
  5065                           ;Buttons.c: 20:     hour_btn_released_cnt = 0; up_btn_released_cnt = 0; down_btn_release
      +                          d_cnt = 0; sel_btn_released_cnt = 0; reset_btn_released_cnt = 0;
  5066   002670  0E00               	movlw	0
  5067   002672  6E14               	movwf	(_hour_btn_released_cnt+1)^0,c
  5068   002674  0E00               	movlw	0
  5069   002676  6E13               	movwf	_hour_btn_released_cnt^0,c
  5070   002678  0E00               	movlw	0
  5071   00267A  6E12               	movwf	(_up_btn_released_cnt+1)^0,c
  5072   00267C  0E00               	movlw	0
  5073   00267E  6E11               	movwf	_up_btn_released_cnt^0,c
  5074   002680  0E00               	movlw	0
  5075   002682  6E10               	movwf	(_down_btn_released_cnt+1)^0,c
  5076   002684  0E00               	movlw	0
  5077   002686  6E0F               	movwf	_down_btn_released_cnt^0,c
  5078   002688  0E00               	movlw	0
  5079   00268A  6E0E               	movwf	(_sel_btn_released_cnt+1)^0,c
  5080   00268C  0E00               	movlw	0
  5081   00268E  6E0D               	movwf	_sel_btn_released_cnt^0,c
  5082   002690  0E00               	movlw	0
  5083   002692  6E0C               	movwf	(_reset_btn_released_cnt+1)^0,c
  5084   002694  0E00               	movlw	0
  5085   002696  6E0B               	movwf	_reset_btn_released_cnt^0,c
  5086                           
  5087                           ;Buttons.c: 22:     btn_press_verify_flg = 0; btn_long_press_verify_flg = 0;
  5088   002698  0E00               	movlw	0
  5089   00269A  6E32               	movwf	_btn_press_verify_flg^0,c
  5090   00269C  0E00               	movlw	0
  5091   00269E  6E31               	movwf	_btn_long_press_verify_flg^0,c
  5092   0026A0  0012               	return		;funcret
  5093   0026A2                     __end_of_OpenButtons:
  5094                           	callstack 0
  5095                           
  5096 ;; *************** function _MCP41010Write *****************
  5097 ;; Defined at:
  5098 ;;		line 22 in file "MCP41010.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  cmd             2   11[COMRAM] unsigned int 
  5101 ;;  data            2   13[COMRAM] unsigned int 
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;  i               1   17[COMRAM] unsigned char 
  5104 ;;  i               1   16[COMRAM] unsigned char 
  5105 ;;  temp            2   18[COMRAM] unsigned int 
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  1    wreg      void 
  5108 ;; Registers used:
  5109 ;;		wreg, status,2, status,0
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5115 ;;      Params:         4       0       0       0       0       0       0
  5116 ;;      Locals:         4       0       0       0       0       0       0
  5117 ;;      Temps:          1       0       0       0       0       0       0
  5118 ;;      Totals:         9       0       0       0       0       0       0
  5119 ;;Total ram usage:        9 bytes
  5120 ;; Hardware stack levels used: 1
  5121 ;; Hardware stack levels required when called: 4
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_DeviceInit
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text21
  5130   00209E                     __ptext21:
  5131                           	callstack 0
  5132   00209E                     _MCP41010Write:
  5133                           	callstack 25
  5134   00209E                     
  5135                           ;MCP41010.c: 24:     PORTAbits.RA0 = 0; PORTAbits.RA2 = 0; __nop(); __nop();
  5136   00209E  9080               	bcf	128,0,c	;volatile
  5137   0020A0  9480               	bcf	128,2,c	;volatile
  5138   0020A2  F000               	nop	
  5139   0020A4  F000               	nop	
  5140                           
  5141                           ;MCP41010.c: 25:     unsigned int temp = cmd;
  5142   0020A6  C05F  F066         	movff	MCP41010Write@cmd,MCP41010Write@temp
  5143   0020AA  C060  F067         	movff	MCP41010Write@cmd+1,MCP41010Write@temp+1
  5144   0020AE                     
  5145                           ;MCP41010.c: 26:     for( unsigned char i = 0; i < 8; i++ ){
  5146   0020AE  0E00               	movlw	0
  5147   0020B0  6E64               	movwf	MCP41010Write@i^0,c
  5148   0020B2                     l5871:
  5149                           
  5150                           ;MCP41010.c: 27:         PORTAbits.RA0 = (temp & 0x80) ? 1 : 0; _delay((unsigned long)((
      +                          1)*(32000000UL/4000000.0)));
  5151   0020B2  BE66               	btfsc	MCP41010Write@temp^0,7,c
  5152   0020B4  EF5E  F010         	goto	u3221
  5153   0020B8  EF62  F010         	goto	u3220
  5154   0020BC                     u3221:
  5155   0020BC  6A63               	clrf	??_MCP41010Write^0,c
  5156   0020BE  2A63               	incf	??_MCP41010Write^0,f,c
  5157   0020C0  EF63  F010         	goto	u3238
  5158   0020C4                     u3220:
  5159   0020C4  6A63               	clrf	??_MCP41010Write^0,c
  5160   0020C6                     u3238:
  5161   0020C6  5080               	movf	128,w,c	;volatile
  5162   0020C8  1863               	xorwf	??_MCP41010Write^0,w,c
  5163   0020CA  0BFE               	andlw	-2
  5164   0020CC  1863               	xorwf	??_MCP41010Write^0,w,c
  5165   0020CE  6E80               	movwf	128,c	;volatile
  5166   0020D0  D000               	nop2		;2 cycle nop
  5167   0020D2  D000               	nop2		;2 cycle nop
  5168   0020D4  D000               	nop2		;2 cycle nop
  5169   0020D6  D000               	nop2		;2 cycle nop
  5170   0020D8                     
  5171                           ;MCP41010.c: 28:         PORTAbits.RA1 = 1; __nop(); __nop(); __nop(); PORTAbits.RA1 = 0
      +                          ; __nop(); __nop(); __nop();
  5172   0020D8  8280               	bsf	128,1,c	;volatile
  5173   0020DA  F000               	nop	
  5174   0020DC  F000               	nop	
  5175   0020DE  F000               	nop	
  5176   0020E0  9280               	bcf	128,1,c	;volatile
  5177   0020E2  F000               	nop	
  5178   0020E4  F000               	nop	
  5179   0020E6  F000               	nop	
  5180                           
  5181                           ;MCP41010.c: 29:         temp = temp << 1;
  5182   0020E8  90D8               	bcf	status,0,c
  5183   0020EA  3466               	rlcf	MCP41010Write@temp^0,w,c
  5184   0020EC  6E66               	movwf	MCP41010Write@temp^0,c
  5185   0020EE  3467               	rlcf	(MCP41010Write@temp+1)^0,w,c
  5186   0020F0  6E67               	movwf	(MCP41010Write@temp+1)^0,c
  5187   0020F2                     
  5188                           ;MCP41010.c: 30:     }
  5189   0020F2  2A64               	incf	MCP41010Write@i^0,f,c
  5190   0020F4  0E07               	movlw	7
  5191   0020F6  6464               	cpfsgt	MCP41010Write@i^0,c
  5192   0020F8  EF80  F010         	goto	u3241
  5193   0020FC  EF82  F010         	goto	u3240
  5194   002100                     u3241:
  5195   002100  EF59  F010         	goto	l5871
  5196   002104                     u3240:
  5197   002104                     
  5198                           ;MCP41010.c: 31:     temp = data;
  5199   002104  C061  F066         	movff	MCP41010Write@data,MCP41010Write@temp
  5200   002108  C062  F067         	movff	MCP41010Write@data+1,MCP41010Write@temp+1
  5201   00210C                     
  5202                           ;MCP41010.c: 32:     for( unsigned char i = 0; i < 8; i++ ){
  5203   00210C  0E00               	movlw	0
  5204   00210E  6E65               	movwf	MCP41010Write@i_3246^0,c
  5205   002110                     l5901:
  5206                           
  5207                           ;MCP41010.c: 33:         PORTAbits.RA0 = (temp & 0x80) ? 1 : 0; _delay((unsigned long)((
      +                          1)*(32000000UL/4000000.0)));
  5208   002110  BE66               	btfsc	MCP41010Write@temp^0,7,c
  5209   002112  EF8D  F010         	goto	u3251
  5210   002116  EF91  F010         	goto	u3250
  5211   00211A                     u3251:
  5212   00211A  6A63               	clrf	??_MCP41010Write^0,c
  5213   00211C  2A63               	incf	??_MCP41010Write^0,f,c
  5214   00211E  EF92  F010         	goto	u3268
  5215   002122                     u3250:
  5216   002122  6A63               	clrf	??_MCP41010Write^0,c
  5217   002124                     u3268:
  5218   002124  5080               	movf	128,w,c	;volatile
  5219   002126  1863               	xorwf	??_MCP41010Write^0,w,c
  5220   002128  0BFE               	andlw	-2
  5221   00212A  1863               	xorwf	??_MCP41010Write^0,w,c
  5222   00212C  6E80               	movwf	128,c	;volatile
  5223   00212E  D000               	nop2		;2 cycle nop
  5224   002130  D000               	nop2		;2 cycle nop
  5225   002132  D000               	nop2		;2 cycle nop
  5226   002134  D000               	nop2		;2 cycle nop
  5227   002136                     
  5228                           ;MCP41010.c: 34:         PORTAbits.RA1 = 1; __nop(); __nop(); __nop(); PORTAbits.RA1 = 0
      +                          ; __nop(); __nop(); __nop();
  5229   002136  8280               	bsf	128,1,c	;volatile
  5230   002138  F000               	nop	
  5231   00213A  F000               	nop	
  5232   00213C  F000               	nop	
  5233   00213E  9280               	bcf	128,1,c	;volatile
  5234   002140  F000               	nop	
  5235   002142  F000               	nop	
  5236   002144  F000               	nop	
  5237                           
  5238                           ;MCP41010.c: 35:         temp = temp << 1;
  5239   002146  90D8               	bcf	status,0,c
  5240   002148  3466               	rlcf	MCP41010Write@temp^0,w,c
  5241   00214A  6E66               	movwf	MCP41010Write@temp^0,c
  5242   00214C  3467               	rlcf	(MCP41010Write@temp+1)^0,w,c
  5243   00214E  6E67               	movwf	(MCP41010Write@temp+1)^0,c
  5244   002150                     
  5245                           ;MCP41010.c: 36:     }
  5246   002150  2A65               	incf	MCP41010Write@i_3246^0,f,c
  5247   002152  0E07               	movlw	7
  5248   002154  6465               	cpfsgt	MCP41010Write@i_3246^0,c
  5249   002156  EFAF  F010         	goto	u3271
  5250   00215A  EFB1  F010         	goto	u3270
  5251   00215E                     u3271:
  5252   00215E  EF88  F010         	goto	l5901
  5253   002162                     u3270:
  5254   002162                     
  5255                           ;MCP41010.c: 37:     __nop(); __nop(); PORTAbits.RA2 = 1;
  5256   002162  F000               	nop	
  5257   002164  F000               	nop	
  5258   002166  8480               	bsf	128,2,c	;volatile
  5259   002168  0012               	return		;funcret
  5260   00216A                     __end_of_MCP41010Write:
  5261                           	callstack 0
  5262                           
  5263 ;; *************** function _MCP41010Init *****************
  5264 ;; Defined at:
  5265 ;;		line 10 in file "MCP41010.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;		None
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		None
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5279 ;;      Params:         0       0       0       0       0       0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0
  5282 ;;      Totals:         0       0       0       0       0       0       0
  5283 ;;Total ram usage:        0 bytes
  5284 ;; Hardware stack levels used: 1
  5285 ;; Hardware stack levels required when called: 4
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_DeviceInit
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text22
  5294   002970                     __ptext22:
  5295                           	callstack 0
  5296   002970                     _MCP41010Init:
  5297                           	callstack 25
  5298   002970                     
  5299                           ;MCP41010.c: 12:     TRISAbits.TRISA0 = 0;
  5300   002970  9092               	bcf	146,0,c	;volatile
  5301                           
  5302                           ;MCP41010.c: 13:     TRISAbits.TRISA1 = 0;
  5303   002972  9292               	bcf	146,1,c	;volatile
  5304                           
  5305                           ;MCP41010.c: 14:     TRISAbits.TRISA2 = 0;
  5306   002974  9492               	bcf	146,2,c	;volatile
  5307                           
  5308                           ;MCP41010.c: 16:     PORTAbits.RA2 = 1;
  5309   002976  8480               	bsf	128,2,c	;volatile
  5310                           
  5311                           ;MCP41010.c: 17:     PORTAbits.RA1 = 0;
  5312   002978  9280               	bcf	128,1,c	;volatile
  5313                           
  5314                           ;MCP41010.c: 18:     PORTAbits.RA0 = 0;
  5315   00297A  9080               	bcf	128,0,c	;volatile
  5316   00297C  0012               	return		;funcret
  5317   00297E                     __end_of_MCP41010Init:
  5318                           	callstack 0
  5319                           
  5320 ;; *************** function _EnableAllInterrupts *****************
  5321 ;; Defined at:
  5322 ;;		line 48 in file "Interrupts.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;		None
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;		None
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		None
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5336 ;;      Params:         0       0       0       0       0       0       0
  5337 ;;      Locals:         0       0       0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0
  5339 ;;      Totals:         0       0       0       0       0       0       0
  5340 ;;Total ram usage:        0 bytes
  5341 ;; Hardware stack levels used: 1
  5342 ;; Hardware stack levels required when called: 4
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_DeviceInit
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text23
  5351   0029A0                     __ptext23:
  5352                           	callstack 0
  5353   0029A0                     _EnableAllInterrupts:
  5354                           	callstack 25
  5355   0029A0                     
  5356                           ;Interrupts.c: 49:     (INTCONbits.GIE = 1);
  5357   0029A0  8EF2               	bsf	242,7,c	;volatile
  5358   0029A2  0012               	return		;funcret
  5359   0029A4                     __end_of_EnableAllInterrupts:
  5360                           	callstack 0
  5361                           
  5362 ;; *************** function _Ds1307Write *****************
  5363 ;; Defined at:
  5364 ;;		line 60 in file "DS1307.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  write_datas     2   12[COMRAM] PTR unsigned char 
  5367 ;;		 -> rtc_default_values(10), real_rtc_data(7), 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  hour_temp       1   14[COMRAM] unsigned char 
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5379 ;;      Params:         2       0       0       0       0       0       0
  5380 ;;      Locals:         1       0       0       0       0       0       0
  5381 ;;      Temps:          0       0       0       0       0       0       0
  5382 ;;      Totals:         3       0       0       0       0       0       0
  5383 ;;Total ram usage:        3 bytes
  5384 ;; Hardware stack levels used: 1
  5385 ;; Hardware stack levels required when called: 7
  5386 ;; This function calls:
  5387 ;;		_I2cStart
  5388 ;;		_I2cStop
  5389 ;;		_I2cWrite
  5390 ;; This function is called by:
  5391 ;;		_DeviceInit
  5392 ;;		_ActionButtons
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text24
  5397   001BAC                     __ptext24:
  5398                           	callstack 0
  5399   001BAC                     _Ds1307Write:
  5400                           	callstack 21
  5401   001BAC                     
  5402                           ;DS1307.c: 62:     unsigned char hour_temp = write_datas[ 2 ];
  5403   001BAC  EE20 F002          	lfsr	2,2
  5404   001BB0  5060               	movf	Ds1307Write@write_datas^0,w,c
  5405   001BB2  26D9               	addwf	fsr2l,f,c
  5406   001BB4  5061               	movf	(Ds1307Write@write_datas+1)^0,w,c
  5407   001BB6  22DA               	addwfc	fsr2h,f,c
  5408   001BB8  50DF               	movf	indf2,w,c
  5409   001BBA  6E62               	movwf	Ds1307Write@hour_temp^0,c
  5410   001BBC                     
  5411                           ;DS1307.c: 63:     if( rtc_clock_disp_type == 1 ) {
  5412   001BBC  044C               	decf	_rtc_clock_disp_type^0,w,c
  5413   001BBE  A4D8               	btfss	status,2,c
  5414   001BC0  EFE4  F00D         	goto	u5391
  5415   001BC4  EFE6  F00D         	goto	u5390
  5416   001BC8                     u5391:
  5417   001BC8  EF01  F00E         	goto	l8831
  5418   001BCC                     u5390:
  5419   001BCC                     
  5420                           ;DS1307.c: 64:         if( hour_temp > 0x12 ) hour_temp = hour_temp - 0x12;
  5421   001BCC  0E12               	movlw	18
  5422   001BCE  6462               	cpfsgt	Ds1307Write@hour_temp^0,c
  5423   001BD0  EFEC  F00D         	goto	u5401
  5424   001BD4  EFEE  F00D         	goto	u5400
  5425   001BD8                     u5401:
  5426   001BD8  EFF1  F00D         	goto	l49
  5427   001BDC                     u5400:
  5428   001BDC  5062               	movf	Ds1307Write@hour_temp^0,w,c
  5429   001BDE  0FEE               	addlw	238
  5430   001BE0  6E62               	movwf	Ds1307Write@hour_temp^0,c
  5431   001BE2                     l49:
  5432                           
  5433                           ;DS1307.c: 65:         hour_temp = hour_temp | 0x40;
  5434   001BE2  5062               	movf	Ds1307Write@hour_temp^0,w,c
  5435   001BE4  0940               	iorlw	64
  5436   001BE6  6E62               	movwf	Ds1307Write@hour_temp^0,c
  5437                           
  5438                           ;DS1307.c: 66:         if( rtc_hour_ampm_flg == 1 ) hour_temp = hour_temp | 0x20;
  5439   001BE8  044B               	decf	_rtc_hour_ampm_flg^0,w,c
  5440   001BEA  A4D8               	btfss	status,2,c
  5441   001BEC  EFFA  F00D         	goto	u5411
  5442   001BF0  EFFC  F00D         	goto	u5410
  5443   001BF4                     u5411:
  5444   001BF4  EF14  F00E         	goto	l8837
  5445   001BF8                     u5410:
  5446   001BF8  5062               	movf	Ds1307Write@hour_temp^0,w,c
  5447   001BFA  0920               	iorlw	32
  5448   001BFC  6E62               	movwf	Ds1307Write@hour_temp^0,c
  5449   001BFE  EF14  F00E         	goto	l8837
  5450   001C02                     l8831:
  5451                           
  5452                           ;DS1307.c: 69:         if( rtc_hour_ampm_flg == 1 && hour_temp < 0x12 ) hour_temp = hour
      +                          _temp + 0x12;
  5453   001C02  044B               	decf	_rtc_hour_ampm_flg^0,w,c
  5454   001C04  A4D8               	btfss	status,2,c
  5455   001C06  EF07  F00E         	goto	u5421
  5456   001C0A  EF09  F00E         	goto	u5420
  5457   001C0E                     u5421:
  5458   001C0E  EF14  F00E         	goto	l8837
  5459   001C12                     u5420:
  5460   001C12  0E12               	movlw	18
  5461   001C14  6062               	cpfslt	Ds1307Write@hour_temp^0,c
  5462   001C16  EF0F  F00E         	goto	u5431
  5463   001C1A  EF11  F00E         	goto	u5430
  5464   001C1E                     u5431:
  5465   001C1E  EF14  F00E         	goto	l8837
  5466   001C22                     u5430:
  5467   001C22  5062               	movf	Ds1307Write@hour_temp^0,w,c
  5468   001C24  0F12               	addlw	18
  5469   001C26  6E62               	movwf	Ds1307Write@hour_temp^0,c
  5470   001C28                     l8837:
  5471                           
  5472                           ;DS1307.c: 72:     write_datas[ 2 ] = hour_temp;
  5473   001C28  EE20 F002          	lfsr	2,2
  5474   001C2C  5060               	movf	Ds1307Write@write_datas^0,w,c
  5475   001C2E  26D9               	addwf	fsr2l,f,c
  5476   001C30  5061               	movf	(Ds1307Write@write_datas+1)^0,w,c
  5477   001C32  22DA               	addwfc	fsr2h,f,c
  5478   001C34  C062  FFDF         	movff	Ds1307Write@hour_temp,indf2
  5479   001C38                     
  5480                           ;DS1307.c: 74:     I2cStart();
  5481   001C38  EC96  F014         	call	_I2cStart	;wreg free
  5482   001C3C                     
  5483                           ;DS1307.c: 75:     I2cWrite( (0xD0) );
  5484   001C3C  0ED0               	movlw	208
  5485   001C3E  EC5B  F014         	call	_I2cWrite
  5486   001C42                     
  5487                           ;DS1307.c: 76:     I2cWrite( 0x00 );
  5488   001C42  0E00               	movlw	0
  5489   001C44  EC5B  F014         	call	_I2cWrite
  5490   001C48                     
  5491                           ;DS1307.c: 78:     I2cWrite( write_datas[ 0 ] ); _delay((unsigned long)((1)*(32000000UL/
      +                          4000000.0)));
  5492   001C48  C060  FFD9         	movff	Ds1307Write@write_datas,fsr2l
  5493   001C4C  C061  FFDA         	movff	Ds1307Write@write_datas+1,fsr2h
  5494   001C50  50DF               	movf	indf2,w,c
  5495   001C52  EC5B  F014         	call	_I2cWrite
  5496   001C56  D000               	nop2		;2 cycle nop
  5497   001C58  D000               	nop2		;2 cycle nop
  5498   001C5A  D000               	nop2		;2 cycle nop
  5499   001C5C  D000               	nop2		;2 cycle nop
  5500   001C5E                     
  5501                           ;DS1307.c: 79:     I2cWrite( write_datas[ 1 ] ); _delay((unsigned long)((1)*(32000000UL/
      +                          4000000.0)));
  5502   001C5E  EE20 F001          	lfsr	2,1
  5503   001C62  5060               	movf	Ds1307Write@write_datas^0,w,c
  5504   001C64  26D9               	addwf	fsr2l,f,c
  5505   001C66  5061               	movf	(Ds1307Write@write_datas+1)^0,w,c
  5506   001C68  22DA               	addwfc	fsr2h,f,c
  5507   001C6A  50DF               	movf	indf2,w,c
  5508   001C6C  EC5B  F014         	call	_I2cWrite
  5509   001C70  D000               	nop2		;2 cycle nop
  5510   001C72  D000               	nop2		;2 cycle nop
  5511   001C74  D000               	nop2		;2 cycle nop
  5512   001C76  D000               	nop2		;2 cycle nop
  5513   001C78                     
  5514                           ;DS1307.c: 80:     I2cWrite( write_datas[ 2 ] ); _delay((unsigned long)((1)*(32000000UL/
      +                          4000000.0)));
  5515   001C78  EE20 F002          	lfsr	2,2
  5516   001C7C  5060               	movf	Ds1307Write@write_datas^0,w,c
  5517   001C7E  26D9               	addwf	fsr2l,f,c
  5518   001C80  5061               	movf	(Ds1307Write@write_datas+1)^0,w,c
  5519   001C82  22DA               	addwfc	fsr2h,f,c
  5520   001C84  50DF               	movf	indf2,w,c
  5521   001C86  EC5B  F014         	call	_I2cWrite
  5522   001C8A  D000               	nop2		;2 cycle nop
  5523   001C8C  D000               	nop2		;2 cycle nop
  5524   001C8E  D000               	nop2		;2 cycle nop
  5525   001C90  D000               	nop2		;2 cycle nop
  5526   001C92                     
  5527                           ;DS1307.c: 81:     I2cWrite( write_datas[ 3 ] ); _delay((unsigned long)((1)*(32000000UL/
      +                          4000000.0)));
  5528   001C92  EE20 F003          	lfsr	2,3
  5529   001C96  5060               	movf	Ds1307Write@write_datas^0,w,c
  5530   001C98  26D9               	addwf	fsr2l,f,c
  5531   001C9A  5061               	movf	(Ds1307Write@write_datas+1)^0,w,c
  5532   001C9C  22DA               	addwfc	fsr2h,f,c
  5533   001C9E  50DF               	movf	indf2,w,c
  5534   001CA0  EC5B  F014         	call	_I2cWrite
  5535   001CA4  D000               	nop2		;2 cycle nop
  5536   001CA6  D000               	nop2		;2 cycle nop
  5537   001CA8  D000               	nop2		;2 cycle nop
  5538   001CAA  D000               	nop2		;2 cycle nop
  5539   001CAC                     
  5540                           ;DS1307.c: 82:     I2cWrite( write_datas[ 4 ] ); _delay((unsigned long)((1)*(32000000UL/
      +                          4000000.0)));
  5541   001CAC  EE20 F004          	lfsr	2,4
  5542   001CB0  5060               	movf	Ds1307Write@write_datas^0,w,c
  5543   001CB2  26D9               	addwf	fsr2l,f,c
  5544   001CB4  5061               	movf	(Ds1307Write@write_datas+1)^0,w,c
  5545   001CB6  22DA               	addwfc	fsr2h,f,c
  5546   001CB8  50DF               	movf	indf2,w,c
  5547   001CBA  EC5B  F014         	call	_I2cWrite
  5548   001CBE  D000               	nop2		;2 cycle nop
  5549   001CC0  D000               	nop2		;2 cycle nop
  5550   001CC2  D000               	nop2		;2 cycle nop
  5551   001CC4  D000               	nop2		;2 cycle nop
  5552   001CC6                     
  5553                           ;DS1307.c: 83:     I2cWrite( write_datas[ 5 ] ); _delay((unsigned long)((1)*(32000000UL/
      +                          4000000.0)));
  5554   001CC6  EE20 F005          	lfsr	2,5
  5555   001CCA  5060               	movf	Ds1307Write@write_datas^0,w,c
  5556   001CCC  26D9               	addwf	fsr2l,f,c
  5557   001CCE  5061               	movf	(Ds1307Write@write_datas+1)^0,w,c
  5558   001CD0  22DA               	addwfc	fsr2h,f,c
  5559   001CD2  50DF               	movf	indf2,w,c
  5560   001CD4  EC5B  F014         	call	_I2cWrite
  5561   001CD8  D000               	nop2		;2 cycle nop
  5562   001CDA  D000               	nop2		;2 cycle nop
  5563   001CDC  D000               	nop2		;2 cycle nop
  5564   001CDE  D000               	nop2		;2 cycle nop
  5565   001CE0                     
  5566                           ;DS1307.c: 84:     I2cWrite( write_datas[ 6 ] ); _delay((unsigned long)((1)*(32000000UL/
      +                          4000000.0)));
  5567   001CE0  EE20 F006          	lfsr	2,6
  5568   001CE4  5060               	movf	Ds1307Write@write_datas^0,w,c
  5569   001CE6  26D9               	addwf	fsr2l,f,c
  5570   001CE8  5061               	movf	(Ds1307Write@write_datas+1)^0,w,c
  5571   001CEA  22DA               	addwfc	fsr2h,f,c
  5572   001CEC  50DF               	movf	indf2,w,c
  5573   001CEE  EC5B  F014         	call	_I2cWrite
  5574   001CF2  D000               	nop2		;2 cycle nop
  5575   001CF4  D000               	nop2		;2 cycle nop
  5576   001CF6  D000               	nop2		;2 cycle nop
  5577   001CF8  D000               	nop2		;2 cycle nop
  5578   001CFA                     
  5579                           ;DS1307.c: 85:     I2cWrite( 0x91 ); _delay((unsigned long)((1)*(32000000UL/4000000.0)))
      +                          ;
  5580   001CFA  0E91               	movlw	145
  5581   001CFC  EC5B  F014         	call	_I2cWrite
  5582   001D00  D000               	nop2		;2 cycle nop
  5583   001D02  D000               	nop2		;2 cycle nop
  5584   001D04  D000               	nop2		;2 cycle nop
  5585   001D06  D000               	nop2		;2 cycle nop
  5586                           
  5587                           ;DS1307.c: 87:     I2cStop();
  5588   001D08  EC8D  F014         	call	_I2cStop	;wreg free
  5589   001D0C  0012               	return		;funcret
  5590   001D0E                     __end_of_Ds1307Write:
  5591                           	callstack 0
  5592                           
  5593 ;; *************** function _I2cWrite *****************
  5594 ;; Defined at:
  5595 ;;		line 44 in file "I2C.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  data            1    wreg     unsigned char 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  data            1   11[COMRAM] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5609 ;;      Params:         0       0       0       0       0       0       0
  5610 ;;      Locals:         1       0       0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0
  5612 ;;      Totals:         1       0       0       0       0       0       0
  5613 ;;Total ram usage:        1 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 6
  5616 ;; This function calls:
  5617 ;;		_I2cWait
  5618 ;; This function is called by:
  5619 ;;		_Ds1307Read
  5620 ;;		_Ds1307Write
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text25
  5625   0028B6                     __ptext25:
  5626                           	callstack 0
  5627   0028B6                     _I2cWrite:
  5628                           	callstack 21
  5629                           
  5630                           ;incstack = 0
  5631                           ;I2cWrite@data stored from wreg
  5632   0028B6  6E5F               	movwf	I2cWrite@data^0,c
  5633   0028B8                     
  5634                           ;I2C.c: 45:     SSPBUF = data;
  5635   0028B8  C05F  FFC9         	movff	I2cWrite@data,4041	;volatile
  5636   0028BC                     l132:
  5637   0028BC  B0C7               	btfsc	199,0,c	;volatile
  5638   0028BE  EF63  F014         	goto	u5381
  5639   0028C2  EF65  F014         	goto	u5380
  5640   0028C6                     u5381:
  5641   0028C6  EF5E  F014         	goto	l132
  5642   0028CA                     u5380:
  5643   0028CA                     
  5644                           ;I2C.c: 47:     I2cWait();
  5645   0028CA  EC4A  F014         	call	_I2cWait	;wreg free
  5646   0028CE  0012               	return		;funcret
  5647   0028D0                     __end_of_I2cWrite:
  5648                           	callstack 0
  5649                           
  5650 ;; *************** function _I2cWait *****************
  5651 ;; Defined at:
  5652 ;;		line 36 in file "I2C.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      void 
  5659 ;; Registers used:
  5660 ;;		cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5666 ;;      Params:         0       0       0       0       0       0       0
  5667 ;;      Locals:         0       0       0       0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0       0       0
  5669 ;;      Totals:         0       0       0       0       0       0       0
  5670 ;;Total ram usage:        0 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; Hardware stack levels required when called: 5
  5673 ;; This function calls:
  5674 ;;		_I2cStop
  5675 ;; This function is called by:
  5676 ;;		_I2cWrite
  5677 ;;		_I2cRead
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text26
  5682   002894                     __ptext26:
  5683                           	callstack 0
  5684   002894                     _I2cWait:
  5685                           	callstack 21
  5686   002894                     l125:
  5687                           
  5688                           ;I2C.c: 37:  while(SSPSTATbits.R_NOT_W == 1)
  5689   002894  B4C7               	btfsc	199,2,c	;volatile
  5690   002896  EF4F  F014         	goto	u5351
  5691   00289A  EF51  F014         	goto	u5350
  5692   00289E                     u5351:
  5693   00289E  EF4A  F014         	goto	l125
  5694   0028A2                     u5350:
  5695   0028A2                     
  5696                           ;I2C.c: 39:  if(SSPCON2bits.ACKSTAT == 1) {
  5697   0028A2  ACC5               	btfss	197,6,c	;volatile
  5698   0028A4  EF56  F014         	goto	u5361
  5699   0028A8  EF58  F014         	goto	u5360
  5700   0028AC                     u5361:
  5701   0028AC  EF5A  F014         	goto	l129
  5702   0028B0                     u5360:
  5703   0028B0                     
  5704                           ;I2C.c: 40:   I2cStop();
  5705   0028B0  EC8D  F014         	call	_I2cStop	;wreg free
  5706   0028B4                     l129:
  5707   0028B4  0012               	return		;funcret
  5708   0028B6                     __end_of_I2cWait:
  5709                           	callstack 0
  5710                           
  5711 ;; *************** function _I2cStop *****************
  5712 ;; Defined at:
  5713 ;;		line 26 in file "I2C.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		None
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5727 ;;      Params:         0       0       0       0       0       0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0
  5730 ;;      Totals:         0       0       0       0       0       0       0
  5731 ;;Total ram usage:        0 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; Hardware stack levels required when called: 4
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_Ds1307Read
  5738 ;;		_Ds1307Write
  5739 ;;		_I2cWait
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text27
  5744   00291A                     __ptext27:
  5745                           	callstack 0
  5746   00291A                     _I2cStop:
  5747                           	callstack 21
  5748   00291A                     
  5749                           ;I2C.c: 27:     SSPCON2bits.PEN = 1;
  5750   00291A  84C5               	bsf	197,2,c	;volatile
  5751   00291C                     l113:
  5752   00291C  B4C5               	btfsc	197,2,c	;volatile
  5753   00291E  EF93  F014         	goto	u5341
  5754   002922  EF95  F014         	goto	u5340
  5755   002926                     u5341:
  5756   002926  EF8E  F014         	goto	l113
  5757   00292A                     u5340:
  5758   00292A  0012               	return		;funcret
  5759   00292C                     __end_of_I2cStop:
  5760                           	callstack 0
  5761                           
  5762 ;; *************** function _I2cStart *****************
  5763 ;; Defined at:
  5764 ;;		line 21 in file "I2C.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;		None
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		None
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5778 ;;      Params:         0       0       0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0
  5781 ;;      Totals:         0       0       0       0       0       0       0
  5782 ;;Total ram usage:        0 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; Hardware stack levels required when called: 4
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_Ds1307Read
  5789 ;;		_Ds1307Write
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text28
  5794   00292C                     __ptext28:
  5795                           	callstack 0
  5796   00292C                     _I2cStart:
  5797                           	callstack 23
  5798   00292C                     
  5799                           ;I2C.c: 22:     SSPCON2bits.SEN = 1;
  5800   00292C  80C5               	bsf	197,0,c	;volatile
  5801   00292E                     l107:
  5802   00292E  B0C5               	btfsc	197,0,c	;volatile
  5803   002930  EF9C  F014         	goto	u5371
  5804   002934  EF9E  F014         	goto	u5370
  5805   002938                     u5371:
  5806   002938  EF97  F014         	goto	l107
  5807   00293C                     u5370:
  5808   00293C  0012               	return		;funcret
  5809   00293E                     __end_of_I2cStart:
  5810                           	callstack 0
  5811                           
  5812 ;; *************** function _Ds1307Init *****************
  5813 ;; Defined at:
  5814 ;;		line 11 in file "DS1307.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5828 ;;      Params:         0       0       0       0       0       0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0
  5831 ;;      Totals:         0       0       0       0       0       0       0
  5832 ;;Total ram usage:        0 bytes
  5833 ;; Hardware stack levels used: 1
  5834 ;; Hardware stack levels required when called: 5
  5835 ;; This function calls:
  5836 ;;		_I2cInit
  5837 ;; This function is called by:
  5838 ;;		_DeviceInit
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text29
  5843   00293E                     __ptext29:
  5844                           	callstack 0
  5845   00293E                     _Ds1307Init:
  5846                           	callstack 24
  5847   00293E                     
  5848                           ;DS1307.c: 13:     TRISCbits.TRISC3 = 1;
  5849   00293E  8694               	bsf	148,3,c	;volatile
  5850                           
  5851                           ;DS1307.c: 14:     TRISCbits.TRISC4 = 1;
  5852   002940  8894               	bsf	148,4,c	;volatile
  5853   002942                     
  5854                           ;DS1307.c: 15:     rtc_clock_disp_type = 1;
  5855   002942  0E01               	movlw	1
  5856   002944  6E4C               	movwf	_rtc_clock_disp_type^0,c
  5857                           
  5858                           ;DS1307.c: 16:     rtc_hour_ampm_flg = 1;
  5859   002946  0E01               	movlw	1
  5860   002948  6E4B               	movwf	_rtc_hour_ampm_flg^0,c
  5861   00294A                     
  5862                           ;DS1307.c: 17:     I2cInit();
  5863   00294A  EC68  F014         	call	_I2cInit	;wreg free
  5864   00294E  0012               	return		;funcret
  5865   002950                     __end_of_Ds1307Init:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _I2cInit *****************
  5869 ;; Defined at:
  5870 ;;		line 10 in file "I2C.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5884 ;;      Params:         0       0       0       0       0       0       0
  5885 ;;      Locals:         0       0       0       0       0       0       0
  5886 ;;      Temps:          0       0       0       0       0       0       0
  5887 ;;      Totals:         0       0       0       0       0       0       0
  5888 ;;Total ram usage:        0 bytes
  5889 ;; Hardware stack levels used: 1
  5890 ;; Hardware stack levels required when called: 4
  5891 ;; This function calls:
  5892 ;;		Nothing
  5893 ;; This function is called by:
  5894 ;;		_Ds1307Init
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text30
  5899   0028D0                     __ptext30:
  5900                           	callstack 0
  5901   0028D0                     _I2cInit:
  5902                           	callstack 24
  5903   0028D0                     
  5904                           ;I2C.c: 12:     SSPSTATbits.SMP = 1;
  5905   0028D0  8EC7               	bsf	199,7,c	;volatile
  5906                           
  5907                           ;I2C.c: 13:     SSPSTATbits.CKE = 0;
  5908   0028D2  9CC7               	bcf	199,6,c	;volatile
  5909                           
  5910                           ;I2C.c: 15:     SSPCON1bits.SSPEN = 1;
  5911   0028D4  8AC6               	bsf	198,5,c	;volatile
  5912   0028D6                     
  5913                           ;I2C.c: 16:     SSPCON1bits.SSPM = 0b1000;
  5914   0028D6  50C6               	movf	198,w,c	;volatile
  5915   0028D8  0BF0               	andlw	-16
  5916   0028DA  0908               	iorlw	8
  5917   0028DC  6EC6               	movwf	198,c	;volatile
  5918                           
  5919                           ;I2C.c: 18:     SSPADD = 99;
  5920   0028DE  0E63               	movlw	99
  5921   0028E0  6EC8               	movwf	200,c	;volatile
  5922   0028E2  0012               	return		;funcret
  5923   0028E4                     __end_of_I2cInit:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _CounterSetting *****************
  5927 ;; Defined at:
  5928 ;;		line 103 in file "Main.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;		None
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5942 ;;      Params:         0       0       0       0       0       0       0
  5943 ;;      Locals:         0       0       0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0       0       0
  5945 ;;      Totals:         0       0       0       0       0       0       0
  5946 ;;Total ram usage:        0 bytes
  5947 ;; Hardware stack levels used: 1
  5948 ;; Hardware stack levels required when called: 5
  5949 ;; This function calls:
  5950 ;;		_MarkDisplay
  5951 ;;		___awdiv
  5952 ;;		___awmod
  5953 ;; This function is called by:
  5954 ;;		_main
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text31
  5959   002390                     __ptext31:
  5960                           	callstack 0
  5961   002390                     _CounterSetting:
  5962                           	callstack 25
  5963   002390                     
  5964                           ;Main.c: 104:     display_datas[0] = MarkDisplay( set_counter_hour / 10 );
  5965   002390  C03E  F05F         	movff	_set_counter_hour,___awdiv@dividend
  5966   002394  6A60               	clrf	(___awdiv@dividend+1)^0,c
  5967   002396  0E00               	movlw	0
  5968   002398  6E62               	movwf	(___awdiv@divisor+1)^0,c
  5969   00239A  0E0A               	movlw	10
  5970   00239C  6E61               	movwf	___awdiv@divisor^0,c
  5971   00239E  ECB5  F010         	call	___awdiv	;wreg free
  5972   0023A2  505F               	movf	?___awdiv^0,w,c
  5973   0023A4  EC88  F00A         	call	_MarkDisplay
  5974   0023A8  6E01               	movwf	_display_datas^0,c
  5975                           
  5976                           ;Main.c: 105:     display_datas[1] = MarkDisplay( set_counter_hour % 10 );
  5977   0023AA  C03E  F05F         	movff	_set_counter_hour,___awmod@dividend
  5978   0023AE  6A60               	clrf	(___awmod@dividend+1)^0,c
  5979   0023B0  0E00               	movlw	0
  5980   0023B2  6E62               	movwf	(___awmod@divisor+1)^0,c
  5981   0023B4  0E0A               	movlw	10
  5982   0023B6  6E61               	movwf	___awmod@divisor^0,c
  5983   0023B8  EC70  F011         	call	___awmod	;wreg free
  5984   0023BC  505F               	movf	?___awmod^0,w,c
  5985   0023BE  EC88  F00A         	call	_MarkDisplay
  5986   0023C2  6E02               	movwf	(_display_datas+1)^0,c
  5987                           
  5988                           ;Main.c: 106:     display_datas[2] = MarkDisplay( set_counter_minute / 10 );
  5989   0023C4  C03D  F05F         	movff	_set_counter_minute,___awdiv@dividend
  5990   0023C8  6A60               	clrf	(___awdiv@dividend+1)^0,c
  5991   0023CA  0E00               	movlw	0
  5992   0023CC  6E62               	movwf	(___awdiv@divisor+1)^0,c
  5993   0023CE  0E0A               	movlw	10
  5994   0023D0  6E61               	movwf	___awdiv@divisor^0,c
  5995   0023D2  ECB5  F010         	call	___awdiv	;wreg free
  5996   0023D6  505F               	movf	?___awdiv^0,w,c
  5997   0023D8  EC88  F00A         	call	_MarkDisplay
  5998   0023DC  6E03               	movwf	(_display_datas+2)^0,c
  5999                           
  6000                           ;Main.c: 107:     display_datas[3] = MarkDisplay( set_counter_minute % 10 );
  6001   0023DE  C03D  F05F         	movff	_set_counter_minute,___awmod@dividend
  6002   0023E2  6A60               	clrf	(___awmod@dividend+1)^0,c
  6003   0023E4  0E00               	movlw	0
  6004   0023E6  6E62               	movwf	(___awmod@divisor+1)^0,c
  6005   0023E8  0E0A               	movlw	10
  6006   0023EA  6E61               	movwf	___awmod@divisor^0,c
  6007   0023EC  EC70  F011         	call	___awmod	;wreg free
  6008   0023F0  505F               	movf	?___awmod^0,w,c
  6009   0023F2  EC88  F00A         	call	_MarkDisplay
  6010   0023F6  6E04               	movwf	(_display_datas+3)^0,c
  6011                           
  6012                           ;Main.c: 108:     display_datas[4] = MarkDisplay( set_counter_second / 10 );
  6013   0023F8  C03C  F05F         	movff	_set_counter_second,___awdiv@dividend
  6014   0023FC  6A60               	clrf	(___awdiv@dividend+1)^0,c
  6015   0023FE  0E00               	movlw	0
  6016   002400  6E62               	movwf	(___awdiv@divisor+1)^0,c
  6017   002402  0E0A               	movlw	10
  6018   002404  6E61               	movwf	___awdiv@divisor^0,c
  6019   002406  ECB5  F010         	call	___awdiv	;wreg free
  6020   00240A  505F               	movf	?___awdiv^0,w,c
  6021   00240C  EC88  F00A         	call	_MarkDisplay
  6022   002410  6E05               	movwf	(_display_datas+4)^0,c
  6023                           
  6024                           ;Main.c: 109:     display_datas[5] = MarkDisplay( set_counter_second % 10 );
  6025   002412  C03C  F05F         	movff	_set_counter_second,___awmod@dividend
  6026   002416  6A60               	clrf	(___awmod@dividend+1)^0,c
  6027   002418  0E00               	movlw	0
  6028   00241A  6E62               	movwf	(___awmod@divisor+1)^0,c
  6029   00241C  0E0A               	movlw	10
  6030   00241E  6E61               	movwf	___awmod@divisor^0,c
  6031   002420  EC70  F011         	call	___awmod	;wreg free
  6032   002424  505F               	movf	?___awmod^0,w,c
  6033   002426  EC88  F00A         	call	_MarkDisplay
  6034   00242A  6E06               	movwf	(_display_datas+5)^0,c
  6035   00242C  0012               	return		;funcret
  6036   00242E                     __end_of_CounterSetting:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function ___awmod *****************
  6040 ;; Defined at:
  6041 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  dividend        2   11[COMRAM] int 
  6044 ;;  divisor         2   13[COMRAM] int 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  sign            1   16[COMRAM] unsigned char 
  6047 ;;  counter         1   15[COMRAM] unsigned char 
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  2   11[COMRAM] int 
  6050 ;; Registers used:
  6051 ;;		wreg, status,2, status,0
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6057 ;;      Params:         4       0       0       0       0       0       0
  6058 ;;      Locals:         2       0       0       0       0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0
  6060 ;;      Totals:         6       0       0       0       0       0       0
  6061 ;;Total ram usage:        6 bytes
  6062 ;; Hardware stack levels used: 1
  6063 ;; Hardware stack levels required when called: 4
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		_CounterSetting
  6068 ;;		_ReadCounter
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text32
  6073   0022E0                     __ptext32:
  6074                           	callstack 0
  6075   0022E0                     ___awmod:
  6076                           	callstack 25
  6077   0022E0  0E00               	movlw	0
  6078   0022E2  6E64               	movwf	___awmod@sign^0,c
  6079   0022E4  BE60               	btfsc	(___awmod@dividend+1)^0,7,c
  6080   0022E6  EF79  F011         	goto	u6020
  6081   0022EA  EF77  F011         	goto	u6021
  6082   0022EE                     u6021:
  6083   0022EE  EF7F  F011         	goto	l9697
  6084   0022F2                     u6020:
  6085   0022F2  6C5F               	negf	___awmod@dividend^0,c
  6086   0022F4  1E60               	comf	(___awmod@dividend+1)^0,f,c
  6087   0022F6  B0D8               	btfsc	status,0,c
  6088   0022F8  2A60               	incf	(___awmod@dividend+1)^0,f,c
  6089   0022FA  0E01               	movlw	1
  6090   0022FC  6E64               	movwf	___awmod@sign^0,c
  6091   0022FE                     l9697:
  6092   0022FE  BE62               	btfsc	(___awmod@divisor+1)^0,7,c
  6093   002300  EF86  F011         	goto	u6030
  6094   002304  EF84  F011         	goto	u6031
  6095   002308                     u6031:
  6096   002308  EF8A  F011         	goto	l9701
  6097   00230C                     u6030:
  6098   00230C  6C61               	negf	___awmod@divisor^0,c
  6099   00230E  1E62               	comf	(___awmod@divisor+1)^0,f,c
  6100   002310  B0D8               	btfsc	status,0,c
  6101   002312  2A62               	incf	(___awmod@divisor+1)^0,f,c
  6102   002314                     l9701:
  6103   002314  5061               	movf	___awmod@divisor^0,w,c
  6104   002316  1062               	iorwf	(___awmod@divisor+1)^0,w,c
  6105   002318  B4D8               	btfsc	status,2,c
  6106   00231A  EF91  F011         	goto	u6041
  6107   00231E  EF93  F011         	goto	u6040
  6108   002322                     u6041:
  6109   002322  EFB7  F011         	goto	l9717
  6110   002326                     u6040:
  6111   002326  0E01               	movlw	1
  6112   002328  6E63               	movwf	___awmod@counter^0,c
  6113   00232A  EF9B  F011         	goto	l9707
  6114   00232E                     l9705:
  6115   00232E  90D8               	bcf	status,0,c
  6116   002330  3661               	rlcf	___awmod@divisor^0,f,c
  6117   002332  3662               	rlcf	(___awmod@divisor+1)^0,f,c
  6118   002334  2A63               	incf	___awmod@counter^0,f,c
  6119   002336                     l9707:
  6120   002336  AE62               	btfss	(___awmod@divisor+1)^0,7,c
  6121   002338  EFA0  F011         	goto	u6051
  6122   00233C  EFA2  F011         	goto	u6050
  6123   002340                     u6051:
  6124   002340  EF97  F011         	goto	l9705
  6125   002344                     u6050:
  6126   002344                     l9709:
  6127   002344  5061               	movf	___awmod@divisor^0,w,c
  6128   002346  5C5F               	subwf	___awmod@dividend^0,w,c
  6129   002348  5062               	movf	(___awmod@divisor+1)^0,w,c
  6130   00234A  5860               	subwfb	(___awmod@dividend+1)^0,w,c
  6131   00234C  A0D8               	btfss	status,0,c
  6132   00234E  EFAB  F011         	goto	u6061
  6133   002352  EFAD  F011         	goto	u6060
  6134   002356                     u6061:
  6135   002356  EFB1  F011         	goto	l9713
  6136   00235A                     u6060:
  6137   00235A  5061               	movf	___awmod@divisor^0,w,c
  6138   00235C  5E5F               	subwf	___awmod@dividend^0,f,c
  6139   00235E  5062               	movf	(___awmod@divisor+1)^0,w,c
  6140   002360  5A60               	subwfb	(___awmod@dividend+1)^0,f,c
  6141   002362                     l9713:
  6142   002362  90D8               	bcf	status,0,c
  6143   002364  3262               	rrcf	(___awmod@divisor+1)^0,f,c
  6144   002366  3261               	rrcf	___awmod@divisor^0,f,c
  6145   002368  2E63               	decfsz	___awmod@counter^0,f,c
  6146   00236A  EFA2  F011         	goto	l9709
  6147   00236E                     l9717:
  6148   00236E  5064               	movf	___awmod@sign^0,w,c
  6149   002370  B4D8               	btfsc	status,2,c
  6150   002372  EFBD  F011         	goto	u6071
  6151   002376  EFBF  F011         	goto	u6070
  6152   00237A                     u6071:
  6153   00237A  EFC3  F011         	goto	l9721
  6154   00237E                     u6070:
  6155   00237E  6C5F               	negf	___awmod@dividend^0,c
  6156   002380  1E60               	comf	(___awmod@dividend+1)^0,f,c
  6157   002382  B0D8               	btfsc	status,0,c
  6158   002384  2A60               	incf	(___awmod@dividend+1)^0,f,c
  6159   002386                     l9721:
  6160   002386  C05F  F05F         	movff	___awmod@dividend,?___awmod
  6161   00238A  C060  F060         	movff	___awmod@dividend+1,?___awmod+1
  6162   00238E  0012               	return		;funcret
  6163   002390                     __end_of___awmod:
  6164                           	callstack 0
  6165                           
  6166 ;; *************** function ___awdiv *****************
  6167 ;; Defined at:
  6168 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  dividend        2   11[COMRAM] int 
  6171 ;;  divisor         2   13[COMRAM] int 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  quotient        2   17[COMRAM] int 
  6174 ;;  sign            1   16[COMRAM] unsigned char 
  6175 ;;  counter         1   15[COMRAM] unsigned char 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  2   11[COMRAM] int 
  6178 ;; Registers used:
  6179 ;;		wreg, status,2, status,0
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6185 ;;      Params:         4       0       0       0       0       0       0
  6186 ;;      Locals:         4       0       0       0       0       0       0
  6187 ;;      Temps:          0       0       0       0       0       0       0
  6188 ;;      Totals:         8       0       0       0       0       0       0
  6189 ;;Total ram usage:        8 bytes
  6190 ;; Hardware stack levels used: 1
  6191 ;; Hardware stack levels required when called: 4
  6192 ;; This function calls:
  6193 ;;		Nothing
  6194 ;; This function is called by:
  6195 ;;		_CounterSetting
  6196 ;;		_ReadCounter
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text33
  6201   00216A                     __ptext33:
  6202                           	callstack 0
  6203   00216A                     ___awdiv:
  6204                           	callstack 25
  6205   00216A  0E00               	movlw	0
  6206   00216C  6E64               	movwf	___awdiv@sign^0,c
  6207   00216E  BE62               	btfsc	(___awdiv@divisor+1)^0,7,c
  6208   002170  EFBE  F010         	goto	u5960
  6209   002174  EFBC  F010         	goto	u5961
  6210   002178                     u5961:
  6211   002178  EFC4  F010         	goto	l9653
  6212   00217C                     u5960:
  6213   00217C  6C61               	negf	___awdiv@divisor^0,c
  6214   00217E  1E62               	comf	(___awdiv@divisor+1)^0,f,c
  6215   002180  B0D8               	btfsc	status,0,c
  6216   002182  2A62               	incf	(___awdiv@divisor+1)^0,f,c
  6217   002184  0E01               	movlw	1
  6218   002186  6E64               	movwf	___awdiv@sign^0,c
  6219   002188                     l9653:
  6220   002188  BE60               	btfsc	(___awdiv@dividend+1)^0,7,c
  6221   00218A  EFCB  F010         	goto	u5970
  6222   00218E  EFC9  F010         	goto	u5971
  6223   002192                     u5971:
  6224   002192  EFD1  F010         	goto	l9659
  6225   002196                     u5970:
  6226   002196  6C5F               	negf	___awdiv@dividend^0,c
  6227   002198  1E60               	comf	(___awdiv@dividend+1)^0,f,c
  6228   00219A  B0D8               	btfsc	status,0,c
  6229   00219C  2A60               	incf	(___awdiv@dividend+1)^0,f,c
  6230   00219E  0E01               	movlw	1
  6231   0021A0  1A64               	xorwf	___awdiv@sign^0,f,c
  6232   0021A2                     l9659:
  6233   0021A2  0E00               	movlw	0
  6234   0021A4  6E66               	movwf	(___awdiv@quotient+1)^0,c
  6235   0021A6  0E00               	movlw	0
  6236   0021A8  6E65               	movwf	___awdiv@quotient^0,c
  6237   0021AA  5061               	movf	___awdiv@divisor^0,w,c
  6238   0021AC  1062               	iorwf	(___awdiv@divisor+1)^0,w,c
  6239   0021AE  B4D8               	btfsc	status,2,c
  6240   0021B0  EFDC  F010         	goto	u5981
  6241   0021B4  EFDE  F010         	goto	u5980
  6242   0021B8                     u5981:
  6243   0021B8  EF06  F011         	goto	l9681
  6244   0021BC                     u5980:
  6245   0021BC  0E01               	movlw	1
  6246   0021BE  6E63               	movwf	___awdiv@counter^0,c
  6247   0021C0  EFE6  F010         	goto	l9667
  6248   0021C4                     l9665:
  6249   0021C4  90D8               	bcf	status,0,c
  6250   0021C6  3661               	rlcf	___awdiv@divisor^0,f,c
  6251   0021C8  3662               	rlcf	(___awdiv@divisor+1)^0,f,c
  6252   0021CA  2A63               	incf	___awdiv@counter^0,f,c
  6253   0021CC                     l9667:
  6254   0021CC  AE62               	btfss	(___awdiv@divisor+1)^0,7,c
  6255   0021CE  EFEB  F010         	goto	u5991
  6256   0021D2  EFED  F010         	goto	u5990
  6257   0021D6                     u5991:
  6258   0021D6  EFE2  F010         	goto	l9665
  6259   0021DA                     u5990:
  6260   0021DA                     l9669:
  6261   0021DA  90D8               	bcf	status,0,c
  6262   0021DC  3665               	rlcf	___awdiv@quotient^0,f,c
  6263   0021DE  3666               	rlcf	(___awdiv@quotient+1)^0,f,c
  6264   0021E0  5061               	movf	___awdiv@divisor^0,w,c
  6265   0021E2  5C5F               	subwf	___awdiv@dividend^0,w,c
  6266   0021E4  5062               	movf	(___awdiv@divisor+1)^0,w,c
  6267   0021E6  5860               	subwfb	(___awdiv@dividend+1)^0,w,c
  6268   0021E8  A0D8               	btfss	status,0,c
  6269   0021EA  EFF9  F010         	goto	u6001
  6270   0021EE  EFFB  F010         	goto	u6000
  6271   0021F2                     u6001:
  6272   0021F2  EF00  F011         	goto	l9677
  6273   0021F6                     u6000:
  6274   0021F6  5061               	movf	___awdiv@divisor^0,w,c
  6275   0021F8  5E5F               	subwf	___awdiv@dividend^0,f,c
  6276   0021FA  5062               	movf	(___awdiv@divisor+1)^0,w,c
  6277   0021FC  5A60               	subwfb	(___awdiv@dividend+1)^0,f,c
  6278   0021FE  8065               	bsf	___awdiv@quotient^0,0,c
  6279   002200                     l9677:
  6280   002200  90D8               	bcf	status,0,c
  6281   002202  3262               	rrcf	(___awdiv@divisor+1)^0,f,c
  6282   002204  3261               	rrcf	___awdiv@divisor^0,f,c
  6283   002206  2E63               	decfsz	___awdiv@counter^0,f,c
  6284   002208  EFED  F010         	goto	l9669
  6285   00220C                     l9681:
  6286   00220C  5064               	movf	___awdiv@sign^0,w,c
  6287   00220E  B4D8               	btfsc	status,2,c
  6288   002210  EF0C  F011         	goto	u6011
  6289   002214  EF0E  F011         	goto	u6010
  6290   002218                     u6011:
  6291   002218  EF12  F011         	goto	l9685
  6292   00221C                     u6010:
  6293   00221C  6C65               	negf	___awdiv@quotient^0,c
  6294   00221E  1E66               	comf	(___awdiv@quotient+1)^0,f,c
  6295   002220  B0D8               	btfsc	status,0,c
  6296   002222  2A66               	incf	(___awdiv@quotient+1)^0,f,c
  6297   002224                     l9685:
  6298   002224  C065  F05F         	movff	___awdiv@quotient,?___awdiv
  6299   002228  C066  F060         	movff	___awdiv@quotient+1,?___awdiv+1
  6300   00222C  0012               	return		;funcret
  6301   00222E                     __end_of___awdiv:
  6302                           	callstack 0
  6303                           
  6304 ;; *************** function _ClockSetting *****************
  6305 ;; Defined at:
  6306 ;;		line 112 in file "Main.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  set_mod         1    wreg     unsigned char 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  set_mod         1   16[COMRAM] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, status,0, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6320 ;;      Params:         0       0       0       0       0       0       0
  6321 ;;      Locals:         1       0       0       0       0       0       0
  6322 ;;      Temps:          2       0       0       0       0       0       0
  6323 ;;      Totals:         3       0       0       0       0       0       0
  6324 ;;Total ram usage:        3 bytes
  6325 ;; Hardware stack levels used: 1
  6326 ;; Hardware stack levels required when called: 5
  6327 ;; This function calls:
  6328 ;;		_MarkDisplay
  6329 ;; This function is called by:
  6330 ;;		_main
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text34
  6335   001FC4                     __ptext34:
  6336                           	callstack 0
  6337   001FC4                     _ClockSetting:
  6338                           	callstack 25
  6339                           
  6340                           ;incstack = 0
  6341                           ;ClockSetting@set_mod stored from wreg
  6342   001FC4  6E64               	movwf	ClockSetting@set_mod^0,c
  6343   001FC6                     
  6344                           ;Main.c: 113:     switch( set_mod ) {
  6345   001FC6  EF35  F010         	goto	l9957
  6346   001FCA                     l9941:
  6347                           
  6348                           ;Main.c: 115:             display_datas[0] = MarkDisplay( real_rtc_data[ 6 ] >> 4 );
  6349   001FCA  3853               	swapf	(_real_rtc_data+6)^0,w,c
  6350   001FCC  0B0F               	andlw	15
  6351   001FCE  EC88  F00A         	call	_MarkDisplay
  6352   001FD2  6E01               	movwf	_display_datas^0,c
  6353                           
  6354                           ;Main.c: 116:             display_datas[1] = MarkDisplay( real_rtc_data[ 6 ] % 16 );
  6355   001FD4  5053               	movf	(_real_rtc_data+6)^0,w,c
  6356   001FD6  0B0F               	andlw	15
  6357   001FD8  EC88  F00A         	call	_MarkDisplay
  6358   001FDC  6E02               	movwf	(_display_datas+1)^0,c
  6359                           
  6360                           ;Main.c: 117:             display_datas[2] = MarkDisplay( real_rtc_data[ 5 ] >> 4 );
  6361   001FDE  3852               	swapf	(_real_rtc_data+5)^0,w,c
  6362   001FE0  0B0F               	andlw	15
  6363   001FE2  EC88  F00A         	call	_MarkDisplay
  6364   001FE6  6E03               	movwf	(_display_datas+2)^0,c
  6365                           
  6366                           ;Main.c: 118:             display_datas[3] = MarkDisplay( real_rtc_data[ 5 ] % 16 );
  6367   001FE8  5052               	movf	(_real_rtc_data+5)^0,w,c
  6368   001FEA  0B0F               	andlw	15
  6369   001FEC  EC88  F00A         	call	_MarkDisplay
  6370   001FF0  6E04               	movwf	(_display_datas+3)^0,c
  6371                           
  6372                           ;Main.c: 119:             display_datas[4] = MarkDisplay( real_rtc_data[ 4 ] >> 4 );
  6373   001FF2  3851               	swapf	(_real_rtc_data+4)^0,w,c
  6374   001FF4  0B0F               	andlw	15
  6375   001FF6  EC88  F00A         	call	_MarkDisplay
  6376   001FFA  6E05               	movwf	(_display_datas+4)^0,c
  6377                           
  6378                           ;Main.c: 120:             display_datas[5] = MarkDisplay( real_rtc_data[ 4 ] % 16 );
  6379   001FFC  5051               	movf	(_real_rtc_data+4)^0,w,c
  6380   001FFE  0B0F               	andlw	15
  6381   002000  EC88  F00A         	call	_MarkDisplay
  6382   002004  6E06               	movwf	(_display_datas+5)^0,c
  6383                           
  6384                           ;Main.c: 121:             break;
  6385   002006  EF4E  F010         	goto	l326
  6386   00200A                     l9943:
  6387                           
  6388                           ;Main.c: 123:             display_datas[0] = MarkDisplay( real_rtc_data[ 2 ] >> 4 );
  6389   00200A  384F               	swapf	(_real_rtc_data+2)^0,w,c
  6390   00200C  0B0F               	andlw	15
  6391   00200E  EC88  F00A         	call	_MarkDisplay
  6392   002012  6E01               	movwf	_display_datas^0,c
  6393                           
  6394                           ;Main.c: 124:             display_datas[1] = MarkDisplay( real_rtc_data[ 2 ] % 16 );
  6395   002014  504F               	movf	(_real_rtc_data+2)^0,w,c
  6396   002016  0B0F               	andlw	15
  6397   002018  EC88  F00A         	call	_MarkDisplay
  6398   00201C  6E02               	movwf	(_display_datas+1)^0,c
  6399                           
  6400                           ;Main.c: 125:             display_datas[2] = MarkDisplay( real_rtc_data[ 1 ] >> 4 );
  6401   00201E  384E               	swapf	(_real_rtc_data+1)^0,w,c
  6402   002020  0B0F               	andlw	15
  6403   002022  EC88  F00A         	call	_MarkDisplay
  6404   002026  6E03               	movwf	(_display_datas+2)^0,c
  6405                           
  6406                           ;Main.c: 126:             display_datas[3] = MarkDisplay( real_rtc_data[ 1 ] % 16 );
  6407   002028  504E               	movf	(_real_rtc_data+1)^0,w,c
  6408   00202A  0B0F               	andlw	15
  6409   00202C  EC88  F00A         	call	_MarkDisplay
  6410   002030  6E04               	movwf	(_display_datas+3)^0,c
  6411                           
  6412                           ;Main.c: 127:             display_datas[4] = MarkDisplay( real_rtc_data[ 0 ] >> 4 );
  6413   002032  384D               	swapf	_real_rtc_data^0,w,c
  6414   002034  0B0F               	andlw	15
  6415   002036  EC88  F00A         	call	_MarkDisplay
  6416   00203A  6E05               	movwf	(_display_datas+4)^0,c
  6417                           
  6418                           ;Main.c: 128:             display_datas[5] = MarkDisplay( real_rtc_data[ 0 ] % 16 );
  6419   00203C  504D               	movf	_real_rtc_data^0,w,c
  6420   00203E  0B0F               	andlw	15
  6421   002040  EC88  F00A         	call	_MarkDisplay
  6422   002044  6E06               	movwf	(_display_datas+5)^0,c
  6423                           
  6424                           ;Main.c: 129:             break;
  6425   002046  EF4E  F010         	goto	l326
  6426   00204A                     l9945:
  6427                           
  6428                           ;Main.c: 131:             display_datas[0] = MarkDisplay( real_rtc_data[ 3 ] >> 4 );
  6429   00204A  3850               	swapf	(_real_rtc_data+3)^0,w,c
  6430   00204C  0B0F               	andlw	15
  6431   00204E  EC88  F00A         	call	_MarkDisplay
  6432   002052  6E01               	movwf	_display_datas^0,c
  6433                           
  6434                           ;Main.c: 132:             display_datas[1] = MarkDisplay( real_rtc_data[ 3 ] % 16 );
  6435   002054  5050               	movf	(_real_rtc_data+3)^0,w,c
  6436   002056  0B0F               	andlw	15
  6437   002058  EC88  F00A         	call	_MarkDisplay
  6438   00205C  6E02               	movwf	(_display_datas+1)^0,c
  6439   00205E                     
  6440                           ;Main.c: 133:             display_datas[2] = 0xff;
  6441   00205E  6803               	setf	(_display_datas+2)^0,c
  6442   002060                     
  6443                           ;Main.c: 134:             display_datas[3] = 0xff;
  6444   002060  6804               	setf	(_display_datas+3)^0,c
  6445   002062                     
  6446                           ;Main.c: 135:             display_datas[4] = 0xff;
  6447   002062  6805               	setf	(_display_datas+4)^0,c
  6448   002064                     
  6449                           ;Main.c: 136:             display_datas[5] = 0xff;
  6450   002064  6806               	setf	(_display_datas+5)^0,c
  6451                           
  6452                           ;Main.c: 137:             break;
  6453   002066  EF4E  F010         	goto	l326
  6454   00206A                     l9957:
  6455   00206A  5064               	movf	ClockSetting@set_mod^0,w,c
  6456   00206C  6E62               	movwf	??_ClockSetting^0,c
  6457   00206E  6A63               	clrf	(??_ClockSetting+1)^0,c
  6458                           
  6459                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6460                           ; Switch size 1, requested type "simple"
  6461                           ; Number of cases is 1, Range of values is 0 to 0
  6462                           ; switch strategies available:
  6463                           ; Name         Instructions Cycles
  6464                           ; simple_byte            4     3 (average)
  6465                           ;	Chosen strategy is simple_byte
  6466   002070  5063               	movf	(??_ClockSetting+1)^0,w,c
  6467   002072  0A00               	xorlw	0	; case 0
  6468   002074  B4D8               	btfsc	status,2,c
  6469   002076  EF3F  F010         	goto	l10527
  6470   00207A  EF4E  F010         	goto	l326
  6471   00207E                     l10527:
  6472                           
  6473                           ; Switch size 1, requested type "simple"
  6474                           ; Number of cases is 3, Range of values is 0 to 2
  6475                           ; switch strategies available:
  6476                           ; Name         Instructions Cycles
  6477                           ; simple_byte           10     6 (average)
  6478                           ;	Chosen strategy is simple_byte
  6479   00207E  5062               	movf	??_ClockSetting^0,w,c
  6480   002080  0A00               	xorlw	0	; case 0
  6481   002082  B4D8               	btfsc	status,2,c
  6482   002084  EFE5  F00F         	goto	l9941
  6483   002088  0A01               	xorlw	1	; case 1
  6484   00208A  B4D8               	btfsc	status,2,c
  6485   00208C  EF05  F010         	goto	l9943
  6486   002090  0A03               	xorlw	3	; case 2
  6487   002092  B4D8               	btfsc	status,2,c
  6488   002094  EF25  F010         	goto	l9945
  6489   002098  EF4E  F010         	goto	l326
  6490   00209C                     l326:
  6491   00209C  0012               	return		;funcret
  6492   00209E                     __end_of_ClockSetting:
  6493                           	callstack 0
  6494                           
  6495 ;; *************** function _MarkDisplay *****************
  6496 ;; Defined at:
  6497 ;;		line 57 in file "Display.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;  mark            1    wreg     unsigned char 
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  mark            1   13[COMRAM] unsigned char 
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  1    wreg      unsigned char 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2, status,0
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6511 ;;      Params:         0       0       0       0       0       0       0
  6512 ;;      Locals:         1       0       0       0       0       0       0
  6513 ;;      Temps:          2       0       0       0       0       0       0
  6514 ;;      Totals:         3       0       0       0       0       0       0
  6515 ;;Total ram usage:        3 bytes
  6516 ;; Hardware stack levels used: 1
  6517 ;; Hardware stack levels required when called: 4
  6518 ;; This function calls:
  6519 ;;		Nothing
  6520 ;; This function is called by:
  6521 ;;		_CounterSetting
  6522 ;;		_ClockSetting
  6523 ;;		_UpdateDisplay
  6524 ;; This function uses a non-reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text35
  6528   001510                     __ptext35:
  6529                           	callstack 0
  6530   001510                     _MarkDisplay:
  6531                           	callstack 25
  6532                           
  6533                           ;incstack = 0
  6534                           ;MarkDisplay@mark stored from wreg
  6535   001510  6E61               	movwf	MarkDisplay@mark^0,c
  6536   001512                     
  6537                           ;Display.c: 72:     switch( mark ){
  6538   001512  EFE8  F00A         	goto	l9045
  6539   001516                     l8891:
  6540   001516  0E3F               	movlw	63
  6541   001518  EF8D  F00B         	goto	l734
  6542   00151C                     l8895:
  6543   00151C  0E06               	movlw	6
  6544   00151E  EF8D  F00B         	goto	l734
  6545   001522                     l8899:
  6546   001522  0E5B               	movlw	91
  6547   001524  EF8D  F00B         	goto	l734
  6548   001528                     l8903:
  6549   001528  0E4F               	movlw	79
  6550   00152A  EF8D  F00B         	goto	l734
  6551   00152E                     l8907:
  6552   00152E  0E66               	movlw	102
  6553   001530  EF8D  F00B         	goto	l734
  6554   001534                     l8911:
  6555   001534  0E6D               	movlw	109
  6556   001536  EF8D  F00B         	goto	l734
  6557   00153A                     l8915:
  6558   00153A  0E7D               	movlw	125
  6559   00153C  EF8D  F00B         	goto	l734
  6560   001540                     l8919:
  6561   001540  0E07               	movlw	7
  6562   001542  EF8D  F00B         	goto	l734
  6563   001546                     l8923:
  6564   001546  0E7F               	movlw	127
  6565   001548  EF8D  F00B         	goto	l734
  6566   00154C                     l8927:
  6567   00154C  0E6F               	movlw	111
  6568   00154E  EF8D  F00B         	goto	l734
  6569   001552                     l8931:
  6570   001552  0E77               	movlw	119
  6571   001554  EF8D  F00B         	goto	l734
  6572   001558                     l8935:
  6573   001558  0E5F               	movlw	95
  6574   00155A  EF8D  F00B         	goto	l734
  6575   00155E                     l8943:
  6576   00155E  0E7C               	movlw	124
  6577   001560  EF8D  F00B         	goto	l734
  6578   001564                     l8947:
  6579   001564  0E39               	movlw	57
  6580   001566  EF8D  F00B         	goto	l734
  6581   00156A                     l8951:
  6582   00156A  0E58               	movlw	88
  6583   00156C  EF8D  F00B         	goto	l734
  6584   001570                     l8959:
  6585   001570  0E5E               	movlw	94
  6586   001572  EF8D  F00B         	goto	l734
  6587   001576                     l8963:
  6588   001576  0E79               	movlw	121
  6589   001578  EF8D  F00B         	goto	l734
  6590   00157C                     l8967:
  6591   00157C  0E7B               	movlw	123
  6592   00157E  EF8D  F00B         	goto	l734
  6593   001582                     l8971:
  6594   001582  0E71               	movlw	113
  6595   001584  EF8D  F00B         	goto	l734
  6596   001588                     l8983:
  6597   001588  0E76               	movlw	118
  6598   00158A  EF8D  F00B         	goto	l734
  6599   00158E                     l8987:
  6600   00158E  0E74               	movlw	116
  6601   001590  EF8D  F00B         	goto	l734
  6602   001594                     l8995:
  6603   001594  0E0E               	movlw	14
  6604   001596  EF8D  F00B         	goto	l734
  6605   00159A                     l8999:
  6606   00159A  0E38               	movlw	56
  6607   00159C  EF8D  F00B         	goto	l734
  6608   0015A0                     l9003:
  6609   0015A0  0E54               	movlw	84
  6610   0015A2  EF8D  F00B         	goto	l734
  6611   0015A6                     l9011:
  6612   0015A6  0E5C               	movlw	92
  6613   0015A8  EF8D  F00B         	goto	l734
  6614   0015AC                     l9015:
  6615   0015AC  0E73               	movlw	115
  6616   0015AE  EF8D  F00B         	goto	l734
  6617   0015B2                     l9019:
  6618   0015B2  0E67               	movlw	103
  6619   0015B4  EF8D  F00B         	goto	l734
  6620   0015B8                     l9023:
  6621   0015B8  0E50               	movlw	80
  6622   0015BA  EF8D  F00B         	goto	l734
  6623   0015BE                     l9031:
  6624   0015BE  0E78               	movlw	120
  6625   0015C0  EF8D  F00B         	goto	l734
  6626   0015C4                     l9035:
  6627   0015C4  0E3E               	movlw	62
  6628   0015C6  EF8D  F00B         	goto	l734
  6629   0015CA                     l9039:
  6630   0015CA  0E6E               	movlw	110
  6631   0015CC  EF8D  F00B         	goto	l734
  6632   0015D0                     l9045:
  6633   0015D0  5061               	movf	MarkDisplay@mark^0,w,c
  6634   0015D2  6E5F               	movwf	??_MarkDisplay^0,c
  6635   0015D4  6A60               	clrf	(??_MarkDisplay+1)^0,c
  6636                           
  6637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6638                           ; Switch size 1, requested type "simple"
  6639                           ; Number of cases is 1, Range of values is 0 to 0
  6640                           ; switch strategies available:
  6641                           ; Name         Instructions Cycles
  6642                           ; simple_byte            4     3 (average)
  6643                           ;	Chosen strategy is simple_byte
  6644   0015D6  5060               	movf	(??_MarkDisplay+1)^0,w,c
  6645   0015D8  0A00               	xorlw	0	; case 0
  6646   0015DA  B4D8               	btfsc	status,2,c
  6647   0015DC  EFF2  F00A         	goto	l10529
  6648   0015E0  EF8D  F00B         	goto	l734
  6649   0015E4                     l10529:
  6650                           
  6651                           ; Switch size 1, requested type "simple"
  6652                           ; Number of cases is 38, Range of values is 0 to 121
  6653                           ; switch strategies available:
  6654                           ; Name         Instructions Cycles
  6655                           ; simple_byte          115    58 (average)
  6656                           ;	Chosen strategy is simple_byte
  6657   0015E4  505F               	movf	??_MarkDisplay^0,w,c
  6658   0015E6  0A00               	xorlw	0	; case 0
  6659   0015E8  B4D8               	btfsc	status,2,c
  6660   0015EA  EF8B  F00A         	goto	l8891
  6661   0015EE  0A01               	xorlw	1	; case 1
  6662   0015F0  B4D8               	btfsc	status,2,c
  6663   0015F2  EF8E  F00A         	goto	l8895
  6664   0015F6  0A03               	xorlw	3	; case 2
  6665   0015F8  B4D8               	btfsc	status,2,c
  6666   0015FA  EF91  F00A         	goto	l8899
  6667   0015FE  0A01               	xorlw	1	; case 3
  6668   001600  B4D8               	btfsc	status,2,c
  6669   001602  EF94  F00A         	goto	l8903
  6670   001606  0A07               	xorlw	7	; case 4
  6671   001608  B4D8               	btfsc	status,2,c
  6672   00160A  EF97  F00A         	goto	l8907
  6673   00160E  0A01               	xorlw	1	; case 5
  6674   001610  B4D8               	btfsc	status,2,c
  6675   001612  EF9A  F00A         	goto	l8911
  6676   001616  0A03               	xorlw	3	; case 6
  6677   001618  B4D8               	btfsc	status,2,c
  6678   00161A  EF9D  F00A         	goto	l8915
  6679   00161E  0A01               	xorlw	1	; case 7
  6680   001620  B4D8               	btfsc	status,2,c
  6681   001622  EFA0  F00A         	goto	l8919
  6682   001626  0A0F               	xorlw	15	; case 8
  6683   001628  B4D8               	btfsc	status,2,c
  6684   00162A  EFA3  F00A         	goto	l8923
  6685   00162E  0A01               	xorlw	1	; case 9
  6686   001630  B4D8               	btfsc	status,2,c
  6687   001632  EFA6  F00A         	goto	l8927
  6688   001636  0A48               	xorlw	72	; case 65
  6689   001638  B4D8               	btfsc	status,2,c
  6690   00163A  EFA9  F00A         	goto	l8931
  6691   00163E  0A03               	xorlw	3	; case 66
  6692   001640  B4D8               	btfsc	status,2,c
  6693   001642  EFA3  F00A         	goto	l8923
  6694   001646  0A01               	xorlw	1	; case 67
  6695   001648  B4D8               	btfsc	status,2,c
  6696   00164A  EFB2  F00A         	goto	l8947
  6697   00164E  0A07               	xorlw	7	; case 68
  6698   001650  B4D8               	btfsc	status,2,c
  6699   001652  EF8B  F00A         	goto	l8891
  6700   001656  0A01               	xorlw	1	; case 69
  6701   001658  B4D8               	btfsc	status,2,c
  6702   00165A  EFBB  F00A         	goto	l8963
  6703   00165E  0A03               	xorlw	3	; case 70
  6704   001660  B4D8               	btfsc	status,2,c
  6705   001662  EFC1  F00A         	goto	l8971
  6706   001666  0A01               	xorlw	1	; case 71
  6707   001668  B4D8               	btfsc	status,2,c
  6708   00166A  EF9D  F00A         	goto	l8915
  6709   00166E  0A0F               	xorlw	15	; case 72
  6710   001670  B4D8               	btfsc	status,2,c
  6711   001672  EFC4  F00A         	goto	l8983
  6712   001676  0A01               	xorlw	1	; case 73
  6713   001678  B4D8               	btfsc	status,2,c
  6714   00167A  EF8E  F00A         	goto	l8895
  6715   00167E  0A03               	xorlw	3	; case 74
  6716   001680  B4D8               	btfsc	status,2,c
  6717   001682  EFCA  F00A         	goto	l8995
  6718   001686  0A06               	xorlw	6	; case 76
  6719   001688  B4D8               	btfsc	status,2,c
  6720   00168A  EFCD  F00A         	goto	l8999
  6721   00168E  0A03               	xorlw	3	; case 79
  6722   001690  B4D8               	btfsc	status,2,c
  6723   001692  EF8B  F00A         	goto	l8891
  6724   001696  0A1F               	xorlw	31	; case 80
  6725   001698  B4D8               	btfsc	status,2,c
  6726   00169A  EFD6  F00A         	goto	l9015
  6727   00169E  0A03               	xorlw	3	; case 83
  6728   0016A0  B4D8               	btfsc	status,2,c
  6729   0016A2  EF9A  F00A         	goto	l8911
  6730   0016A6  0A06               	xorlw	6	; case 85
  6731   0016A8  B4D8               	btfsc	status,2,c
  6732   0016AA  EFE2  F00A         	goto	l9035
  6733   0016AE  0A34               	xorlw	52	; case 97
  6734   0016B0  B4D8               	btfsc	status,2,c
  6735   0016B2  EFAC  F00A         	goto	l8935
  6736   0016B6  0A03               	xorlw	3	; case 98
  6737   0016B8  B4D8               	btfsc	status,2,c
  6738   0016BA  EFAF  F00A         	goto	l8943
  6739   0016BE  0A01               	xorlw	1	; case 99
  6740   0016C0  B4D8               	btfsc	status,2,c
  6741   0016C2  EFB5  F00A         	goto	l8951
  6742   0016C6  0A07               	xorlw	7	; case 100
  6743   0016C8  B4D8               	btfsc	status,2,c
  6744   0016CA  EFB8  F00A         	goto	l8959
  6745   0016CE  0A01               	xorlw	1	; case 101
  6746   0016D0  B4D8               	btfsc	status,2,c
  6747   0016D2  EFBE  F00A         	goto	l8967
  6748   0016D6  0A02               	xorlw	2	; case 103
  6749   0016D8  B4D8               	btfsc	status,2,c
  6750   0016DA  EFA6  F00A         	goto	l8927
  6751   0016DE  0A0F               	xorlw	15	; case 104
  6752   0016E0  B4D8               	btfsc	status,2,c
  6753   0016E2  EFC7  F00A         	goto	l8987
  6754   0016E6  0A06               	xorlw	6	; case 110
  6755   0016E8  B4D8               	btfsc	status,2,c
  6756   0016EA  EFD0  F00A         	goto	l9003
  6757   0016EE  0A01               	xorlw	1	; case 111
  6758   0016F0  B4D8               	btfsc	status,2,c
  6759   0016F2  EFD3  F00A         	goto	l9011
  6760   0016F6  0A1E               	xorlw	30	; case 113
  6761   0016F8  B4D8               	btfsc	status,2,c
  6762   0016FA  EFD9  F00A         	goto	l9019
  6763   0016FE  0A03               	xorlw	3	; case 114
  6764   001700  B4D8               	btfsc	status,2,c
  6765   001702  EFDC  F00A         	goto	l9023
  6766   001706  0A06               	xorlw	6	; case 116
  6767   001708  B4D8               	btfsc	status,2,c
  6768   00170A  EFDF  F00A         	goto	l9031
  6769   00170E  0A0D               	xorlw	13	; case 121
  6770   001710  B4D8               	btfsc	status,2,c
  6771   001712  EFE5  F00A         	goto	l9039
  6772   001716  EF8D  F00B         	goto	l734
  6773   00171A                     l734:
  6774   00171A  0012               	return		;funcret
  6775   00171C                     __end_of_MarkDisplay:
  6776                           	callstack 0
  6777                           
  6778 ;; *************** function _BlinkDisable *****************
  6779 ;; Defined at:
  6780 ;;		line 92 in file "Display.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;		None
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;  i               1   11[COMRAM] unsigned char 
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  1    wreg      void 
  6787 ;; Registers used:
  6788 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6794 ;;      Params:         0       0       0       0       0       0       0
  6795 ;;      Locals:         1       0       0       0       0       0       0
  6796 ;;      Temps:          0       0       0       0       0       0       0
  6797 ;;      Totals:         1       0       0       0       0       0       0
  6798 ;;Total ram usage:        1 bytes
  6799 ;; Hardware stack levels used: 1
  6800 ;; Hardware stack levels required when called: 4
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_main
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text36
  6809   00284A                     __ptext36:
  6810                           	callstack 0
  6811   00284A                     _BlinkDisable:
  6812                           	callstack 26
  6813   00284A                     
  6814                           ;Display.c: 93:     for( unsigned char i = 0; i < 7; i ++ ){
  6815   00284A  0E00               	movlw	0
  6816   00284C  6E5F               	movwf	BlinkDisable@i^0,c
  6817   00284E                     l7065:
  6818                           
  6819                           ;Display.c: 94:         blink_pos[ i ] = 0;
  6820   00284E  0E80               	movlw	low _blink_pos
  6821   002850  245F               	addwf	BlinkDisable@i^0,w,c
  6822   002852  6ED9               	movwf	fsr2l,c
  6823   002854  6ADA               	clrf	fsr2h,c
  6824   002856  0E00               	movlw	high _blink_pos
  6825   002858  22DA               	addwfc	fsr2h,f,c
  6826   00285A  6ADF               	clrf	indf2,c
  6827   00285C                     
  6828                           ;Display.c: 95:     }
  6829   00285C  2A5F               	incf	BlinkDisable@i^0,f,c
  6830   00285E  0E06               	movlw	6
  6831   002860  645F               	cpfsgt	BlinkDisable@i^0,c
  6832   002862  EF35  F014         	goto	u4241
  6833   002866  EF37  F014         	goto	u4240
  6834   00286A                     u4241:
  6835   00286A  EF27  F014         	goto	l7065
  6836   00286E                     u4240:
  6837   00286E  0012               	return		;funcret
  6838   002870                     __end_of_BlinkDisable:
  6839                           	callstack 0
  6840                           
  6841 ;; *************** function _low_isr *****************
  6842 ;; Defined at:
  6843 ;;		line 39 in file "Interrupts.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		None
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6857 ;;      Params:         0       0       0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0
  6859 ;;      Temps:          1       0       0       0       0       0       0
  6860 ;;      Totals:         1       0       0       0       0       0       0
  6861 ;;Total ram usage:        1 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; Hardware stack levels required when called: 3
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		Interrupt level 1
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	intcodelo
  6872   000018                     __pintcodelo:
  6873                           	callstack 0
  6874   000018                     _low_isr:
  6875                           	callstack 21
  6876                           
  6877                           ;incstack = 0
  6878   000018  8074               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6879   00001A  CFE0 F05E          	movff	bsr,??_low_isr
  6880   00001E  C05E  FFE0         	movff	??_low_isr,bsr
  6881   000022  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6882   000024  0010               	retfie	
  6883   000026                     __end_of_low_isr:
  6884                           	callstack 0
  6885                           
  6886 ;; *************** function _high_isr *****************
  6887 ;; Defined at:
  6888 ;;		line 20 in file "Interrupts.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;		None
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;		None
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  1    wreg      void 
  6895 ;; Registers used:
  6896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6902 ;;      Params:         0       0       0       0       0       0       0
  6903 ;;      Locals:         0       0       0       0       0       0       0
  6904 ;;      Temps:          2       0       0       0       0       0       0
  6905 ;;      Totals:         2       0       0       0       0       0       0
  6906 ;;Total ram usage:        2 bytes
  6907 ;; Hardware stack levels used: 1
  6908 ;; Hardware stack levels required when called: 2
  6909 ;; This function calls:
  6910 ;;		_ScanButtons
  6911 ;;		_ScanCounter
  6912 ;;		_ScanDisplay
  6913 ;;		i2_WriteTimer0
  6914 ;; This function is called by:
  6915 ;;		Interrupt level 2
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           	psect	intcode
  6920   000008                     __pintcode:
  6921                           	callstack 0
  6922   000008                     _high_isr:
  6923                           	callstack 21
  6924                           
  6925                           ;incstack = 0
  6926   000008  8274               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6927   00000A  EDE3  F012         	call	int_func,f	;refresh shadow registers
  6928                           
  6929                           	psect	intcode_body
  6930   0025C6                     __pintcode_body:
  6931                           	callstack 21
  6932   0025C6                     int_func:
  6933                           	callstack 21
  6934   0025C6  0006               	pop		; remove dummy address from shadow register refresh
  6935   0025C8  CFD9 F05C          	movff	fsr2l,??_high_isr
  6936   0025CC  CFDA F05D          	movff	fsr2h,??_high_isr+1
  6937   0025D0                     
  6938                           ;Interrupts.c: 22:     if( INTCONbits.TMR0IE && INTCONbits.TMR0IF ) {
  6939   0025D0  AAF2               	btfss	242,5,c	;volatile
  6940   0025D2  EFED  F012         	goto	i2u438_41
  6941   0025D6  EFEF  F012         	goto	i2u438_40
  6942   0025DA                     i2u438_41:
  6943   0025DA  EF03  F013         	goto	i2l589
  6944   0025DE                     i2u438_40:
  6945   0025DE  A4F2               	btfss	242,2,c	;volatile
  6946   0025E0  EFF4  F012         	goto	i2u439_41
  6947   0025E4  EFF6  F012         	goto	i2u439_40
  6948   0025E8                     i2u439_41:
  6949   0025E8  EF03  F013         	goto	i2l589
  6950   0025EC                     i2u439_40:
  6951   0025EC                     
  6952                           ;Interrupts.c: 23:         INTCONbits.TMR0IF = 0;
  6953   0025EC  94F2               	bcf	242,2,c	;volatile
  6954   0025EE                     
  6955                           ;Interrupts.c: 24:         WriteTimer0( 65285 );
  6956   0025EE  0EFF               	movlw	255
  6957   0025F0  6E55               	movwf	(i2WriteTimer0@timer0+1)^0,c
  6958   0025F2  0E05               	movlw	5
  6959   0025F4  6E54               	movwf	i2WriteTimer0@timer0^0,c
  6960   0025F6  ECA8  F014         	call	i2_WriteTimer0	;wreg free
  6961   0025FA                     
  6962                           ;Interrupts.c: 25:         ScanDisplay();
  6963   0025FA  EC20  F00D         	call	_ScanDisplay	;wreg free
  6964   0025FE                     
  6965                           ;Interrupts.c: 26:         ScanButtons();
  6966   0025FE  EC67  F00C         	call	_ScanButtons	;wreg free
  6967   002602  EF15  F013         	goto	i2l590
  6968   002606                     i2l589:
  6969                           
  6970                           ;Interrupts.c: 29:     if( INTCON3bits.INT2IE && INTCON3bits.INT2IF ) {
  6971   002606  A8F0               	btfss	240,4,c	;volatile
  6972   002608  EF08  F013         	goto	i2u440_41
  6973   00260C  EF0A  F013         	goto	i2u440_40
  6974   002610                     i2u440_41:
  6975   002610  EF15  F013         	goto	i2l590
  6976   002614                     i2u440_40:
  6977   002614  A2F0               	btfss	240,1,c	;volatile
  6978   002616  EF0F  F013         	goto	i2u441_41
  6979   00261A  EF11  F013         	goto	i2u441_40
  6980   00261E                     i2u441_41:
  6981   00261E  EF15  F013         	goto	i2l590
  6982   002622                     i2u441_40:
  6983   002622                     
  6984                           ;Interrupts.c: 30:         INTCON3bits.INT2IF = 0;
  6985   002622  92F0               	bcf	240,1,c	;volatile
  6986   002624                     
  6987                           ;Interrupts.c: 31:         ScanCounter();
  6988   002624  EC87  F00E         	call	_ScanCounter	;wreg free
  6989   002628                     
  6990                           ;Interrupts.c: 32:         SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE = 1;
  6991   002628  8049               	bsf	_SYSTEM_ACTION_FLG^0,0,c	;volatile
  6992   00262A                     i2l590:
  6993   00262A  C05D  FFDA         	movff	??_high_isr+1,fsr2h
  6994   00262E  C05C  FFD9         	movff	??_high_isr,fsr2l
  6995   002632  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6996   002634  0011               	retfie		f
  6997   002636                     __end_of_high_isr:
  6998                           	callstack 0
  6999                           
  7000 ;; *************** function i2_WriteTimer0 *****************
  7001 ;; Defined at:
  7002 ;;		line 37 in file "Timers.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  timer0          2    0[COMRAM] unsigned int 
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;  timer           2    2[COMRAM] struct Timers
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      void 
  7009 ;; Registers used:
  7010 ;;		None
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7016 ;;      Params:         2       0       0       0       0       0       0
  7017 ;;      Locals:         2       0       0       0       0       0       0
  7018 ;;      Temps:          0       0       0       0       0       0       0
  7019 ;;      Totals:         4       0       0       0       0       0       0
  7020 ;;Total ram usage:        4 bytes
  7021 ;; Hardware stack levels used: 1
  7022 ;; This function calls:
  7023 ;;		Nothing
  7024 ;; This function is called by:
  7025 ;;		_high_isr
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           	psect	text39
  7030   002950                     __ptext39:
  7031                           	callstack 0
  7032   002950                     i2_WriteTimer0:
  7033                           	callstack 22
  7034   002950                     
  7035                           ;Timers.c: 37: void WriteTimer0(unsigned int timer0);Timers.c: 38: {;Timers.c: 39:     u
      +                          nion Timers timer;;Timers.c: 41:     timer.lt = timer0;
  7036   002950  C054  F056         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  7037   002954  C055  F057         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  7038                           
  7039                           ;Timers.c: 43:     TMR0H = timer.bt[1];
  7040   002958  C057  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  7041                           
  7042                           ;Timers.c: 44:     TMR0L = timer.bt[0];
  7043   00295C  C056  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  7044   002960  0012               	return		;funcret
  7045   002962                     __end_ofi2_WriteTimer0:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function _ScanDisplay *****************
  7049 ;; Defined at:
  7050 ;;		line 32 in file "Display.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7064 ;;      Params:         0       0       0       0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0
  7066 ;;      Temps:          2       0       0       0       0       0       0
  7067 ;;      Totals:         2       0       0       0       0       0       0
  7068 ;;Total ram usage:        2 bytes
  7069 ;; Hardware stack levels used: 1
  7070 ;; Hardware stack levels required when called: 1
  7071 ;; This function calls:
  7072 ;;		_TLC5917Write
  7073 ;; This function is called by:
  7074 ;;		_high_isr
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text40
  7079   001A40                     __ptext40:
  7080                           	callstack 0
  7081   001A40                     _ScanDisplay:
  7082                           	callstack 21
  7083   001A40  808A               	bsf	138,0,c	;volatile
  7084   001A42  8E8C               	bsf	140,7,c	;volatile
  7085                           
  7086                           ;Display.c: 34:     LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATCbits.LATC5 = 
      +                          LATBbits.LATB1 = LATBbits.LATB5 = LATDbits.LATD7 = LATBbits.LATB0 = 1;
  7087   001A44  8A8A               	bsf	138,5,c	;volatile
  7088   001A46  828A               	bsf	138,1,c	;volatile
  7089   001A48  8A8B               	bsf	139,5,c	;volatile
  7090   001A4A  808B               	bsf	139,0,c	;volatile
  7091   001A4C  828B               	bsf	139,1,c	;volatile
  7092   001A4E  848B               	bsf	139,2,c	;volatile
  7093   001A50                     
  7094                           ;Display.c: 35:     display_cnt ++;
  7095   001A50  2A36               	incf	_display_cnt^0,f,c
  7096   001A52                     
  7097                           ;Display.c: 36:     if( blink_pos[ display_cnt - 1 ] && blink_cnt < 250 / 2 && blink_ena
      +                          ble_flg ) return;
  7098   001A52  0E7F               	movlw	low (_blink_pos+65535)
  7099   001A54  2436               	addwf	_display_cnt^0,w,c
  7100   001A56  6ED9               	movwf	fsr2l,c
  7101   001A58  6ADA               	clrf	fsr2h,c
  7102   001A5A  0E00               	movlw	high (_blink_pos+65535)
  7103   001A5C  22DA               	addwfc	fsr2h,f,c
  7104   001A5E  50DF               	movf	indf2,w,c
  7105   001A60  B4D8               	btfsc	status,2,c
  7106   001A62  EF35  F00D         	goto	i2u428_41
  7107   001A66  EF37  F00D         	goto	i2u428_40
  7108   001A6A                     i2u428_41:
  7109   001A6A  EF9D  F00D         	goto	i2l7175
  7110   001A6E                     i2u428_40:
  7111   001A6E  0E7D               	movlw	125
  7112   001A70  6035               	cpfslt	_blink_cnt^0,c
  7113   001A72  EF3D  F00D         	goto	i2u429_41
  7114   001A76  EF3F  F00D         	goto	i2u429_40
  7115   001A7A                     i2u429_41:
  7116   001A7A  EF9D  F00D         	goto	i2l7175
  7117   001A7E                     i2u429_40:
  7118   001A7E  5037               	movf	_blink_enable_flg^0,w,c
  7119   001A80  B4D8               	btfsc	status,2,c
  7120   001A82  EF45  F00D         	goto	i2u430_41
  7121   001A86  EF47  F00D         	goto	i2u430_40
  7122   001A8A                     i2u430_41:
  7123   001A8A  EF9D  F00D         	goto	i2l7175
  7124   001A8E                     i2u430_40:
  7125   001A8E  EFD5  F00D         	goto	i2l710
  7126   001A92                     i2l7133:
  7127   001A92  C001  F054         	movff	_display_datas,TLC5917Write@data
  7128   001A96  6A55               	clrf	(TLC5917Write@data+1)^0,c
  7129   001A98  EC61  F012         	call	_TLC5917Write	;wreg free
  7130   001A9C  948B               	bcf	139,2,c	;volatile
  7131   001A9E  EFCA  F00D         	goto	i2l7177
  7132   001AA2                     i2l7137:
  7133   001AA2  C002  F054         	movff	_display_datas+1,TLC5917Write@data
  7134   001AA6  6A55               	clrf	(TLC5917Write@data+1)^0,c
  7135   001AA8  EC61  F012         	call	_TLC5917Write	;wreg free
  7136   001AAC  928B               	bcf	139,1,c	;volatile
  7137   001AAE  EFCA  F00D         	goto	i2l7177
  7138   001AB2                     i2l7141:
  7139   001AB2  C003  F054         	movff	_display_datas+2,TLC5917Write@data
  7140   001AB6  6A55               	clrf	(TLC5917Write@data+1)^0,c
  7141   001AB8  EC61  F012         	call	_TLC5917Write	;wreg free
  7142   001ABC  908B               	bcf	139,0,c	;volatile
  7143   001ABE  EFCA  F00D         	goto	i2l7177
  7144   001AC2                     i2l7145:
  7145   001AC2  C004  F054         	movff	_display_datas+3,TLC5917Write@data
  7146   001AC6  6A55               	clrf	(TLC5917Write@data+1)^0,c
  7147   001AC8  EC61  F012         	call	_TLC5917Write	;wreg free
  7148   001ACC  9A8B               	bcf	139,5,c	;volatile
  7149   001ACE  EFCA  F00D         	goto	i2l7177
  7150   001AD2                     i2l7149:
  7151   001AD2  C005  F054         	movff	_display_datas+4,TLC5917Write@data
  7152   001AD6  6A55               	clrf	(TLC5917Write@data+1)^0,c
  7153   001AD8  EC61  F012         	call	_TLC5917Write	;wreg free
  7154   001ADC  928A               	bcf	138,1,c	;volatile
  7155   001ADE  EFCA  F00D         	goto	i2l7177
  7156   001AE2                     i2l7153:
  7157   001AE2  C006  F054         	movff	_display_datas+5,TLC5917Write@data
  7158   001AE6  6A55               	clrf	(TLC5917Write@data+1)^0,c
  7159   001AE8  EC61  F012         	call	_TLC5917Write	;wreg free
  7160   001AEC  9A8A               	bcf	138,5,c	;volatile
  7161   001AEE  EFCA  F00D         	goto	i2l7177
  7162   001AF2                     i2l7157:
  7163   001AF2  0100               	movlb	0	; () banked
  7164   001AF4  5186               	movf	(_blink_pos+6)& (0+255),w,b
  7165   001AF6  B4D8               	btfsc	status,2,c
  7166   001AF8  EF80  F00D         	goto	i2u431_41
  7167   001AFC  EF82  F00D         	goto	i2u431_40
  7168   001B00                     i2u431_41:
  7169   001B00  EF89  F00D         	goto	i2l7161
  7170   001B04                     i2u431_40:
  7171   001B04                     
  7172                           ; BSR set to: 0
  7173   001B04  0E00               	movlw	0
  7174   001B06  6E55               	movwf	(TLC5917Write@data+1)^0,c
  7175   001B08  6854               	setf	TLC5917Write@data^0,c
  7176   001B0A  EC61  F012         	call	_TLC5917Write	;wreg free
  7177   001B0E  EF8F  F00D         	goto	i2l7163
  7178   001B12                     i2l7161:
  7179                           
  7180                           ; BSR set to: 0
  7181   001B12  0E00               	movlw	0
  7182   001B14  6E55               	movwf	(TLC5917Write@data+1)^0,c
  7183   001B16  0E00               	movlw	0
  7184   001B18  6E54               	movwf	TLC5917Write@data^0,c
  7185   001B1A  EC61  F012         	call	_TLC5917Write	;wreg free
  7186   001B1E                     i2l7163:
  7187   001B1E  9E8C               	bcf	140,7,c	;volatile
  7188   001B20  EFCA  F00D         	goto	i2l7177
  7189   001B24                     i2l7165:
  7190   001B24  C008  F054         	movff	_display_datas+7,TLC5917Write@data
  7191   001B28  6A55               	clrf	(TLC5917Write@data+1)^0,c
  7192   001B2A  EC61  F012         	call	_TLC5917Write	;wreg free
  7193   001B2E  908A               	bcf	138,0,c	;volatile
  7194   001B30  0E00               	movlw	0
  7195   001B32  6E36               	movwf	_display_cnt^0,c
  7196   001B34  2A35               	incf	_blink_cnt^0,f,c
  7197   001B36  EFCA  F00D         	goto	i2l7177
  7198   001B3A                     i2l7175:
  7199   001B3A  5036               	movf	_display_cnt^0,w,c
  7200   001B3C  6E5A               	movwf	??_ScanDisplay^0,c
  7201   001B3E  6A5B               	clrf	(??_ScanDisplay+1)^0,c
  7202                           
  7203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7204                           ; Switch size 1, requested type "simple"
  7205                           ; Number of cases is 1, Range of values is 0 to 0
  7206                           ; switch strategies available:
  7207                           ; Name         Instructions Cycles
  7208                           ; simple_byte            4     3 (average)
  7209                           ;	Chosen strategy is simple_byte
  7210   001B40  505B               	movf	(??_ScanDisplay+1)^0,w,c
  7211   001B42  0A00               	xorlw	0	; case 0
  7212   001B44  B4D8               	btfsc	status,2,c
  7213   001B46  EFA7  F00D         	goto	i2l10531
  7214   001B4A  EFCA  F00D         	goto	i2l7177
  7215   001B4E                     i2l10531:
  7216                           
  7217                           ; Switch size 1, requested type "simple"
  7218                           ; Number of cases is 8, Range of values is 1 to 8
  7219                           ; switch strategies available:
  7220                           ; Name         Instructions Cycles
  7221                           ; simple_byte           25    13 (average)
  7222                           ;	Chosen strategy is simple_byte
  7223   001B4E  505A               	movf	??_ScanDisplay^0,w,c
  7224   001B50  0A01               	xorlw	1	; case 1
  7225   001B52  B4D8               	btfsc	status,2,c
  7226   001B54  EF49  F00D         	goto	i2l7133
  7227   001B58  0A03               	xorlw	3	; case 2
  7228   001B5A  B4D8               	btfsc	status,2,c
  7229   001B5C  EF51  F00D         	goto	i2l7137
  7230   001B60  0A01               	xorlw	1	; case 3
  7231   001B62  B4D8               	btfsc	status,2,c
  7232   001B64  EF59  F00D         	goto	i2l7141
  7233   001B68  0A07               	xorlw	7	; case 4
  7234   001B6A  B4D8               	btfsc	status,2,c
  7235   001B6C  EF61  F00D         	goto	i2l7145
  7236   001B70  0A01               	xorlw	1	; case 5
  7237   001B72  B4D8               	btfsc	status,2,c
  7238   001B74  EF69  F00D         	goto	i2l7149
  7239   001B78  0A03               	xorlw	3	; case 6
  7240   001B7A  B4D8               	btfsc	status,2,c
  7241   001B7C  EF71  F00D         	goto	i2l7153
  7242   001B80  0A01               	xorlw	1	; case 7
  7243   001B82  B4D8               	btfsc	status,2,c
  7244   001B84  EF79  F00D         	goto	i2l7157
  7245   001B88  0A0F               	xorlw	15	; case 8
  7246   001B8A  B4D8               	btfsc	status,2,c
  7247   001B8C  EF92  F00D         	goto	i2l7165
  7248   001B90  EFCA  F00D         	goto	i2l7177
  7249   001B94                     i2l7177:
  7250                           
  7251                           ;Display.c: 47:     if( blink_cnt == 250 ) blink_cnt = 0;
  7252   001B94  0EFA               	movlw	250
  7253   001B96  1835               	xorwf	_blink_cnt^0,w,c
  7254   001B98  A4D8               	btfss	status,2,c
  7255   001B9A  EFD1  F00D         	goto	i2u432_41
  7256   001B9E  EFD3  F00D         	goto	i2u432_40
  7257   001BA2                     i2u432_41:
  7258   001BA2  EFD5  F00D         	goto	i2l710
  7259   001BA6                     i2u432_40:
  7260   001BA6  0E00               	movlw	0
  7261   001BA8  6E35               	movwf	_blink_cnt^0,c
  7262   001BAA                     i2l710:
  7263   001BAA  0012               	return		;funcret
  7264   001BAC                     __end_of_ScanDisplay:
  7265                           	callstack 0
  7266                           
  7267 ;; *************** function _TLC5917Write *****************
  7268 ;; Defined at:
  7269 ;;		line 24 in file "TLC5917.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  data            2    0[COMRAM] unsigned int 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  i               1    5[COMRAM] unsigned char 
  7274 ;;  temp            2    3[COMRAM] unsigned int 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg, status,2, status,0
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7284 ;;      Params:         2       0       0       0       0       0       0
  7285 ;;      Locals:         3       0       0       0       0       0       0
  7286 ;;      Temps:          1       0       0       0       0       0       0
  7287 ;;      Totals:         6       0       0       0       0       0       0
  7288 ;;Total ram usage:        6 bytes
  7289 ;; Hardware stack levels used: 1
  7290 ;; This function calls:
  7291 ;;		Nothing
  7292 ;; This function is called by:
  7293 ;;		_ScanDisplay
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           	psect	text41
  7298   0024C2                     __ptext41:
  7299                           	callstack 0
  7300   0024C2                     _TLC5917Write:
  7301                           	callstack 21
  7302   0024C2                     
  7303                           ;TLC5917.c: 26:     unsigned int temp = data;
  7304   0024C2  C054  F057         	movff	TLC5917Write@data,TLC5917Write@temp
  7305   0024C6  C055  F058         	movff	TLC5917Write@data+1,TLC5917Write@temp+1
  7306                           
  7307                           ;TLC5917.c: 27:     PORTAbits.RA0 = 0; PORTAbits.RA5 = 0; PORTAbits.RA3 = 1;
  7308   0024CA  9080               	bcf	128,0,c	;volatile
  7309   0024CC  9A80               	bcf	128,5,c	;volatile
  7310   0024CE  8680               	bsf	128,3,c	;volatile
  7311   0024D0                     
  7312                           ;TLC5917.c: 28:     for( unsigned char i = 0; i < 8; i++ ){
  7313   0024D0  0E00               	movlw	0
  7314   0024D2  6E59               	movwf	TLC5917Write@i^0,c
  7315   0024D4                     i2l6095:
  7316                           
  7317                           ;TLC5917.c: 29:         PORTAbits.RA0 = (temp & 0x80) ? 1 : 0; _delay((unsigned long)((1
      +                          )*(32000000UL/4000000.0)));
  7318   0024D4  BE57               	btfsc	TLC5917Write@temp^0,7,c
  7319   0024D6  EF6F  F012         	goto	i2u328_41
  7320   0024DA  EF73  F012         	goto	i2u328_40
  7321   0024DE                     i2u328_41:
  7322   0024DE  6A56               	clrf	??_TLC5917Write^0,c
  7323   0024E0  2A56               	incf	??_TLC5917Write^0,f,c
  7324   0024E2  EF74  F012         	goto	i2u329_48
  7325   0024E6                     i2u328_40:
  7326   0024E6  6A56               	clrf	??_TLC5917Write^0,c
  7327   0024E8                     i2u329_48:
  7328   0024E8  5080               	movf	128,w,c	;volatile
  7329   0024EA  1856               	xorwf	??_TLC5917Write^0,w,c
  7330   0024EC  0BFE               	andlw	-2
  7331   0024EE  1856               	xorwf	??_TLC5917Write^0,w,c
  7332   0024F0  6E80               	movwf	128,c	;volatile
  7333   0024F2  D000               	nop2		;2 cycle nop
  7334   0024F4  D000               	nop2		;2 cycle nop
  7335   0024F6  D000               	nop2		;2 cycle nop
  7336   0024F8  D000               	nop2		;2 cycle nop
  7337   0024FA                     
  7338                           ;TLC5917.c: 30:         PORTAbits.RA1 = 1; _delay((unsigned long)((1)*(32000000UL/400000
      +                          0.0))); PORTAbits.RA1 = 0; _delay((unsigned long)((1)*(32000000UL/4000000.0)));
  7339   0024FA  8280               	bsf	128,1,c	;volatile
  7340   0024FC  D000               	nop2		;2 cycle nop
  7341   0024FE  D000               	nop2		;2 cycle nop
  7342   002500  D000               	nop2		;2 cycle nop
  7343   002502  D000               	nop2		;2 cycle nop
  7344   002504  9280               	bcf	128,1,c	;volatile
  7345   002506  D000               	nop2		;2 cycle nop
  7346   002508  D000               	nop2		;2 cycle nop
  7347   00250A  D000               	nop2		;2 cycle nop
  7348   00250C  D000               	nop2		;2 cycle nop
  7349                           
  7350                           ;TLC5917.c: 31:         temp = temp << 1;
  7351   00250E  90D8               	bcf	status,0,c
  7352   002510  3457               	rlcf	TLC5917Write@temp^0,w,c
  7353   002512  6E57               	movwf	TLC5917Write@temp^0,c
  7354   002514  3458               	rlcf	(TLC5917Write@temp+1)^0,w,c
  7355   002516  6E58               	movwf	(TLC5917Write@temp+1)^0,c
  7356   002518                     
  7357                           ;TLC5917.c: 32:     }
  7358   002518  2A59               	incf	TLC5917Write@i^0,f,c
  7359   00251A  0E07               	movlw	7
  7360   00251C  6459               	cpfsgt	TLC5917Write@i^0,c
  7361   00251E  EF93  F012         	goto	i2u330_41
  7362   002522  EF95  F012         	goto	i2u330_40
  7363   002526                     i2u330_41:
  7364   002526  EF6A  F012         	goto	i2l6095
  7365   00252A                     i2u330_40:
  7366   00252A                     
  7367                           ;TLC5917.c: 33:     PORTAbits.RA5 = 1; _delay((unsigned long)((1)*(32000000UL/4000000.0)
      +                          )); PORTAbits.RA5 = 0; _delay((unsigned long)((1)*(32000000UL/4000000.0)));
  7368   00252A  8A80               	bsf	128,5,c	;volatile
  7369   00252C  D000               	nop2		;2 cycle nop
  7370   00252E  D000               	nop2		;2 cycle nop
  7371   002530  D000               	nop2		;2 cycle nop
  7372   002532  D000               	nop2		;2 cycle nop
  7373   002534  9A80               	bcf	128,5,c	;volatile
  7374   002536  D000               	nop2		;2 cycle nop
  7375   002538  D000               	nop2		;2 cycle nop
  7376   00253A  D000               	nop2		;2 cycle nop
  7377   00253C  D000               	nop2		;2 cycle nop
  7378                           
  7379                           ;TLC5917.c: 34:     PORTAbits.RA3 = 0; _delay((unsigned long)((2)*(32000000UL/4000000.0)
      +                          ));
  7380   00253E  9680               	bcf	128,3,c	;volatile
  7381   002540  0E05               	movlw	5
  7382   002542                     i2u642_47:
  7383   002542  2EE8               	decfsz	wreg,f,c
  7384   002544  D7FE               	bra	i2u642_47
  7385   002546  F000               	nop	
  7386   002548  0012               	return		;funcret
  7387   00254A                     __end_of_TLC5917Write:
  7388                           	callstack 0
  7389                           
  7390 ;; *************** function _ScanCounter *****************
  7391 ;; Defined at:
  7392 ;;		line 67 in file "Counter.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;		None
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;		None
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  1    wreg      void 
  7399 ;; Registers used:
  7400 ;;		wreg, status,2, status,0
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7406 ;;      Params:         0       0       0       0       0       0       0
  7407 ;;      Locals:         0       0       0       0       0       0       0
  7408 ;;      Temps:          5       0       0       0       0       0       0
  7409 ;;      Totals:         5       0       0       0       0       0       0
  7410 ;;Total ram usage:        5 bytes
  7411 ;; Hardware stack levels used: 1
  7412 ;; This function calls:
  7413 ;;		Nothing
  7414 ;; This function is called by:
  7415 ;;		_high_isr
  7416 ;; This function uses a non-reentrant model
  7417 ;;
  7418                           
  7419                           	psect	text42
  7420   001D0E                     __ptext42:
  7421                           	callstack 0
  7422   001D0E                     _ScanCounter:
  7423                           	callstack 22
  7424   001D0E                     
  7425                           ;Counter.c: 69:     if(!counter_enable_flg) return;
  7426   001D0E  503B               	movf	_counter_enable_flg^0,w,c
  7427   001D10  A4D8               	btfss	status,2,c
  7428   001D12  EF8D  F00E         	goto	i2u150_41
  7429   001D16  EF8F  F00E         	goto	i2u150_40
  7430   001D1A                     i2u150_41:
  7431   001D1A  EF91  F00E         	goto	i2l4059
  7432   001D1E                     i2u150_40:
  7433   001D1E  EF34  F00F         	goto	i2l661
  7434   001D22                     i2l4059:
  7435                           
  7436                           ;Counter.c: 70:     if( counter_direction_flg == 1 ){
  7437   001D22  043A               	decf	_counter_direction_flg^0,w,c
  7438   001D24  A4D8               	btfss	status,2,c
  7439   001D26  EF97  F00E         	goto	i2u151_41
  7440   001D2A  EF99  F00E         	goto	i2u151_40
  7441   001D2E                     i2u151_41:
  7442   001D2E  EFFD  F00E         	goto	i2l4085
  7443   001D32                     i2u151_40:
  7444   001D32                     
  7445                           ;Counter.c: 71:         if( counter_hour >= set_counter_hour && counter_minute >= set_co
      +                          unter_minute && counter_second >= set_counter_second ) {
  7446   001D32  503E               	movf	_set_counter_hour^0,w,c
  7447   001D34  6E54               	movwf	??_ScanCounter^0,c
  7448   001D36  6A55               	clrf	(??_ScanCounter+1)^0,c
  7449   001D38  C041  F056         	movff	_counter_hour,??_ScanCounter+2
  7450   001D3C  6A57               	clrf	(??_ScanCounter+3)^0,c
  7451   001D3E  BE56               	btfsc	(??_ScanCounter+2)^0,7,c
  7452   001D40  0657               	decf	(??_ScanCounter+3)^0,f,c
  7453   001D42  5054               	movf	??_ScanCounter^0,w,c
  7454   001D44  5C56               	subwf	(??_ScanCounter+2)^0,w,c
  7455   001D46  5057               	movf	(??_ScanCounter+3)^0,w,c
  7456   001D48  0A80               	xorlw	128
  7457   001D4A  6E58               	movwf	(??_ScanCounter+4)^0,c
  7458   001D4C  5055               	movf	(??_ScanCounter+1)^0,w,c
  7459   001D4E  0A80               	xorlw	128
  7460   001D50  5858               	subwfb	(??_ScanCounter+4)^0,w,c
  7461   001D52  A0D8               	btfss	status,0,c
  7462   001D54  EFAE  F00E         	goto	i2u152_41
  7463   001D58  EFB0  F00E         	goto	i2u152_40
  7464   001D5C                     i2u152_41:
  7465   001D5C  EFE2  F00E         	goto	i2l4071
  7466   001D60                     i2u152_40:
  7467   001D60  503D               	movf	_set_counter_minute^0,w,c
  7468   001D62  6E54               	movwf	??_ScanCounter^0,c
  7469   001D64  6A55               	clrf	(??_ScanCounter+1)^0,c
  7470   001D66  C040  F056         	movff	_counter_minute,??_ScanCounter+2
  7471   001D6A  6A57               	clrf	(??_ScanCounter+3)^0,c
  7472   001D6C  BE56               	btfsc	(??_ScanCounter+2)^0,7,c
  7473   001D6E  0657               	decf	(??_ScanCounter+3)^0,f,c
  7474   001D70  5054               	movf	??_ScanCounter^0,w,c
  7475   001D72  5C56               	subwf	(??_ScanCounter+2)^0,w,c
  7476   001D74  5057               	movf	(??_ScanCounter+3)^0,w,c
  7477   001D76  0A80               	xorlw	128
  7478   001D78  6E58               	movwf	(??_ScanCounter+4)^0,c
  7479   001D7A  5055               	movf	(??_ScanCounter+1)^0,w,c
  7480   001D7C  0A80               	xorlw	128
  7481   001D7E  5858               	subwfb	(??_ScanCounter+4)^0,w,c
  7482   001D80  A0D8               	btfss	status,0,c
  7483   001D82  EFC5  F00E         	goto	i2u153_41
  7484   001D86  EFC7  F00E         	goto	i2u153_40
  7485   001D8A                     i2u153_41:
  7486   001D8A  EFE2  F00E         	goto	i2l4071
  7487   001D8E                     i2u153_40:
  7488   001D8E  503C               	movf	_set_counter_second^0,w,c
  7489   001D90  6E54               	movwf	??_ScanCounter^0,c
  7490   001D92  6A55               	clrf	(??_ScanCounter+1)^0,c
  7491   001D94  C03F  F056         	movff	_counter_second,??_ScanCounter+2
  7492   001D98  6A57               	clrf	(??_ScanCounter+3)^0,c
  7493   001D9A  BE56               	btfsc	(??_ScanCounter+2)^0,7,c
  7494   001D9C  0657               	decf	(??_ScanCounter+3)^0,f,c
  7495   001D9E  5054               	movf	??_ScanCounter^0,w,c
  7496   001DA0  5C56               	subwf	(??_ScanCounter+2)^0,w,c
  7497   001DA2  5057               	movf	(??_ScanCounter+3)^0,w,c
  7498   001DA4  0A80               	xorlw	128
  7499   001DA6  6E58               	movwf	(??_ScanCounter+4)^0,c
  7500   001DA8  5055               	movf	(??_ScanCounter+1)^0,w,c
  7501   001DAA  0A80               	xorlw	128
  7502   001DAC  5858               	subwfb	(??_ScanCounter+4)^0,w,c
  7503   001DAE  A0D8               	btfss	status,0,c
  7504   001DB0  EFDC  F00E         	goto	i2u154_41
  7505   001DB4  EFDE  F00E         	goto	i2u154_40
  7506   001DB8                     i2u154_41:
  7507   001DB8  EFE2  F00E         	goto	i2l4071
  7508   001DBC                     i2u154_40:
  7509   001DBC                     i2l4067:
  7510                           
  7511                           ;Counter.c: 72:             counter_enable_flg = 0;
  7512   001DBC  0E00               	movlw	0
  7513   001DBE  6E3B               	movwf	_counter_enable_flg^0,c
  7514   001DC0  EF34  F00F         	goto	i2l661
  7515   001DC4                     i2l4071:
  7516                           
  7517                           ;Counter.c: 75:         counter_second ++;
  7518   001DC4  2A3F               	incf	_counter_second^0,f,c
  7519   001DC6                     
  7520                           ;Counter.c: 76:         if( counter_second == 60 ){
  7521   001DC6  0E3C               	movlw	60
  7522   001DC8  183F               	xorwf	_counter_second^0,w,c
  7523   001DCA  A4D8               	btfss	status,2,c
  7524   001DCC  EFEA  F00E         	goto	i2u155_41
  7525   001DD0  EFEC  F00E         	goto	i2u155_40
  7526   001DD4                     i2u155_41:
  7527   001DD4  EF34  F00F         	goto	i2l661
  7528   001DD8                     i2u155_40:
  7529   001DD8                     
  7530                           ;Counter.c: 77:             counter_second = 0;
  7531   001DD8  0E00               	movlw	0
  7532   001DDA  6E3F               	movwf	_counter_second^0,c
  7533   001DDC                     
  7534                           ;Counter.c: 78:             counter_minute ++;
  7535   001DDC  2A40               	incf	_counter_minute^0,f,c
  7536   001DDE                     
  7537                           ;Counter.c: 79:             if(counter_minute == 60){
  7538   001DDE  0E3C               	movlw	60
  7539   001DE0  1840               	xorwf	_counter_minute^0,w,c
  7540   001DE2  A4D8               	btfss	status,2,c
  7541   001DE4  EFF6  F00E         	goto	i2u156_41
  7542   001DE8  EFF8  F00E         	goto	i2u156_40
  7543   001DEC                     i2u156_41:
  7544   001DEC  EF34  F00F         	goto	i2l661
  7545   001DF0                     i2u156_40:
  7546   001DF0                     
  7547                           ;Counter.c: 80:                 counter_minute = 0;
  7548   001DF0  0E00               	movlw	0
  7549   001DF2  6E40               	movwf	_counter_minute^0,c
  7550   001DF4                     
  7551                           ;Counter.c: 81:                 counter_hour ++;
  7552   001DF4  2A41               	incf	_counter_hour^0,f,c
  7553   001DF6  EF34  F00F         	goto	i2l661
  7554   001DFA                     i2l4085:
  7555   001DFA  503A               	movf	_counter_direction_flg^0,w,c
  7556   001DFC  A4D8               	btfss	status,2,c
  7557   001DFE  EF03  F00F         	goto	i2u157_41
  7558   001E02  EF05  F00F         	goto	i2u157_40
  7559   001E06                     i2u157_41:
  7560   001E06  EF34  F00F         	goto	i2l661
  7561   001E0A                     i2u157_40:
  7562   001E0A                     
  7563                           ;Counter.c: 86:         if( counter_hour == 0 && counter_minute == 0 && counter_second =
      +                          = 0 ) {
  7564   001E0A  5041               	movf	_counter_hour^0,w,c
  7565   001E0C  A4D8               	btfss	status,2,c
  7566   001E0E  EF0B  F00F         	goto	i2u158_41
  7567   001E12  EF0D  F00F         	goto	i2u158_40
  7568   001E16                     i2u158_41:
  7569   001E16  EF1F  F00F         	goto	i2l4097
  7570   001E1A                     i2u158_40:
  7571   001E1A  5040               	movf	_counter_minute^0,w,c
  7572   001E1C  A4D8               	btfss	status,2,c
  7573   001E1E  EF13  F00F         	goto	i2u159_41
  7574   001E22  EF15  F00F         	goto	i2u159_40
  7575   001E26                     i2u159_41:
  7576   001E26  EF1F  F00F         	goto	i2l4097
  7577   001E2A                     i2u159_40:
  7578   001E2A  503F               	movf	_counter_second^0,w,c
  7579   001E2C  A4D8               	btfss	status,2,c
  7580   001E2E  EF1B  F00F         	goto	i2u160_41
  7581   001E32  EF1D  F00F         	goto	i2u160_40
  7582   001E36                     i2u160_41:
  7583   001E36  EF1F  F00F         	goto	i2l4097
  7584   001E3A                     i2u160_40:
  7585   001E3A  EFDE  F00E         	goto	i2l4067
  7586   001E3E                     i2l4097:
  7587                           
  7588                           ;Counter.c: 90:         counter_second --;
  7589   001E3E  063F               	decf	_counter_second^0,f,c
  7590   001E40                     
  7591                           ;Counter.c: 91:         if( counter_second < 0 ) {
  7592   001E40  BE3F               	btfsc	_counter_second^0,7,c
  7593   001E42  EF27  F00F         	goto	i2u161_40
  7594   001E46  EF25  F00F         	goto	i2u161_41
  7595   001E4A                     i2u161_41:
  7596   001E4A  EF34  F00F         	goto	i2l661
  7597   001E4E                     i2u161_40:
  7598   001E4E                     
  7599                           ;Counter.c: 92:             counter_second = 59;
  7600   001E4E  0E3B               	movlw	59
  7601   001E50  6E3F               	movwf	_counter_second^0,c
  7602   001E52                     
  7603                           ;Counter.c: 93:             counter_minute --;
  7604   001E52  0640               	decf	_counter_minute^0,f,c
  7605   001E54                     
  7606                           ;Counter.c: 94:             if( counter_minute < 0 ){
  7607   001E54  BE40               	btfsc	_counter_minute^0,7,c
  7608   001E56  EF31  F00F         	goto	i2u162_40
  7609   001E5A  EF2F  F00F         	goto	i2u162_41
  7610   001E5E                     i2u162_41:
  7611   001E5E  EF34  F00F         	goto	i2l661
  7612   001E62                     i2u162_40:
  7613   001E62                     
  7614                           ;Counter.c: 95:                 counter_minute = 59;
  7615   001E62  0E3B               	movlw	59
  7616   001E64  6E40               	movwf	_counter_minute^0,c
  7617   001E66                     
  7618                           ;Counter.c: 96:                 counter_hour --;
  7619   001E66  0641               	decf	_counter_hour^0,f,c
  7620   001E68                     i2l661:
  7621   001E68  0012               	return		;funcret
  7622   001E6A                     __end_of_ScanCounter:
  7623                           	callstack 0
  7624                           
  7625 ;; *************** function _ScanButtons *****************
  7626 ;; Defined at:
  7627 ;;		line 26 in file "Buttons.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;		None
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, status,2, status,0
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7641 ;;      Params:         0       0       0       0       0       0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0
  7644 ;;      Totals:         0       0       0       0       0       0       0
  7645 ;;Total ram usage:        0 bytes
  7646 ;; Hardware stack levels used: 1
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_high_isr
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text43
  7655   0018CE                     __ptext43:
  7656                           	callstack 0
  7657   0018CE                     _ScanButtons:
  7658                           	callstack 22
  7659   0018CE                     
  7660                           ;Buttons.c: 28:     if( PORTAbits.RA7 == 0 ) { hour_btn_released_cnt = 0; hour_btn_press
      +                          ed_cnt ++; BTN_CLICK_EVENT = 1; }
  7661   0018CE  BE80               	btfsc	128,7,c	;volatile
  7662   0018D0  EF6C  F00C         	goto	i2u135_41
  7663   0018D4  EF6E  F00C         	goto	i2u135_40
  7664   0018D8                     i2u135_41:
  7665   0018D8  EF76  F00C         	goto	i2l3983
  7666   0018DC                     i2u135_40:
  7667   0018DC  0E00               	movlw	0
  7668   0018DE  6E14               	movwf	(_hour_btn_released_cnt+1)^0,c
  7669   0018E0  0E00               	movlw	0
  7670   0018E2  6E13               	movwf	_hour_btn_released_cnt^0,c
  7671   0018E4  4A1D               	infsnz	_hour_btn_pressed_cnt^0,f,c
  7672   0018E6  2A1E               	incf	(_hour_btn_pressed_cnt+1)^0,f,c
  7673   0018E8  0E01               	movlw	1
  7674   0018EA  6E33               	movwf	_BTN_CLICK_EVENT^0,c
  7675   0018EC                     i2l3983:
  7676                           
  7677                           ;Buttons.c: 29:     if( PORTAbits.RA7 == 1 && BTN_CLICK_EVENT == 1 ){ hour_btn_pressed_c
      +                          nt = 0; hour_btn_released_cnt ++; }
  7678   0018EC  AE80               	btfss	128,7,c	;volatile
  7679   0018EE  EF7B  F00C         	goto	i2u136_41
  7680   0018F2  EF7D  F00C         	goto	i2u136_40
  7681   0018F6                     i2u136_41:
  7682   0018F6  EF8B  F00C         	goto	i2l3991
  7683   0018FA                     i2u136_40:
  7684   0018FA  0433               	decf	_BTN_CLICK_EVENT^0,w,c
  7685   0018FC  A4D8               	btfss	status,2,c
  7686   0018FE  EF83  F00C         	goto	i2u137_41
  7687   001902  EF85  F00C         	goto	i2u137_40
  7688   001906                     i2u137_41:
  7689   001906  EF8B  F00C         	goto	i2l3991
  7690   00190A                     i2u137_40:
  7691   00190A  0E00               	movlw	0
  7692   00190C  6E1E               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  7693   00190E  0E00               	movlw	0
  7694   001910  6E1D               	movwf	_hour_btn_pressed_cnt^0,c
  7695   001912  4A13               	infsnz	_hour_btn_released_cnt^0,f,c
  7696   001914  2A14               	incf	(_hour_btn_released_cnt+1)^0,f,c
  7697   001916                     i2l3991:
  7698                           
  7699                           ;Buttons.c: 31:     if( PORTAbits.RA4 == 0 ) { up_btn_released_cnt = 0; up_btn_pressed_c
      +                          nt ++; BTN_CLICK_EVENT = 2; }
  7700   001916  B880               	btfsc	128,4,c	;volatile
  7701   001918  EF90  F00C         	goto	i2u138_41
  7702   00191C  EF92  F00C         	goto	i2u138_40
  7703   001920                     i2u138_41:
  7704   001920  EF9A  F00C         	goto	i2l3999
  7705   001924                     i2u138_40:
  7706   001924  0E00               	movlw	0
  7707   001926  6E12               	movwf	(_up_btn_released_cnt+1)^0,c
  7708   001928  0E00               	movlw	0
  7709   00192A  6E11               	movwf	_up_btn_released_cnt^0,c
  7710   00192C  4A1B               	infsnz	_up_btn_pressed_cnt^0,f,c
  7711   00192E  2A1C               	incf	(_up_btn_pressed_cnt+1)^0,f,c
  7712   001930  0E02               	movlw	2
  7713   001932  6E33               	movwf	_BTN_CLICK_EVENT^0,c
  7714   001934                     i2l3999:
  7715                           
  7716                           ;Buttons.c: 32:     if( PORTAbits.RA4 == 1 && BTN_CLICK_EVENT == 2 ){ up_btn_pressed_cnt
      +                           = 0; up_btn_released_cnt ++; }
  7717   001934  A880               	btfss	128,4,c	;volatile
  7718   001936  EF9F  F00C         	goto	i2u139_41
  7719   00193A  EFA1  F00C         	goto	i2u139_40
  7720   00193E                     i2u139_41:
  7721   00193E  EFB0  F00C         	goto	i2l4007
  7722   001942                     i2u139_40:
  7723   001942  0E02               	movlw	2
  7724   001944  1833               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7725   001946  A4D8               	btfss	status,2,c
  7726   001948  EFA8  F00C         	goto	i2u140_41
  7727   00194C  EFAA  F00C         	goto	i2u140_40
  7728   001950                     i2u140_41:
  7729   001950  EFB0  F00C         	goto	i2l4007
  7730   001954                     i2u140_40:
  7731   001954  0E00               	movlw	0
  7732   001956  6E1C               	movwf	(_up_btn_pressed_cnt+1)^0,c
  7733   001958  0E00               	movlw	0
  7734   00195A  6E1B               	movwf	_up_btn_pressed_cnt^0,c
  7735   00195C  4A11               	infsnz	_up_btn_released_cnt^0,f,c
  7736   00195E  2A12               	incf	(_up_btn_released_cnt+1)^0,f,c
  7737   001960                     i2l4007:
  7738                           
  7739                           ;Buttons.c: 34:     if( PORTAbits.RA6 == 0 ) { down_btn_released_cnt = 0; down_btn_press
      +                          ed_cnt ++; BTN_CLICK_EVENT = 3; }
  7740   001960  BC80               	btfsc	128,6,c	;volatile
  7741   001962  EFB5  F00C         	goto	i2u141_41
  7742   001966  EFB7  F00C         	goto	i2u141_40
  7743   00196A                     i2u141_41:
  7744   00196A  EFBF  F00C         	goto	i2l4015
  7745   00196E                     i2u141_40:
  7746   00196E  0E00               	movlw	0
  7747   001970  6E10               	movwf	(_down_btn_released_cnt+1)^0,c
  7748   001972  0E00               	movlw	0
  7749   001974  6E0F               	movwf	_down_btn_released_cnt^0,c
  7750   001976  4A19               	infsnz	_down_btn_pressed_cnt^0,f,c
  7751   001978  2A1A               	incf	(_down_btn_pressed_cnt+1)^0,f,c
  7752   00197A  0E03               	movlw	3
  7753   00197C  6E33               	movwf	_BTN_CLICK_EVENT^0,c
  7754   00197E                     i2l4015:
  7755                           
  7756                           ;Buttons.c: 35:     if( PORTAbits.RA6 == 1 && BTN_CLICK_EVENT == 3 ){ down_btn_pressed_c
      +                          nt = 0; down_btn_released_cnt ++; }
  7757   00197E  AC80               	btfss	128,6,c	;volatile
  7758   001980  EFC4  F00C         	goto	i2u142_41
  7759   001984  EFC6  F00C         	goto	i2u142_40
  7760   001988                     i2u142_41:
  7761   001988  EFD5  F00C         	goto	i2l4023
  7762   00198C                     i2u142_40:
  7763   00198C  0E03               	movlw	3
  7764   00198E  1833               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7765   001990  A4D8               	btfss	status,2,c
  7766   001992  EFCD  F00C         	goto	i2u143_41
  7767   001996  EFCF  F00C         	goto	i2u143_40
  7768   00199A                     i2u143_41:
  7769   00199A  EFD5  F00C         	goto	i2l4023
  7770   00199E                     i2u143_40:
  7771   00199E  0E00               	movlw	0
  7772   0019A0  6E1A               	movwf	(_down_btn_pressed_cnt+1)^0,c
  7773   0019A2  0E00               	movlw	0
  7774   0019A4  6E19               	movwf	_down_btn_pressed_cnt^0,c
  7775   0019A6  4A0F               	infsnz	_down_btn_released_cnt^0,f,c
  7776   0019A8  2A10               	incf	(_down_btn_released_cnt+1)^0,f,c
  7777   0019AA                     i2l4023:
  7778                           
  7779                           ;Buttons.c: 37:     if( PORTDbits.RD6 == 0 ) { sel_btn_released_cnt = 0; sel_btn_pressed
      +                          _cnt ++; BTN_CLICK_EVENT = 4; }
  7780   0019AA  BC83               	btfsc	131,6,c	;volatile
  7781   0019AC  EFDA  F00C         	goto	i2u144_41
  7782   0019B0  EFDC  F00C         	goto	i2u144_40
  7783   0019B4                     i2u144_41:
  7784   0019B4  EFE4  F00C         	goto	i2l4031
  7785   0019B8                     i2u144_40:
  7786   0019B8  0E00               	movlw	0
  7787   0019BA  6E0E               	movwf	(_sel_btn_released_cnt+1)^0,c
  7788   0019BC  0E00               	movlw	0
  7789   0019BE  6E0D               	movwf	_sel_btn_released_cnt^0,c
  7790   0019C0  4A17               	infsnz	_sel_btn_pressed_cnt^0,f,c
  7791   0019C2  2A18               	incf	(_sel_btn_pressed_cnt+1)^0,f,c
  7792   0019C4  0E04               	movlw	4
  7793   0019C6  6E33               	movwf	_BTN_CLICK_EVENT^0,c
  7794   0019C8                     i2l4031:
  7795                           
  7796                           ;Buttons.c: 38:     if( PORTDbits.RD6 == 1 && BTN_CLICK_EVENT == 4 ){ sel_btn_pressed_cn
      +                          t = 0; sel_btn_released_cnt ++; }
  7797   0019C8  AC83               	btfss	131,6,c	;volatile
  7798   0019CA  EFE9  F00C         	goto	i2u145_41
  7799   0019CE  EFEB  F00C         	goto	i2u145_40
  7800   0019D2                     i2u145_41:
  7801   0019D2  EFFA  F00C         	goto	i2l4039
  7802   0019D6                     i2u145_40:
  7803   0019D6  0E04               	movlw	4
  7804   0019D8  1833               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7805   0019DA  A4D8               	btfss	status,2,c
  7806   0019DC  EFF2  F00C         	goto	i2u146_41
  7807   0019E0  EFF4  F00C         	goto	i2u146_40
  7808   0019E4                     i2u146_41:
  7809   0019E4  EFFA  F00C         	goto	i2l4039
  7810   0019E8                     i2u146_40:
  7811   0019E8  0E00               	movlw	0
  7812   0019EA  6E18               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  7813   0019EC  0E00               	movlw	0
  7814   0019EE  6E17               	movwf	_sel_btn_pressed_cnt^0,c
  7815   0019F0  4A0D               	infsnz	_sel_btn_released_cnt^0,f,c
  7816   0019F2  2A0E               	incf	(_sel_btn_released_cnt+1)^0,f,c
  7817   0019F4                     i2l4039:
  7818                           
  7819                           ;Buttons.c: 40:     if( PORTBbits.RB4 == 0 ) { reset_btn_released_cnt = 0; reset_btn_pre
      +                          ssed_cnt ++; BTN_CLICK_EVENT = 5; }
  7820   0019F4  B881               	btfsc	129,4,c	;volatile
  7821   0019F6  EFFF  F00C         	goto	i2u147_41
  7822   0019FA  EF01  F00D         	goto	i2u147_40
  7823   0019FE                     i2u147_41:
  7824   0019FE  EF09  F00D         	goto	i2l4047
  7825   001A02                     i2u147_40:
  7826   001A02  0E00               	movlw	0
  7827   001A04  6E0C               	movwf	(_reset_btn_released_cnt+1)^0,c
  7828   001A06  0E00               	movlw	0
  7829   001A08  6E0B               	movwf	_reset_btn_released_cnt^0,c
  7830   001A0A  4A15               	infsnz	_reset_btn_pressed_cnt^0,f,c
  7831   001A0C  2A16               	incf	(_reset_btn_pressed_cnt+1)^0,f,c
  7832   001A0E  0E05               	movlw	5
  7833   001A10  6E33               	movwf	_BTN_CLICK_EVENT^0,c
  7834   001A12                     i2l4047:
  7835                           
  7836                           ;Buttons.c: 41:     if( PORTBbits.RB4 == 1 && BTN_CLICK_EVENT == 5 ){ reset_btn_pressed_
      +                          cnt = 0; reset_btn_released_cnt ++; }
  7837   001A12  A881               	btfss	129,4,c	;volatile
  7838   001A14  EF0E  F00D         	goto	i2u148_41
  7839   001A18  EF10  F00D         	goto	i2u148_40
  7840   001A1C                     i2u148_41:
  7841   001A1C  EF1F  F00D         	goto	i2l903
  7842   001A20                     i2u148_40:
  7843   001A20  0E05               	movlw	5
  7844   001A22  1833               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7845   001A24  A4D8               	btfss	status,2,c
  7846   001A26  EF17  F00D         	goto	i2u149_41
  7847   001A2A  EF19  F00D         	goto	i2u149_40
  7848   001A2E                     i2u149_41:
  7849   001A2E  EF1F  F00D         	goto	i2l903
  7850   001A32                     i2u149_40:
  7851   001A32  0E00               	movlw	0
  7852   001A34  6E16               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  7853   001A36  0E00               	movlw	0
  7854   001A38  6E15               	movwf	_reset_btn_pressed_cnt^0,c
  7855   001A3A  4A0B               	infsnz	_reset_btn_released_cnt^0,f,c
  7856   001A3C  2A0C               	incf	(_reset_btn_released_cnt+1)^0,f,c
  7857   001A3E                     i2l903:
  7858   001A3E  0012               	return		;funcret
  7859   001A40                     __end_of_ScanButtons:
  7860                           	callstack 0
  7861                           
  7862                           	psect	rparam
  7863   000000                     
  7864                           	psect	temp
  7865   000074                     btemp:
  7866                           	callstack 0
  7867   000074                     	ds	1
  7868   000000                     int$flags	set	btemp
  7869   000000                     wtemp8	set	btemp+1
  7870   000000                     ttemp5	set	btemp+1
  7871   000000                     ttemp6	set	btemp+4
  7872   000000                     ttemp7	set	btemp+8
  7873                           
  7874                           	psect	config
  7875                           
  7876                           ; Padding undefined space
  7877   300000                     	org	3145728
  7878   300000  FF                 	db	255
  7879                           
  7880                           ;Config register CONFIG1H @ 0x300001
  7881                           ;	Oscillator Selection bits
  7882                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7883                           ;	Fail-Safe Clock Monitor Enable bit
  7884                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7885                           ;	Internal/External Oscillator Switchover bit
  7886                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7887   300001                     	org	3145729
  7888   300001  08                 	db	8
  7889                           
  7890                           ;Config register CONFIG2L @ 0x300002
  7891                           ;	Power-up Timer Enable bit
  7892                           ;	PWRT = OFF, PWRT disabled
  7893                           ;	Brown-out Reset Enable bits
  7894                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7895                           ;	Brown Out Reset Voltage bits
  7896                           ;	BORV = 3, Minimum setting
  7897   300002                     	org	3145730
  7898   300002  1F                 	db	31
  7899                           
  7900                           ;Config register CONFIG2H @ 0x300003
  7901                           ;	Watchdog Timer Enable bit
  7902                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7903                           ;	Watchdog Timer Postscale Select bits
  7904                           ;	WDTPS = 32768, 1:32768
  7905   300003                     	org	3145731
  7906   300003  1E                 	db	30
  7907                           
  7908                           ; Padding undefined space
  7909   300004                     	org	3145732
  7910   300004  FF                 	db	255
  7911                           
  7912                           ;Config register CONFIG3H @ 0x300005
  7913                           ;	CCP2 MUX bit
  7914                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7915                           ;	PORTB A/D Enable bit
  7916                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7917                           ;	Low-Power Timer1 Oscillator Enable bit
  7918                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7919                           ;	MCLR Pin Enable bit
  7920                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  7921   300005                     	org	3145733
  7922   300005  01                 	db	1
  7923                           
  7924                           ;Config register CONFIG4L @ 0x300006
  7925                           ;	Stack Full/Underflow Reset Enable bit
  7926                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  7927                           ;	Single-Supply ICSP Enable bit
  7928                           ;	LVP = OFF, Single-Supply ICSP disabled
  7929                           ;	Extended Instruction Set Enable bit
  7930                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7931                           ;	Background Debugger Enable bit
  7932                           ;	DEBUG = 0x1, unprogrammed default
  7933   300006                     	org	3145734
  7934   300006  80                 	db	128
  7935                           
  7936                           ; Padding undefined space
  7937   300007                     	org	3145735
  7938   300007  FF                 	db	255
  7939                           
  7940                           ;Config register CONFIG5L @ 0x300008
  7941                           ;	Code Protection bit
  7942                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  7943                           ;	Code Protection bit
  7944                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  7945                           ;	Code Protection bit
  7946                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  7947                           ;	Code Protection bit
  7948                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  7949   300008                     	org	3145736
  7950   300008  0F                 	db	15
  7951                           
  7952                           ;Config register CONFIG5H @ 0x300009
  7953                           ;	Boot Block Code Protection bit
  7954                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7955                           ;	Data EEPROM Code Protection bit
  7956                           ;	CPD = OFF, Data EEPROM not code-protected
  7957   300009                     	org	3145737
  7958   300009  C0                 	db	192
  7959                           
  7960                           ;Config register CONFIG6L @ 0x30000A
  7961                           ;	Write Protection bit
  7962                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  7963                           ;	Write Protection bit
  7964                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  7965                           ;	Write Protection bit
  7966                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  7967                           ;	Write Protection bit
  7968                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  7969   30000A                     	org	3145738
  7970   30000A  0F                 	db	15
  7971                           
  7972                           ;Config register CONFIG6H @ 0x30000B
  7973                           ;	Configuration Register Write Protection bit
  7974                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7975                           ;	Boot Block Write Protection bit
  7976                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  7977                           ;	Data EEPROM Write Protection bit
  7978                           ;	WRTD = OFF, Data EEPROM not write-protected
  7979   30000B                     	org	3145739
  7980   30000B  E0                 	db	224
  7981                           
  7982                           ;Config register CONFIG7L @ 0x30000C
  7983                           ;	Table Read Protection bit
  7984                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  7985                           ;	Table Read Protection bit
  7986                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  7987                           ;	Table Read Protection bit
  7988                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  7989                           ;	Table Read Protection bit
  7990                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7991   30000C                     	org	3145740
  7992   30000C  0F                 	db	15
  7993                           
  7994                           ;Config register CONFIG7H @ 0x30000D
  7995                           ;	Boot Block Table Read Protection bit
  7996                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7997   30000D                     	org	3145741
  7998   30000D  40                 	db	64
  7999                           tosu	equ	0xFFF
  8000                           tosh	equ	0xFFE
  8001                           tosl	equ	0xFFD
  8002                           stkptr	equ	0xFFC
  8003                           pclatu	equ	0xFFB
  8004                           pclath	equ	0xFFA
  8005                           pcl	equ	0xFF9
  8006                           tblptru	equ	0xFF8
  8007                           tblptrh	equ	0xFF7
  8008                           tblptrl	equ	0xFF6
  8009                           tablat	equ	0xFF5
  8010                           prodh	equ	0xFF4
  8011                           prodl	equ	0xFF3
  8012                           indf0	equ	0xFEF
  8013                           postinc0	equ	0xFEE
  8014                           postdec0	equ	0xFED
  8015                           preinc0	equ	0xFEC
  8016                           plusw0	equ	0xFEB
  8017                           fsr0h	equ	0xFEA
  8018                           fsr0l	equ	0xFE9
  8019                           wreg	equ	0xFE8
  8020                           indf1	equ	0xFE7
  8021                           postinc1	equ	0xFE6
  8022                           postdec1	equ	0xFE5
  8023                           preinc1	equ	0xFE4
  8024                           plusw1	equ	0xFE3
  8025                           fsr1h	equ	0xFE2
  8026                           fsr1l	equ	0xFE1
  8027                           bsr	equ	0xFE0
  8028                           indf2	equ	0xFDF
  8029                           postinc2	equ	0xFDE
  8030                           postdec2	equ	0xFDD
  8031                           preinc2	equ	0xFDC
  8032                           plusw2	equ	0xFDB
  8033                           fsr2h	equ	0xFDA
  8034                           fsr2l	equ	0xFD9
  8035                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        54
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     24     115
    BANK0           128      4     128
    BANK1           256      8      24
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S3759$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3759$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    UpdateDisplay@update_datas	PTR unsigned char  size(2) Largest target is 6
		 -> ReadCounter@counter_datas(BANK1[6]), Ds1307Read@ds1307_date_datas(BANK1[6]), 

    sp__ReadCounter	PTR unsigned char  size(2) Largest target is 6
		 -> ReadCounter@counter_datas(BANK1[6]), 

    Ds1307Write@write_datas	PTR unsigned char  size(2) Largest target is 10
		 -> rtc_default_values(BANK1[10]), real_rtc_data(COMRAM[7]), 

    sp__Ds1307Read	PTR unsigned char  size(2) Largest target is 6
		 -> Ds1307Read@ds1307_date_datas(BANK1[6]), 


Critical Paths under _main in COMRAM

    _main->_UpdateDisplay
    _VerifyButtons->_ActionButtons
    _ActionButtons->_Ds1307Write
    _UpdateDisplay->_ReadCounter
    _ReadCounter->___awdiv
    _Ds1307Read->_I2cRead
    _DeviceInit->_MCP41010Write
    _Ds1307Write->_I2cWrite
    _CounterSetting->___awdiv
    _ClockSetting->_MarkDisplay

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_ScanDisplay
    _ScanDisplay->_TLC5917Write

Critical Paths under _main in BANK0

    _main->_UpdateDisplay

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Ds1307Read
    _UpdateDisplay->_Ds1307Read

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14630
                                             22 COMRAM     2     2      0
                       _BlinkDisable
                       _ClockSetting
                     _CounterSetting
                         _DeviceInit
                         _Ds1307Read
                         _LEDProcess
                        _ReadCounter
                      _UpdateDisplay
                      _VerifyButtons
 ---------------------------------------------------------------------------------
 (1) _VerifyButtons                                        2     2      0    4161
                                             18 COMRAM     2     2      0
                      _ActionButtons
 ---------------------------------------------------------------------------------
 (2) _ActionButtons                                        3     3      0    4161
                                             15 COMRAM     3     3      0
                        _Ds1307Write
                         _SetCounter
                       _StartCounter
                        _StopCounter
 ---------------------------------------------------------------------------------
 (3) _StopCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartCounter                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetCounter                                           3     1      2    1348
                                             11 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _UpdateDisplay                                        5     1      4    1033
                                             21 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                         _Ds1307Read (ARG)
                        _MarkDisplay
                        _ReadCounter (ARG)
 ---------------------------------------------------------------------------------
 (1) _ReadCounter                                          8     6      2    3260
                                             19 COMRAM     2     0      2
                                              0 BANK1      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _LEDProcess                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ds1307Read                                          12    10      2     827
                                             13 COMRAM     4     2      2
                                              0 BANK1      8     8      0
                            _I2cRead
                         _I2cRestart
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (2) _I2cRestart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2cRead                                              2     2      0      68
                                             11 COMRAM     2     2      0
                            _I2cWait
 ---------------------------------------------------------------------------------
 (1) _DeviceInit                                           0     0      0    2150
                         _Ds1307Init
                        _Ds1307Write
                _EnableAllInterrupts
                       _MCP41010Init
                      _MCP41010Write
                        _OpenButtons
                        _OpenCounter
                        _OpenDisplay
                         _OpenTimer0
                     _OscillatorInit
                        _StartTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     194
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _StartTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OscillatorInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenDisplay                                          1     1      0      90
                                             11 COMRAM     1     1      0
                        _TLC5917Init
 ---------------------------------------------------------------------------------
 (3) _TLC5917Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenButtons                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MCP41010Write                                        9     5      4     380
                                             11 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _MCP41010Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EnableAllInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Ds1307Write                                          3     1      2    1442
                                             12 COMRAM     3     1      2
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (4) _I2cWrite                                             1     1      0      31
                                             11 COMRAM     1     1      0
                            _I2cWait
 ---------------------------------------------------------------------------------
 (5) _I2cWait                                              0     0      0       0
                            _I2cStop
 ---------------------------------------------------------------------------------
 (6) _I2cStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ds1307Init                                           0     0      0       0
                            _I2cInit
 ---------------------------------------------------------------------------------
 (3) _I2cInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CounterSetting                                       0     0      0    3069
                        _MarkDisplay
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1513
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1525
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ClockSetting                                         3     3      0      62
                                             14 COMRAM     3     3      0
                        _MarkDisplay
 ---------------------------------------------------------------------------------
 (2) _MarkDisplay                                          3     3      0      31
                                             11 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _BlinkDisable                                         1     1      0      68
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                              1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_isr                                             2     2      0     892
                                              8 COMRAM     2     2      0
                        _ScanButtons
                        _ScanCounter
                        _ScanDisplay
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (9) i2_WriteTimer0                                        4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _ScanDisplay                                          2     2      0     798
                                              6 COMRAM     2     2      0
                       _TLC5917Write
 ---------------------------------------------------------------------------------
 (10) _TLC5917Write                                        6     4      2     798
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) _ScanCounter                                          5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (9) _ScanButtons                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlinkDisable
   _ClockSetting
     _MarkDisplay
   _CounterSetting
     _MarkDisplay
     ___awdiv
     ___awmod
   _DeviceInit
     _Ds1307Init
       _I2cInit
     _Ds1307Write
       _I2cStart
       _I2cStop
       _I2cWrite
         _I2cWait
           _I2cStop
     _EnableAllInterrupts
     _MCP41010Init
     _MCP41010Write
     _OpenButtons
     _OpenCounter
     _OpenDisplay
       _TLC5917Init
     _OpenTimer0
     _OscillatorInit
     _StartTimer0
     _WriteTimer0
   _Ds1307Read
     _I2cRead
       _I2cWait
     _I2cRestart
     _I2cStart
     _I2cStop
     _I2cWrite
   _LEDProcess
   _ReadCounter
     ___awdiv
     ___awmod
   _UpdateDisplay
     _Ds1307Read (ARG)
     _MarkDisplay (ARG)
     _ReadCounter (ARG)
   _VerifyButtons
     _ActionButtons
       _Ds1307Write
       _SetCounter
       _StartCounter
       _StopCounter

 _low_isr (ROOT)

 _high_isr (ROOT)
   _ScanButtons
   _ScanCounter
   _ScanDisplay
     _TLC5917Write
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      8      18       7        9.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80      4      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     18      73       1       91.3%
BITBIGSFRhhhll      18      0       0      17        0.0%
BITBIGSFRlhllhh      D      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlllllh      6      0       0      30        0.0%
BITBIGSFRllllh       5      0       0      29        0.0%
BITBIGSFRllh         5      0       0      28        0.0%
BITBIGSFRlhllhl      4      0       0      25        0.0%
BITBIGSFRlhhhh       2      0       0      19        0.0%
BITBIGSFRlhlh        2      0       0      21        0.0%
BITBIGSFRlhllhl      1      0       0      24        0.0%
BITBIGSFRlhllhl      1      0       0      23        0.0%
BITBIGSFRlhllhl      1      0       0      26        0.0%
BITBIGSFRlhhl        1      0       0      20        0.0%
BITBIGSFRlhlll       1      0       0      27        0.0%
BITBIGSFRhl          1      0       0      18        0.0%
BITBIGSFRllllll      1      0       0      31        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10B      32        0.0%
DATA                 0      0     10B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Nov 06 15:41:42 2023

                          l7 296E              ??_UpdateDisplay 0069                  _SSPSTATbits 0FC7  
                         l32 294E                           l53 1D0C                           l45 1FC2  
                         l49 1BE2                 ___awdiv@sign 0064                           bsr 0FE0  
   ReadCounter@counter_datas 010A    UpdateDisplay@end_position 00FF                  ?_LEDProcess 0054  
                        l110 293C                          l104 28E2                          l113 291C  
                        l122 28F4                          l107 292E                          l116 292A  
                        l132 28BC                          l140 2798                          l125 2894  
                        l141 27AC                          l127 28A2                          l135 28CE  
                        l143 27BA                          l119 28E6                          l144 27BC  
                        l129 28B4                          l138 278A                          l411 2846  
                        l315 25C4                          l332 281E                          l341 2918  
                        l413 2848                          l326 209C                          l318 242C  
                        l422 299E                          l419 2906                          l283 1720  
                        l284 1736                          l706 2706                          l298 17E2  
                        l643 27F0                          l651 2784                          l734 171A  
                        l646 22DE                          l654 299A                          l729 2748  
                        l649 2778                          l657 2994                          l783 286E  
                        l599 29A2                          l960 0698                          l890 26A0  
                        l971 076A                          l955 11C0                          l980 081E  
                        l948 150E                          l981 0856                          l958 066E  
                        l983 087A                          l992 091C                          l968 0726  
                        l993 0954                          l995 0978         __end_of_BlinkDisable 2870  
                ?_Ds1307Init 0054                  ?_Ds1307Read 0061                 ___awmod@sign 0064  
                        wreg 0FE8                   _TXSTA1bits 0FAC                ??_MarkDisplay 005F  
            __end_of_I2cInit 28E4              __end_of_I2cRead 27BE              __end_of_I2cWait 28B6  
            __end_of_I2cStop 292C             _SYSTEM_STATE_FLG 0048                         l1004 0A1A  
                       l1005 0A52                         l1031 0C4A                         l1007 0A6E  
                       l1040 0CEA                         l1016 0B08                         l1017 0B40  
                       l1042 0D14                         l1019 0B58                         l1028 0BEE  
                       l1029 0C26                         l1712 2104                         l1714 2162  
                       l1715 2168                         l1708 297C                         l1992 238E  
                       l1979 222C                         l7071 27F2                         l7065 284E  
                       l7073 27F4                         l7067 285C                         l7059 284A  
                       l9011 15A6                         l9003 15A0                         l5811 2822  
                       l7075 2806                         l5731 2760                         l7069 285E  
                       l5901 2110                         l5725 2908                         l5821 2840  
                       l5813 2828                         l7077 2816                         l5733 2764  
                       l9101 075A                         l9031 15BE                         l9023 15B8  
                       l9015 15AC                         l5911 213C                         l5903 212E  
                       l5831 27E8                         l5815 282C                         l5823 28F6  
                       l7079 281C                         l5735 276C                         l5727 274C  
                       l9111 0770                         l5665 28D0                         l5809 29A0  
                       l5921 2150                         l5913 213E                         l5905 2136  
                       l5833 27EA                         l5841 26C2                         l5817 2830  
                       l5825 299C                         l5729 275C                         l5737 2996  
                       l9201 09C4                         l9113 0782                         l9105 075E  
                       l9035 15C4                         l9019 15B2                         l5667 28D6  
                       l5923 2152                         l5915 2140                         l5907 2138  
                       l5835 27EC                         l5827 27BE                         l5851 26E8  
                       l5843 26C6                         l5819 2832                         l5739 2990  
                       l9203 09C8                         l9115 078A                         l9051 0624  
                       l9045 15D0                         l5861 2970                         l5917 2142  
                       l5909 213A                         l5837 27EE                         l5829 27E6  
                       l5853 26EA                         l9221 09E0                         l9141 0824  
                       l9125 07C4                         l9117 07B8                         l9109 076E  
                       l9053 0628                         l9039 15CA                         l5791 293E  
                       l5919 2144                         l5871 20B2                         l5863 209E  
                       l5855 26FA                         l5839 26A2                         l9311 0C22  
                       l9223 0A1E                         l9151 087E                         l9143 0852  
                       l9119 07BC                         l9063 0652                         l9055 0638  
                       l5793 2942                         l5881 20DE                         l5873 20D0  
                       l5865 20AE                         l5857 2636                         l5849 26CA  
                       l9321 0C50                         l9313 0C3A                         l9305 0BB4  
                       l9241 0A8C                         l9225 0A20                         l9209 09D0  
                       l9161 08CA                         l9153 0880                         l9145 086A  
                       l9137 07E4                         l9129 07D4                         l9081 06A0  
                       l9073 0682                         l9065 0662                         l9057 063C  
                       l5795 294A                         l5891 20F2                         l5883 20E0  
                       l5875 20D8                         l5859 2640                         l9411 0DEE  
                       l9403 0DA4                         l9323 0C5E                         l9315 0C3E  
                       l9307 0BF2                         l9251 0ABE                         l9235 0A72  
                       l9227 0A4E                         l9155 0890                         l9147 086E  
                       l9139 0822                         l9075 0684                         l9067 066A  
                       l9059 064A                         l5893 20F4                         l5885 20E2  
                       l5877 20DA                         l5789 2962                         l9501 0F82  
                       l9421 0E16                         l9413 0E02                         l9405 0DDE  
                       l9325 0C66                         l9309 0BF4                         l9237 0A74  
                       l9229 0A66                         l9181 0920                         l9157 0898  
                       l9085 06B4                         l9077 0694                         l9069 0672  
                       l5895 210C                         l5887 20E4                         l5879 20DC  
                       l9511 0FA6                         l9503 0F92                         l9431 0E2A  
                       l9423 0E1A                         l9415 0E06                         l9351 0CF0  
                       l9335 0CA0                         l9327 0C94                         l9319 0C4E  
                       l9239 0A84                         l9263 0ACE                         l9183 0922  
                       l9167 08D2                         l9159 08C6                         l9095 06DC  
                       l5889 20E6                         l9513 0FBA                         l9505 0F94  
                       l9433 0E52                         l9425 0E1E                         l9417 0E0A  
                       l9361 0D1A                         l9353 0D04                         l9329 0C98  
                       l9265 0B0C                         l9193 097C                         l9185 0950  
                       l9097 072A                         l9089 06C8                         l8811 2894  
                       l9531 100E                         l9523 0FCE                         l9515 0FBC  
                       l9443 0E84                         l9435 0E60                         l9427 0E22  
                       l9419 0E12                         l9451 0EB0                         l9363 0D2A  
                       l9355 0D08                         l9347 0CB0                         l9283 0B72  
                       l9267 0B0E                         l9195 097E                         l9187 0968  
                       l9179 08E2                         l9099 072C                         l9701 2314  
                       l8813 28B0                         l8821 1BAC                         l9541 1036  
                       l9525 0FF8                         l9453 0EEA                         l9349 0CEE  
                       l9381 0D42                         l9293 0BA4                         l9277 0B5C  
                       l9269 0B3C                         l9197 098E                         l9189 096C  
                       l8911 1534                         l8903 1528                         l9711 235A  
                       l9703 2326                         l8815 292C                         l8831 1C02  
                       l8823 1BBC                         l9527 0FFC                         l9455 0EFC  
                       l9439 0E70                         l9391 0D94                         l9383 0D7C  
                       l9359 0D18                         l9279 0B5E                         l9199 0996  
                       l9721 2386                         l9713 2362                         l9705 232E  
                       l8809 291A                         l8817 28B8                         l8841 1C3C  
                       l8833 1C12                         l8825 1BCC                         l9801 258C  
                       l9537 1020                         l9529 100C                         l9369 0D32  
                       l9553 1072                         l8931 1552                         l8923 1546  
                       l8915 153A                         l8907 152E                         l9651 2184  
                       l9715 2368                         l9707 2336                         l8819 28CA  
                       l8851 1C70                         l8843 1C42                         l8835 1C22  
                       l8827 1BDC                         l9811 25B0                         l9803 2590  
                       l9731 1E82                         l9571 1160                         l9563 112E  
                       l9539 1034                         l9475 0F14                         l9387 0D88  
                       l9555 10FC                         l9661 21AA                         l9653 2188  
                       l9645 216A                         l9709 2344                         l9717 236E  
                       l8861 1CAC                         l8853 1C78                         l8845 1C48  
                       l8829 1BF8                         l8837 1C28                         l9813 25B4  
                       l9805 25A4                         l9741 1EA2                         l9733 1E88  
                       l9725 1E6E                         l9581 11A2                         l9573 1170  
                       l9565 113E                         l9557 110C                         l9549 1048  
                       l9485 0F2C                         l9477 0F18                         l9821 11C2  
                       l8951 156A                         l8943 155E                         l8935 1558  
                       l8927 154C                         l8919 1540                         l9671 21E0  
                       l9663 21BC                         l9655 2196                         l9647 216E  
                       l9719 237E                         l8871 1CF2                         l8863 1CBE  
                       l8855 1C8A                         l8847 1C56                         l8839 1C38  
                       l9815 25B8                         l9807 25A8                         l9751 1EE2  
                       l9743 1EA6                         l9727 1E72                         l9583 11B4  
                       l9575 1182                         l9567 1150                         l9559 111E  
                       l9487 0F40                         l9479 0F1A                         l9911 1472  
                       l9903 1432                         l9831 1206                         l9823 11C6  
                       l9673 21F6                         l9665 21C4                         l9681 220C  
                       l9657 219E                         l9649 217C                         l8873 1CFA  
                       l8865 1CC6                         l8857 1C92                         l8849 1C5E  
                       l9817 25BC                         l9809 25AC                         l8881 2788  
                       l9761 1F5A                         l9753 1EEC                         l9745 1EB6  
                       l9729 1E78                         l9585 11B8                         l9489 0F42  
                       l9497 0F54                         l9913 1488                         l9905 1448  
                       l9833 121C                         l9841 125C                         l9825 11DC  
                       l8971 1582                         l8963 1576                         l8947 1564  
                       l8891 1516                         l9683 221C                         l9675 21FE  
                       l9667 21CC                         l9659 21A2                         l9691 22E4  
                       l8875 1D00                         l8867 1CD8                         l8859 1CA4  
                       l9819 25C0                         l8883 279C                         l9755 1F00  
                       l9747 1EBE                         l9739 1E8E                         l9931 2708  
                       l9579 1192                         l9499 0F7E                         l9915 14A4  
                       l9907 1458                         l9851 12A4                         l9843 1264  
                       l9835 1238                         l9827 11EC                         l9941 1FCA  
                       l9685 2224                         l9677 2200                         l9669 21DA  
                       l9693 22F2                         l8869 1CE0                         l9781 254E  
                       l8885 27A0                         l8877 28E4                         l9757 1F0A  
                       l9765 1F82                         l9749 1ED2                         l9933 2712  
                       l9917 14B0                         l9909 146E                         l9853 12BA  
                       l9845 127A                         l9837 1244                         l9829 1202  
                       l9925 14CC                         l8983 1588                         l8967 157C  
                       l8959 1570                         l8895 151C                         l9951 2062  
                       l9943 200A                         l9679 2206                         l9695 22FA  
                       l9791 2570                         l9783 2552                         l8887 27AA  
                       l8879 2788                         l9759 1F32                         l9767 1FB6  
                       l9935 2732                         l9919 14C0                         l9871 133E  
                       l9863 12FE                         l9855 12D6                         l9847 128A  
                       l9839 1254                         STR_2 0617                         l8889 1512  
                       l9953 2064                         l9945 204A                         l9697 22FE  
                       l9689 22E0                         l9793 2574                         l9785 255A  
                       l9769 1FBA                         l9937 2734                         l9873 1354  
                       l9865 1314                         l9857 12E2                         l9849 12A0  
                       STR_3 0601                         l8995 1594                         l8987 158E  
                       l8899 1522                         l9947 205E                         l9939 1FC6  
                       l9699 230C                         l9795 2578                         l9787 2560  
                       l9779 254A                         l9963 222E                         l9891 13D8  
                       l9883 1398                         l9875 1370                         l9867 1324  
                       l9859 12F2                         l9971 171C                         l9949 2060  
                       l9957 206A                         l9797 257C                         l9789 256C  
                       l9965 22D6                         l9893 13EE                         l9885 13AE  
                       l9877 137C                         l9869 133A                         l9981 174A  
                       l9973 1724                         l8999 159A                         l9799 2580  
                       l9895 140A                         l9887 13BE                         l9879 138C  
                       l9991 1766                         l9983 174E                         l9969 2390  
                       l9897 1416                         l9889 13D4                         l9993 176E  
                       l9985 1754                         l9977 173C                         l9899 1426  
                       l9995 1772                         l9987 175C                         l9979 1740  
                       l9997 1778                         l9989 1760                         u3200 2840  
                       u3201 283C                         u3210 26FA                         u3211 26F6  
                       u3220 20C4                         u3221 20BC                         u3240 2104  
                       u3241 2100                         u3250 2122                         u3090 275C  
                       u3251 211A                         u3091 2758                         u3270 2162  
                       u3238 20C6                         u3271 215E                         _PIE1 0F9D  
                       u4240 286E                         u6000 21F6                         u4241 286A  
                       u6001 21F2                         u6010 221C                         u4250 2806  
                       u6011 2218                         u4251 2802                         u6020 22F2  
                       u3268 2124                         u6100 1ED0                         u4260 2816  
                       u6021 22EE                         u4261 2812                         u6030 230C  
                       u6110 1EE2                         u6031 2308                         u6111 1EDE  
                       u6040 2326                         u5400 1BDC                         u6120 1EFC  
                       u6200 12A0                         u6041 2322                         u5401 1BD8  
                       u6121 1EF6                         u6201 129C                         u6050 2344  
                       u5410 1BF8                         u6130 1EFE                         u6210 12BA  
                       u6051 2340                         u5411 1BF4                         u6211 12B6  
                       u6060 235A                         u5340 292A                         u5420 1C12  
                       u5500 075A                         u6300 13D4                         u6220 12D6  
                       u6140 11DC                         u6061 2356                         u5341 2926  
                       u5421 1C0E                         u5501 0756                         u6301 13D0  
                       u6221 12D2                         u6141 11D8                         u6070 237E  
                       u5350 28A2                         u5430 1C22                         u5510 0782  
                       u6310 13EE                         u6230 12F2                         u6150 1202  
                       u6071 237A                         u5351 289E                         u5431 1C1E  
                       u5511 077E                         u6311 13EA                         u6231 12EE  
                       u6151 11FE                         u5360 28B0                         u5440 28F4  
                       u6080 1EB6                         u5600 09C4                         u5520 07B8  
                       u6320 140A                         u6240 1314                         u6160 121C  
                       u6400 1732                         u5361 28AC                         u5441 28F0  
                       u6081 1EB2                         u5601 09C0                         u5521 07B4  
                       u6321 1406                         u6241 1310                         u6161 1218  
                       u6401 172E                         u5370 293C                         u5450 2798  
                       u6090 1ECE                         u5610 0A4E                         u5530 0852  
                       u6330 1426                         u6250 133A                         u6170 1238  
                       u6410 185E                         u5371 2938                         u5451 2794  
                       u6091 1EC8                         u5611 0A4A                         u5531 084E  
                       u6331 1422                         u6251 1336                         u6171 1234  
                       u6411 185A                         u5380 28CA                         u5700 0C3A  
                       u5620 0A66                         u5540 086A                         u6340 1448  
                       u6260 1354                         u6180 1254                         u5381 28C6  
                       u5701 0C36                         u5621 0A62                         u5541 0866  
                       u6341 1444                         u6261 1350                         u6181 1250  
                       u5390 1BCC                         u5470 27BA                         u5710 0C5E  
                       u5630 0A84                         u5550 0890                         u6350 146E  
                       u6270 1370                         u6190 127A                         u5391 1BC8  
                       u5471 27B6                         u5711 0C5A                         u5631 0A80  
                       u5551 088C                         u6351 146A                         u6271 136C  
                       u6191 1276                         u5800 0EAA                         u5720 0C94  
                       u5640 0ABA                         u5560 08C6                         u5480 0662  
                       u6360 1488                         u6280 138C                         u5465 27A8  
                       u5721 0C90                         u5641 0AB6                         u5561 08C2  
                       u5481 065E                         u6361 1484                         u6281 1388  
                       u5466 27AA                         u5810 0EFC                         u5730 0D04  
                       u5650 0B3C                         u5570 0950                         u5490 0694  
                       u6370 14A4                         u6290 13AE                         u5811 0EF8  
                       u5731 0D00                         u5651 0B38                         u5571 094C  
                       u5491 0690                         u6371 14A0                         u6291 13AA  
                       u5900 113E                         u5820 0F10                         u5740 0D2A  
                       u5660 0B54                         u5580 0968                         u6380 14C0  
                       u5901 113A                         u5821 0F0C                         u5741 0D26  
                       u5661 0B50                         u5581 0964                         u6381 14BC  
                       u6390 2748                         u5910 1150                         u5830 0F40  
                       u5750 0E02                         u5670 0B6E                         u5590 098E  
                       u6391 2744                         u5911 114C                         u5831 0F3C  
                       u5751 0DFE                         u5671 0B6A                         u5591 098A  
                       u5920 1170                         u5840 0F92                         u5760 0E4E  
                       u5680 0BA0                         u5921 116C                         u5841 0F8E  
                       u5761 0E48                         u5681 0B9C                         u5930 1182  
                       u5850 0FBA                         u5770 0E50                         u5690 0C22  
                       u5931 117E                         u5851 0FB6                         u5691 0C1E  
                       u5940 11A2                         u5860 100C                         u5780 0E80  
                       u5941 119E                         u5861 1008                         u5781 0E7C  
                       u5950 11B4                         u5870 1034                         u5790 0EA8  
                       u5951 11B0                         u5871 1030                         u5791 0EA2  
                       u5960 217C                         u5880 110C                         u5961 2178  
                       u5881 1108                         u5970 2196                         u5890 111E  
                       u5971 2192                         u5891 111A                         u5980 21BC  
                       u5981 21B8                         u5990 21DA                         u5991 21D6  
                       _TMR2 0FCC       __end_of_CounterSetting 242E         __end_of_MCP41010Init 297E  
                       _main 171C                 ?_Ds1307Write 0060                         fsr2h 0FDA  
                       indf1 0FE7                         indf2 0FDF                         fsr1l 0FE1  
                       fsr2l 0FD9                         btemp 0074                         start 0026  
               ?_TLC5917Init 0054                ??_ReadCounter 0069                 ___param_bank 0000  
             SetCounter@hour 0061             __end_of_I2cStart 293E             __end_of_I2cWrite 28D0  
                 _DeviceInit 254A         __end_of_ClockSetting 209E                        l10001 1780  
                      l10011 17EC                        l10003 17BA                        l10021 1880  
                      l10013 184E                        l10005 17C2                        l10007 17E2  
                      l10017 1862                        l10025 1888                        l10501 08F6  
                      l10511 0D56                        l10503 09F4                        l10521 105C  
                      l10513 0DB8                        l10505 0AE2                        l10523 1086  
                      l10515 0EC4                        l10507 0BC8                        l10525 1F98  
                      l10517 0F68                        l10509 0CC4                        l10527 207E  
                      l10519 0FE2                        l10529 15E4                        l10491 1800  
                      l10493 189C                        l10495 14E0                        l10497 06F0  
                      l10489 1794                        l10499 07F8                        ?_main 0054  
              ??_ScanDisplay 005A              __end_of___awdiv 222E                        _EEADR 0FA9  
            __end_of___awmod 2390                   _Gateway_IP 0094                        _T0CON 0FD5  
            ___awdiv@divisor 0061                        _T1CON 0FCD                        _T2CON 0FCA  
                      _T3CON 0FB1                ??_ScanCounter 0054                        i2l345 252A  
                      i2l346 2548                        i2l419 2960                        i1l596 001E  
                      i2l710 1BAA                        i2l661 1E68                        i2l590 262A  
                      i2l903 1A3E                        i2l589 2606              ___awdiv@counter 0063  
              ??_ScanButtons 0054                        _TMR0H 0FD7                        _TMR1H 0FCF  
                      _TMR0L 0FD6                        _TMR1L 0FCE                        _TMR3H 0FB3  
                      _TMR3L 0FB2           _rtc_default_values 0100  Ds1307Read@ds1307_date_datas 010C  
      __end_of_MCP41010Write 216A              __end_of_low_isr 0026                        tablat 0FF5  
        __end_of_MarkDisplay 171C                        ttemp5 0075                        ttemp6 0078  
                      ttemp7 007C                        status 0FD8              ?_CounterSetting 0054  
                      wtemp8 0075              __initialization 242E                  Ds1307Read@i 010B  
               __end_of_main 18CE                ?_TLC5917Write 0054          _up_btn_released_cnt 0011  
              ??_OpenDisplay 005F                ??_OpenCounter 005F                ??_OpenButtons 005F  
UpdateDisplay@start_position 00FE                       ??_main 006A          __end_of_ReadCounter 22E0  
              i2_WriteTimer0 2950                    ??_I2cInit 005F                    ??_I2cRead 005F  
                  ??_I2cWait 005F               _OscillatorInit 2962                __activetblptr 0002  
                  ??_I2cStop 005F          __end_of_ScanDisplay 1BAC                       _ADCON0 0FC2  
                     _ADCON1 0FC1       Ds1307Write@write_datas 0060                   _SetCounter 274A  
                     _EEDATA 0FA8          __end_of_ScanCounter 1E6A                       _EECON2 0FA7  
           ___awdiv@dividend 005F          __end_of_ScanButtons 1A40                       _S0_DIP 00D4  
                     _S1_DIP 00D0                       _S2_DIP 00CC                       i2l4001 1942  
                     i2l4011 1976                       i2l4003 1954                       i2l4021 19A6  
                     i2l4013 197A                       i2l4005 195C                       i2l4101 1E4E  
                     i2l4031 19C8                       i2l4023 19AA                       i2l4015 197E  
                     i2l4007 1960                       i2l4103 1E52                       i2l4041 1A02  
                     i2l4033 19D6                       i2l4025 19B8                       i2l4017 198C  
                     i2l4009 196E                       i2l4105 1E54                   _OpenTimer0 2820  
                     _S3_DIP 00C8                       i2l4051 1A32                       i2l4043 1A0A  
                     i2l4035 19E8                       i2l4027 19C0                       i2l4019 199E  
                     i2l4107 1E62                       i2l4053 1A3A                       i2l4045 1A0E  
                     i2l4037 19F0                       i2l4029 19C4                       i2l4109 1E66  
                     i2l4061 1D32                       i2l4047 1A12                       i2l4039 19F4  
                     i2l4063 1D60                       i2l4071 1DC4                       i2l4055 1D0E  
                     i2l4049 1A20                       i2l4081 1DF0                       i2l4073 1DC6  
                     i2l4065 1D8E                       i2l4091 1E2A                       i2l4083 1DF4  
                     i2l4075 1DD8                       i2l4067 1DBC                       i2l4059 1D22  
                     i2l4077 1DDC                       i2l4085 1DFA                       i2l6101 24FC  
                     i2l4087 1E0A                       i2l4079 1DDE                       i2l6111 2540  
                     i2l6103 2504                       i2l4089 1E1A                       i2l4097 1E3E  
                     i2l6105 2506                       _S4_DIP 00C4                       i2l4099 1E40  
                     i2l6107 2518                       i2l6109 251A                       i2l7121 1A40  
                     i2l7123 1A50                       i2l7141 1AB2                       i2l7133 1A92  
                     i2l7125 1A52                       i2l6095 24D4                       i2l6087 24C2  
                     i2l7151 1ADC                       i2l7143 1ABC                       i2l7135 1A9C  
                     i2l7127 1A6E                       i2l6097 24F2                       i2l6089 24D0  
                     i2l7161 1B12                       i2l7153 1AE2                       i2l7145 1AC2  
                     i2l7137 1AA2                       i2l7129 1A7E                       _S5_DIP 00C0  
                     i2l6099 24FA                       i2l7171 1B34                       i2l7163 1B1E  
                     i2l7155 1AEC                       i2l7147 1ACC                       i2l7139 1AAC  
                     i2l7411 2950                       i2l3981 18E8                       i2l7165 1B24  
                     i2l7157 1AF2                       i2l7149 1AD2                       i2l7501 2628  
                     i2l3991 1916                       i2l3983 18EC                       i2l3975 18CE  
                     i2l7167 1B2E                       i2l7159 1B04                       i2l7175 1B3A  
                     i2l3993 1924                       i2l3985 18FA                       i2l3977 18DC  
                     i2l7169 1B30                       i2l7177 1B94                       i2l3995 192C  
                     i2l3987 190A                       i2l3979 18E4                       i2l7179 1BA6  
                     i2l3997 1930                       i2l3989 1912                       i2l3999 1934  
                     i2l7481 25D0                       _S6_DIP 00BC                       i2l7491 25FE  
                     i2l7483 25DE                       i2l7485 25EC                       i2l7495 2614  
                     i2l7487 25EE                       i2l7497 2622                       i2l7489 25FA  
                     i2l7499 2624                       _S7_DIP 00B8                       _RCREG1 0FAE  
                     _RCSTA1 0FAB                       _SPBRG1 0FAF            _temp_system_state 0044  
                     _SSPADD 0FC8                       _SSPBUF 0FC9                       _TXREG1 0FAD  
                     _TXSTA1 0FAC         _sel_btn_released_cnt 000D       _counter_hour_set_value 0047  
           __end_of_high_isr 2636               ??_TLC5917Write 0056                    ??___awdiv 0063  
                  ??___awmod 0063                  ?_DeviceInit 0054             OpenTimer0@config 005F  
     __end_of_OscillatorInit 2970                       clear_0 24A2                       clear_1 24AE  
           ___awdiv@quotient 0065              ___awmod@divisor 0061                       isa$std 0001  
             ?i2_WriteTimer0 0054              ___awmod@counter 0063                 __pdataCOMRAM 006C  
        _rtc_clock_disp_mode 0043          _rtc_clock_disp_type 004C          __end_of_OpenDisplay 2708  
               __mediumconst 0000                    ??_low_isr 005E                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8          __end_of_OpenCounter 27F2  
       _hour_btn_pressed_cnt 001D                  _MarkDisplay 1510          __end_of_OpenButtons 26A2  
       Ds1307Write@hour_temp 0062                 ??_I2cRestart 005F                    ?_I2cStart 0054  
                  ?_I2cWrite 0054          _EnableAllInterrupts 29A0                   __accesstop 0080  
    __end_of__initialization 24B4                ___rparam_used 0001                 _BlinkDisable 284A  
             __pcstackCOMRAM 0054                  _ReadCounter 222E                 __pidataBANK0 2870  
               __pidataBANK1 297E                ??_StartTimer0 005F         ?_EnableAllInterrupts 0054  
            ?_OscillatorInit 0054                 ??_LEDProcess 005F                 _MCP41010Init 2970  
         __end_of_I2cRestart 28F6                  _ScanDisplay 1A40                 ??_Ds1307Init 005F  
               ??_Ds1307Read 0063             SetCounter@minute 005F             SetCounter@second 0060  
                _ScanCounter 1D0E        _hour_btn_released_cnt 0013                  _ScanButtons 18CE  
              ??_StopCounter 005F                  ?_SetCounter 005F    _btn_long_press_verify_flg 0031  
              BlinkDisable@i 005F                   __pbssBANK0 0080                   __pbssBANK1 0112  
                 ??_I2cStart 005F                  ?_OpenTimer0 0054                   ??_I2cWrite 005F  
               _ClockSetting 1FC4           __end_of_LEDProcess 2820           __end_of_Ds1307Init 2950  
         __end_of_Ds1307Read 1FC4        __end_of_VerifyButtons 1510               I2cRead@receive 0060  
             _counter_minute 0040               _counter_second 003F              ??i2_WriteTimer0 0056  
      ??_EnableAllInterrupts 005F             WriteTimer0@timer 0061        __end_of_UpdateDisplay 274A  
              ??_WriteTimer0 0061                  _OpenDisplay 26A2                  _OpenCounter 27BE  
                _OpenButtons 2636                      _I2cInit 28D0                      _I2cRead 2786  
                    _I2cWait 2894                      _I2cStop 291A                      i2l10531 1B4E  
        __end_of_StartTimer0 29A0          Ds1307Read@disp_type 010A                      _S0_Data 0027  
                    _S1_Data 0026           _counter_enable_flg 003B                      _S2_Data 0025  
                    _S3_Data 0024                      _S0_Mode 0073                      _S4_Data 0023  
                    _S1_Mode 0072                      _S5_Data 0022                      _S2_Mode 0071  
                    _S0_Port 0009                _ActionButtons 0624                      _S6_Data 0021  
                    _S3_Mode 0070                      _S1_Port 00B6                      _S7_Data 0020  
                    _S4_Mode 006F                      _S2_Port 00B4                      _S5_Mode 006E  
                    _S3_Port 00B2                      _S6_Mode 006D                      _S4_Port 00B0  
                    _S7_Mode 006C                      _S5_Port 00AE                      _IP_Addr 008C  
                    _S6_Port 00AC                      _S7_Port 00AA             ??_CounterSetting 0067  
       __end_of_TLC5917Write 254A                      _SSPCON1 0FC6             _counter_skip_flg 0039  
                  ?_high_isr 0054                      _SSPSTAT 0FC7          __end_of_StopCounter 2996  
        i2WriteTimer0@timer0 0054                      __Hparam 0000                      __Lparam 0000  
                    ___awdiv 216A                      ___awmod 22E0                 __psmallconst 0600  
       _btn_press_verify_flg 0032                      __pcinit 242E                      __ramtop 0600  
                    __ptext0 171C                      __ptext1 11C2                      __ptext2 0624  
                    __ptext3 2990                      __ptext4 2996                      __ptext5 274A  
                    __ptext6 2708                      __ptext7 222E                      __ptext8 27F2  
                    __ptext9 1E6A                    _T0CONbits 0FD5               OpenS5500@F2850 00E8  
             OpenS5500@F2852 00E4               OpenS5500@F2846 00D8               OpenS5500@F2848 00EC  
                  _T1CONbits 0FCD                    _T2CONbits 0FCA                      _int_cnt 004A  
        MCP41010Write@i_3246 0065               ?_ActionButtons 0054                    _T3CONbits 0FB1  
           ___awmod@dividend 005F                _real_rtc_data 004D             MCP41010Write@cmd 005F  
        __end_of_WriteTimer0 2908                      _low_isr 0018            _rtc_hour_ampm_flg 004B  
                 ??_high_isr 005C               __pintcode_body 25C6         end_of_initialization 24B4  
         _set_counter_minute 003D           _set_counter_second 003C                __Lmediumconst 0000  
                    int_func 25C6                   I2cRead@ack 005F                      postdec1 0FE5  
                    postinc0 0FEE                 ??_DeviceInit 0068                ?_StartCounter 0054  
                _StartTimer0 299C                    _UDP_DPORT 0098                    _PORTAbits 0F80  
                  _PORTBbits 0F81                    _PORTDbits 0F83               OpenW5500@F2673 00DE  
             OpenW5500@F2675 00F8               OpenW5500@F2677 00F4               OpenW5500@F2679 00F0  
         _counter_seting_flg 0038                    _TRISAbits 0F92                    _TRISBbits 0F93  
                  _TRISCbits 0F94                  _StopCounter 2990                    _TRISDbits 0F95  
               ?_MarkDisplay 0054       _reset_btn_released_cnt 000B           __end_of_DeviceInit 25C6  
      _counter_min_set_value 0046                 OpenDisplay@i 005F             ??_OscillatorInit 005F  
               ?_ReadCounter 0067               ??_StartCounter 005F                __pidataCOMRAM 2988  
                _WriteTimer0 28F6              ??_ActionButtons 0063                 ?_ScanDisplay 0054  
               ?_ScanCounter 0054                 ?_ScanButtons 0054          start_initialization 242E  
       _down_btn_pressed_cnt 0019                 ??_SetCounter 0061                 ??_OpenTimer0 005F  
              _MCP41010Write 209E                 _counter_hour 0041                ??_Ds1307Write 0062  
  UpdateDisplay@update_datas 00FC                ??_TLC5917Init 005F        _counter_sec_set_value 0045  
           TLC5917Write@data 0054              _BTN_CLICK_EVENT 0033             TLC5917Write@temp 0057  
               _TLC5917Write 24C2              _BTN_CLICK_STATE 0034                  __pdataBANK0 00D8  
                __pdataBANK1 0100                 ?_OpenDisplay 0054           __end_of_SetCounter 2786  
               ?_OpenCounter 0054                 ?_OpenButtons 0054                     ?_I2cInit 0054  
         __end_of_OpenTimer0 284A                     ?_I2cRead 0054                     ?_I2cWait 0054  
                   ?_I2cStop 0054                  __pbssCOMRAM 0001              MarkDisplay@mark 0061  
              __pcstackBANK0 00FC                __pcstackBANK1 010A           _rtc_clock_set_mode 0042  
             ?_MCP41010Write 005F           _up_btn_pressed_cnt 001B  __end_of_EnableAllInterrupts 29A4  
                  __pintcode 0008          __end_of_Ds1307Write 1D0E                    _blink_cnt 0035  
                  _blink_pos 0080                     ?___awdiv 005F                     ?___awmod 005F  
                __pintcodelo 0018          _sel_btn_pressed_cnt 0017        __end_ofi2_WriteTimer0 2962  
        __end_of_TLC5917Init 291A                  __smallconst 0600            WriteTimer0@timer0 005F  
         i2WriteTimer0@timer 0056                     ?_low_isr 0054                TLC5917Write@i 0059  
       __end_of_StartCounter 299C                     _I2cStart 292C                     _I2cWrite 28B6  
                   _LATBbits 0F8A                     _LATCbits 0F8B                     _LATDbits 0F8C  
                   _S0_DPort 00A8                     _S1_DPort 00A6                     _S2_DPort 00A4  
                   _S3_DPort 00A2                     _PIE1bits 0F9D                     _PIE2bits 0FA0  
                   _S4_DPort 00A0                     _S5_DPort 009E                     _S6_DPort 009C  
                   _S7_DPort 009A                     _S0_State 002F                     i2u140_40 1954  
                   i2u140_41 1950                     i2u141_40 196E                     i2u141_41 196A  
                   _S1_State 002E                     i2u142_40 198C                     i2u150_40 1D1E  
                   i2u142_41 1988                     i2u150_41 1D1A                     i2u143_40 199E  
                   i2u135_40 18DC                     i2u151_40 1D32                     i2u143_41 199A  
                   i2u135_41 18D8                     i2u151_41 1D2E                     i2u144_40 19B8  
                   i2u136_40 18FA                     i2u160_40 1E3A                     i2u152_40 1D60  
                   i2u144_41 19B4                     i2u136_41 18F6                     i2u160_41 1E36  
                   i2u152_41 1D5C                     i2u145_40 19D6                     i2u137_40 190A  
                   i2u161_40 1E4E                     i2u153_40 1D8E                     i2u145_41 19D2  
                   i2u137_41 1906                     i2u161_41 1E4A                     i2u153_41 1D8A  
                   i2u146_40 19E8                     i2u138_40 1924                     i2u162_40 1E62  
                   i2u154_40 1DBC                     i2u330_40 252A                     i2u146_41 19E4  
                   i2u138_41 1920                     i2u162_41 1E5E                     i2u154_41 1DB8  
                   i2u330_41 2526                     i2u147_40 1A02                     i2u139_40 1942  
                   i2u155_40 1DD8                     i2u147_41 19FE                     i2u139_41 193E  
                   i2u155_41 1DD4                     i2u148_40 1A20                     i2u156_40 1DF0  
                   i2u148_41 1A1C                     i2u156_41 1DEC                     i2u149_40 1A32  
                   i2u157_40 1E0A                     i2u149_41 1A2E                     i2u157_41 1E06  
                   _S2_State 002D                     i2u158_40 1E1A                     i2u430_40 1A8E  
                   i2u158_41 1E16                     i2u430_41 1A8A                     i2u159_40 1E2A  
                   i2u431_40 1B04                     i2u159_41 1E26                     i2u431_41 1B00  
                   i2u328_40 24E6                     i2u432_40 1BA6                     i2u440_40 2614  
                   i2u328_41 24DE                     i2u432_41 1BA2                     i2u440_41 2610  
                   i2u441_40 2622                     i2u441_41 261E                     _PIR1bits 0F9E  
                   i2u329_48 24E8                     _PIR2bits 0FA1                     i2u428_40 1A6E  
                   i2u428_41 1A6A                     i2u429_40 1A7E                     i2u429_41 1A7A  
                   _S3_State 002C                     i2u438_40 25DE                     i2u438_41 25DA  
                   i2u439_40 25EC                     i2u439_41 25E8                     i2u642_47 2542  
                   _S4_State 002B                     _S5_State 002A                     _S6_State 0029  
                   _RCONbits 0FD0                     _S7_State 0028                     _UDP_DIPR 0088  
               ?_StartTimer0 0054                  _display_cnt 0036                 ?_StopCounter 0054  
            ??_MCP41010Write 0063                  _INTCON2bits 0FF1                  _INTCON3bits 0FF0  
                  copy_data0 2442                    copy_data1 2462                    copy_data2 2482  
                _Ds1307Write 1BAC                   _EECON1bits 0FA6                ?_BlinkDisable 0054  
                   _Phy_Addr 0112                     __Hrparam 0000                     __Lrparam 0000  
                _TLC5917Init 2908                     _Sub_Mask 0090                _VerifyButtons 11C2  
             UpdateDisplay@i 0069              _W5500_Interrupt 001F                 ?_WriteTimer0 005F  
              _UpdateDisplay 2708                ?_MCP41010Init 0054                     __ptext10 28E4  
                   __ptext11 2786                     __ptext20 2636                     __ptext12 254A  
                   __ptext21 209E                     __ptext13 28F6                     __ptext30 28D0  
                   __ptext22 2970                     __ptext14 299C                     __ptext31 2390  
                   __ptext23 29A0                     __ptext15 2962                     __ptext40 1A40  
                   __ptext32 22E0                     __ptext24 1BAC                     __ptext16 2820  
                   __ptext41 24C2                     __ptext33 216A                     __ptext25 28B6  
                   __ptext17 26A2                     __ptext42 1D0E                     __ptext34 1FC4  
                   __ptext26 2894                     __ptext18 2908                     __ptext43 18CE  
                   __ptext35 1510                     __ptext27 291A                     __ptext19 27BE  
                   __ptext36 284A                     __ptext28 292C                     __ptext29 293E  
                   __ptext39 2950        _reset_btn_pressed_cnt 0015                     _high_isr 0008  
              ?_ClockSetting 0054                   _I2cRestart 28E4               ??_BlinkDisable 005F  
             MCP41010Write@i 0064            MCP41010Write@data 0061             _set_counter_hour 003E  
          MCP41010Write@temp 0066          ClockSetting@set_mod 0064               ?_VerifyButtons 0054  
                   isa$xinst 0000                     int$flags 0074               ?_UpdateDisplay 00FC  
             ??_MCP41010Init 005F            _SYSTEM_ACTION_FLG 0049                _USART1_Status 0030  
                 _LEDProcess 27F2                   _Ds1307Init 293E                   _Ds1307Read 1E6A  
           _blink_enable_flg 0037                  _OSCTUNEbits 0F9B        __end_of_ActionButtons 11C2  
                 _INTCONbits 0FF2               ??_ClockSetting 0062                     intlevel1 0000  
                   intlevel2 0000                   _RCSTA1bits 0FAB                   _OSCCONbits 0FD3  
               _StartCounter 2996        _down_btn_released_cnt 000F                  _SSPCON1bits 0FC6  
                _SSPCON2bits 0FC5                 I2cWrite@data 005F                  ?_I2cRestart 0054  
              _display_datas 0001        _counter_direction_flg 003A            ActionButtons@temp 0065  
             _CounterSetting 2390              ??_VerifyButtons 0066  
