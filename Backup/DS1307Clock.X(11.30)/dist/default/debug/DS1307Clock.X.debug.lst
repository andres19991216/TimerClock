

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Nov 30 05:25:10 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80   000000                     
    81                           ; Generated 23/03/2023 GMT
    82                           ; 
    83                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4520 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115   000000                     
   116                           	psect	idataCOMRAM
   117   0029F6                     __pidataCOMRAM:
   118                           	callstack 0
   119                           
   120                           ;initializer for _S7_Mode
   121   0029F6  03                 	db	3
   122                           
   123                           ;initializer for _S6_Mode
   124   0029F7  03                 	db	3
   125                           
   126                           ;initializer for _S5_Mode
   127   0029F8  03                 	db	3
   128                           
   129                           ;initializer for _S4_Mode
   130   0029F9  03                 	db	3
   131                           
   132                           ;initializer for _S3_Mode
   133   0029FA  03                 	db	3
   134                           
   135                           ;initializer for _S2_Mode
   136   0029FB  03                 	db	3
   137                           
   138                           ;initializer for _S1_Mode
   139   0029FC  03                 	db	3
   140                           
   141                           ;initializer for _S0_Mode
   142   0029FD  03                 	db	3
   143                           
   144                           	psect	idataBANK0
   145   002938                     __pidataBANK0:
   146                           	callstack 0
   147                           
   148                           ;initializer for OpenS5500@F2850
   149   002938  FF                 	db	255
   150   002939  FF                 	db	255
   151   00293A  FF                 	db	255
   152   00293B  00                 	db	0
   153                           
   154                           ;initializer for OpenS5500@F2848
   155   00293C  0A                 	db	10
   156   00293D  0A                 	db	10
   157   00293E  0F                 	db	15
   158   00293F  DF                 	db	223
   159                           
   160                           ;initializer for OpenW5500@F2679
   161   002940  0A                 	db	10
   162   002941  0A                 	db	10
   163   002942  0F                 	db	15
   164   002943  01                 	db	1
   165                           
   166                           ;initializer for OpenW5500@F2677
   167   002944  FF                 	db	255
   168   002945  FF                 	db	255
   169   002946  FF                 	db	255
   170   002947  00                 	db	0
   171                           
   172                           ;initializer for OpenW5500@F2675
   173   002948  0A                 	db	10
   174   002949  0A                 	db	10
   175   00294A  0F                 	db	15
   176   00294B  DF                 	db	223
   177                           
   178                           	psect	idataBANK1
   179   0028EC                     __pidataBANK1:
   180                           	callstack 0
   181                           
   182                           ;initializer for _rtc_default_values
   183   0028EC  10                 	db	16
   184   0028ED  12                 	db	18
   185   0028EE  09                 	db	9
   186   0028EF  05                 	db	5
   187   0028F0  30                 	db	48
   188   0028F1  11                 	db	17
   189   0028F2  23                 	db	35
   190   0028F3  00                 	db	0
   191   0028F4  00                 	db	0
   192   0028F5  00                 	db	0
   193                           
   194                           ;initializer for OpenS5500@F2846
   195   0028F6  F4                 	db	244
   196   0028F7  6B                 	db	107
   197   0028F8  8C                 	db	140
   198   0028F9  CE                 	db	206
   199   0028FA  67                 	db	103
   200   0028FB  4B                 	db	75
   201                           
   202                           ;initializer for OpenW5500@F2673
   203   0028FC  F4                 	db	244
   204   0028FD  6B                 	db	107
   205   0028FE  8C                 	db	140
   206   0028FF  CE                 	db	206
   207   002900  67                 	db	103
   208   002901  4B                 	db	75
   209                           
   210                           ;initializer for OpenS5500@F2852
   211   002902  0A                 	db	10
   212   002903  0A                 	db	10
   213   002904  0F                 	db	15
   214   002905  01                 	db	1
   215   000000                     _EECON2	set	4007
   216   000000                     _EEDATA	set	4008
   217   000000                     _EEADR	set	4009
   218   000000                     _TXREG1	set	4013
   219   000000                     _RCREG1	set	4014
   220   000000                     _SPBRG1	set	4015
   221   000000                     _INTCON2bits	set	4081
   222   000000                     _TMR3L	set	4018
   223   000000                     _TMR3H	set	4019
   224   000000                     _TMR1L	set	4046
   225   000000                     _TMR1H	set	4047
   226   000000                     _TMR0L	set	4054
   227   000000                     _TMR0H	set	4055
   228                           
   229                           	psect	nvCOMRAM
   230   00006F                     __pnvCOMRAM:
   231                           	callstack 0
   232   00006F                     _SYSTEM_STATE_FLG:
   233                           	callstack 0
   234   00006F                     	ds	1
   235   000000                     _SSPCON1	set	4038
   236   000000                     _SSPSTAT	set	4039
   237   000000                     _PIE1	set	3997
   238   000000                     _RCSTA1bits	set	4011
   239   000000                     _TXSTA1bits	set	4012
   240   000000                     _T3CONbits	set	4017
   241   000000                     _T2CONbits	set	4042
   242   000000                     _T1CONbits	set	4045
   243   000000                     _T0CONbits	set	4053
   244   000000                     _PORTDbits	set	3971
   245   000000                     _PORTBbits	set	3969
   246   000000                     _LATBbits	set	3978
   247   000000                     _LATCbits	set	3979
   248   000000                     _PORTAbits	set	3968
   249   000000                     _TRISAbits	set	3986
   250   000000                     _OSCTUNEbits	set	3995
   251   000000                     _OSCCONbits	set	4051
   252   000000                     _T0CON	set	4053
   253   000000                     _PIE1bits	set	3997
   254   000000                     _PIR1bits	set	3998
   255   000000                     _ADCON1	set	4033
   256   000000                     _ADCON0	set	4034
   257   000000                     _SSPCON2bits	set	4037
   258   000000                     _SSPCON1bits	set	4038
   259   000000                     _SSPSTATbits	set	4039
   260   000000                     _TMR2	set	4044
   261   000000                     _T2CON	set	4042
   262   000000                     _T1CON	set	4045
   263   000000                     _SSPBUF	set	4041
   264   000000                     _SSPADD	set	4040
   265   000000                     _TRISDbits	set	3989
   266   000000                     _TRISCbits	set	3988
   267   000000                     _TRISBbits	set	3987
   268   000000                     _INTCON3bits	set	4080
   269   000000                     _INTCONbits	set	4082
   270   000000                     _RCONbits	set	4048
   271   000000                     _PIE2bits	set	4000
   272   000000                     _PIR2bits	set	4001
   273   000000                     _T3CON	set	4017
   274   000000                     _EECON1bits	set	4006
   275   000000                     _RCSTA1	set	4011
   276   000000                     _TXSTA1	set	4012
   277   000000                     _LATDbits	set	3980
   278                           
   279                           	psect	smallconst
   280   000600                     __psmallconst:
   281                           	callstack 0
   282   000600  00                 	db	0
   283   000601                     STR_2:
   284   000601  54                 	db	84	;'T'
   285   000602  68                 	db	104	;'h'
   286   000603  69                 	db	105	;'i'
   287   000604  73                 	db	115	;'s'
   288   000605  20                 	db	32
   289   000606  69                 	db	105	;'i'
   290   000607  73                 	db	115	;'s'
   291   000608  20                 	db	32
   292   000609  45                 	db	69	;'E'
   293   00060A  74                 	db	116	;'t'
   294   00060B  68                 	db	104	;'h'
   295   00060C  65                 	db	101	;'e'
   296   00060D  72                 	db	114	;'r'
   297   00060E  6E                 	db	110	;'n'
   298   00060F  65                 	db	101	;'e'
   299   000610  74                 	db	116	;'t'
   300   000611  20                 	db	32
   301   000612  70                 	db	112	;'p'
   302   000613  72                 	db	114	;'r'
   303   000614  6F                 	db	111	;'o'
   304   000615  74                 	db	116	;'t'
   305   000616  6F                 	db	111	;'o'
   306   000617  63                 	db	99	;'c'
   307   000618  6F                 	db	111	;'o'
   308   000619  6C                 	db	108	;'l'
   309   00061A  20                 	db	32
   310   00061B  74                 	db	116	;'t'
   311   00061C  65                 	db	101	;'e'
   312   00061D  73                 	db	115	;'s'
   313   00061E  74                 	db	116	;'t'
   314   00061F  20                 	db	32
   315   000620  66                 	db	102	;'f'
   316   000621  69                 	db	105	;'i'
   317   000622  72                 	db	114	;'r'
   318   000623  6D                 	db	109	;'m'
   319   000624  77                 	db	119	;'w'
   320   000625  61                 	db	97	;'a'
   321   000626  72                 	db	114	;'r'
   322   000627  65                 	db	101	;'e'
   323   000628  21                 	db	33
   324   000629  0D                 	db	13
   325   00062A  0A                 	db	10
   326   00062B  00                 	db	0
   327   00062C  57                 	db	87	;'W'
   328   00062D  35                 	db	53	;'5'
   329   00062E  35                 	db	53	;'5'
   330   00062F  30                 	db	48	;'0'
   331   000630  30                 	db	48	;'0'
   332   000631  20                 	db	32
   333   000632  49                 	db	73	;'I'
   334   000633  6E                 	db	110	;'n'
   335   000634  69                 	db	105	;'i'
   336   000635  74                 	db	116	;'t'
   337   000636  20                 	db	32
   338   000637  43                 	db	67	;'C'
   339   000638  6F                 	db	111	;'o'
   340   000639  6D                 	db	109	;'m'
   341   00063A  70                 	db	112	;'p'
   342   00063B  6C                 	db	108	;'l'
   343   00063C  65                 	db	101	;'e'
   344   00063D  74                 	db	116	;'t'
   345   00063E  65                 	db	101	;'e'
   346   00063F  21                 	db	33
   347   000640  0A                 	db	10
   348   000641  00                 	db	0
   349   000642  57                 	db	87	;'W'
   350   000643  35                 	db	53	;'5'
   351   000644  35                 	db	53	;'5'
   352   000645  30                 	db	48	;'0'
   353   000646  30                 	db	48	;'0'
   354   000647  2D                 	db	45
   355   000648  3E                 	db	62	;'>'
   356   000649  25                 	db	37
   357   00064A  64                 	db	100	;'d'
   358   00064B  0A                 	db	10
   359   00064C  00                 	db	0
   360   00064D                     STR_1:
   361   00064D  48                 	db	72	;'H'
   362   00064E  65                 	db	101	;'e'
   363   00064F  6C                 	db	108	;'l'
   364   000650  6C                 	db	108	;'l'
   365   000651  6F                 	db	111	;'o'
   366   000652  00                 	db	0
   367   000653  00                 	db	0	; dummy byte at the end
   368   000000                     
   369                           ; #config settings
   370                           
   371                           	psect	cinit
   372   00232A                     __pcinit:
   373                           	callstack 0
   374   00232A                     start_initialization:
   375                           	callstack 0
   376   00232A                     __initialization:
   377                           	callstack 0
   378                           
   379                           ; Initialize objects allocated to BANK1 (26 bytes)
   380                           ; load TBLPTR registers with __pidataBANK1
   381   00232A  0EEC               	movlw	low __pidataBANK1
   382   00232C  6EF6               	movwf	tblptrl,c
   383   00232E  0E28               	movlw	high __pidataBANK1
   384   002330  6EF7               	movwf	tblptrh,c
   385   002332  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   386   002334  6EF8               	movwf	tblptru,c
   387   002336  EE01  F032         	lfsr	0,__pdataBANK1
   388   00233A  EE10 F01A          	lfsr	1,26
   389   00233E                     copy_data0:
   390   00233E  0009               	tblrd		*+
   391   002340  CFF5 FFEE          	movff	tablat,postinc0
   392   002344  50E5               	movf	postdec1,w,c
   393   002346  50E1               	movf	fsr1l,w,c
   394   002348  E1FA               	bnz	copy_data0
   395                           
   396                           ; Initialize objects allocated to BANK0 (20 bytes)
   397                           ; load TBLPTR registers with __pidataBANK0
   398   00234A  0E38               	movlw	low __pidataBANK0
   399   00234C  6EF6               	movwf	tblptrl,c
   400   00234E  0E29               	movlw	high __pidataBANK0
   401   002350  6EF7               	movwf	tblptrh,c
   402   002352  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   403   002354  6EF8               	movwf	tblptru,c
   404   002356  EE00  F0EA         	lfsr	0,__pdataBANK0
   405   00235A  EE10 F014          	lfsr	1,20
   406   00235E                     copy_data1:
   407   00235E  0009               	tblrd		*+
   408   002360  CFF5 FFEE          	movff	tablat,postinc0
   409   002364  50E5               	movf	postdec1,w,c
   410   002366  50E1               	movf	fsr1l,w,c
   411   002368  E1FA               	bnz	copy_data1
   412                           
   413                           ; Initialize objects allocated to COMRAM (8 bytes)
   414                           ; load TBLPTR registers with __pidataCOMRAM
   415   00236A  0EF6               	movlw	low __pidataCOMRAM
   416   00236C  6EF6               	movwf	tblptrl,c
   417   00236E  0E29               	movlw	high __pidataCOMRAM
   418   002370  6EF7               	movwf	tblptrh,c
   419   002372  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   420   002374  6EF8               	movwf	tblptru,c
   421   002376  EE00  F067         	lfsr	0,__pdataCOMRAM
   422   00237A  EE10 F008          	lfsr	1,8
   423   00237E                     copy_data2:
   424   00237E  0009               	tblrd		*+
   425   002380  CFF5 FFEE          	movff	tablat,postinc0
   426   002384  50E5               	movf	postdec1,w,c
   427   002386  50E1               	movf	fsr1l,w,c
   428   002388  E1FA               	bnz	copy_data2
   429                           
   430                           ; Clear objects allocated to BANK1 (50 bytes)
   431   00238A  EE01  F000         	lfsr	0,__pbssBANK1
   432   00238E  0E32               	movlw	50
   433   002390                     clear_0:
   434   002390  6AEE               	clrf	postinc0,c
   435   002392  06E8               	decf	wreg,f,c
   436   002394  E1FD               	bnz	clear_0
   437                           
   438                           ; Clear objects allocated to BANK0 (106 bytes)
   439   002396  EE00  F080         	lfsr	0,__pbssBANK0
   440   00239A  0E6A               	movlw	106
   441   00239C                     clear_1:
   442   00239C  6AEE               	clrf	postinc0,c
   443   00239E  06E8               	decf	wreg,f,c
   444   0023A0  E1FD               	bnz	clear_1
   445                           
   446                           ; Clear objects allocated to COMRAM (72 bytes)
   447   0023A2  EE00  F001         	lfsr	0,__pbssCOMRAM
   448   0023A6  0E48               	movlw	72
   449   0023A8                     clear_2:
   450   0023A8  6AEE               	clrf	postinc0,c
   451   0023AA  06E8               	decf	wreg,f,c
   452   0023AC  E1FD               	bnz	clear_2
   453   0023AE                     end_of_initialization:
   454                           	callstack 0
   455   0023AE                     __end_of__initialization:
   456                           	callstack 0
   457   0023AE  9070               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   458   0023B0  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   459   0023B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   460   0023B4  6EF8               	movwf	tblptru,c
   461   0023B6  0100               	movlb	0
   462   0023B8  EF39  F008         	goto	_main	;jump to C main() function
   463                           
   464                           	psect	bssCOMRAM
   465   000001                     __pbssCOMRAM:
   466                           	callstack 0
   467   000001                     _reset_btn_pressed_cnt:
   468                           	callstack 0
   469   000001                     	ds	2
   470   000003                     _sel_btn_pressed_cnt:
   471                           	callstack 0
   472   000003                     	ds	2
   473   000005                     _down_btn_pressed_cnt:
   474                           	callstack 0
   475   000005                     	ds	2
   476   000007                     _up_btn_pressed_cnt:
   477                           	callstack 0
   478   000007                     	ds	2
   479   000009                     _hour_btn_pressed_cnt:
   480                           	callstack 0
   481   000009                     	ds	2
   482   00000B                     _BLINK_TIME:
   483                           	callstack 0
   484   00000B                     	ds	2
   485   00000D                     _led_blink_cnt:
   486                           	callstack 0
   487   00000D                     	ds	2
   488   00000F                     _flags:
   489                           	callstack 0
   490   00000F                     	ds	1
   491   000010                     _W5500_Interrupt:
   492                           	callstack 0
   493   000010                     	ds	1
   494   000011                     _S7_Data:
   495                           	callstack 0
   496   000011                     	ds	1
   497   000012                     _S6_Data:
   498                           	callstack 0
   499   000012                     	ds	1
   500   000013                     _S5_Data:
   501                           	callstack 0
   502   000013                     	ds	1
   503   000014                     _S4_Data:
   504                           	callstack 0
   505   000014                     	ds	1
   506   000015                     _S3_Data:
   507                           	callstack 0
   508   000015                     	ds	1
   509   000016                     _S2_Data:
   510                           	callstack 0
   511   000016                     	ds	1
   512   000017                     _S1_Data:
   513                           	callstack 0
   514   000017                     	ds	1
   515   000018                     _S0_Data:
   516                           	callstack 0
   517   000018                     	ds	1
   518   000019                     _S7_State:
   519                           	callstack 0
   520   000019                     	ds	1
   521   00001A                     _S6_State:
   522                           	callstack 0
   523   00001A                     	ds	1
   524   00001B                     _S5_State:
   525                           	callstack 0
   526   00001B                     	ds	1
   527   00001C                     _S4_State:
   528                           	callstack 0
   529   00001C                     	ds	1
   530   00001D                     _S3_State:
   531                           	callstack 0
   532   00001D                     	ds	1
   533   00001E                     _S2_State:
   534                           	callstack 0
   535   00001E                     	ds	1
   536   00001F                     _S1_State:
   537                           	callstack 0
   538   00001F                     	ds	1
   539   000020                     _S0_State:
   540                           	callstack 0
   541   000020                     	ds	1
   542   000021                     _USART1_Status:
   543                           	callstack 0
   544   000021                     	ds	1
   545   000022                     _btn_long_press_verify_flg:
   546                           	callstack 0
   547   000022                     	ds	1
   548   000023                     _btn_press_verify_flg:
   549                           	callstack 0
   550   000023                     	ds	1
   551   000024                     _BTN_CLICK_EVENT:
   552                           	callstack 0
   553   000024                     	ds	1
   554   000025                     _BTN_CLICK_STATE:
   555                           	callstack 0
   556   000025                     	ds	1
   557   000026                     _blink_cnt:
   558                           	callstack 0
   559   000026                     	ds	1
   560   000027                     _display_cnt:
   561                           	callstack 0
   562   000027                     	ds	1
   563   000028                     _blink_enable_flg:
   564                           	callstack 0
   565   000028                     	ds	1
   566   000029                     _counter_down_comp_cnt:
   567                           	callstack 0
   568   000029                     	ds	1
   569   00002A                     _counter_down_comp_flg:
   570                           	callstack 0
   571   00002A                     	ds	1
   572   00002B                     _counter_seting_flg:
   573                           	callstack 0
   574   00002B                     	ds	1
   575   00002C                     _counter_skip_flg:
   576                           	callstack 0
   577   00002C                     	ds	1
   578   00002D                     _counter_direction_flg:
   579                           	callstack 0
   580   00002D                     	ds	1
   581   00002E                     _counter_enable_flg:
   582                           	callstack 0
   583   00002E                     	ds	1
   584   00002F                     _counter_up_second:
   585                           	callstack 0
   586   00002F                     	ds	1
   587   000030                     _counter_up_minute:
   588                           	callstack 0
   589   000030                     	ds	1
   590   000031                     _counter_up_hour:
   591                           	callstack 0
   592   000031                     	ds	1
   593   000032                     _counter_down_set_second:
   594                           	callstack 0
   595   000032                     	ds	1
   596   000033                     _counter_down_set_minute:
   597                           	callstack 0
   598   000033                     	ds	1
   599   000034                     _counter_down_set_hour:
   600                           	callstack 0
   601   000034                     	ds	1
   602   000035                     _counter_down_second:
   603                           	callstack 0
   604   000035                     	ds	1
   605   000036                     _counter_down_minute:
   606                           	callstack 0
   607   000036                     	ds	1
   608   000037                     _counter_down_hour:
   609                           	callstack 0
   610   000037                     	ds	1
   611   000038                     _rtc_clock_set_mode:
   612                           	callstack 0
   613   000038                     	ds	1
   614   000039                     _rtc_clock_disp_mode:
   615                           	callstack 0
   616   000039                     	ds	1
   617   00003A                     _temp_system_state:
   618                           	callstack 0
   619   00003A                     	ds	1
   620   00003B                     _counter_sec_set_value:
   621                           	callstack 0
   622   00003B                     	ds	1
   623   00003C                     _counter_min_set_value:
   624                           	callstack 0
   625   00003C                     	ds	1
   626   00003D                     _counter_hour_set_value:
   627                           	callstack 0
   628   00003D                     	ds	1
   629   00003E                     _SYSTEM_ACTION_FLG:
   630                           	callstack 0
   631   00003E                     	ds	1
   632   00003F                     _int_cnt:
   633                           	callstack 0
   634   00003F                     	ds	1
   635   000040                     _rtc_hour_ampm_flg:
   636                           	callstack 0
   637   000040                     	ds	1
   638   000041                     _rtc_clock_disp_type:
   639                           	callstack 0
   640   000041                     	ds	1
   641   000042                     _real_rtc_data:
   642                           	callstack 0
   643   000042                     	ds	7
   644                           
   645                           	psect	dataCOMRAM
   646   000067                     __pdataCOMRAM:
   647                           	callstack 0
   648   000067                     _S7_Mode:
   649                           	callstack 0
   650   000067                     	ds	1
   651   000068                     _S6_Mode:
   652                           	callstack 0
   653   000068                     	ds	1
   654   000069                     _S5_Mode:
   655                           	callstack 0
   656   000069                     	ds	1
   657   00006A                     _S4_Mode:
   658                           	callstack 0
   659   00006A                     	ds	1
   660   00006B                     _S3_Mode:
   661                           	callstack 0
   662   00006B                     	ds	1
   663   00006C                     _S2_Mode:
   664                           	callstack 0
   665   00006C                     	ds	1
   666   00006D                     _S1_Mode:
   667                           	callstack 0
   668   00006D                     	ds	1
   669   00006E                     _S0_Mode:
   670                           	callstack 0
   671   00006E                     	ds	1
   672                           
   673                           	psect	bssBANK0
   674   000080                     __pbssBANK0:
   675                           	callstack 0
   676   000080                     _blink_pos:
   677                           	callstack 0
   678   000080                     	ds	8
   679   000088                     _display_datas:
   680                           	callstack 0
   681   000088                     	ds	8
   682   000090                     _IP_Addr:
   683                           	callstack 0
   684   000090                     	ds	4
   685   000094                     _width:
   686                           	callstack 0
   687   000094                     	ds	2
   688   000096                     _prec:
   689                           	callstack 0
   690   000096                     	ds	2
   691   000098                     _UDP_DPORT:
   692                           	callstack 0
   693   000098                     	ds	2
   694   00009A                     _S7_DPort:
   695                           	callstack 0
   696   00009A                     	ds	2
   697   00009C                     _S6_DPort:
   698                           	callstack 0
   699   00009C                     	ds	2
   700   00009E                     _S5_DPort:
   701                           	callstack 0
   702   00009E                     	ds	2
   703   0000A0                     _S4_DPort:
   704                           	callstack 0
   705   0000A0                     	ds	2
   706   0000A2                     _S3_DPort:
   707                           	callstack 0
   708   0000A2                     	ds	2
   709   0000A4                     _S2_DPort:
   710                           	callstack 0
   711   0000A4                     	ds	2
   712   0000A6                     _S1_DPort:
   713                           	callstack 0
   714   0000A6                     	ds	2
   715   0000A8                     _S0_DPort:
   716                           	callstack 0
   717   0000A8                     	ds	2
   718   0000AA                     _S7_Port:
   719                           	callstack 0
   720   0000AA                     	ds	2
   721   0000AC                     _S6_Port:
   722                           	callstack 0
   723   0000AC                     	ds	2
   724   0000AE                     _S5_Port:
   725                           	callstack 0
   726   0000AE                     	ds	2
   727   0000B0                     _S4_Port:
   728                           	callstack 0
   729   0000B0                     	ds	2
   730   0000B2                     _S3_Port:
   731                           	callstack 0
   732   0000B2                     	ds	2
   733   0000B4                     _S2_Port:
   734                           	callstack 0
   735   0000B4                     	ds	2
   736   0000B6                     _S1_Port:
   737                           	callstack 0
   738   0000B6                     	ds	2
   739   0000B8                     _S0_Port:
   740                           	callstack 0
   741   0000B8                     	ds	2
   742   0000BA                     _cnt:
   743                           	callstack 0
   744   0000BA                     	ds	2
   745   0000BC                     _continue_pressed_cnt:
   746                           	callstack 0
   747   0000BC                     	ds	2
   748   0000BE                     _reset_btn_released_cnt:
   749                           	callstack 0
   750   0000BE                     	ds	2
   751   0000C0                     _sel_btn_released_cnt:
   752                           	callstack 0
   753   0000C0                     	ds	2
   754   0000C2                     _down_btn_released_cnt:
   755                           	callstack 0
   756   0000C2                     	ds	2
   757   0000C4                     _up_btn_released_cnt:
   758                           	callstack 0
   759   0000C4                     	ds	2
   760   0000C6                     _hour_btn_released_cnt:
   761                           	callstack 0
   762   0000C6                     	ds	2
   763   0000C8                     _set_mode_release_cnt:
   764                           	callstack 0
   765   0000C8                     	ds	2
   766   0000CA                     _S7_DIP:
   767                           	callstack 0
   768   0000CA                     	ds	4
   769   0000CE                     _S6_DIP:
   770                           	callstack 0
   771   0000CE                     	ds	4
   772   0000D2                     _S5_DIP:
   773                           	callstack 0
   774   0000D2                     	ds	4
   775   0000D6                     _S4_DIP:
   776                           	callstack 0
   777   0000D6                     	ds	4
   778   0000DA                     _S3_DIP:
   779                           	callstack 0
   780   0000DA                     	ds	4
   781   0000DE                     _S2_DIP:
   782                           	callstack 0
   783   0000DE                     	ds	4
   784   0000E2                     _S1_DIP:
   785                           	callstack 0
   786   0000E2                     	ds	4
   787   0000E6                     _S0_DIP:
   788                           	callstack 0
   789   0000E6                     	ds	4
   790                           
   791                           	psect	dataBANK0
   792   0000EA                     __pdataBANK0:
   793                           	callstack 0
   794   0000EA                     OpenS5500@F2850:
   795                           	callstack 0
   796   0000EA                     	ds	4
   797   0000EE                     OpenS5500@F2848:
   798                           	callstack 0
   799   0000EE                     	ds	4
   800   0000F2                     OpenW5500@F2679:
   801                           	callstack 0
   802   0000F2                     	ds	4
   803   0000F6                     OpenW5500@F2677:
   804                           	callstack 0
   805   0000F6                     	ds	4
   806   0000FA                     OpenW5500@F2675:
   807                           	callstack 0
   808   0000FA                     	ds	4
   809                           
   810                           	psect	bssBANK1
   811   000100                     __pbssBANK1:
   812                           	callstack 0
   813   000100                     	ds	32
   814   000120                     _Phy_Addr:
   815                           	callstack 0
   816   000120                     	ds	6
   817   000126                     _UDP_DIPR:
   818                           	callstack 0
   819   000126                     	ds	4
   820   00012A                     _Sub_Mask:
   821                           	callstack 0
   822   00012A                     	ds	4
   823   00012E                     _Gateway_IP:
   824                           	callstack 0
   825   00012E                     	ds	4
   826                           
   827                           	psect	dataBANK1
   828   000132                     __pdataBANK1:
   829                           	callstack 0
   830   000132                     _rtc_default_values:
   831                           	callstack 0
   832   000132                     	ds	10
   833   00013C                     OpenS5500@F2846:
   834                           	callstack 0
   835   00013C                     	ds	6
   836   000142                     OpenW5500@F2673:
   837                           	callstack 0
   838   000142                     	ds	6
   839   000148                     OpenS5500@F2852:
   840                           	callstack 0
   841   000148                     	ds	4
   842                           
   843                           	psect	cstackBANK1
   844   00014C                     __pcstackBANK1:
   845                           	callstack 0
   846   00014C                     vfpfcnvrt@fp:
   847                           	callstack 0
   848   00014C                     ReadCounter@counter_datas:
   849                           	callstack 0
   850                           
   851                           ; 6 bytes @ 0x0
   852   00014C                     	ds	2
   853   00014E                     vfpfcnvrt@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x2
   857   00014E                     	ds	2
   858   000150                     vfpfcnvrt@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x4
   862   000150                     	ds	2
   863   000152                     ?_vfprintf:
   864                           	callstack 0
   865   000152                     UpdateDisplay@update_datas:
   866                           	callstack 0
   867   000152                     vfprintf@fp:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x6
   871   000152                     	ds	2
   872   000154                     UpdateDisplay@start_position:
   873                           	callstack 0
   874   000154                     vfprintf@fmt:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x8
   878   000154                     	ds	1
   879   000155                     UpdateDisplay@end_position:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x9
   883   000155                     	ds	1
   884   000156                     vfprintf@ap:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0xA
   888   000156                     	ds	2
   889   000158                     ??_main:
   890                           
   891                           ; 1 bytes @ 0xC
   892   000158                     	ds	2
   893                           
   894                           	psect	cstackBANK0
   895   0000FE                     __pcstackBANK0:
   896                           	callstack 0
   897   0000FE                     printf@ap:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x0
   901   0000FE                     	ds	2
   902                           
   903                           	psect	cstackCOMRAM
   904   000049                     __pcstackCOMRAM:
   905                           	callstack 0
   906   000049                     ??_M74HC595Write:
   907   000049                     i2WriteTimer0@timer0:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x0
   911   000049                     	ds	1
   912   00004A                     M74HC595Write@data:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x1
   916   00004A                     	ds	1
   917   00004B                     M74HC595Write@temp:
   918                           	callstack 0
   919   00004B                     i2WriteTimer0@timer:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x2
   923   00004B                     	ds	1
   924   00004C                     M74HC595Write@i:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0x3
   928   00004C                     	ds	1
   929   00004D                     ??_ScanDisplay:
   930                           
   931                           ; 1 bytes @ 0x4
   932   00004D                     	ds	4
   933   000051                     ??_high_isr:
   934                           
   935                           ; 1 bytes @ 0x8
   936   000051                     	ds	4
   937   000055                     ??_low_isr:
   938                           
   939                           ; 1 bytes @ 0xC
   940   000055                     	ds	3
   941   000058                     ??_LEDProcess:
   942   000058                     ??_MarkDisplay:
   943   000058                     ??_DecValProcess:
   944   000058                     ?___awdiv:
   945                           	callstack 0
   946   000058                     ?___awmod:
   947                           	callstack 0
   948   000058                     I2cWrite@data:
   949                           	callstack 0
   950   000058                     I2cRead@ack:
   951                           	callstack 0
   952   000058                     OpenTimer0@config:
   953                           	callstack 0
   954   000058                     OpenDisplay@i:
   955                           	callstack 0
   956   000058                     BlinkDisable@i:
   957                           	callstack 0
   958   000058                     Write1USART@data:
   959                           	callstack 0
   960   000058                     WriteTimer0@timer0:
   961                           	callstack 0
   962   000058                     Open1USART@spbrg:
   963                           	callstack 0
   964   000058                     ___awdiv@dividend:
   965                           	callstack 0
   966   000058                     ___awmod@dividend:
   967                           	callstack 0
   968   000058                     fputc@c:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0xF
   972   000058                     	ds	1
   973   000059                     I2cRead@receive:
   974                           	callstack 0
   975   000059                     Ds1307Write@write_datas:
   976                           	callstack 0
   977   000059                     Puts1USART@data:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x10
   981   000059                     	ds	1
   982   00005A                     ?_Ds1307Read:
   983                           	callstack 0
   984   00005A                     MarkDisplay@mark:
   985                           	callstack 0
   986   00005A                     Open1USART@config:
   987                           	callstack 0
   988   00005A                     WriteTimer0@timer:
   989                           	callstack 0
   990   00005A                     ___awdiv@divisor:
   991                           	callstack 0
   992   00005A                     ___awmod@divisor:
   993                           	callstack 0
   994   00005A                     fputc@fp:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x11
   998   00005A                     	ds	1
   999   00005B                     Ds1307Write@hour_temp:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x12
  1003   00005B                     	ds	1
  1004   00005C                     ??_Ds1307Read:
  1005   00005C                     ??_ActionButtons:
  1006   00005C                     ??_fputc:
  1007   00005C                     ___awdiv@counter:
  1008                           	callstack 0
  1009   00005C                     ___awmod@counter:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x13
  1013   00005C                     	ds	1
  1014   00005D                     ___awdiv@sign:
  1015                           	callstack 0
  1016   00005D                     ___awmod@sign:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x14
  1020   00005D                     	ds	1
  1021   00005E                     Ds1307Read@disp_type:
  1022                           	callstack 0
  1023   00005E                     ActionButtons@temp:
  1024                           	callstack 0
  1025   00005E                     ___awdiv@quotient:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x15
  1029   00005E                     	ds	1
  1030   00005F                     ??_VerifyButtons:
  1031   00005F                     Ds1307Read@i:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x16
  1035   00005F                     	ds	1
  1036   000060                     ?_ReadCounter:
  1037                           	callstack 0
  1038   000060                     Ds1307Read@ds1307_date_datas:
  1039                           	callstack 0
  1040                           
  1041                           ; 6 bytes @ 0x17
  1042   000060                     	ds	2
  1043   000062                     vfprintf@cfmt:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x19
  1047   000062                     	ds	2
  1048   000064                     ?_printf:
  1049                           	callstack 0
  1050   000064                     printf@fmt:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x1B
  1054   000064                     	ds	2
  1055   000066                     UpdateDisplay@i:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x1D
  1059   000066                     	ds	1
  1060                           
  1061 ;;
  1062 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1063 ;;
  1064 ;; *************** function _main *****************
  1065 ;; Defined at:
  1066 ;;		line 24 in file "Main.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1080 ;;      Params:         0       0       0       0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0       0       0
  1082 ;;      Temps:          0       0       2       0       0       0       0
  1083 ;;      Totals:         0       0       2       0       0       0       0
  1084 ;;Total ram usage:        2 bytes
  1085 ;; Hardware stack levels required when called: 11
  1086 ;; This function calls:
  1087 ;;		_BlinkDisable
  1088 ;;		_ClockSetting
  1089 ;;		_DeviceInit
  1090 ;;		_Ds1307Read
  1091 ;;		_Ds1307Write
  1092 ;;		_LEDProcess
  1093 ;;		_ReadCounter
  1094 ;;		_UpdateDisplay
  1095 ;;		_VerifyButtons
  1096 ;;		_printf
  1097 ;; This function is called by:
  1098 ;;		Startup code after reset
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text0
  1103   001072                     __ptext0:
  1104                           	callstack 0
  1105   001072                     _main:
  1106                           	callstack 20
  1107   001072                     
  1108                           ;Main.c: 26:     printf("Hello");
  1109   001072  0E4D               	movlw	low STR_1
  1110   001074  6E64               	movwf	printf@fmt^0,c
  1111   001076  0E06               	movlw	high STR_1
  1112   001078  6E65               	movwf	(printf@fmt+1)^0,c
  1113   00107A  EC14  F014         	call	_printf	;wreg free
  1114   00107E                     
  1115                           ;Main.c: 28:     DeviceInit();
  1116   00107E  EC90  F012         	call	_DeviceInit	;wreg free
  1117   001082                     l9329:
  1118                           
  1119                           ;Main.c: 31:     {;Main.c: 32:         VerifyButtons();
  1120   001082  EC63  F006         	call	_VerifyButtons	;wreg free
  1121   001086                     
  1122                           ;Main.c: 34:         if( SYSTEM_STATE_FLG == 101 && set_mode_release_cnt > 400 ) {
  1123   001086  0E65               	movlw	101
  1124   001088  186F               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  1125   00108A  A4D8               	btfss	status,2,c
  1126   00108C  EF4A  F008         	goto	u6461
  1127   001090  EF4C  F008         	goto	u6460
  1128   001094                     u6461:
  1129   001094  EF65  F008         	goto	l9341
  1130   001098                     u6460:
  1131   001098  0E91               	movlw	145
  1132   00109A  0100               	movlb	0	; () banked
  1133   00109C  5DC8               	subwf	_set_mode_release_cnt& (0+255),w,b
  1134   00109E  0E01               	movlw	1
  1135   0010A0  59C9               	subwfb	(_set_mode_release_cnt+1)& (0+255),w,b
  1136   0010A2  A0D8               	btfss	status,0,c
  1137   0010A4  EF56  F008         	goto	u6471
  1138   0010A8  EF58  F008         	goto	u6470
  1139   0010AC                     u6471:
  1140   0010AC  EF65  F008         	goto	l9341
  1141   0010B0                     u6470:
  1142   0010B0                     
  1143                           ; BSR set to: 0
  1144                           ;Main.c: 35:             Ds1307Write( &real_rtc_data ); set_mode_release_cnt = 0;
  1145   0010B0  0E42               	movlw	low _real_rtc_data
  1146   0010B2  6E59               	movwf	Ds1307Write@write_datas^0,c
  1147   0010B4  0E00               	movlw	high _real_rtc_data
  1148   0010B6  6E5A               	movwf	(Ds1307Write@write_datas+1)^0,c
  1149   0010B8  EC47  F00D         	call	_Ds1307Write	;wreg free
  1150   0010BC  0E00               	movlw	0
  1151   0010BE  0100               	movlb	0	; () banked
  1152   0010C0  6FC9               	movwf	(_set_mode_release_cnt+1)& (0+255),b
  1153   0010C2  0E00               	movlw	0
  1154   0010C4  6FC8               	movwf	_set_mode_release_cnt& (0+255),b
  1155   0010C6                     
  1156                           ; BSR set to: 0
  1157                           ;Main.c: 36:             SYSTEM_STATE_FLG = 100;
  1158   0010C6  0E64               	movlw	100
  1159   0010C8  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  1160   0010CA                     l9341:
  1161                           
  1162                           ;Main.c: 39:         if( counter_down_comp_flg ) {
  1163   0010CA  502A               	movf	_counter_down_comp_flg^0,w,c
  1164   0010CC  B4D8               	btfsc	status,2,c
  1165   0010CE  EF6B  F008         	goto	u6481
  1166   0010D2  EF6D  F008         	goto	u6480
  1167   0010D6                     u6481:
  1168   0010D6  EF75  F008         	goto	l9345
  1169   0010DA                     u6480:
  1170   0010DA                     
  1171                           ;Main.c: 40:             BLINK_TIME = 80; blink_enable_flg = 5;
  1172   0010DA  0E00               	movlw	0
  1173   0010DC  6E0C               	movwf	(_BLINK_TIME+1)^0,c
  1174   0010DE  0E50               	movlw	80
  1175   0010E0  6E0B               	movwf	_BLINK_TIME^0,c
  1176   0010E2  0E05               	movlw	5
  1177   0010E4  6E28               	movwf	_blink_enable_flg^0,c
  1178                           
  1179                           ;Main.c: 41:         }
  1180   0010E6  EF84  F008         	goto	l9351
  1181   0010EA                     l9345:
  1182   0010EA  0E01               	movlw	1
  1183   0010EC  6E0C               	movwf	(_BLINK_TIME+1)^0,c
  1184   0010EE  0E2C               	movlw	44
  1185   0010F0  6E0B               	movwf	_BLINK_TIME^0,c
  1186   0010F2  0ECB               	movlw	203
  1187   0010F4  186F               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  1188   0010F6  A4D8               	btfss	status,2,c
  1189   0010F8  EF80  F008         	goto	u6491
  1190   0010FC  EF82  F008         	goto	u6490
  1191   001100                     u6491:
  1192   001100  EF84  F008         	goto	l9351
  1193   001104                     u6490:
  1194   001104  0E00               	movlw	0
  1195   001106  6E28               	movwf	_blink_enable_flg^0,c
  1196   001108                     l9351:
  1197                           
  1198                           ;Main.c: 44:         if( !SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE ) continue;
  1199   001108  B03E               	btfsc	_SYSTEM_ACTION_FLG^0,0,c	;volatile
  1200   00110A  EF89  F008         	goto	u6501
  1201   00110E  EF8B  F008         	goto	u6500
  1202   001112                     u6501:
  1203   001112  EF8D  F008         	goto	l308
  1204   001116                     u6500:
  1205   001116  EF41  F008         	goto	l9329
  1206   00111A                     l308:
  1207                           
  1208                           ;Main.c: 45:         SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE = 0;
  1209   00111A  903E               	bcf	_SYSTEM_ACTION_FLG^0,0,c	;volatile
  1210   00111C                     
  1211                           ;Main.c: 47:         LEDProcess();
  1212   00111C  EC65  F00E         	call	_LEDProcess	;wreg free
  1213                           
  1214                           ;Main.c: 49:         switch( blink_enable_flg ) {
  1215   001120  EFC5  F008         	goto	l9397
  1216   001124                     l9357:
  1217                           
  1218                           ; BSR set to: 1
  1219   001124  EC52  F014         	call	_BlinkDisable	;wreg free
  1220   001128  EFFF  F008         	goto	l9405
  1221   00112C                     l9359:
  1222                           
  1223                           ; BSR set to: 1
  1224   00112C  EC52  F014         	call	_BlinkDisable	;wreg free
  1225   001130  0E01               	movlw	1
  1226   001132  0100               	movlb	0	; () banked
  1227   001134  6F86               	movwf	(_blink_pos+6)& (0+255),b
  1228   001136  EFFF  F008         	goto	l9405
  1229   00113A                     l9363:
  1230                           
  1231                           ; BSR set to: 1
  1232   00113A  EC52  F014         	call	_BlinkDisable	;wreg free
  1233   00113E  0E01               	movlw	1
  1234   001140  0100               	movlb	0	; () banked
  1235   001142  6F80               	movwf	_blink_pos& (0+255),b
  1236   001144                     
  1237                           ; BSR set to: 0
  1238   001144  0E01               	movlw	1
  1239   001146  6F81               	movwf	(_blink_pos+1)& (0+255),b
  1240   001148  EFFF  F008         	goto	l9405
  1241   00114C                     l9369:
  1242                           
  1243                           ; BSR set to: 1
  1244   00114C  EC52  F014         	call	_BlinkDisable	;wreg free
  1245   001150  0E01               	movlw	1
  1246   001152  0100               	movlb	0	; () banked
  1247   001154  6F82               	movwf	(_blink_pos+2)& (0+255),b
  1248   001156                     
  1249                           ; BSR set to: 0
  1250   001156  0E01               	movlw	1
  1251   001158  6F83               	movwf	(_blink_pos+3)& (0+255),b
  1252   00115A  EFFF  F008         	goto	l9405
  1253   00115E                     l9375:
  1254                           
  1255                           ; BSR set to: 1
  1256   00115E  EC52  F014         	call	_BlinkDisable	;wreg free
  1257   001162                     l9377:
  1258   001162  0E01               	movlw	1
  1259   001164  0100               	movlb	0	; () banked
  1260   001166  6F84               	movwf	(_blink_pos+4)& (0+255),b
  1261   001168                     
  1262                           ; BSR set to: 0
  1263   001168  0E01               	movlw	1
  1264   00116A  6F85               	movwf	(_blink_pos+5)& (0+255),b
  1265   00116C  EFFF  F008         	goto	l9405
  1266   001170                     l9381:
  1267                           
  1268                           ; BSR set to: 1
  1269   001170  EC52  F014         	call	_BlinkDisable	;wreg free
  1270   001174  0E01               	movlw	1
  1271   001176  0100               	movlb	0	; () banked
  1272   001178  6F80               	movwf	_blink_pos& (0+255),b
  1273   00117A                     
  1274                           ; BSR set to: 0
  1275   00117A  0E01               	movlw	1
  1276   00117C  6F81               	movwf	(_blink_pos+1)& (0+255),b
  1277   00117E                     
  1278                           ; BSR set to: 0
  1279   00117E  0E01               	movlw	1
  1280   001180  6F82               	movwf	(_blink_pos+2)& (0+255),b
  1281   001182                     
  1282                           ; BSR set to: 0
  1283   001182  0E01               	movlw	1
  1284   001184  6F83               	movwf	(_blink_pos+3)& (0+255),b
  1285   001186  EFB1  F008         	goto	l9377
  1286   00118A                     l9397:
  1287   00118A  5028               	movf	_blink_enable_flg^0,w,c
  1288   00118C  0101               	movlb	1	; () banked
  1289   00118E  6F58               	movwf	??_main& (0+255),b
  1290   001190  6B59               	clrf	(??_main+1)& (0+255),b
  1291                           
  1292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1293                           ; Switch size 1, requested type "simple"
  1294                           ; Number of cases is 1, Range of values is 0 to 0
  1295                           ; switch strategies available:
  1296                           ; Name         Instructions Cycles
  1297                           ; simple_byte            4     3 (average)
  1298                           ;	Chosen strategy is simple_byte
  1299   001192  5159               	movf	(??_main+1)& (0+255),w,b
  1300   001194  0A00               	xorlw	0	; case 0
  1301   001196  B4D8               	btfsc	status,2,c
  1302   001198  EFD0  F008         	goto	l9877
  1303   00119C  EFFF  F008         	goto	l9405
  1304   0011A0                     l9877:
  1305                           
  1306                           ; BSR set to: 1
  1307                           ; Switch size 1, requested type "simple"
  1308                           ; Number of cases is 6, Range of values is 0 to 5
  1309                           ; switch strategies available:
  1310                           ; Name         Instructions Cycles
  1311                           ; simple_byte           19    10 (average)
  1312                           ;	Chosen strategy is simple_byte
  1313   0011A0  5158               	movf	??_main& (0+255),w,b
  1314   0011A2  0A00               	xorlw	0	; case 0
  1315   0011A4  B4D8               	btfsc	status,2,c
  1316   0011A6  EF92  F008         	goto	l9357
  1317   0011AA  0A01               	xorlw	1	; case 1
  1318   0011AC  B4D8               	btfsc	status,2,c
  1319   0011AE  EF96  F008         	goto	l9359
  1320   0011B2  0A03               	xorlw	3	; case 2
  1321   0011B4  B4D8               	btfsc	status,2,c
  1322   0011B6  EF9D  F008         	goto	l9363
  1323   0011BA  0A01               	xorlw	1	; case 3
  1324   0011BC  B4D8               	btfsc	status,2,c
  1325   0011BE  EFA6  F008         	goto	l9369
  1326   0011C2  0A07               	xorlw	7	; case 4
  1327   0011C4  B4D8               	btfsc	status,2,c
  1328   0011C6  EFAF  F008         	goto	l9375
  1329   0011CA  0A01               	xorlw	1	; case 5
  1330   0011CC  B4D8               	btfsc	status,2,c
  1331   0011CE  EFB8  F008         	goto	l9381
  1332   0011D2  EFFF  F008         	goto	l9405
  1333   0011D6                     l9399:
  1334                           
  1335                           ; BSR set to: 1
  1336   0011D6  0E00               	movlw	0
  1337   0011D8  EC9E  F00C         	call	_Ds1307Read
  1338   0011DC  C05A  F152         	movff	?_Ds1307Read,UpdateDisplay@update_datas
  1339   0011E0  C05B  F153         	movff	?_Ds1307Read+1,UpdateDisplay@update_datas+1
  1340   0011E4  0E01               	movlw	1
  1341   0011E6  0101               	movlb	1	; () banked
  1342   0011E8  6F54               	movwf	UpdateDisplay@start_position& (0+255),b
  1343   0011EA  0E06               	movlw	6
  1344   0011EC  6F55               	movwf	UpdateDisplay@end_position& (0+255),b
  1345   0011EE  EC85  F013         	call	_UpdateDisplay	;wreg free
  1346   0011F2  EF15  F009         	goto	l9407
  1347   0011F6                     l9401:
  1348                           
  1349                           ; BSR set to: 1
  1350   0011F6  EC19  F013         	call	_ClockSetting	;wreg free
  1351   0011FA  EF15  F009         	goto	l9407
  1352   0011FE                     l9405:
  1353   0011FE  506F               	movf	_SYSTEM_STATE_FLG^0,w,c
  1354   001200  0101               	movlb	1	; () banked
  1355   001202  6F58               	movwf	??_main& (0+255),b
  1356   001204  6B59               	clrf	(??_main+1)& (0+255),b
  1357                           
  1358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1359                           ; Switch size 1, requested type "simple"
  1360                           ; Number of cases is 1, Range of values is 0 to 0
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte            4     3 (average)
  1364                           ;	Chosen strategy is simple_byte
  1365   001206  5159               	movf	(??_main+1)& (0+255),w,b
  1366   001208  0A00               	xorlw	0	; case 0
  1367   00120A  B4D8               	btfsc	status,2,c
  1368   00120C  EF0A  F009         	goto	l9879
  1369   001210  EF15  F009         	goto	l9407
  1370   001214                     l9879:
  1371                           
  1372                           ; BSR set to: 1
  1373                           ; Switch size 1, requested type "simple"
  1374                           ; Number of cases is 2, Range of values is 100 to 101
  1375                           ; switch strategies available:
  1376                           ; Name         Instructions Cycles
  1377                           ; simple_byte            7     4 (average)
  1378                           ;	Chosen strategy is simple_byte
  1379   001214  5158               	movf	??_main& (0+255),w,b
  1380   001216  0A64               	xorlw	100	; case 100
  1381   001218  B4D8               	btfsc	status,2,c
  1382   00121A  EFEB  F008         	goto	l9399
  1383   00121E  0A01               	xorlw	1	; case 101
  1384   001220  B4D8               	btfsc	status,2,c
  1385   001222  EFFB  F008         	goto	l9401
  1386   001226  EF15  F009         	goto	l9407
  1387   00122A                     l9407:
  1388                           
  1389                           ;Main.c: 65:         if( counter_skip_flg ) continue;
  1390   00122A  502C               	movf	_counter_skip_flg^0,w,c
  1391   00122C  B4D8               	btfsc	status,2,c
  1392   00122E  EF1B  F009         	goto	u6511
  1393   001232  EF1D  F009         	goto	u6510
  1394   001236                     u6511:
  1395   001236  EF2E  F009         	goto	l9421
  1396   00123A                     u6510:
  1397   00123A  EF41  F008         	goto	l9329
  1398   00123E                     l9411:
  1399                           
  1400                           ; BSR set to: 1
  1401   00123E  ECEB  F00B         	call	_ReadCounter	;wreg free
  1402   001242  C060  F152         	movff	?_ReadCounter,UpdateDisplay@update_datas
  1403   001246  C061  F153         	movff	?_ReadCounter+1,UpdateDisplay@update_datas+1
  1404   00124A  0E01               	movlw	1
  1405   00124C  0101               	movlb	1	; () banked
  1406   00124E  6F54               	movwf	UpdateDisplay@start_position& (0+255),b
  1407   001250  0E06               	movlw	6
  1408   001252  6F55               	movwf	UpdateDisplay@end_position& (0+255),b
  1409   001254  EC85  F013         	call	_UpdateDisplay	;wreg free
  1410   001258  EF41  F008         	goto	l9329
  1411   00125C                     l9421:
  1412   00125C  506F               	movf	_SYSTEM_STATE_FLG^0,w,c
  1413   00125E  0101               	movlb	1	; () banked
  1414   001260  6F58               	movwf	??_main& (0+255),b
  1415   001262  6B59               	clrf	(??_main+1)& (0+255),b
  1416                           
  1417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1418                           ; Switch size 1, requested type "simple"
  1419                           ; Number of cases is 1, Range of values is 0 to 0
  1420                           ; switch strategies available:
  1421                           ; Name         Instructions Cycles
  1422                           ; simple_byte            4     3 (average)
  1423                           ;	Chosen strategy is simple_byte
  1424   001264  5159               	movf	(??_main+1)& (0+255),w,b
  1425   001266  0A00               	xorlw	0	; case 0
  1426   001268  B4D8               	btfsc	status,2,c
  1427   00126A  EF39  F009         	goto	l9881
  1428   00126E  EF41  F008         	goto	l9329
  1429   001272                     l9881:
  1430                           
  1431                           ; BSR set to: 1
  1432                           ; Switch size 1, requested type "simple"
  1433                           ; Number of cases is 4, Range of values is 200 to 203
  1434                           ; switch strategies available:
  1435                           ; Name         Instructions Cycles
  1436                           ; simple_byte           13     7 (average)
  1437                           ;	Chosen strategy is simple_byte
  1438   001272  5158               	movf	??_main& (0+255),w,b
  1439   001274  0AC8               	xorlw	200	; case 200
  1440   001276  B4D8               	btfsc	status,2,c
  1441   001278  EF1F  F009         	goto	l9411
  1442   00127C  0A01               	xorlw	1	; case 201
  1443   00127E  B4D8               	btfsc	status,2,c
  1444   001280  EF1F  F009         	goto	l9411
  1445   001284  0A03               	xorlw	3	; case 202
  1446   001286  B4D8               	btfsc	status,2,c
  1447   001288  EF1F  F009         	goto	l9411
  1448   00128C  0A01               	xorlw	1	; case 203
  1449   00128E  B4D8               	btfsc	status,2,c
  1450   001290  EF1F  F009         	goto	l9411
  1451   001294  EF41  F008         	goto	l9329
  1452   001298  EF2C  F000         	goto	start
  1453   00129C                     __end_of_main:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function _printf *****************
  1457 ;; Defined at:
  1458 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  fmt             2   27[COMRAM] PTR const unsigned char 
  1461 ;;		 -> STR_1(6), 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  ap              2    0[BANK0 ] PTR void [1]
  1464 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1465 ;;  ret             2    0        int 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  2   27[COMRAM] int 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1475 ;;      Params:         2       0       0       0       0       0       0
  1476 ;;      Locals:         0       2       0       0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0
  1478 ;;      Totals:         2       2       0       0       0       0       0
  1479 ;;Total ram usage:        4 bytes
  1480 ;; Hardware stack levels used: 1
  1481 ;; Hardware stack levels required when called: 9
  1482 ;; This function calls:
  1483 ;;		_vfprintf
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text1
  1490   002828                     __ptext1:
  1491                           	callstack 0
  1492   002828                     _printf:
  1493                           	callstack 21
  1494   002828  0E66               	movlw	low (?_printf+2)
  1495   00282A  0100               	movlb	0	; () banked
  1496   00282C  6FFE               	movwf	printf@ap& (0+255),b
  1497   00282E  0E00               	movlw	high (?_printf+2)
  1498   002830  6FFF               	movwf	(printf@ap+1)& (0+255),b
  1499   002832                     
  1500                           ; BSR set to: 0
  1501   002832  0E00               	movlw	0
  1502   002834  0101               	movlb	1	; () banked
  1503   002836  6F52               	movwf	vfprintf@fp& (0+255),b
  1504   002838  0E00               	movlw	0
  1505   00283A  6F53               	movwf	(vfprintf@fp+1)& (0+255),b
  1506   00283C  C064  F154         	movff	printf@fmt,vfprintf@fmt
  1507   002840  C065  F155         	movff	printf@fmt+1,vfprintf@fmt+1
  1508   002844  0EFE               	movlw	low printf@ap
  1509   002846  6F56               	movwf	vfprintf@ap& (0+255),b
  1510   002848  0E00               	movlw	high printf@ap
  1511   00284A  6F57               	movwf	(vfprintf@ap+1)& (0+255),b
  1512   00284C  ECF0  F012         	call	_vfprintf	;wreg free
  1513   002850  0012               	return		;funcret
  1514   002852                     __end_of_printf:
  1515                           	callstack 0
  1516                           
  1517 ;; *************** function _vfprintf *****************
  1518 ;; Defined at:
  1519 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  fp              2    6[BANK1 ] PTR struct _IO_FILE
  1522 ;;		 -> NULL(0), sprintf@f(12), 
  1523 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  1524 ;;		 -> STR_4(11), STR_1(6), 
  1525 ;;  ap              2   10[BANK1 ] PTR PTR void 
  1526 ;;		 -> printf@ap(2), sprintf@ap(2), 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  cfmt            2   25[COMRAM] PTR unsigned char 
  1529 ;;		 -> STR_4(11), STR_1(6), 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  2    6[BANK1 ] int 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1539 ;;      Params:         0       0       6       0       0       0       0
  1540 ;;      Locals:         2       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0
  1542 ;;      Totals:         2       0       6       0       0       0       0
  1543 ;;Total ram usage:        8 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 8
  1546 ;; This function calls:
  1547 ;;		_vfpfcnvrt
  1548 ;; This function is called by:
  1549 ;;		_printf
  1550 ;;		_sprintf
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text2
  1555   0025E0                     __ptext2:
  1556                           	callstack 0
  1557   0025E0                     _vfprintf:
  1558                           	callstack 21
  1559   0025E0                     
  1560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1561   0025E0  C154  F062         	movff	vfprintf@fmt,vfprintf@cfmt
  1562   0025E4  C155  F063         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1565   0025E8  EF05  F013         	goto	l9291
  1566   0025EC                     l9289:
  1567                           
  1568                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1569   0025EC  C152  F14C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1570   0025F0  C153  F14D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1571   0025F4  0E62               	movlw	low vfprintf@cfmt
  1572   0025F6  0101               	movlb	1	; () banked
  1573   0025F8  6F4E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1574   0025FA  0E00               	movlw	high vfprintf@cfmt
  1575   0025FC  6F4F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1576   0025FE  C156  F150         	movff	vfprintf@ap,vfpfcnvrt@ap
  1577   002602  C157  F151         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1578   002606  ECDE  F011         	call	_vfpfcnvrt	;wreg free
  1579   00260A                     l9291:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1582   00260A  C062  FFF6         	movff	vfprintf@cfmt,tblptrl
  1583   00260E  C063  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1584   002612                     	if	0	;tblptru may be non-zero
  1585   002612                     	endif
  1586   002612                     	if	0	;tblptru may be non-zero
  1587   002612                     	endif
  1588   002612  0008               	tblrd		*
  1589   002614  50F5               	movf	tablat,w,c
  1590   002616  0900               	iorlw	0
  1591   002618  A4D8               	btfss	status,2,c
  1592   00261A  EF11  F013         	goto	u6421
  1593   00261E  EF13  F013         	goto	u6420
  1594   002622                     u6421:
  1595   002622  EFF6  F012         	goto	l9289
  1596   002626                     u6420:
  1597   002626                     
  1598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1599   002626  0E00               	movlw	0
  1600   002628  0101               	movlb	1	; () banked
  1601   00262A  6F53               	movwf	(?_vfprintf+1)& (0+255),b
  1602   00262C  0E00               	movlw	0
  1603   00262E  6F52               	movwf	?_vfprintf& (0+255),b
  1604   002630                     
  1605                           ; BSR set to: 1
  1606   002630  0012               	return		;funcret
  1607   002632                     __end_of_vfprintf:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function _vfpfcnvrt *****************
  1611 ;; Defined at:
  1612 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  1615 ;;		 -> NULL(0), sprintf@f(12), 
  1616 ;;  fmt             2    2[BANK1 ] PTR PTR unsigned char 
  1617 ;;		 -> vfprintf@cfmt(2), 
  1618 ;;  ap              2    4[BANK1 ] PTR PTR void 
  1619 ;;		 -> printf@ap(2), sprintf@ap(2), 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  convarg         4    0        struct .
  1622 ;;  cp              3    0        PTR unsigned char 
  1623 ;;  i               2    0        int 
  1624 ;;  done            2    0        int 
  1625 ;;  c               1    0        unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1635 ;;      Params:         0       0       6       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0
  1638 ;;      Totals:         0       0       6       0       0       0       0
  1639 ;;Total ram usage:        6 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 7
  1642 ;; This function calls:
  1643 ;;		_fputc
  1644 ;; This function is called by:
  1645 ;;		_vfprintf
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text3
  1650   0023BC                     __ptext3:
  1651                           	callstack 0
  1652   0023BC                     _vfpfcnvrt:
  1653                           	callstack 21
  1654   0023BC                     
  1655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1656   0023BC  C14E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1657   0023C0  C14F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1658   0023C4  CFDE FFF6          	movff	postinc2,tblptrl
  1659   0023C8  CFDD FFF7          	movff	postdec2,tblptrh
  1660   0023CC                     	if	0	;tblptru may be non-zero
  1661   0023CC                     	endif
  1662   0023CC                     	if	0	;tblptru may be non-zero
  1663   0023CC                     	endif
  1664   0023CC  0008               	tblrd		*
  1665   0023CE  50F5               	movf	tablat,w,c
  1666   0023D0  0A25               	xorlw	37
  1667   0023D2  A4D8               	btfss	status,2,c
  1668   0023D4  EFEE  F011         	goto	u6291
  1669   0023D8  EFF0  F011         	goto	u6290
  1670   0023DC                     u6291:
  1671   0023DC  EF09  F012         	goto	l9039
  1672   0023E0                     u6290:
  1673   0023E0                     
  1674                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1675   0023E0  C14E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1676   0023E4  C14F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1677   0023E8  2ADE               	incf	postinc2,f,c
  1678   0023EA  0E00               	movlw	0
  1679   0023EC  22DD               	addwfc	postdec2,f,c
  1680   0023EE                     
  1681                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1682   0023EE  0E00               	movlw	0
  1683   0023F0  0100               	movlb	0	; () banked
  1684   0023F2  6F95               	movwf	(_width+1)& (0+255),b
  1685   0023F4  0E00               	movlw	0
  1686   0023F6  6F94               	movwf	_width& (0+255),b
  1687   0023F8  C094  F00F         	movff	_width,_flags
  1688   0023FC                     
  1689                           ; BSR set to: 0
  1690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1691   0023FC  6996               	setf	_prec& (0+255),b
  1692   0023FE  6997               	setf	(_prec+1)& (0+255),b
  1693   002400                     l9035:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1696   002400  C14E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1697   002404  C14F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1698   002408  2ADE               	incf	postinc2,f,c
  1699   00240A  0E00               	movlw	0
  1700   00240C  22DD               	addwfc	postdec2,f,c
  1701   00240E  EF1D  F012         	goto	l2614
  1702   002412                     l9039:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1705   002412  C14E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1706   002416  C14F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1707   00241A  CFDE FFF6          	movff	postinc2,tblptrl
  1708   00241E  CFDD FFF7          	movff	postdec2,tblptrh
  1709   002422                     	if	0	;tblptru may be non-zero
  1710   002422                     	endif
  1711   002422                     	if	0	;tblptru may be non-zero
  1712   002422                     	endif
  1713   002422  0008               	tblrd		*
  1714   002424  50F5               	movf	tablat,w,c
  1715   002426  6E58               	movwf	fputc@c^0,c
  1716   002428  6A59               	clrf	(fputc@c+1)^0,c
  1717   00242A  C14C  F05A         	movff	vfpfcnvrt@fp,fputc@fp
  1718   00242E  C14D  F05B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1719   002432  ECAD  F00F         	call	_fputc	;wreg free
  1720   002436  EF00  F012         	goto	l9035
  1721   00243A                     l2614:
  1722   00243A  0012               	return		;funcret
  1723   00243C                     __end_of_vfpfcnvrt:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _fputc *****************
  1727 ;; Defined at:
  1728 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  c               2   15[COMRAM] int 
  1731 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1732 ;;		 -> NULL(0), sprintf@f(12), 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  2   15[COMRAM] int 
  1737 ;; Registers used:
  1738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1744 ;;      Params:         4       0       0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0       0       0
  1746 ;;      Temps:          6       0       0       0       0       0       0
  1747 ;;      Totals:        10       0       0       0       0       0       0
  1748 ;;Total ram usage:       10 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; Hardware stack levels required when called: 6
  1751 ;; This function calls:
  1752 ;;		_putch
  1753 ;; This function is called by:
  1754 ;;		_vfpfcnvrt
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text4
  1759   001F5A                     __ptext4:
  1760                           	callstack 0
  1761   001F5A                     _fputc:
  1762                           	callstack 21
  1763   001F5A  505A               	movf	fputc@fp^0,w,c
  1764   001F5C  105B               	iorwf	(fputc@fp+1)^0,w,c
  1765   001F5E  B4D8               	btfsc	status,2,c
  1766   001F60  EFB4  F00F         	goto	u6251
  1767   001F64  EFB6  F00F         	goto	u6250
  1768   001F68                     u6251:
  1769   001F68  EFBF  F00F         	goto	l9015
  1770   001F6C                     u6250:
  1771   001F6C  505A               	movf	fputc@fp^0,w,c
  1772   001F6E  105B               	iorwf	(fputc@fp+1)^0,w,c
  1773   001F70  A4D8               	btfss	status,2,c
  1774   001F72  EFBD  F00F         	goto	u6261
  1775   001F76  EFBF  F00F         	goto	u6260
  1776   001F7A                     u6261:
  1777   001F7A  EFC4  F00F         	goto	l9017
  1778   001F7E                     u6260:
  1779   001F7E                     l9015:
  1780   001F7E  5058               	movf	fputc@c^0,w,c
  1781   001F80  EC09  F015         	call	_putch
  1782   001F84  EF16  F010         	goto	l2632
  1783   001F88                     l9017:
  1784   001F88  EE20 F00A          	lfsr	2,10
  1785   001F8C  505A               	movf	fputc@fp^0,w,c
  1786   001F8E  26D9               	addwf	fsr2l,f,c
  1787   001F90  505B               	movf	(fputc@fp+1)^0,w,c
  1788   001F92  22DA               	addwfc	fsr2h,f,c
  1789   001F94  50DE               	movf	postinc2,w,c
  1790   001F96  10DE               	iorwf	postinc2,w,c
  1791   001F98  B4D8               	btfsc	status,2,c
  1792   001F9A  EFD1  F00F         	goto	u6271
  1793   001F9E  EFD3  F00F         	goto	u6270
  1794   001FA2                     u6271:
  1795   001FA2  EFEE  F00F         	goto	l9021
  1796   001FA6                     u6270:
  1797   001FA6  EE20 F00A          	lfsr	2,10
  1798   001FAA  505A               	movf	fputc@fp^0,w,c
  1799   001FAC  26D9               	addwf	fsr2l,f,c
  1800   001FAE  505B               	movf	(fputc@fp+1)^0,w,c
  1801   001FB0  22DA               	addwfc	fsr2h,f,c
  1802   001FB2  EE10 F003          	lfsr	1,3
  1803   001FB6  505A               	movf	fputc@fp^0,w,c
  1804   001FB8  26E1               	addwf	fsr1l,f,c
  1805   001FBA  505B               	movf	(fputc@fp+1)^0,w,c
  1806   001FBC  22E2               	addwfc	fsr1h,f,c
  1807   001FBE  50DE               	movf	postinc2,w,c
  1808   001FC0  5CE6               	subwf	postinc1,w,c
  1809   001FC2  50E6               	movf	postinc1,w,c
  1810   001FC4  0A80               	xorlw	128
  1811   001FC6  6E60               	movwf	(??_fputc+4)^0,c
  1812   001FC8  50DE               	movf	postinc2,w,c
  1813   001FCA  0A80               	xorlw	128
  1814   001FCC  5860               	subwfb	(??_fputc+4)^0,w,c
  1815   001FCE  B0D8               	btfsc	status,0,c
  1816   001FD0  EFEC  F00F         	goto	u6281
  1817   001FD4  EFEE  F00F         	goto	u6280
  1818   001FD8                     u6281:
  1819   001FD8  EF16  F010         	goto	l2632
  1820   001FDC                     u6280:
  1821   001FDC                     l9021:
  1822   001FDC  EE20 F003          	lfsr	2,3
  1823   001FE0  505A               	movf	fputc@fp^0,w,c
  1824   001FE2  26D9               	addwf	fsr2l,f,c
  1825   001FE4  505B               	movf	(fputc@fp+1)^0,w,c
  1826   001FE6  22DA               	addwfc	fsr2h,f,c
  1827   001FE8  CFDE F05C          	movff	postinc2,??_fputc
  1828   001FEC  CFDD F05D          	movff	postdec2,??_fputc+1
  1829   001FF0  C05A  FFD9         	movff	fputc@fp,fsr2l
  1830   001FF4  C05B  FFDA         	movff	fputc@fp+1,fsr2h
  1831   001FF8  CFDE F05E          	movff	postinc2,??_fputc+2
  1832   001FFC  CFDD F05F          	movff	postdec2,??_fputc+3
  1833   002000  505C               	movf	??_fputc^0,w,c
  1834   002002  245E               	addwf	(??_fputc+2)^0,w,c
  1835   002004  6E60               	movwf	(??_fputc+4)^0,c
  1836   002006  505D               	movf	(??_fputc+1)^0,w,c
  1837   002008  205F               	addwfc	(??_fputc+3)^0,w,c
  1838   00200A  6E61               	movwf	(??_fputc+5)^0,c
  1839   00200C  C060  FFF6         	movff	??_fputc+4,tblptrl
  1840   002010  C061  FFF7         	movff	??_fputc+5,tblptrh
  1841   002014                     	if	0	;tblptru may be non-zero
  1842   002014                     	endif
  1843   002014                     	if	0	;tblptru may be non-zero
  1844   002014                     	endif
  1845   002014  C058  FFF5         	movff	fputc@c,tablat
  1846   002018  000C               	tblwt		*
  1847   00201A  EE20 F003          	lfsr	2,3
  1848   00201E  505A               	movf	fputc@fp^0,w,c
  1849   002020  26D9               	addwf	fsr2l,f,c
  1850   002022  505B               	movf	(fputc@fp+1)^0,w,c
  1851   002024  22DA               	addwfc	fsr2h,f,c
  1852   002026  2ADE               	incf	postinc2,f,c
  1853   002028  0E00               	movlw	0
  1854   00202A  22DD               	addwfc	postdec2,f,c
  1855   00202C                     l2632:
  1856   00202C  0012               	return		;funcret
  1857   00202E                     __end_of_fputc:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _putch *****************
  1861 ;; Defined at:
  1862 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  c               1    wreg     unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  c               1    0[COMRAM] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1876 ;;      Params:         0       0       0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0
  1879 ;;      Totals:         0       0       0       0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 5
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_fputc
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text5
  1891   002A12                     __ptext5:
  1892                           	callstack 0
  1893   002A12                     _putch:
  1894                           	callstack 21
  1895   002A12  0012               	return		;funcret
  1896   002A14                     __end_of_putch:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function _VerifyButtons *****************
  1900 ;; Defined at:
  1901 ;;		line 47 in file "Buttons.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1915 ;;      Params:         0       0       0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0
  1917 ;;      Temps:          2       0       0       0       0       0       0
  1918 ;;      Totals:         2       0       0       0       0       0       0
  1919 ;;Total ram usage:        2 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 10
  1922 ;; This function calls:
  1923 ;;		_ActionButtons
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text6
  1930   000CC6                     __ptext6:
  1931                           	callstack 0
  1932   000CC6                     _VerifyButtons:
  1933                           	callstack 20
  1934   000CC6                     
  1935                           ;Buttons.c: 49:     switch( BTN_CLICK_EVENT ) {
  1936   000CC6  EF17  F008         	goto	l7143
  1937   000CCA                     l7035:
  1938   000CCA  0ED1               	movlw	209
  1939   000CCC  5C09               	subwf	_hour_btn_pressed_cnt^0,w,c
  1940   000CCE  0E07               	movlw	7
  1941   000CD0  580A               	subwfb	(_hour_btn_pressed_cnt+1)^0,w,c
  1942   000CD2  A0D8               	btfss	status,0,c
  1943   000CD4  EF6E  F006         	goto	u4501
  1944   000CD8  EF70  F006         	goto	u4500
  1945   000CDC                     u4501:
  1946   000CDC  EF84  F006         	goto	l7043
  1947   000CE0                     u4500:
  1948   000CE0  5022               	movf	_btn_long_press_verify_flg^0,w,c
  1949   000CE2  A4D8               	btfss	status,2,c
  1950   000CE4  EF76  F006         	goto	u4511
  1951   000CE8  EF78  F006         	goto	u4510
  1952   000CEC                     u4511:
  1953   000CEC  EF7A  F006         	goto	l1106
  1954   000CF0                     u4510:
  1955   000CF0  0E10               	movlw	16
  1956   000CF2  6E25               	movwf	_BTN_CLICK_STATE^0,c
  1957   000CF4                     l1106:
  1958   000CF4  0E01               	movlw	1
  1959   000CF6  6E22               	movwf	_btn_long_press_verify_flg^0,c
  1960   000CF8  0E07               	movlw	7
  1961   000CFA  6E0A               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  1962   000CFC  0ED0               	movlw	208
  1963   000CFE  6E09               	movwf	_hour_btn_pressed_cnt^0,c
  1964   000D00                     l7041:
  1965   000D00  EC2A  F003         	call	_ActionButtons	;wreg free
  1966   000D04  EF9D  F006         	goto	l7051
  1967   000D08                     l7043:
  1968   000D08  500A               	movf	(_hour_btn_pressed_cnt+1)^0,w,c
  1969   000D0A  E109               	bnz	u4520
  1970   000D0C  0E33               	movlw	51
  1971   000D0E  5C09               	subwf	_hour_btn_pressed_cnt^0,w,c
  1972   000D10  A0D8               	btfss	status,0,c
  1973   000D12  EF8D  F006         	goto	u4521
  1974   000D16  EF8F  F006         	goto	u4520
  1975   000D1A                     u4521:
  1976   000D1A  EF9D  F006         	goto	l7051
  1977   000D1E                     u4520:
  1978   000D1E  5023               	movf	_btn_press_verify_flg^0,w,c
  1979   000D20  A4D8               	btfss	status,2,c
  1980   000D22  EF95  F006         	goto	u4531
  1981   000D26  EF97  F006         	goto	u4530
  1982   000D2A                     u4531:
  1983   000D2A  EF99  F006         	goto	l1109
  1984   000D2E                     u4530:
  1985   000D2E  0E0B               	movlw	11
  1986   000D30  6E25               	movwf	_BTN_CLICK_STATE^0,c
  1987   000D32                     l1109:
  1988   000D32  0E01               	movlw	1
  1989   000D34  6E23               	movwf	_btn_press_verify_flg^0,c
  1990   000D36  EF80  F006         	goto	l7041
  1991   000D3A                     l7051:
  1992                           
  1993                           ;Buttons.c: 53:                 if( hour_btn_released_cnt > 5 ) {
  1994   000D3A  0100               	movlb	0	; () banked
  1995   000D3C  51C7               	movf	(_hour_btn_released_cnt+1)& (0+255),w,b
  1996   000D3E  E109               	bnz	u4540
  1997   000D40  0E06               	movlw	6
  1998   000D42  5DC6               	subwf	_hour_btn_released_cnt& (0+255),w,b
  1999   000D44  A0D8               	btfss	status,0,c
  2000   000D46  EFA7  F006         	goto	u4541
  2001   000D4A  EFA9  F006         	goto	u4540
  2002   000D4E                     u4541:
  2003   000D4E  EF38  F008         	goto	l1143
  2004   000D52                     u4540:
  2005   000D52                     
  2006                           ; BSR set to: 0
  2007                           ;Buttons.c: 54:                     hour_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; BTN_
      +                          CLICK_EVENT = 0; btn_long_press_verify_flg = 0; btn_press_verify_flg = 0;
  2008   000D52  0E00               	movlw	0
  2009   000D54  6FC7               	movwf	(_hour_btn_released_cnt+1)& (0+255),b
  2010   000D56  0E00               	movlw	0
  2011   000D58  6FC6               	movwf	_hour_btn_released_cnt& (0+255),b
  2012   000D5A  0E00               	movlw	0
  2013   000D5C  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  2014   000D5E  0E00               	movlw	0
  2015   000D60  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  2016   000D62  0E00               	movlw	0
  2017   000D64  6E22               	movwf	_btn_long_press_verify_flg^0,c
  2018   000D66  0E00               	movlw	0
  2019   000D68  6E23               	movwf	_btn_press_verify_flg^0,c
  2020   000D6A  EF38  F008         	goto	l1143
  2021   000D6E                     l7055:
  2022   000D6E  0ED1               	movlw	209
  2023   000D70  5C07               	subwf	_up_btn_pressed_cnt^0,w,c
  2024   000D72  0E07               	movlw	7
  2025   000D74  5808               	subwfb	(_up_btn_pressed_cnt+1)^0,w,c
  2026   000D76  A0D8               	btfss	status,0,c
  2027   000D78  EFC0  F006         	goto	u4551
  2028   000D7C  EFC2  F006         	goto	u4550
  2029   000D80                     u4551:
  2030   000D80  EFD6  F006         	goto	l7063
  2031   000D84                     u4550:
  2032   000D84  5022               	movf	_btn_long_press_verify_flg^0,w,c
  2033   000D86  A4D8               	btfss	status,2,c
  2034   000D88  EFC8  F006         	goto	u4561
  2035   000D8C  EFCA  F006         	goto	u4560
  2036   000D90                     u4561:
  2037   000D90  EFCC  F006         	goto	l1114
  2038   000D94                     u4560:
  2039   000D94  0E11               	movlw	17
  2040   000D96  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2041   000D98                     l1114:
  2042   000D98  0E01               	movlw	1
  2043   000D9A  6E22               	movwf	_btn_long_press_verify_flg^0,c
  2044   000D9C  0E07               	movlw	7
  2045   000D9E  6E08               	movwf	(_up_btn_pressed_cnt+1)^0,c
  2046   000DA0  0ED0               	movlw	208
  2047   000DA2  6E07               	movwf	_up_btn_pressed_cnt^0,c
  2048   000DA4                     l7061:
  2049   000DA4  EC2A  F003         	call	_ActionButtons	;wreg free
  2050   000DA8  EFEF  F006         	goto	l7071
  2051   000DAC                     l7063:
  2052   000DAC  5008               	movf	(_up_btn_pressed_cnt+1)^0,w,c
  2053   000DAE  E109               	bnz	u4570
  2054   000DB0  0E33               	movlw	51
  2055   000DB2  5C07               	subwf	_up_btn_pressed_cnt^0,w,c
  2056   000DB4  A0D8               	btfss	status,0,c
  2057   000DB6  EFDF  F006         	goto	u4571
  2058   000DBA  EFE1  F006         	goto	u4570
  2059   000DBE                     u4571:
  2060   000DBE  EFEF  F006         	goto	l7071
  2061   000DC2                     u4570:
  2062   000DC2  5023               	movf	_btn_press_verify_flg^0,w,c
  2063   000DC4  A4D8               	btfss	status,2,c
  2064   000DC6  EFE7  F006         	goto	u4581
  2065   000DCA  EFE9  F006         	goto	u4580
  2066   000DCE                     u4581:
  2067   000DCE  EFEB  F006         	goto	l1117
  2068   000DD2                     u4580:
  2069   000DD2  0E0C               	movlw	12
  2070   000DD4  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2071   000DD6                     l1117:
  2072   000DD6  0E01               	movlw	1
  2073   000DD8  6E23               	movwf	_btn_press_verify_flg^0,c
  2074   000DDA  EFD2  F006         	goto	l7061
  2075   000DDE                     l7071:
  2076                           
  2077                           ;Buttons.c: 60:                 if( up_btn_released_cnt > 5 ) {
  2078   000DDE  0100               	movlb	0	; () banked
  2079   000DE0  51C5               	movf	(_up_btn_released_cnt+1)& (0+255),w,b
  2080   000DE2  E109               	bnz	u4590
  2081   000DE4  0E06               	movlw	6
  2082   000DE6  5DC4               	subwf	_up_btn_released_cnt& (0+255),w,b
  2083   000DE8  A0D8               	btfss	status,0,c
  2084   000DEA  EFF9  F006         	goto	u4591
  2085   000DEE  EFFB  F006         	goto	u4590
  2086   000DF2                     u4591:
  2087   000DF2  EF38  F008         	goto	l1143
  2088   000DF6                     u4590:
  2089   000DF6                     
  2090                           ; BSR set to: 0
  2091                           ;Buttons.c: 61:                     up_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; BTN_CL
      +                          ICK_EVENT = 0; btn_long_press_verify_flg = 0; btn_press_verify_flg = 0; BTN_CLICK_STATE 
      +                          = 0;
  2092   000DF6  0E00               	movlw	0
  2093   000DF8  6FC5               	movwf	(_up_btn_released_cnt+1)& (0+255),b
  2094   000DFA  0E00               	movlw	0
  2095   000DFC  6FC4               	movwf	_up_btn_released_cnt& (0+255),b
  2096   000DFE  0E00               	movlw	0
  2097   000E00  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  2098   000E02  0E00               	movlw	0
  2099   000E04  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  2100   000E06  0E00               	movlw	0
  2101   000E08  6E22               	movwf	_btn_long_press_verify_flg^0,c
  2102   000E0A  0E00               	movlw	0
  2103   000E0C  6E23               	movwf	_btn_press_verify_flg^0,c
  2104   000E0E  0E00               	movlw	0
  2105   000E10  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2106   000E12  EF38  F008         	goto	l1143
  2107   000E16                     l7075:
  2108   000E16  0ED1               	movlw	209
  2109   000E18  5C05               	subwf	_down_btn_pressed_cnt^0,w,c
  2110   000E1A  0E07               	movlw	7
  2111   000E1C  5806               	subwfb	(_down_btn_pressed_cnt+1)^0,w,c
  2112   000E1E  A0D8               	btfss	status,0,c
  2113   000E20  EF14  F007         	goto	u4601
  2114   000E24  EF16  F007         	goto	u4600
  2115   000E28                     u4601:
  2116   000E28  EF2A  F007         	goto	l7083
  2117   000E2C                     u4600:
  2118   000E2C  5022               	movf	_btn_long_press_verify_flg^0,w,c
  2119   000E2E  A4D8               	btfss	status,2,c
  2120   000E30  EF1C  F007         	goto	u4611
  2121   000E34  EF1E  F007         	goto	u4610
  2122   000E38                     u4611:
  2123   000E38  EF20  F007         	goto	l1121
  2124   000E3C                     u4610:
  2125   000E3C  0E12               	movlw	18
  2126   000E3E  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2127   000E40                     l1121:
  2128   000E40  0E01               	movlw	1
  2129   000E42  6E22               	movwf	_btn_long_press_verify_flg^0,c
  2130   000E44  0E07               	movlw	7
  2131   000E46  6E06               	movwf	(_down_btn_pressed_cnt+1)^0,c
  2132   000E48  0ED0               	movlw	208
  2133   000E4A  6E05               	movwf	_down_btn_pressed_cnt^0,c
  2134   000E4C                     l7081:
  2135   000E4C  EC2A  F003         	call	_ActionButtons	;wreg free
  2136   000E50  EF43  F007         	goto	l7091
  2137   000E54                     l7083:
  2138   000E54  5006               	movf	(_down_btn_pressed_cnt+1)^0,w,c
  2139   000E56  E109               	bnz	u4620
  2140   000E58  0E33               	movlw	51
  2141   000E5A  5C05               	subwf	_down_btn_pressed_cnt^0,w,c
  2142   000E5C  A0D8               	btfss	status,0,c
  2143   000E5E  EF33  F007         	goto	u4621
  2144   000E62  EF35  F007         	goto	u4620
  2145   000E66                     u4621:
  2146   000E66  EF43  F007         	goto	l7091
  2147   000E6A                     u4620:
  2148   000E6A  5023               	movf	_btn_press_verify_flg^0,w,c
  2149   000E6C  A4D8               	btfss	status,2,c
  2150   000E6E  EF3B  F007         	goto	u4631
  2151   000E72  EF3D  F007         	goto	u4630
  2152   000E76                     u4631:
  2153   000E76  EF3F  F007         	goto	l1124
  2154   000E7A                     u4630:
  2155   000E7A  0E0D               	movlw	13
  2156   000E7C  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2157   000E7E                     l1124:
  2158   000E7E  0E01               	movlw	1
  2159   000E80  6E23               	movwf	_btn_press_verify_flg^0,c
  2160   000E82  EF26  F007         	goto	l7081
  2161   000E86                     l7091:
  2162                           
  2163                           ;Buttons.c: 67:                 if( down_btn_released_cnt > 5 ) {
  2164   000E86  0100               	movlb	0	; () banked
  2165   000E88  51C3               	movf	(_down_btn_released_cnt+1)& (0+255),w,b
  2166   000E8A  E109               	bnz	u4640
  2167   000E8C  0E06               	movlw	6
  2168   000E8E  5DC2               	subwf	_down_btn_released_cnt& (0+255),w,b
  2169   000E90  A0D8               	btfss	status,0,c
  2170   000E92  EF4D  F007         	goto	u4641
  2171   000E96  EF4F  F007         	goto	u4640
  2172   000E9A                     u4641:
  2173   000E9A  EF38  F008         	goto	l1143
  2174   000E9E                     u4640:
  2175   000E9E                     
  2176                           ; BSR set to: 0
  2177                           ;Buttons.c: 68:                     down_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; BTN_
      +                          CLICK_EVENT = 0; btn_long_press_verify_flg = 0; btn_press_verify_flg = 0; BTN_CLICK_STAT
      +                          E = 0;
  2178   000E9E  0E00               	movlw	0
  2179   000EA0  6FC3               	movwf	(_down_btn_released_cnt+1)& (0+255),b
  2180   000EA2  0E00               	movlw	0
  2181   000EA4  6FC2               	movwf	_down_btn_released_cnt& (0+255),b
  2182   000EA6  0E00               	movlw	0
  2183   000EA8  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  2184   000EAA  0E00               	movlw	0
  2185   000EAC  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  2186   000EAE  0E00               	movlw	0
  2187   000EB0  6E22               	movwf	_btn_long_press_verify_flg^0,c
  2188   000EB2  0E00               	movlw	0
  2189   000EB4  6E23               	movwf	_btn_press_verify_flg^0,c
  2190   000EB6  0E00               	movlw	0
  2191   000EB8  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2192                           
  2193                           ;Buttons.c: 69:                     if( btn_long_press_verify_flg ) { btn_long_press_ver
      +                          ify_flg = 0; }
  2194   000EBA  5022               	movf	_btn_long_press_verify_flg^0,w,c
  2195   000EBC  B4D8               	btfsc	status,2,c
  2196   000EBE  EF63  F007         	goto	u4651
  2197   000EC2  EF65  F007         	goto	u4650
  2198   000EC6                     u4651:
  2199   000EC6  EF69  F007         	goto	l7097
  2200   000ECA                     u4650:
  2201   000ECA                     
  2202                           ; BSR set to: 0
  2203   000ECA  0E00               	movlw	0
  2204   000ECC  6E22               	movwf	_btn_long_press_verify_flg^0,c
  2205   000ECE  EF38  F008         	goto	l1143
  2206   000ED2                     l7097:
  2207                           
  2208                           ; BSR set to: 0
  2209   000ED2  5023               	movf	_btn_press_verify_flg^0,w,c
  2210   000ED4  B4D8               	btfsc	status,2,c
  2211   000ED6  EF6F  F007         	goto	u4661
  2212   000EDA  EF71  F007         	goto	u4660
  2213   000EDE                     u4661:
  2214   000EDE  EF38  F008         	goto	l1143
  2215   000EE2                     u4660:
  2216   000EE2                     
  2217                           ; BSR set to: 0
  2218   000EE2  0E00               	movlw	0
  2219   000EE4  6E23               	movwf	_btn_press_verify_flg^0,c
  2220   000EE6  EF38  F008         	goto	l1143
  2221   000EEA                     l7101:
  2222   000EEA  0ED1               	movlw	209
  2223   000EEC  5C03               	subwf	_sel_btn_pressed_cnt^0,w,c
  2224   000EEE  0E07               	movlw	7
  2225   000EF0  5804               	subwfb	(_sel_btn_pressed_cnt+1)^0,w,c
  2226   000EF2  A0D8               	btfss	status,0,c
  2227   000EF4  EF7E  F007         	goto	u4671
  2228   000EF8  EF80  F007         	goto	u4670
  2229   000EFC                     u4671:
  2230   000EFC  EF94  F007         	goto	l7109
  2231   000F00                     u4670:
  2232   000F00  5022               	movf	_btn_long_press_verify_flg^0,w,c
  2233   000F02  A4D8               	btfss	status,2,c
  2234   000F04  EF86  F007         	goto	u4681
  2235   000F08  EF88  F007         	goto	u4680
  2236   000F0C                     u4681:
  2237   000F0C  EF8A  F007         	goto	l1131
  2238   000F10                     u4680:
  2239   000F10  0E13               	movlw	19
  2240   000F12  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2241   000F14                     l1131:
  2242   000F14  0E01               	movlw	1
  2243   000F16  6E22               	movwf	_btn_long_press_verify_flg^0,c
  2244   000F18  0E07               	movlw	7
  2245   000F1A  6E04               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  2246   000F1C  0ED0               	movlw	208
  2247   000F1E  6E03               	movwf	_sel_btn_pressed_cnt^0,c
  2248   000F20                     l7107:
  2249   000F20  EC2A  F003         	call	_ActionButtons	;wreg free
  2250   000F24  EFAD  F007         	goto	l7117
  2251   000F28                     l7109:
  2252   000F28  5004               	movf	(_sel_btn_pressed_cnt+1)^0,w,c
  2253   000F2A  E109               	bnz	u4690
  2254   000F2C  0E33               	movlw	51
  2255   000F2E  5C03               	subwf	_sel_btn_pressed_cnt^0,w,c
  2256   000F30  A0D8               	btfss	status,0,c
  2257   000F32  EF9D  F007         	goto	u4691
  2258   000F36  EF9F  F007         	goto	u4690
  2259   000F3A                     u4691:
  2260   000F3A  EFAD  F007         	goto	l7117
  2261   000F3E                     u4690:
  2262   000F3E  5023               	movf	_btn_press_verify_flg^0,w,c
  2263   000F40  A4D8               	btfss	status,2,c
  2264   000F42  EFA5  F007         	goto	u4701
  2265   000F46  EFA7  F007         	goto	u4700
  2266   000F4A                     u4701:
  2267   000F4A  EFA9  F007         	goto	l1134
  2268   000F4E                     u4700:
  2269   000F4E  0E0E               	movlw	14
  2270   000F50  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2271   000F52                     l1134:
  2272   000F52  0E01               	movlw	1
  2273   000F54  6E23               	movwf	_btn_press_verify_flg^0,c
  2274   000F56  EF90  F007         	goto	l7107
  2275   000F5A                     l7117:
  2276                           
  2277                           ;Buttons.c: 76:                 if( sel_btn_released_cnt > 5 ) {
  2278   000F5A  0100               	movlb	0	; () banked
  2279   000F5C  51C1               	movf	(_sel_btn_released_cnt+1)& (0+255),w,b
  2280   000F5E  E109               	bnz	u4710
  2281   000F60  0E06               	movlw	6
  2282   000F62  5DC0               	subwf	_sel_btn_released_cnt& (0+255),w,b
  2283   000F64  A0D8               	btfss	status,0,c
  2284   000F66  EFB7  F007         	goto	u4711
  2285   000F6A  EFB9  F007         	goto	u4710
  2286   000F6E                     u4711:
  2287   000F6E  EF38  F008         	goto	l1143
  2288   000F72                     u4710:
  2289   000F72                     
  2290                           ; BSR set to: 0
  2291                           ;Buttons.c: 77:                     sel_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; BTN_C
      +                          LICK_EVENT = 0; btn_long_press_verify_flg = 0; btn_press_verify_flg = 0;
  2292   000F72  0E00               	movlw	0
  2293   000F74  6FC1               	movwf	(_sel_btn_released_cnt+1)& (0+255),b
  2294   000F76  0E00               	movlw	0
  2295   000F78  6FC0               	movwf	_sel_btn_released_cnt& (0+255),b
  2296   000F7A  0E00               	movlw	0
  2297   000F7C  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  2298   000F7E  0E00               	movlw	0
  2299   000F80  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  2300   000F82  0E00               	movlw	0
  2301   000F84  6E22               	movwf	_btn_long_press_verify_flg^0,c
  2302   000F86  0E00               	movlw	0
  2303   000F88  6E23               	movwf	_btn_press_verify_flg^0,c
  2304   000F8A  EF38  F008         	goto	l1143
  2305   000F8E                     l7121:
  2306   000F8E  0ED1               	movlw	209
  2307   000F90  5C01               	subwf	_reset_btn_pressed_cnt^0,w,c
  2308   000F92  0E07               	movlw	7
  2309   000F94  5802               	subwfb	(_reset_btn_pressed_cnt+1)^0,w,c
  2310   000F96  A0D8               	btfss	status,0,c
  2311   000F98  EFD0  F007         	goto	u4721
  2312   000F9C  EFD2  F007         	goto	u4720
  2313   000FA0                     u4721:
  2314   000FA0  EFE6  F007         	goto	l7129
  2315   000FA4                     u4720:
  2316   000FA4  5022               	movf	_btn_long_press_verify_flg^0,w,c
  2317   000FA6  A4D8               	btfss	status,2,c
  2318   000FA8  EFD8  F007         	goto	u4731
  2319   000FAC  EFDA  F007         	goto	u4730
  2320   000FB0                     u4731:
  2321   000FB0  EFDC  F007         	goto	l1138
  2322   000FB4                     u4730:
  2323   000FB4  0E14               	movlw	20
  2324   000FB6  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2325   000FB8                     l1138:
  2326   000FB8  0E01               	movlw	1
  2327   000FBA  6E22               	movwf	_btn_long_press_verify_flg^0,c
  2328   000FBC  0E07               	movlw	7
  2329   000FBE  6E02               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  2330   000FC0  0ED0               	movlw	208
  2331   000FC2  6E01               	movwf	_reset_btn_pressed_cnt^0,c
  2332   000FC4                     l7127:
  2333   000FC4  EC2A  F003         	call	_ActionButtons	;wreg free
  2334   000FC8  EFFF  F007         	goto	l7137
  2335   000FCC                     l7129:
  2336   000FCC  5002               	movf	(_reset_btn_pressed_cnt+1)^0,w,c
  2337   000FCE  E109               	bnz	u4740
  2338   000FD0  0E33               	movlw	51
  2339   000FD2  5C01               	subwf	_reset_btn_pressed_cnt^0,w,c
  2340   000FD4  A0D8               	btfss	status,0,c
  2341   000FD6  EFEF  F007         	goto	u4741
  2342   000FDA  EFF1  F007         	goto	u4740
  2343   000FDE                     u4741:
  2344   000FDE  EFFF  F007         	goto	l7137
  2345   000FE2                     u4740:
  2346   000FE2  5023               	movf	_btn_press_verify_flg^0,w,c
  2347   000FE4  A4D8               	btfss	status,2,c
  2348   000FE6  EFF7  F007         	goto	u4751
  2349   000FEA  EFF9  F007         	goto	u4750
  2350   000FEE                     u4751:
  2351   000FEE  EFFB  F007         	goto	l1141
  2352   000FF2                     u4750:
  2353   000FF2  0E0F               	movlw	15
  2354   000FF4  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2355   000FF6                     l1141:
  2356   000FF6  0E01               	movlw	1
  2357   000FF8  6E23               	movwf	_btn_press_verify_flg^0,c
  2358   000FFA  EFE2  F007         	goto	l7127
  2359   000FFE                     l7137:
  2360                           
  2361                           ;Buttons.c: 83:                 if( reset_btn_released_cnt > 5 ) {
  2362   000FFE  0100               	movlb	0	; () banked
  2363   001000  51BF               	movf	(_reset_btn_released_cnt+1)& (0+255),w,b
  2364   001002  E109               	bnz	u4760
  2365   001004  0E06               	movlw	6
  2366   001006  5DBE               	subwf	_reset_btn_released_cnt& (0+255),w,b
  2367   001008  A0D8               	btfss	status,0,c
  2368   00100A  EF09  F008         	goto	u4761
  2369   00100E  EF0B  F008         	goto	u4760
  2370   001012                     u4761:
  2371   001012  EF38  F008         	goto	l1143
  2372   001016                     u4760:
  2373   001016                     
  2374                           ; BSR set to: 0
  2375                           ;Buttons.c: 84:                     reset_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn
      +                          _long_press_verify_flg = 0; btn_press_verify_flg = 0;
  2376   001016  0E00               	movlw	0
  2377   001018  6FBF               	movwf	(_reset_btn_released_cnt+1)& (0+255),b
  2378   00101A  0E00               	movlw	0
  2379   00101C  6FBE               	movwf	_reset_btn_released_cnt& (0+255),b
  2380   00101E  0E00               	movlw	0
  2381   001020  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  2382   001022  0E00               	movlw	0
  2383   001024  6E22               	movwf	_btn_long_press_verify_flg^0,c
  2384   001026  0E00               	movlw	0
  2385   001028  6E23               	movwf	_btn_press_verify_flg^0,c
  2386   00102A  EF38  F008         	goto	l1143
  2387   00102E                     l7143:
  2388   00102E  5024               	movf	_BTN_CLICK_EVENT^0,w,c
  2389   001030  6E5F               	movwf	??_VerifyButtons^0,c
  2390   001032  6A60               	clrf	(??_VerifyButtons+1)^0,c
  2391                           
  2392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2393                           ; Switch size 1, requested type "simple"
  2394                           ; Number of cases is 1, Range of values is 0 to 0
  2395                           ; switch strategies available:
  2396                           ; Name         Instructions Cycles
  2397                           ; simple_byte            4     3 (average)
  2398                           ;	Chosen strategy is simple_byte
  2399   001034  5060               	movf	(??_VerifyButtons+1)^0,w,c
  2400   001036  0A00               	xorlw	0	; case 0
  2401   001038  B4D8               	btfsc	status,2,c
  2402   00103A  EF21  F008         	goto	l9883
  2403   00103E  EF38  F008         	goto	l1143
  2404   001042                     l9883:
  2405                           
  2406                           ; Switch size 1, requested type "simple"
  2407                           ; Number of cases is 5, Range of values is 1 to 5
  2408                           ; switch strategies available:
  2409                           ; Name         Instructions Cycles
  2410                           ; simple_byte           16     9 (average)
  2411                           ;	Chosen strategy is simple_byte
  2412   001042  505F               	movf	??_VerifyButtons^0,w,c
  2413   001044  0A01               	xorlw	1	; case 1
  2414   001046  B4D8               	btfsc	status,2,c
  2415   001048  EF65  F006         	goto	l7035
  2416   00104C  0A03               	xorlw	3	; case 2
  2417   00104E  B4D8               	btfsc	status,2,c
  2418   001050  EFB7  F006         	goto	l7055
  2419   001054  0A01               	xorlw	1	; case 3
  2420   001056  B4D8               	btfsc	status,2,c
  2421   001058  EF0B  F007         	goto	l7075
  2422   00105C  0A07               	xorlw	7	; case 4
  2423   00105E  B4D8               	btfsc	status,2,c
  2424   001060  EF75  F007         	goto	l7101
  2425   001064  0A01               	xorlw	1	; case 5
  2426   001066  B4D8               	btfsc	status,2,c
  2427   001068  EFC7  F007         	goto	l7121
  2428   00106C  EF38  F008         	goto	l1143
  2429   001070                     l1143:
  2430   001070  0012               	return		;funcret
  2431   001072                     __end_of_VerifyButtons:
  2432                           	callstack 0
  2433                           
  2434 ;; *************** function _ActionButtons *****************
  2435 ;; Defined at:
  2436 ;;		line 90 in file "Buttons.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  temp            1   21[COMRAM] char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2450 ;;      Params:         0       0       0       0       0       0       0
  2451 ;;      Locals:         1       0       0       0       0       0       0
  2452 ;;      Temps:          2       0       0       0       0       0       0
  2453 ;;      Totals:         3       0       0       0       0       0       0
  2454 ;;Total ram usage:        3 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 9
  2457 ;; This function calls:
  2458 ;;		_DecValProcess
  2459 ;;		_Ds1307Write
  2460 ;;		_IncValProcess
  2461 ;;		_StartCounter
  2462 ;;		_StopCounter
  2463 ;;		_UpDownTransfer
  2464 ;; This function is called by:
  2465 ;;		_VerifyButtons
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text7
  2470   000654                     __ptext7:
  2471                           	callstack 0
  2472   000654                     _ActionButtons:
  2473                           	callstack 20
  2474   000654                     
  2475                           ;Buttons.c: 92:     if( counter_down_comp_flg ) {
  2476   000654  502A               	movf	_counter_down_comp_flg^0,w,c
  2477   000656  B4D8               	btfsc	status,2,c
  2478   000658  EF30  F003         	goto	u3961
  2479   00065C  EF32  F003         	goto	u3960
  2480   000660                     u3961:
  2481   000660  EF3D  F006         	goto	l6757
  2482   000664                     u3960:
  2483   000664                     
  2484                           ;Buttons.c: 93:         blink_enable_flg = 0; counter_down_comp_flg = 0; SYSTEM_STATE_FL
      +                          G = 203; BTN_CLICK_STATE = 0;
  2485   000664  0E00               	movlw	0
  2486   000666  6E28               	movwf	_blink_enable_flg^0,c
  2487   000668  0E00               	movlw	0
  2488   00066A  6E2A               	movwf	_counter_down_comp_flg^0,c
  2489   00066C  0ECB               	movlw	203
  2490   00066E  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  2491   000670  0E00               	movlw	0
  2492   000672  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2493   000674  EF3D  F006         	goto	l6757
  2494   000678                     l6445:
  2495                           
  2496                           ;Buttons.c: 106:                     if( rtc_clock_disp_type == 0 ){
  2497   000678  5041               	movf	_rtc_clock_disp_type^0,w,c
  2498   00067A  A4D8               	btfss	status,2,c
  2499   00067C  EF42  F003         	goto	u3971
  2500   000680  EF44  F003         	goto	u3970
  2501   000684                     u3971:
  2502   000684  EF5A  F003         	goto	l6453
  2503   000688                     u3970:
  2504   000688                     
  2505                           ;Buttons.c: 107:                         if( rtc_hour_ampm_flg == 0 && real_rtc_data[ 2 
      +                          ] == 0 ) real_rtc_data[ 2 ] = 0x12;
  2506   000688  5040               	movf	_rtc_hour_ampm_flg^0,w,c
  2507   00068A  A4D8               	btfss	status,2,c
  2508   00068C  EF4A  F003         	goto	u3981
  2509   000690  EF4C  F003         	goto	u3980
  2510   000694                     u3981:
  2511   000694  EF56  F003         	goto	l1152
  2512   000698                     u3980:
  2513   000698  5044               	movf	(_real_rtc_data+2)^0,w,c
  2514   00069A  A4D8               	btfss	status,2,c
  2515   00069C  EF52  F003         	goto	u3991
  2516   0006A0  EF54  F003         	goto	u3990
  2517   0006A4                     u3991:
  2518   0006A4  EF56  F003         	goto	l1152
  2519   0006A8                     u3990:
  2520   0006A8  0E12               	movlw	18
  2521   0006AA  6E44               	movwf	(_real_rtc_data+2)^0,c
  2522   0006AC                     l1152:
  2523                           
  2524                           ;Buttons.c: 108:                         rtc_clock_disp_type = 1;
  2525   0006AC  0E01               	movlw	1
  2526   0006AE  6E41               	movwf	_rtc_clock_disp_type^0,c
  2527                           
  2528                           ;Buttons.c: 109:                     }
  2529   0006B0  EF6F  F003         	goto	l1153
  2530   0006B4                     l6453:
  2531                           
  2532                           ;Buttons.c: 111:                         if( rtc_hour_ampm_flg == 0 && real_rtc_data[ 2 
      +                          ] == 0x12 ) real_rtc_data[ 2 ] = 0x00;
  2533   0006B4  5040               	movf	_rtc_hour_ampm_flg^0,w,c
  2534   0006B6  A4D8               	btfss	status,2,c
  2535   0006B8  EF60  F003         	goto	u4001
  2536   0006BC  EF62  F003         	goto	u4000
  2537   0006C0                     u4001:
  2538   0006C0  EF6D  F003         	goto	l1154
  2539   0006C4                     u4000:
  2540   0006C4  0E12               	movlw	18
  2541   0006C6  1844               	xorwf	(_real_rtc_data+2)^0,w,c
  2542   0006C8  A4D8               	btfss	status,2,c
  2543   0006CA  EF69  F003         	goto	u4011
  2544   0006CE  EF6B  F003         	goto	u4010
  2545   0006D2                     u4011:
  2546   0006D2  EF6D  F003         	goto	l1154
  2547   0006D6                     u4010:
  2548   0006D6  0E00               	movlw	0
  2549   0006D8  6E44               	movwf	(_real_rtc_data+2)^0,c
  2550   0006DA                     l1154:
  2551                           
  2552                           ;Buttons.c: 112:                         rtc_clock_disp_type = 0;
  2553   0006DA  0E00               	movlw	0
  2554   0006DC  6E41               	movwf	_rtc_clock_disp_type^0,c
  2555   0006DE                     l1153:
  2556                           
  2557                           ;Buttons.c: 114:                     BTN_CLICK_STATE = 0; Ds1307Write( &real_rtc_data );
  2558   0006DE  0E00               	movlw	0
  2559   0006E0  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2560   0006E2  0E42               	movlw	low _real_rtc_data
  2561   0006E4  6E59               	movwf	Ds1307Write@write_datas^0,c
  2562   0006E6  0E00               	movlw	high _real_rtc_data
  2563   0006E8  6E5A               	movwf	(Ds1307Write@write_datas+1)^0,c
  2564   0006EA  EC47  F00D         	call	_Ds1307Write	;wreg free
  2565   0006EE  EF62  F006         	goto	l1155
  2566   0006F2                     l6463:
  2567                           
  2568                           ;Buttons.c: 117:                     SYSTEM_STATE_FLG = 101;
  2569   0006F2  0E65               	movlw	101
  2570   0006F4  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  2571                           
  2572                           ;Buttons.c: 118:                     break;
  2573   0006F6  EF62  F006         	goto	l1155
  2574   0006FA                     l6471:
  2575   0006FA  5025               	movf	_BTN_CLICK_STATE^0,w,c
  2576   0006FC  6E5C               	movwf	??_ActionButtons^0,c
  2577   0006FE  6A5D               	clrf	(??_ActionButtons+1)^0,c
  2578                           
  2579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2580                           ; Switch size 1, requested type "simple"
  2581                           ; Number of cases is 1, Range of values is 0 to 0
  2582                           ; switch strategies available:
  2583                           ; Name         Instructions Cycles
  2584                           ; simple_byte            4     3 (average)
  2585                           ;	Chosen strategy is simple_byte
  2586   000700  505D               	movf	(??_ActionButtons+1)^0,w,c
  2587   000702  0A00               	xorlw	0	; case 0
  2588   000704  B4D8               	btfsc	status,2,c
  2589   000706  EF87  F003         	goto	l9885
  2590   00070A  EF62  F006         	goto	l1155
  2591   00070E                     l9885:
  2592                           
  2593                           ; Switch size 1, requested type "simple"
  2594                           ; Number of cases is 4, Range of values is 11 to 14
  2595                           ; switch strategies available:
  2596                           ; Name         Instructions Cycles
  2597                           ; simple_byte           13     7 (average)
  2598                           ;	Chosen strategy is simple_byte
  2599   00070E  505C               	movf	??_ActionButtons^0,w,c
  2600   000710  0A0B               	xorlw	11	; case 11
  2601   000712  B4D8               	btfsc	status,2,c
  2602   000714  EF79  F003         	goto	l6463
  2603   000718  0A07               	xorlw	7	; case 12
  2604   00071A  B4D8               	btfsc	status,2,c
  2605   00071C  EF79  F003         	goto	l6463
  2606   000720  0A01               	xorlw	1	; case 13
  2607   000722  B4D8               	btfsc	status,2,c
  2608   000724  EF79  F003         	goto	l6463
  2609   000728  0A03               	xorlw	3	; case 14
  2610   00072A  B4D8               	btfsc	status,2,c
  2611   00072C  EF3C  F003         	goto	l6445
  2612   000730  EF62  F006         	goto	l1155
  2613   000734                     l1163:
  2614                           
  2615                           ;Buttons.c: 130:                     temp = real_rtc_data[ 2 ]; temp ++;
  2616   000734  C044  F05E         	movff	_real_rtc_data+2,ActionButtons@temp
  2617   000738  2A5E               	incf	ActionButtons@temp^0,f,c
  2618   00073A                     
  2619                           ;Buttons.c: 131:                     if( temp % 16 >= 10 ) temp += 6;
  2620   00073A  C05E  F05C         	movff	ActionButtons@temp,??_ActionButtons
  2621   00073E  6A5D               	clrf	(??_ActionButtons+1)^0,c
  2622   000740  BE5C               	btfsc	??_ActionButtons^0,7,c
  2623   000742  065D               	decf	(??_ActionButtons+1)^0,f,c
  2624   000744  0E0F               	movlw	15
  2625   000746  165C               	andwf	??_ActionButtons^0,f,c
  2626   000748  0E00               	movlw	0
  2627   00074A  165D               	andwf	(??_ActionButtons+1)^0,f,c
  2628   00074C  BE5D               	btfsc	(??_ActionButtons+1)^0,7,c
  2629   00074E  EFB2  F003         	goto	u4021
  2630   000752  505D               	movf	(??_ActionButtons+1)^0,w,c
  2631   000754  E109               	bnz	u4020
  2632   000756  0E0A               	movlw	10
  2633   000758  5C5C               	subwf	??_ActionButtons^0,w,c
  2634   00075A  A0D8               	btfss	status,0,c
  2635   00075C  EFB2  F003         	goto	u4021
  2636   000760  EFB4  F003         	goto	u4020
  2637   000764                     u4021:
  2638   000764  EFB6  F003         	goto	l6479
  2639   000768                     u4020:
  2640   000768  0E06               	movlw	6
  2641   00076A  265E               	addwf	ActionButtons@temp^0,f,c
  2642   00076C                     l6479:
  2643                           
  2644                           ;Buttons.c: 132:                     if( rtc_clock_disp_type == 0 ){
  2645   00076C  5041               	movf	_rtc_clock_disp_type^0,w,c
  2646   00076E  A4D8               	btfss	status,2,c
  2647   000770  EFBC  F003         	goto	u4031
  2648   000774  EFBE  F003         	goto	u4030
  2649   000778                     u4031:
  2650   000778  EFDA  F003         	goto	l6489
  2651   00077C                     u4030:
  2652   00077C                     
  2653                           ;Buttons.c: 133:                         if( temp > 0x11 ) { rtc_hour_ampm_flg = 1; }
  2654   00077C  505E               	movf	ActionButtons@temp^0,w,c
  2655   00077E  0A80               	xorlw	128
  2656   000780  0F6E               	addlw	-146
  2657   000782  A0D8               	btfss	status,0,c
  2658   000784  EFC6  F003         	goto	u4041
  2659   000788  EFC8  F003         	goto	u4040
  2660   00078C                     u4041:
  2661   00078C  EFCA  F003         	goto	l6485
  2662   000790                     u4040:
  2663   000790  0E01               	movlw	1
  2664   000792  6E40               	movwf	_rtc_hour_ampm_flg^0,c
  2665   000794                     l6485:
  2666                           
  2667                           ;Buttons.c: 134:                         if( temp > 0x23 ) { temp = 0; rtc_hour_ampm_flg
      +                           = 0; }
  2668   000794  505E               	movf	ActionButtons@temp^0,w,c
  2669   000796  0A80               	xorlw	128
  2670   000798  0F5C               	addlw	-164
  2671   00079A  A0D8               	btfss	status,0,c
  2672   00079C  EFD2  F003         	goto	u4051
  2673   0007A0  EFD4  F003         	goto	u4050
  2674   0007A4                     u4051:
  2675   0007A4  EF06  F004         	goto	l6503
  2676   0007A8                     u4050:
  2677   0007A8  0E00               	movlw	0
  2678   0007AA  6E5E               	movwf	ActionButtons@temp^0,c
  2679   0007AC  0E00               	movlw	0
  2680   0007AE  6E40               	movwf	_rtc_hour_ampm_flg^0,c
  2681   0007B0  EF06  F004         	goto	l6503
  2682   0007B4                     l6489:
  2683   0007B4  0441               	decf	_rtc_clock_disp_type^0,w,c
  2684   0007B6  A4D8               	btfss	status,2,c
  2685   0007B8  EFE0  F003         	goto	u4061
  2686   0007BC  EFE2  F003         	goto	u4060
  2687   0007C0                     u4061:
  2688   0007C0  EF06  F004         	goto	l6503
  2689   0007C4                     u4060:
  2690   0007C4                     
  2691                           ;Buttons.c: 137:                         if( temp > 0x12 ) temp = 1;
  2692   0007C4  505E               	movf	ActionButtons@temp^0,w,c
  2693   0007C6  0A80               	xorlw	128
  2694   0007C8  0F6D               	addlw	-147
  2695   0007CA  A0D8               	btfss	status,0,c
  2696   0007CC  EFEA  F003         	goto	u4071
  2697   0007D0  EFEC  F003         	goto	u4070
  2698   0007D4                     u4071:
  2699   0007D4  EFEE  F003         	goto	l6495
  2700   0007D8                     u4070:
  2701   0007D8  0E01               	movlw	1
  2702   0007DA  6E5E               	movwf	ActionButtons@temp^0,c
  2703   0007DC                     l6495:
  2704                           
  2705                           ;Buttons.c: 138:                         if( temp > 0x11 ) {
  2706   0007DC  505E               	movf	ActionButtons@temp^0,w,c
  2707   0007DE  0A80               	xorlw	128
  2708   0007E0  0F6E               	addlw	-146
  2709   0007E2  A0D8               	btfss	status,0,c
  2710   0007E4  EFF6  F003         	goto	u4081
  2711   0007E8  EFF8  F003         	goto	u4080
  2712   0007EC                     u4081:
  2713   0007EC  EF06  F004         	goto	l6503
  2714   0007F0                     u4080:
  2715   0007F0                     
  2716                           ;Buttons.c: 139:                             if( rtc_hour_ampm_flg == 1 ) rtc_hour_ampm_
      +                          flg = 0;
  2717   0007F0  0440               	decf	_rtc_hour_ampm_flg^0,w,c
  2718   0007F2  A4D8               	btfss	status,2,c
  2719   0007F4  EFFE  F003         	goto	u4091
  2720   0007F8  EF00  F004         	goto	u4090
  2721   0007FC                     u4091:
  2722   0007FC  EF04  F004         	goto	l6501
  2723   000800                     u4090:
  2724   000800  0E00               	movlw	0
  2725   000802  6E40               	movwf	_rtc_hour_ampm_flg^0,c
  2726   000804  EF06  F004         	goto	l6503
  2727   000808                     l6501:
  2728   000808  0E01               	movlw	1
  2729   00080A  6E40               	movwf	_rtc_hour_ampm_flg^0,c
  2730   00080C                     l6503:
  2731                           
  2732                           ;Buttons.c: 143:                     real_rtc_data[ 2 ] = temp;
  2733   00080C  C05E  F044         	movff	ActionButtons@temp,_real_rtc_data+2
  2734                           
  2735                           ;Buttons.c: 144:                     BTN_CLICK_STATE = 0;
  2736   000810  0E00               	movlw	0
  2737   000812  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2738                           
  2739                           ;Buttons.c: 145:                     set_mode_release_cnt = 0;
  2740   000814  0E00               	movlw	0
  2741   000816  0100               	movlb	0	; () banked
  2742   000818  6FC9               	movwf	(_set_mode_release_cnt+1)& (0+255),b
  2743   00081A  0E00               	movlw	0
  2744   00081C  6FC8               	movwf	_set_mode_release_cnt& (0+255),b
  2745   00081E  EF62  F006         	goto	l1155
  2746   000822                     l6507:
  2747                           
  2748                           ;Buttons.c: 148:                     BTN_CLICK_STATE = 0;
  2749   000822  0E00               	movlw	0
  2750   000824  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2751   000826                     
  2752                           ;Buttons.c: 149:                     temp = real_rtc_data[ 1 ]; temp ++;
  2753   000826  C043  F05E         	movff	_real_rtc_data+1,ActionButtons@temp
  2754   00082A  2A5E               	incf	ActionButtons@temp^0,f,c
  2755   00082C                     
  2756                           ;Buttons.c: 150:                     if( temp % 16 >= 10 ) temp += 6;
  2757   00082C  C05E  F05C         	movff	ActionButtons@temp,??_ActionButtons
  2758   000830  6A5D               	clrf	(??_ActionButtons+1)^0,c
  2759   000832  BE5C               	btfsc	??_ActionButtons^0,7,c
  2760   000834  065D               	decf	(??_ActionButtons+1)^0,f,c
  2761   000836  0E0F               	movlw	15
  2762   000838  165C               	andwf	??_ActionButtons^0,f,c
  2763   00083A  0E00               	movlw	0
  2764   00083C  165D               	andwf	(??_ActionButtons+1)^0,f,c
  2765   00083E  BE5D               	btfsc	(??_ActionButtons+1)^0,7,c
  2766   000840  EF2B  F004         	goto	u4101
  2767   000844  505D               	movf	(??_ActionButtons+1)^0,w,c
  2768   000846  E109               	bnz	u4100
  2769   000848  0E0A               	movlw	10
  2770   00084A  5C5C               	subwf	??_ActionButtons^0,w,c
  2771   00084C  A0D8               	btfss	status,0,c
  2772   00084E  EF2B  F004         	goto	u4101
  2773   000852  EF2D  F004         	goto	u4100
  2774   000856                     u4101:
  2775   000856  EF2F  F004         	goto	l1175
  2776   00085A                     u4100:
  2777   00085A  0E06               	movlw	6
  2778   00085C  265E               	addwf	ActionButtons@temp^0,f,c
  2779   00085E                     l1175:
  2780                           
  2781                           ;Buttons.c: 151:                     if( temp > 0x59 ) temp = 0;
  2782   00085E  505E               	movf	ActionButtons@temp^0,w,c
  2783   000860  0A80               	xorlw	128
  2784   000862  0F26               	addlw	-218
  2785   000864  A0D8               	btfss	status,0,c
  2786   000866  EF37  F004         	goto	u4111
  2787   00086A  EF39  F004         	goto	u4110
  2788   00086E                     u4111:
  2789   00086E  EF3B  F004         	goto	l6519
  2790   000872                     u4110:
  2791   000872  0E00               	movlw	0
  2792   000874  6E5E               	movwf	ActionButtons@temp^0,c
  2793   000876                     l6519:
  2794                           
  2795                           ;Buttons.c: 152:                     real_rtc_data[ 1 ] = temp;
  2796   000876  C05E  F043         	movff	ActionButtons@temp,_real_rtc_data+1
  2797                           
  2798                           ;Buttons.c: 153:                     set_mode_release_cnt = 0;
  2799   00087A  0E00               	movlw	0
  2800   00087C  0100               	movlb	0	; () banked
  2801   00087E  6FC9               	movwf	(_set_mode_release_cnt+1)& (0+255),b
  2802   000880  0E00               	movlw	0
  2803   000882  6FC8               	movwf	_set_mode_release_cnt& (0+255),b
  2804   000884  EF62  F006         	goto	l1155
  2805   000888                     l6523:
  2806                           
  2807                           ;Buttons.c: 156:                     BTN_CLICK_STATE = 0;
  2808   000888  0E00               	movlw	0
  2809   00088A  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2810   00088C                     
  2811                           ;Buttons.c: 157:                     temp = real_rtc_data[ 0 ]; temp ++;
  2812   00088C  C042  F05E         	movff	_real_rtc_data,ActionButtons@temp
  2813   000890  2A5E               	incf	ActionButtons@temp^0,f,c
  2814   000892                     
  2815                           ;Buttons.c: 158:                     if( temp % 16 >= 10 ) temp += 6;
  2816   000892  C05E  F05C         	movff	ActionButtons@temp,??_ActionButtons
  2817   000896  6A5D               	clrf	(??_ActionButtons+1)^0,c
  2818   000898  BE5C               	btfsc	??_ActionButtons^0,7,c
  2819   00089A  065D               	decf	(??_ActionButtons+1)^0,f,c
  2820   00089C  0E0F               	movlw	15
  2821   00089E  165C               	andwf	??_ActionButtons^0,f,c
  2822   0008A0  0E00               	movlw	0
  2823   0008A2  165D               	andwf	(??_ActionButtons+1)^0,f,c
  2824   0008A4  BE5D               	btfsc	(??_ActionButtons+1)^0,7,c
  2825   0008A6  EF5E  F004         	goto	u4121
  2826   0008AA  505D               	movf	(??_ActionButtons+1)^0,w,c
  2827   0008AC  E109               	bnz	u4120
  2828   0008AE  0E0A               	movlw	10
  2829   0008B0  5C5C               	subwf	??_ActionButtons^0,w,c
  2830   0008B2  A0D8               	btfss	status,0,c
  2831   0008B4  EF5E  F004         	goto	u4121
  2832   0008B8  EF60  F004         	goto	u4120
  2833   0008BC                     u4121:
  2834   0008BC  EF62  F004         	goto	l1178
  2835   0008C0                     u4120:
  2836   0008C0  0E06               	movlw	6
  2837   0008C2  265E               	addwf	ActionButtons@temp^0,f,c
  2838   0008C4                     l1178:
  2839                           
  2840                           ;Buttons.c: 159:                     if( temp > 0x59 ) temp = 0;
  2841   0008C4  505E               	movf	ActionButtons@temp^0,w,c
  2842   0008C6  0A80               	xorlw	128
  2843   0008C8  0F26               	addlw	-218
  2844   0008CA  A0D8               	btfss	status,0,c
  2845   0008CC  EF6A  F004         	goto	u4131
  2846   0008D0  EF6C  F004         	goto	u4130
  2847   0008D4                     u4131:
  2848   0008D4  EF6E  F004         	goto	l6535
  2849   0008D8                     u4130:
  2850   0008D8  0E00               	movlw	0
  2851   0008DA  6E5E               	movwf	ActionButtons@temp^0,c
  2852   0008DC                     l6535:
  2853                           
  2854                           ;Buttons.c: 160:                     real_rtc_data[ 0 ] = temp;
  2855   0008DC  C05E  F042         	movff	ActionButtons@temp,_real_rtc_data
  2856                           
  2857                           ;Buttons.c: 161:                     set_mode_release_cnt = 0;
  2858   0008E0  0E00               	movlw	0
  2859   0008E2  0100               	movlb	0	; () banked
  2860   0008E4  6FC9               	movwf	(_set_mode_release_cnt+1)& (0+255),b
  2861   0008E6  0E00               	movlw	0
  2862   0008E8  6FC8               	movwf	_set_mode_release_cnt& (0+255),b
  2863   0008EA  EF62  F006         	goto	l1155
  2864   0008EE                     l6541:
  2865   0008EE  5025               	movf	_BTN_CLICK_STATE^0,w,c
  2866   0008F0  6E5C               	movwf	??_ActionButtons^0,c
  2867   0008F2  6A5D               	clrf	(??_ActionButtons+1)^0,c
  2868                           
  2869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2870                           ; Switch size 1, requested type "simple"
  2871                           ; Number of cases is 1, Range of values is 0 to 0
  2872                           ; switch strategies available:
  2873                           ; Name         Instructions Cycles
  2874                           ; simple_byte            4     3 (average)
  2875                           ;	Chosen strategy is simple_byte
  2876   0008F4  505D               	movf	(??_ActionButtons+1)^0,w,c
  2877   0008F6  0A00               	xorlw	0	; case 0
  2878   0008F8  B4D8               	btfsc	status,2,c
  2879   0008FA  EF81  F004         	goto	l9887
  2880   0008FE  EF62  F006         	goto	l1155
  2881   000902                     l9887:
  2882                           
  2883                           ; Switch size 1, requested type "simple"
  2884                           ; Number of cases is 3, Range of values is 11 to 13
  2885                           ; switch strategies available:
  2886                           ; Name         Instructions Cycles
  2887                           ; simple_byte           10     6 (average)
  2888                           ;	Chosen strategy is simple_byte
  2889   000902  505C               	movf	??_ActionButtons^0,w,c
  2890   000904  0A0B               	xorlw	11	; case 11
  2891   000906  B4D8               	btfsc	status,2,c
  2892   000908  EF9A  F003         	goto	l1163
  2893   00090C  0A07               	xorlw	7	; case 12
  2894   00090E  B4D8               	btfsc	status,2,c
  2895   000910  EF11  F004         	goto	l6507
  2896   000914  0A01               	xorlw	1	; case 13
  2897   000916  B4D8               	btfsc	status,2,c
  2898   000918  EF44  F004         	goto	l6523
  2899   00091C  EF62  F006         	goto	l1155
  2900   000920                     l6543:
  2901                           
  2902                           ;Buttons.c: 170:                     BTN_CLICK_STATE = 0;
  2903   000920  0E00               	movlw	0
  2904   000922  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2905                           
  2906                           ;Buttons.c: 171:                     if( counter_skip_flg ) return;
  2907   000924  502C               	movf	_counter_skip_flg^0,w,c
  2908   000926  B4D8               	btfsc	status,2,c
  2909   000928  EF98  F004         	goto	u4141
  2910   00092C  EF9A  F004         	goto	u4140
  2911   000930                     u4141:
  2912   000930  EF9C  F004         	goto	l6547
  2913   000934                     u4140:
  2914   000934  EF62  F006         	goto	l1155
  2915   000938                     l6547:
  2916                           
  2917                           ;Buttons.c: 172:                     if( !counter_enable_flg ) { SYSTEM_STATE_FLG = 200;
      +                           StartCounter(); blink_enable_flg = 1; }
  2918   000938  502E               	movf	_counter_enable_flg^0,w,c
  2919   00093A  A4D8               	btfss	status,2,c
  2920   00093C  EFA2  F004         	goto	u4151
  2921   000940  EFA4  F004         	goto	u4150
  2922   000944                     u4151:
  2923   000944  EFAC  F004         	goto	l6555
  2924   000948                     u4150:
  2925   000948  0EC8               	movlw	200
  2926   00094A  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  2927   00094C  EC02  F015         	call	_StartCounter	;wreg free
  2928   000950  0E01               	movlw	1
  2929   000952  6E28               	movwf	_blink_enable_flg^0,c
  2930   000954  EFB2  F004         	goto	l6561
  2931   000958                     l6555:
  2932   000958  0EC9               	movlw	201
  2933   00095A  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  2934   00095C  ECFF  F014         	call	_StopCounter	;wreg free
  2935   000960  0E00               	movlw	0
  2936   000962  6E28               	movwf	_blink_enable_flg^0,c
  2937   000964                     l6561:
  2938                           
  2939                           ;Buttons.c: 174:                     temp_system_state = SYSTEM_STATE_FLG;
  2940   000964  C06F  F03A         	movff	_SYSTEM_STATE_FLG,_temp_system_state
  2941   000968  EF62  F006         	goto	l1155
  2942   00096C                     l6565:
  2943                           
  2944                           ;Buttons.c: 177:                     if( !counter_enable_flg ) return;
  2945   00096C  502E               	movf	_counter_enable_flg^0,w,c
  2946   00096E  A4D8               	btfss	status,2,c
  2947   000970  EFBC  F004         	goto	u4161
  2948   000974  EFBE  F004         	goto	u4160
  2949   000978                     u4161:
  2950   000978  EFC0  F004         	goto	l6569
  2951   00097C                     u4160:
  2952   00097C  EF62  F006         	goto	l1155
  2953   000980                     l6569:
  2954                           
  2955                           ;Buttons.c: 178:                     counter_skip_flg = 1 - counter_skip_flg;
  2956   000980  0E01               	movlw	1
  2957   000982  6E5C               	movwf	??_ActionButtons^0,c
  2958   000984  0E00               	movlw	0
  2959   000986  6E5D               	movwf	(??_ActionButtons+1)^0,c
  2960   000988  502C               	movf	_counter_skip_flg^0,w,c
  2961   00098A  5E5C               	subwf	??_ActionButtons^0,f,c
  2962   00098C  0E00               	movlw	0
  2963   00098E  5A5D               	subwfb	(??_ActionButtons+1)^0,f,c
  2964   000990  505C               	movf	??_ActionButtons^0,w,c
  2965   000992  105D               	iorwf	(??_ActionButtons+1)^0,w,c
  2966   000994  A4D8               	btfss	status,2,c
  2967   000996  EFCF  F004         	goto	u4171
  2968   00099A  EFD2  F004         	goto	u4170
  2969   00099E                     u4171:
  2970   00099E  0E01               	movlw	1
  2971   0009A0  EFD3  F004         	goto	u4180
  2972   0009A4                     u4170:
  2973   0009A4  0E00               	movlw	0
  2974   0009A6                     u4180:
  2975   0009A6  6E2C               	movwf	_counter_skip_flg^0,c
  2976   0009A8                     l6571:
  2977                           
  2978                           ;Buttons.c: 179:                     BTN_CLICK_STATE = 0;
  2979   0009A8  0E00               	movlw	0
  2980   0009AA  6E25               	movwf	_BTN_CLICK_STATE^0,c
  2981   0009AC  EF62  F006         	goto	l1155
  2982   0009B0                     l6575:
  2983                           
  2984                           ;Buttons.c: 182:                     UpDownTransfer();
  2985   0009B0  ECA6  F013         	call	_UpDownTransfer	;wreg free
  2986   0009B4                     
  2987                           ;Buttons.c: 183:                     counter_skip_flg = 0;
  2988   0009B4  0E00               	movlw	0
  2989   0009B6  6E2C               	movwf	_counter_skip_flg^0,c
  2990   0009B8  EFD4  F004         	goto	l6571
  2991   0009BC                     l6585:
  2992   0009BC  5025               	movf	_BTN_CLICK_STATE^0,w,c
  2993   0009BE  6E5C               	movwf	??_ActionButtons^0,c
  2994   0009C0  6A5D               	clrf	(??_ActionButtons+1)^0,c
  2995                           
  2996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2997                           ; Switch size 1, requested type "simple"
  2998                           ; Number of cases is 1, Range of values is 0 to 0
  2999                           ; switch strategies available:
  3000                           ; Name         Instructions Cycles
  3001                           ; simple_byte            4     3 (average)
  3002                           ;	Chosen strategy is simple_byte
  3003   0009C2  505D               	movf	(??_ActionButtons+1)^0,w,c
  3004   0009C4  0A00               	xorlw	0	; case 0
  3005   0009C6  B4D8               	btfsc	status,2,c
  3006   0009C8  EFE8  F004         	goto	l9889
  3007   0009CC  EF62  F006         	goto	l1155
  3008   0009D0                     l9889:
  3009                           
  3010                           ; Switch size 1, requested type "simple"
  3011                           ; Number of cases is 3, Range of values is 14 to 20
  3012                           ; switch strategies available:
  3013                           ; Name         Instructions Cycles
  3014                           ; simple_byte           10     6 (average)
  3015                           ;	Chosen strategy is simple_byte
  3016   0009D0  505C               	movf	??_ActionButtons^0,w,c
  3017   0009D2  0A0E               	xorlw	14	; case 14
  3018   0009D4  B4D8               	btfsc	status,2,c
  3019   0009D6  EF90  F004         	goto	l6543
  3020   0009DA  0A01               	xorlw	1	; case 15
  3021   0009DC  B4D8               	btfsc	status,2,c
  3022   0009DE  EFB6  F004         	goto	l6565
  3023   0009E2  0A1B               	xorlw	27	; case 20
  3024   0009E4  B4D8               	btfsc	status,2,c
  3025   0009E6  EFD8  F004         	goto	l6575
  3026   0009EA  EF62  F006         	goto	l1155
  3027   0009EE                     l6587:
  3028                           
  3029                           ;Buttons.c: 189:             counter_skip_flg = 0; blink_enable_flg = 0;
  3030   0009EE  0E00               	movlw	0
  3031   0009F0  6E2C               	movwf	_counter_skip_flg^0,c
  3032   0009F2  0E00               	movlw	0
  3033   0009F4  6E28               	movwf	_blink_enable_flg^0,c
  3034                           
  3035                           ;Buttons.c: 190:             switch( BTN_CLICK_STATE ) {
  3036   0009F6  EF53  F005         	goto	l6645
  3037   0009FA                     l6589:
  3038                           
  3039                           ;Buttons.c: 192:                     if( !counter_enable_flg ) { SYSTEM_STATE_FLG = 200;
      +                           StartCounter(); blink_enable_flg = 1; }
  3040   0009FA  502E               	movf	_counter_enable_flg^0,w,c
  3041   0009FC  A4D8               	btfss	status,2,c
  3042   0009FE  EF03  F005         	goto	u4191
  3043   000A02  EF05  F005         	goto	u4190
  3044   000A06                     u4191:
  3045   000A06  EF0D  F005         	goto	l6597
  3046   000A0A                     u4190:
  3047   000A0A  0EC8               	movlw	200
  3048   000A0C  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  3049   000A0E  EC02  F015         	call	_StartCounter	;wreg free
  3050   000A12  0E01               	movlw	1
  3051   000A14  6E28               	movwf	_blink_enable_flg^0,c
  3052   000A16  EF13  F005         	goto	l6603
  3053   000A1A                     l6597:
  3054   000A1A  0EC9               	movlw	201
  3055   000A1C  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  3056   000A1E  ECFF  F014         	call	_StopCounter	;wreg free
  3057   000A22  0E00               	movlw	0
  3058   000A24  6E28               	movwf	_blink_enable_flg^0,c
  3059   000A26                     l6603:
  3060                           
  3061                           ;Buttons.c: 194:                     BTN_CLICK_STATE = 0; temp_system_state = SYSTEM_STA
      +                          TE_FLG;
  3062   000A26  0E00               	movlw	0
  3063   000A28  6E25               	movwf	_BTN_CLICK_STATE^0,c
  3064   000A2A  EFB2  F004         	goto	l6561
  3065   000A2E                     l6609:
  3066                           
  3067                           ;Buttons.c: 197:                     if( counter_direction_flg == 1 ){
  3068   000A2E  042D               	decf	_counter_direction_flg^0,w,c
  3069   000A30  A4D8               	btfss	status,2,c
  3070   000A32  EF1D  F005         	goto	u4201
  3071   000A36  EF1F  F005         	goto	u4200
  3072   000A3A                     u4201:
  3073   000A3A  EF27  F005         	goto	l6613
  3074   000A3E                     u4200:
  3075   000A3E                     
  3076                           ;Buttons.c: 198:                         counter_up_hour = 0;
  3077   000A3E  0E00               	movlw	0
  3078   000A40  6E31               	movwf	_counter_up_hour^0,c
  3079                           
  3080                           ;Buttons.c: 199:                         counter_up_minute = 0;
  3081   000A42  0E00               	movlw	0
  3082   000A44  6E30               	movwf	_counter_up_minute^0,c
  3083                           
  3084                           ;Buttons.c: 200:                         counter_up_second = 0;
  3085   000A46  0E00               	movlw	0
  3086   000A48  6E2F               	movwf	_counter_up_second^0,c
  3087                           
  3088                           ;Buttons.c: 201:                     }
  3089   000A4A  EFD4  F004         	goto	l6571
  3090   000A4E                     l6613:
  3091   000A4E  502D               	movf	_counter_direction_flg^0,w,c
  3092   000A50  A4D8               	btfss	status,2,c
  3093   000A52  EF2D  F005         	goto	u4211
  3094   000A56  EF2F  F005         	goto	u4210
  3095   000A5A                     u4211:
  3096   000A5A  EFD4  F004         	goto	l6571
  3097   000A5E                     u4210:
  3098   000A5E                     
  3099                           ;Buttons.c: 203:                         counter_down_hour = counter_down_set_hour;
  3100   000A5E  C034  F037         	movff	_counter_down_set_hour,_counter_down_hour
  3101                           
  3102                           ;Buttons.c: 204:                         counter_down_minute = counter_down_set_minute;
  3103   000A62  C033  F036         	movff	_counter_down_set_minute,_counter_down_minute
  3104                           
  3105                           ;Buttons.c: 205:                         counter_down_second = counter_down_set_second;
  3106   000A66  C032  F035         	movff	_counter_down_set_second,_counter_down_second
  3107   000A6A  EFD4  F004         	goto	l6571
  3108   000A6E                     l6621:
  3109                           
  3110                           ;Buttons.c: 210:                     UpDownTransfer();
  3111   000A6E  ECA6  F013         	call	_UpDownTransfer	;wreg free
  3112   000A72  EFD4  F004         	goto	l6571
  3113   000A76                     l6627:
  3114                           
  3115                           ;Buttons.c: 214:                     if( counter_direction_flg == 1 ) { BTN_CLICK_STATE 
      +                          = 0; return; }
  3116   000A76  042D               	decf	_counter_direction_flg^0,w,c
  3117   000A78  A4D8               	btfss	status,2,c
  3118   000A7A  EF41  F005         	goto	u4221
  3119   000A7E  EF43  F005         	goto	u4220
  3120   000A82                     u4221:
  3121   000A82  EF45  F005         	goto	l6633
  3122   000A86                     u4220:
  3123   000A86  EFD4  F004         	goto	l6571
  3124   000A8A                     l6633:
  3125                           
  3126                           ;Buttons.c: 215:                     SYSTEM_STATE_FLG = 202;
  3127   000A8A  0ECA               	movlw	202
  3128   000A8C  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  3129                           
  3130                           ;Buttons.c: 216:                     break;
  3131   000A8E  EF62  F006         	goto	l1155
  3132   000A92                     l6635:
  3133                           
  3134                           ;Buttons.c: 218:                     if( counter_direction_flg == 1 ) { BTN_CLICK_STATE 
      +                          = 0; return; }
  3135   000A92  042D               	decf	_counter_direction_flg^0,w,c
  3136   000A94  A4D8               	btfss	status,2,c
  3137   000A96  EF4F  F005         	goto	u4231
  3138   000A9A  EF51  F005         	goto	u4230
  3139   000A9E                     u4231:
  3140   000A9E  EF45  F005         	goto	l6633
  3141   000AA2                     u4230:
  3142   000AA2  EFD4  F004         	goto	l6571
  3143   000AA6                     l6645:
  3144   000AA6  5025               	movf	_BTN_CLICK_STATE^0,w,c
  3145   000AA8  6E5C               	movwf	??_ActionButtons^0,c
  3146   000AAA  6A5D               	clrf	(??_ActionButtons+1)^0,c
  3147                           
  3148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3149                           ; Switch size 1, requested type "simple"
  3150                           ; Number of cases is 1, Range of values is 0 to 0
  3151                           ; switch strategies available:
  3152                           ; Name         Instructions Cycles
  3153                           ; simple_byte            4     3 (average)
  3154                           ;	Chosen strategy is simple_byte
  3155   000AAC  505D               	movf	(??_ActionButtons+1)^0,w,c
  3156   000AAE  0A00               	xorlw	0	; case 0
  3157   000AB0  B4D8               	btfsc	status,2,c
  3158   000AB2  EF5D  F005         	goto	l9891
  3159   000AB6  EF62  F006         	goto	l1155
  3160   000ABA                     l9891:
  3161                           
  3162                           ; Switch size 1, requested type "simple"
  3163                           ; Number of cases is 5, Range of values is 12 to 20
  3164                           ; switch strategies available:
  3165                           ; Name         Instructions Cycles
  3166                           ; simple_byte           16     9 (average)
  3167                           ;	Chosen strategy is simple_byte
  3168   000ABA  505C               	movf	??_ActionButtons^0,w,c
  3169   000ABC  0A0C               	xorlw	12	; case 12
  3170   000ABE  B4D8               	btfsc	status,2,c
  3171   000AC0  EF3B  F005         	goto	l6627
  3172   000AC4  0A01               	xorlw	1	; case 13
  3173   000AC6  B4D8               	btfsc	status,2,c
  3174   000AC8  EF49  F005         	goto	l6635
  3175   000ACC  0A03               	xorlw	3	; case 14
  3176   000ACE  B4D8               	btfsc	status,2,c
  3177   000AD0  EFFD  F004         	goto	l6589
  3178   000AD4  0A01               	xorlw	1	; case 15
  3179   000AD6  B4D8               	btfsc	status,2,c
  3180   000AD8  EF17  F005         	goto	l6609
  3181   000ADC  0A1B               	xorlw	27	; case 20
  3182   000ADE  B4D8               	btfsc	status,2,c
  3183   000AE0  EF37  F005         	goto	l6621
  3184   000AE4  EF62  F006         	goto	l1155
  3185   000AE8                     l6647:
  3186                           
  3187                           ;Buttons.c: 224:             counter_direction_flg = 0;
  3188   000AE8  0E00               	movlw	0
  3189   000AEA  6E2D               	movwf	_counter_direction_flg^0,c
  3190                           
  3191                           ;Buttons.c: 225:             blink_enable_flg = 0;
  3192   000AEC  0E00               	movlw	0
  3193   000AEE  6E28               	movwf	_blink_enable_flg^0,c
  3194                           
  3195                           ;Buttons.c: 226:             switch( BTN_CLICK_STATE ) {
  3196   000AF0  EF9A  F005         	goto	l6683
  3197   000AF4                     l6653:
  3198                           
  3199                           ;Buttons.c: 232:                     SYSTEM_STATE_FLG = 200; StartCounter(); blink_enabl
      +                          e_flg = 1;
  3200   000AF4  0EC8               	movlw	200
  3201   000AF6  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  3202   000AF8  EC02  F015         	call	_StartCounter	;wreg free
  3203   000AFC  0E01               	movlw	1
  3204   000AFE  6E28               	movwf	_blink_enable_flg^0,c
  3205   000B00  EFD4  F004         	goto	l6571
  3206   000B04                     l6663:
  3207                           
  3208                           ;Buttons.c: 236:                     counter_down_hour = 0;
  3209   000B04  0E00               	movlw	0
  3210   000B06  6E37               	movwf	_counter_down_hour^0,c
  3211                           
  3212                           ;Buttons.c: 237:                     counter_down_minute = 0;
  3213   000B08  0E00               	movlw	0
  3214   000B0A  6E36               	movwf	_counter_down_minute^0,c
  3215                           
  3216                           ;Buttons.c: 238:                     counter_down_second = 0;
  3217   000B0C  0E00               	movlw	0
  3218   000B0E  6E35               	movwf	_counter_down_second^0,c
  3219                           
  3220                           ;Buttons.c: 239:                     BTN_CLICK_STATE = 0;
  3221   000B10  0E00               	movlw	0
  3222   000B12  6E25               	movwf	_BTN_CLICK_STATE^0,c
  3223   000B14  EF62  F006         	goto	l1155
  3224   000B18                     l6667:
  3225                           
  3226                           ;Buttons.c: 242:                     counter_direction_flg = 1;
  3227   000B18  0E01               	movlw	1
  3228   000B1A  6E2D               	movwf	_counter_direction_flg^0,c
  3229                           
  3230                           ;Buttons.c: 243:                     SYSTEM_STATE_FLG = 201; StopCounter();
  3231   000B1C  0EC9               	movlw	201
  3232   000B1E  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  3233   000B20  ECFF  F014         	call	_StopCounter	;wreg free
  3234   000B24                     
  3235                           ;Buttons.c: 244:                     counter_up_hour = counter_down_hour;
  3236   000B24  C037  F031         	movff	_counter_down_hour,_counter_up_hour
  3237   000B28                     
  3238                           ;Buttons.c: 245:                     counter_up_minute = counter_down_minute;
  3239   000B28  C036  F030         	movff	_counter_down_minute,_counter_up_minute
  3240   000B2C                     
  3241                           ;Buttons.c: 246:                     counter_up_second = counter_down_second;
  3242   000B2C  C035  F02F         	movff	_counter_down_second,_counter_up_second
  3243   000B30  EFD4  F004         	goto	l6571
  3244   000B34                     l6683:
  3245   000B34  5025               	movf	_BTN_CLICK_STATE^0,w,c
  3246   000B36  6E5C               	movwf	??_ActionButtons^0,c
  3247   000B38  6A5D               	clrf	(??_ActionButtons+1)^0,c
  3248                           
  3249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3250                           ; Switch size 1, requested type "simple"
  3251                           ; Number of cases is 1, Range of values is 0 to 0
  3252                           ; switch strategies available:
  3253                           ; Name         Instructions Cycles
  3254                           ; simple_byte            4     3 (average)
  3255                           ;	Chosen strategy is simple_byte
  3256   000B3A  505D               	movf	(??_ActionButtons+1)^0,w,c
  3257   000B3C  0A00               	xorlw	0	; case 0
  3258   000B3E  B4D8               	btfsc	status,2,c
  3259   000B40  EFA4  F005         	goto	l9893
  3260   000B44  EF62  F006         	goto	l1155
  3261   000B48                     l9893:
  3262                           
  3263                           ; Switch size 1, requested type "simple"
  3264                           ; Number of cases is 5, Range of values is 12 to 20
  3265                           ; switch strategies available:
  3266                           ; Name         Instructions Cycles
  3267                           ; simple_byte           16     9 (average)
  3268                           ;	Chosen strategy is simple_byte
  3269   000B48  505C               	movf	??_ActionButtons^0,w,c
  3270   000B4A  0A0C               	xorlw	12	; case 12
  3271   000B4C  B4D8               	btfsc	status,2,c
  3272   000B4E  EF45  F005         	goto	l6633
  3273   000B52  0A01               	xorlw	1	; case 13
  3274   000B54  B4D8               	btfsc	status,2,c
  3275   000B56  EF45  F005         	goto	l6633
  3276   000B5A  0A03               	xorlw	3	; case 14
  3277   000B5C  B4D8               	btfsc	status,2,c
  3278   000B5E  EF7A  F005         	goto	l6653
  3279   000B62  0A01               	xorlw	1	; case 15
  3280   000B64  B4D8               	btfsc	status,2,c
  3281   000B66  EF82  F005         	goto	l6663
  3282   000B6A  0A1B               	xorlw	27	; case 20
  3283   000B6C  B4D8               	btfsc	status,2,c
  3284   000B6E  EF8C  F005         	goto	l6667
  3285   000B72  EF62  F006         	goto	l1155
  3286   000B76                     l6685:
  3287                           
  3288                           ;Buttons.c: 254:                     continue_pressed_cnt ++;
  3289   000B76  0100               	movlb	0	; () banked
  3290   000B78  4BBC               	infsnz	_continue_pressed_cnt& (0+255),f,b
  3291   000B7A  2BBD               	incf	(_continue_pressed_cnt+1)& (0+255),f,b
  3292   000B7C                     
  3293                           ; BSR set to: 0
  3294                           ;Buttons.c: 255:                     if( continue_pressed_cnt > 600 ) {
  3295   000B7C  0E59               	movlw	89
  3296   000B7E  5DBC               	subwf	_continue_pressed_cnt& (0+255),w,b
  3297   000B80  0E02               	movlw	2
  3298   000B82  59BD               	subwfb	(_continue_pressed_cnt+1)& (0+255),w,b
  3299   000B84  A0D8               	btfss	status,0,c
  3300   000B86  EFC7  F005         	goto	u4241
  3301   000B8A  EFC9  F005         	goto	u4240
  3302   000B8E                     u4241:
  3303   000B8E  EF62  F006         	goto	l1155
  3304   000B92                     u4240:
  3305   000B92                     
  3306                           ; BSR set to: 0
  3307                           ;Buttons.c: 256:                         IncValProcess(); continue_pressed_cnt = 0;
  3308   000B92  ECC3  F013         	call	_IncValProcess	;wreg free
  3309   000B96                     l6691:
  3310   000B96  0E00               	movlw	0
  3311   000B98  0100               	movlb	0	; () banked
  3312   000B9A  6FBD               	movwf	(_continue_pressed_cnt+1)& (0+255),b
  3313   000B9C  0E00               	movlw	0
  3314   000B9E  6FBC               	movwf	_continue_pressed_cnt& (0+255),b
  3315   000BA0  EF62  F006         	goto	l1155
  3316   000BA4                     l6695:
  3317                           
  3318                           ;Buttons.c: 260:                     continue_pressed_cnt ++;
  3319   000BA4  0100               	movlb	0	; () banked
  3320   000BA6  4BBC               	infsnz	_continue_pressed_cnt& (0+255),f,b
  3321   000BA8  2BBD               	incf	(_continue_pressed_cnt+1)& (0+255),f,b
  3322   000BAA                     
  3323                           ; BSR set to: 0
  3324                           ;Buttons.c: 261:                     if( continue_pressed_cnt > 600 ) {
  3325   000BAA  0E59               	movlw	89
  3326   000BAC  5DBC               	subwf	_continue_pressed_cnt& (0+255),w,b
  3327   000BAE  0E02               	movlw	2
  3328   000BB0  59BD               	subwfb	(_continue_pressed_cnt+1)& (0+255),w,b
  3329   000BB2  A0D8               	btfss	status,0,c
  3330   000BB4  EFDE  F005         	goto	u4251
  3331   000BB8  EFE0  F005         	goto	u4250
  3332   000BBC                     u4251:
  3333   000BBC  EF62  F006         	goto	l1155
  3334   000BC0                     u4250:
  3335   000BC0                     
  3336                           ; BSR set to: 0
  3337                           ;Buttons.c: 262:                         DecValProcess(); continue_pressed_cnt = 0;
  3338   000BC0  EC17  F010         	call	_DecValProcess	;wreg free
  3339   000BC4  EFCB  F005         	goto	l6691
  3340   000BC8                     l6705:
  3341                           
  3342                           ;Buttons.c: 266:                     blink_enable_flg = 1;
  3343   000BC8  0E01               	movlw	1
  3344   000BCA  6E28               	movwf	_blink_enable_flg^0,c
  3345   000BCC                     
  3346                           ;Buttons.c: 267:                     IncValProcess();
  3347   000BCC  ECC3  F013         	call	_IncValProcess	;wreg free
  3348   000BD0  EFD4  F004         	goto	l6571
  3349   000BD4                     l6713:
  3350                           
  3351                           ;Buttons.c: 271:                     blink_enable_flg = 1;
  3352   000BD4  0E01               	movlw	1
  3353   000BD6  6E28               	movwf	_blink_enable_flg^0,c
  3354   000BD8                     
  3355                           ;Buttons.c: 272:                     DecValProcess();
  3356   000BD8  EC17  F010         	call	_DecValProcess	;wreg free
  3357   000BDC  EFD4  F004         	goto	l6571
  3358   000BE0                     l6721:
  3359                           
  3360                           ;Buttons.c: 276:                     if( counter_direction_flg == 1 ){
  3361   000BE0  042D               	decf	_counter_direction_flg^0,w,c
  3362   000BE2  A4D8               	btfss	status,2,c
  3363   000BE4  EFF6  F005         	goto	u4261
  3364   000BE8  EFF8  F005         	goto	u4260
  3365   000BEC                     u4261:
  3366   000BEC  EF7A  F005         	goto	l6653
  3367   000BF0                     u4260:
  3368   000BF0  EFD4  F004         	goto	l6571
  3369   000BF4                     l6737:
  3370                           
  3371                           ;Buttons.c: 283:                     if( counter_direction_flg == 1 ){
  3372   000BF4  042D               	decf	_counter_direction_flg^0,w,c
  3373   000BF6  A4D8               	btfss	status,2,c
  3374   000BF8  EF00  F006         	goto	u4271
  3375   000BFC  EF02  F006         	goto	u4270
  3376   000C00                     u4271:
  3377   000C00  EF04  F006         	goto	l6745
  3378   000C04                     u4270:
  3379   000C04  EFD4  F004         	goto	l6571
  3380   000C08                     l6745:
  3381   000C08  502D               	movf	_counter_direction_flg^0,w,c
  3382   000C0A  A4D8               	btfss	status,2,c
  3383   000C0C  EF0A  F006         	goto	u4281
  3384   000C10  EF0C  F006         	goto	u4280
  3385   000C14                     u4281:
  3386   000C14  EF12  F006         	goto	l1226
  3387   000C18                     u4280:
  3388   000C18                     
  3389                           ;Buttons.c: 287:                         counter_down_hour = 0;
  3390   000C18  0E00               	movlw	0
  3391   000C1A  6E37               	movwf	_counter_down_hour^0,c
  3392                           
  3393                           ;Buttons.c: 288:                         counter_down_minute = 0;
  3394   000C1C  0E00               	movlw	0
  3395   000C1E  6E36               	movwf	_counter_down_minute^0,c
  3396                           
  3397                           ;Buttons.c: 289:                         counter_down_second = 0;
  3398   000C20  0E00               	movlw	0
  3399   000C22  6E35               	movwf	_counter_down_second^0,c
  3400   000C24                     l1226:
  3401                           
  3402                           ;Buttons.c: 291:                     blink_enable_flg = 0;
  3403   000C24  0E00               	movlw	0
  3404   000C26  6E28               	movwf	_blink_enable_flg^0,c
  3405                           
  3406                           ;Buttons.c: 292:                     BTN_CLICK_STATE = 0;
  3407   000C28  0E00               	movlw	0
  3408   000C2A  6E25               	movwf	_BTN_CLICK_STATE^0,c
  3409   000C2C  EF62  F006         	goto	l1155
  3410   000C30                     l6753:
  3411   000C30  5025               	movf	_BTN_CLICK_STATE^0,w,c
  3412   000C32  6E5C               	movwf	??_ActionButtons^0,c
  3413   000C34  6A5D               	clrf	(??_ActionButtons+1)^0,c
  3414                           
  3415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3416                           ; Switch size 1, requested type "simple"
  3417                           ; Number of cases is 1, Range of values is 0 to 0
  3418                           ; switch strategies available:
  3419                           ; Name         Instructions Cycles
  3420                           ; simple_byte            4     3 (average)
  3421                           ;	Chosen strategy is simple_byte
  3422   000C36  505D               	movf	(??_ActionButtons+1)^0,w,c
  3423   000C38  0A00               	xorlw	0	; case 0
  3424   000C3A  B4D8               	btfsc	status,2,c
  3425   000C3C  EF22  F006         	goto	l9895
  3426   000C40  EF62  F006         	goto	l1155
  3427   000C44                     l9895:
  3428                           
  3429                           ; Switch size 1, requested type "simple"
  3430                           ; Number of cases is 6, Range of values is 12 to 18
  3431                           ; switch strategies available:
  3432                           ; Name         Instructions Cycles
  3433                           ; simple_byte           19    10 (average)
  3434                           ;	Chosen strategy is simple_byte
  3435   000C44  505C               	movf	??_ActionButtons^0,w,c
  3436   000C46  0A0C               	xorlw	12	; case 12
  3437   000C48  B4D8               	btfsc	status,2,c
  3438   000C4A  EFE4  F005         	goto	l6705
  3439   000C4E  0A01               	xorlw	1	; case 13
  3440   000C50  B4D8               	btfsc	status,2,c
  3441   000C52  EFEA  F005         	goto	l6713
  3442   000C56  0A03               	xorlw	3	; case 14
  3443   000C58  B4D8               	btfsc	status,2,c
  3444   000C5A  EFF0  F005         	goto	l6721
  3445   000C5E  0A01               	xorlw	1	; case 15
  3446   000C60  B4D8               	btfsc	status,2,c
  3447   000C62  EFFA  F005         	goto	l6737
  3448   000C66  0A1E               	xorlw	30	; case 17
  3449   000C68  B4D8               	btfsc	status,2,c
  3450   000C6A  EFBB  F005         	goto	l6685
  3451   000C6E  0A03               	xorlw	3	; case 18
  3452   000C70  B4D8               	btfsc	status,2,c
  3453   000C72  EFD2  F005         	goto	l6695
  3454   000C76  EF62  F006         	goto	l1155
  3455   000C7A                     l6757:
  3456   000C7A  506F               	movf	_SYSTEM_STATE_FLG^0,w,c
  3457   000C7C  6E5C               	movwf	??_ActionButtons^0,c
  3458   000C7E  6A5D               	clrf	(??_ActionButtons+1)^0,c
  3459                           
  3460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3461                           ; Switch size 1, requested type "simple"
  3462                           ; Number of cases is 1, Range of values is 0 to 0
  3463                           ; switch strategies available:
  3464                           ; Name         Instructions Cycles
  3465                           ; simple_byte            4     3 (average)
  3466                           ;	Chosen strategy is simple_byte
  3467   000C80  505D               	movf	(??_ActionButtons+1)^0,w,c
  3468   000C82  0A00               	xorlw	0	; case 0
  3469   000C84  B4D8               	btfsc	status,2,c
  3470   000C86  EF47  F006         	goto	l9897
  3471   000C8A  EF62  F006         	goto	l1155
  3472   000C8E                     l9897:
  3473                           
  3474                           ; Switch size 1, requested type "simple"
  3475                           ; Number of cases is 6, Range of values is 100 to 203
  3476                           ; switch strategies available:
  3477                           ; Name         Instructions Cycles
  3478                           ; simple_byte           19    10 (average)
  3479                           ;	Chosen strategy is simple_byte
  3480   000C8E  505C               	movf	??_ActionButtons^0,w,c
  3481   000C90  0A64               	xorlw	100	; case 100
  3482   000C92  B4D8               	btfsc	status,2,c
  3483   000C94  EF7D  F003         	goto	l6471
  3484   000C98  0A01               	xorlw	1	; case 101
  3485   000C9A  B4D8               	btfsc	status,2,c
  3486   000C9C  EF77  F004         	goto	l6541
  3487   000CA0  0AAD               	xorlw	173	; case 200
  3488   000CA2  B4D8               	btfsc	status,2,c
  3489   000CA4  EFDE  F004         	goto	l6585
  3490   000CA8  0A01               	xorlw	1	; case 201
  3491   000CAA  B4D8               	btfsc	status,2,c
  3492   000CAC  EFF7  F004         	goto	l6587
  3493   000CB0  0A03               	xorlw	3	; case 202
  3494   000CB2  B4D8               	btfsc	status,2,c
  3495   000CB4  EF18  F006         	goto	l6753
  3496   000CB8  0A01               	xorlw	1	; case 203
  3497   000CBA  B4D8               	btfsc	status,2,c
  3498   000CBC  EF74  F005         	goto	l6647
  3499   000CC0  EF62  F006         	goto	l1155
  3500   000CC4                     l1155:
  3501   000CC4  0012               	return		;funcret
  3502   000CC6                     __end_of_ActionButtons:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function _UpDownTransfer *****************
  3506 ;; Defined at:
  3507 ;;		line 327 in file "Buttons.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3521 ;;      Params:         0       0       0       0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0
  3524 ;;      Totals:         0       0       0       0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 6
  3528 ;; This function calls:
  3529 ;;		_UpdateSetValue
  3530 ;; This function is called by:
  3531 ;;		_ActionButtons
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text8
  3536   00274C                     __ptext8:
  3537                           	callstack 0
  3538   00274C                     _UpDownTransfer:
  3539                           	callstack 22
  3540   00274C                     
  3541                           ;Buttons.c: 328:     if( counter_direction_flg == 1 ) {
  3542   00274C  042D               	decf	_counter_direction_flg^0,w,c
  3543   00274E  A4D8               	btfss	status,2,c
  3544   002750  EFAC  F013         	goto	u3531
  3545   002754  EFAE  F013         	goto	u3530
  3546   002758                     u3531:
  3547   002758  EFB8  F013         	goto	l5993
  3548   00275C                     u3530:
  3549   00275C                     
  3550                           ;Buttons.c: 329:         counter_direction_flg = 0;
  3551   00275C  0E00               	movlw	0
  3552   00275E  6E2D               	movwf	_counter_direction_flg^0,c
  3553   002760                     
  3554                           ;Buttons.c: 330:         counter_down_hour = counter_up_hour;
  3555   002760  C031  F037         	movff	_counter_up_hour,_counter_down_hour
  3556   002764                     
  3557                           ;Buttons.c: 331:         counter_down_minute = counter_up_minute;
  3558   002764  C030  F036         	movff	_counter_up_minute,_counter_down_minute
  3559   002768                     
  3560                           ;Buttons.c: 332:         counter_down_second = counter_up_second;
  3561   002768  C02F  F035         	movff	_counter_up_second,_counter_down_second
  3562                           
  3563                           ;Buttons.c: 333:     }
  3564   00276C  EFC0  F013         	goto	l6001
  3565   002770                     l5993:
  3566                           
  3567                           ;Buttons.c: 335:         counter_direction_flg = 1;
  3568   002770  0E01               	movlw	1
  3569   002772  6E2D               	movwf	_counter_direction_flg^0,c
  3570   002774                     
  3571                           ;Buttons.c: 336:         counter_up_hour = counter_down_hour;
  3572   002774  C037  F031         	movff	_counter_down_hour,_counter_up_hour
  3573   002778                     
  3574                           ;Buttons.c: 337:         counter_up_minute = counter_down_minute;
  3575   002778  C036  F030         	movff	_counter_down_minute,_counter_up_minute
  3576   00277C                     
  3577                           ;Buttons.c: 338:         counter_up_second = counter_down_second;
  3578   00277C  C035  F02F         	movff	_counter_down_second,_counter_up_second
  3579   002780                     l6001:
  3580                           
  3581                           ;Buttons.c: 340:     UpdateSetValue();
  3582   002780  ECE6  F014         	call	_UpdateSetValue	;wreg free
  3583   002784  0012               	return		;funcret
  3584   002786                     __end_of_UpDownTransfer:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _StopCounter *****************
  3588 ;; Defined at:
  3589 ;;		line 75 in file "Counter.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3603 ;;      Params:         0       0       0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0
  3606 ;;      Totals:         0       0       0       0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 5
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_ActionButtons
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text9
  3618   0029FE                     __ptext9:
  3619                           	callstack 0
  3620   0029FE                     _StopCounter:
  3621                           	callstack 23
  3622   0029FE                     
  3623                           ;Counter.c: 76:     counter_enable_flg = 0;
  3624   0029FE  0E00               	movlw	0
  3625   002A00  6E2E               	movwf	_counter_enable_flg^0,c
  3626   002A02  0012               	return		;funcret
  3627   002A04                     __end_of_StopCounter:
  3628                           	callstack 0
  3629                           
  3630 ;; *************** function _StartCounter *****************
  3631 ;; Defined at:
  3632 ;;		line 71 in file "Counter.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3646 ;;      Params:         0       0       0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0
  3649 ;;      Totals:         0       0       0       0       0       0       0
  3650 ;;Total ram usage:        0 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 5
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_ActionButtons
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text10
  3661   002A04                     __ptext10:
  3662                           	callstack 0
  3663   002A04                     _StartCounter:
  3664                           	callstack 23
  3665   002A04                     
  3666                           ;Counter.c: 72:     counter_enable_flg = 1;
  3667   002A04  0E01               	movlw	1
  3668   002A06  6E2E               	movwf	_counter_enable_flg^0,c
  3669   002A08  0012               	return		;funcret
  3670   002A0A                     __end_of_StartCounter:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function _IncValProcess *****************
  3674 ;; Defined at:
  3675 ;;		line 299 in file "Buttons.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3689 ;;      Params:         0       0       0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0
  3692 ;;      Totals:         0       0       0       0       0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used: 1
  3695 ;; Hardware stack levels required when called: 6
  3696 ;; This function calls:
  3697 ;;		_UpdateSetValue
  3698 ;; This function is called by:
  3699 ;;		_ActionButtons
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text11
  3704   002786                     __ptext11:
  3705                           	callstack 0
  3706   002786                     _IncValProcess:
  3707                           	callstack 22
  3708   002786                     
  3709                           ;Buttons.c: 300:     counter_down_second ++;
  3710   002786  2A35               	incf	_counter_down_second^0,f,c
  3711   002788                     
  3712                           ;Buttons.c: 301:     if( counter_down_second == 60 ){
  3713   002788  0E3C               	movlw	60
  3714   00278A  1835               	xorwf	_counter_down_second^0,w,c
  3715   00278C  A4D8               	btfss	status,2,c
  3716   00278E  EFCB  F013         	goto	u3541
  3717   002792  EFCD  F013         	goto	u3540
  3718   002796                     u3541:
  3719   002796  EFDC  F013         	goto	l6017
  3720   00279A                     u3540:
  3721   00279A                     
  3722                           ;Buttons.c: 302:         counter_down_second = 0;
  3723   00279A  0E00               	movlw	0
  3724   00279C  6E35               	movwf	_counter_down_second^0,c
  3725   00279E                     
  3726                           ;Buttons.c: 303:         counter_down_minute ++;
  3727   00279E  2A36               	incf	_counter_down_minute^0,f,c
  3728   0027A0                     
  3729                           ;Buttons.c: 304:         if(counter_down_minute == 60){
  3730   0027A0  0E3C               	movlw	60
  3731   0027A2  1836               	xorwf	_counter_down_minute^0,w,c
  3732   0027A4  A4D8               	btfss	status,2,c
  3733   0027A6  EFD7  F013         	goto	u3551
  3734   0027AA  EFD9  F013         	goto	u3550
  3735   0027AE                     u3551:
  3736   0027AE  EFDC  F013         	goto	l6017
  3737   0027B2                     u3550:
  3738   0027B2                     
  3739                           ;Buttons.c: 305:             counter_down_minute = 0;
  3740   0027B2  0E00               	movlw	0
  3741   0027B4  6E36               	movwf	_counter_down_minute^0,c
  3742   0027B6                     
  3743                           ;Buttons.c: 306:             counter_down_hour ++;
  3744   0027B6  2A37               	incf	_counter_down_hour^0,f,c
  3745   0027B8                     l6017:
  3746                           
  3747                           ;Buttons.c: 309:     UpdateSetValue();
  3748   0027B8  ECE6  F014         	call	_UpdateSetValue	;wreg free
  3749   0027BC  0012               	return		;funcret
  3750   0027BE                     __end_of_IncValProcess:
  3751                           	callstack 0
  3752                           
  3753 ;; *************** function _Ds1307Write *****************
  3754 ;; Defined at:
  3755 ;;		line 61 in file "DS1307.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  write_datas     2   16[COMRAM] PTR unsigned char 
  3758 ;;		 -> real_rtc_data(7), 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  hour_temp       1   18[COMRAM] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      void 
  3763 ;; Registers used:
  3764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3770 ;;      Params:         2       0       0       0       0       0       0
  3771 ;;      Locals:         1       0       0       0       0       0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0
  3773 ;;      Totals:         3       0       0       0       0       0       0
  3774 ;;Total ram usage:        3 bytes
  3775 ;; Hardware stack levels used: 1
  3776 ;; Hardware stack levels required when called: 8
  3777 ;; This function calls:
  3778 ;;		_I2cStart
  3779 ;;		_I2cStop
  3780 ;;		_I2cWrite
  3781 ;; This function is called by:
  3782 ;;		_main
  3783 ;;		_ActionButtons
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text12
  3788   001A8E                     __ptext12:
  3789                           	callstack 0
  3790   001A8E                     _Ds1307Write:
  3791                           	callstack 20
  3792   001A8E                     
  3793                           ;DS1307.c: 63:     unsigned char hour_temp = write_datas[ 2 ];
  3794   001A8E  EE20 F002          	lfsr	2,2
  3795   001A92  5059               	movf	Ds1307Write@write_datas^0,w,c
  3796   001A94  26D9               	addwf	fsr2l,f,c
  3797   001A96  505A               	movf	(Ds1307Write@write_datas+1)^0,w,c
  3798   001A98  22DA               	addwfc	fsr2h,f,c
  3799   001A9A  50DF               	movf	indf2,w,c
  3800   001A9C  6E5B               	movwf	Ds1307Write@hour_temp^0,c
  3801   001A9E                     
  3802                           ;DS1307.c: 64:     if( rtc_clock_disp_type == 1 ) {
  3803   001A9E  0441               	decf	_rtc_clock_disp_type^0,w,c
  3804   001AA0  A4D8               	btfss	status,2,c
  3805   001AA2  EF55  F00D         	goto	u3481
  3806   001AA6  EF57  F00D         	goto	u3480
  3807   001AAA                     u3481:
  3808   001AAA  EF72  F00D         	goto	l5947
  3809   001AAE                     u3480:
  3810   001AAE                     
  3811                           ;DS1307.c: 65:         if( hour_temp > 0x12 ) hour_temp = hour_temp - 0x12;
  3812   001AAE  0E12               	movlw	18
  3813   001AB0  645B               	cpfsgt	Ds1307Write@hour_temp^0,c
  3814   001AB2  EF5D  F00D         	goto	u3491
  3815   001AB6  EF5F  F00D         	goto	u3490
  3816   001ABA                     u3491:
  3817   001ABA  EF62  F00D         	goto	l45
  3818   001ABE                     u3490:
  3819   001ABE  505B               	movf	Ds1307Write@hour_temp^0,w,c
  3820   001AC0  0FEE               	addlw	238
  3821   001AC2  6E5B               	movwf	Ds1307Write@hour_temp^0,c
  3822   001AC4                     l45:
  3823                           
  3824                           ;DS1307.c: 66:         hour_temp = hour_temp | 0x40;
  3825   001AC4  505B               	movf	Ds1307Write@hour_temp^0,w,c
  3826   001AC6  0940               	iorlw	64
  3827   001AC8  6E5B               	movwf	Ds1307Write@hour_temp^0,c
  3828                           
  3829                           ;DS1307.c: 67:         if( rtc_hour_ampm_flg == 1 ) hour_temp = hour_temp | 0x20;
  3830   001ACA  0440               	decf	_rtc_hour_ampm_flg^0,w,c
  3831   001ACC  A4D8               	btfss	status,2,c
  3832   001ACE  EF6B  F00D         	goto	u3501
  3833   001AD2  EF6D  F00D         	goto	u3500
  3834   001AD6                     u3501:
  3835   001AD6  EF85  F00D         	goto	l5953
  3836   001ADA                     u3500:
  3837   001ADA  505B               	movf	Ds1307Write@hour_temp^0,w,c
  3838   001ADC  0920               	iorlw	32
  3839   001ADE  6E5B               	movwf	Ds1307Write@hour_temp^0,c
  3840   001AE0  EF85  F00D         	goto	l5953
  3841   001AE4                     l5947:
  3842                           
  3843                           ;DS1307.c: 70:         if( rtc_hour_ampm_flg == 1 && hour_temp < 0x12 ) hour_temp = hour
      +                          _temp + 0x12;
  3844   001AE4  0440               	decf	_rtc_hour_ampm_flg^0,w,c
  3845   001AE6  A4D8               	btfss	status,2,c
  3846   001AE8  EF78  F00D         	goto	u3511
  3847   001AEC  EF7A  F00D         	goto	u3510
  3848   001AF0                     u3511:
  3849   001AF0  EF85  F00D         	goto	l5953
  3850   001AF4                     u3510:
  3851   001AF4  0E12               	movlw	18
  3852   001AF6  605B               	cpfslt	Ds1307Write@hour_temp^0,c
  3853   001AF8  EF80  F00D         	goto	u3521
  3854   001AFC  EF82  F00D         	goto	u3520
  3855   001B00                     u3521:
  3856   001B00  EF85  F00D         	goto	l5953
  3857   001B04                     u3520:
  3858   001B04  505B               	movf	Ds1307Write@hour_temp^0,w,c
  3859   001B06  0F12               	addlw	18
  3860   001B08  6E5B               	movwf	Ds1307Write@hour_temp^0,c
  3861   001B0A                     l5953:
  3862                           
  3863                           ;DS1307.c: 73:     write_datas[ 2 ] = hour_temp;
  3864   001B0A  EE20 F002          	lfsr	2,2
  3865   001B0E  5059               	movf	Ds1307Write@write_datas^0,w,c
  3866   001B10  26D9               	addwf	fsr2l,f,c
  3867   001B12  505A               	movf	(Ds1307Write@write_datas+1)^0,w,c
  3868   001B14  22DA               	addwfc	fsr2h,f,c
  3869   001B16  C05B  FFDF         	movff	Ds1307Write@hour_temp,indf2
  3870   001B1A                     
  3871                           ;DS1307.c: 75:     I2cStart();
  3872   001B1A  ECB0  F014         	call	_I2cStart	;wreg free
  3873   001B1E                     
  3874                           ;DS1307.c: 76:     I2cWrite( (0xD0) );
  3875   001B1E  0ED0               	movlw	208
  3876   001B20  EC83  F014         	call	_I2cWrite
  3877   001B24                     
  3878                           ;DS1307.c: 77:     I2cWrite( 0x00 );
  3879   001B24  0E00               	movlw	0
  3880   001B26  EC83  F014         	call	_I2cWrite
  3881   001B2A                     
  3882                           ;DS1307.c: 79:     I2cWrite( write_datas[ 0 ] );
  3883   001B2A  C059  FFD9         	movff	Ds1307Write@write_datas,fsr2l
  3884   001B2E  C05A  FFDA         	movff	Ds1307Write@write_datas+1,fsr2h
  3885   001B32  50DF               	movf	indf2,w,c
  3886   001B34  EC83  F014         	call	_I2cWrite
  3887   001B38                     
  3888                           ;DS1307.c: 80:     I2cWrite( write_datas[ 1 ] );
  3889   001B38  EE20 F001          	lfsr	2,1
  3890   001B3C  5059               	movf	Ds1307Write@write_datas^0,w,c
  3891   001B3E  26D9               	addwf	fsr2l,f,c
  3892   001B40  505A               	movf	(Ds1307Write@write_datas+1)^0,w,c
  3893   001B42  22DA               	addwfc	fsr2h,f,c
  3894   001B44  50DF               	movf	indf2,w,c
  3895   001B46  EC83  F014         	call	_I2cWrite
  3896   001B4A                     
  3897                           ;DS1307.c: 81:     I2cWrite( write_datas[ 2 ] );
  3898   001B4A  EE20 F002          	lfsr	2,2
  3899   001B4E  5059               	movf	Ds1307Write@write_datas^0,w,c
  3900   001B50  26D9               	addwf	fsr2l,f,c
  3901   001B52  505A               	movf	(Ds1307Write@write_datas+1)^0,w,c
  3902   001B54  22DA               	addwfc	fsr2h,f,c
  3903   001B56  50DF               	movf	indf2,w,c
  3904   001B58  EC83  F014         	call	_I2cWrite
  3905   001B5C                     
  3906                           ;DS1307.c: 82:     I2cWrite( write_datas[ 3 ] );
  3907   001B5C  EE20 F003          	lfsr	2,3
  3908   001B60  5059               	movf	Ds1307Write@write_datas^0,w,c
  3909   001B62  26D9               	addwf	fsr2l,f,c
  3910   001B64  505A               	movf	(Ds1307Write@write_datas+1)^0,w,c
  3911   001B66  22DA               	addwfc	fsr2h,f,c
  3912   001B68  50DF               	movf	indf2,w,c
  3913   001B6A  EC83  F014         	call	_I2cWrite
  3914   001B6E                     
  3915                           ;DS1307.c: 83:     I2cWrite( write_datas[ 4 ] );
  3916   001B6E  EE20 F004          	lfsr	2,4
  3917   001B72  5059               	movf	Ds1307Write@write_datas^0,w,c
  3918   001B74  26D9               	addwf	fsr2l,f,c
  3919   001B76  505A               	movf	(Ds1307Write@write_datas+1)^0,w,c
  3920   001B78  22DA               	addwfc	fsr2h,f,c
  3921   001B7A  50DF               	movf	indf2,w,c
  3922   001B7C  EC83  F014         	call	_I2cWrite
  3923   001B80                     
  3924                           ;DS1307.c: 84:     I2cWrite( write_datas[ 5 ] );
  3925   001B80  EE20 F005          	lfsr	2,5
  3926   001B84  5059               	movf	Ds1307Write@write_datas^0,w,c
  3927   001B86  26D9               	addwf	fsr2l,f,c
  3928   001B88  505A               	movf	(Ds1307Write@write_datas+1)^0,w,c
  3929   001B8A  22DA               	addwfc	fsr2h,f,c
  3930   001B8C  50DF               	movf	indf2,w,c
  3931   001B8E  EC83  F014         	call	_I2cWrite
  3932   001B92                     
  3933                           ;DS1307.c: 85:     I2cWrite( write_datas[ 6 ] );
  3934   001B92  EE20 F006          	lfsr	2,6
  3935   001B96  5059               	movf	Ds1307Write@write_datas^0,w,c
  3936   001B98  26D9               	addwf	fsr2l,f,c
  3937   001B9A  505A               	movf	(Ds1307Write@write_datas+1)^0,w,c
  3938   001B9C  22DA               	addwfc	fsr2h,f,c
  3939   001B9E  50DF               	movf	indf2,w,c
  3940   001BA0  EC83  F014         	call	_I2cWrite
  3941   001BA4                     
  3942                           ;DS1307.c: 86:     I2cWrite( 0x90 );
  3943   001BA4  0E90               	movlw	144
  3944   001BA6  EC83  F014         	call	_I2cWrite
  3945                           
  3946                           ;DS1307.c: 88:     I2cStop();
  3947   001BAA  ECC2  F014         	call	_I2cStop	;wreg free
  3948   001BAE  0012               	return		;funcret
  3949   001BB0                     __end_of_Ds1307Write:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _DecValProcess *****************
  3953 ;; Defined at:
  3954 ;;		line 312 in file "Buttons.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3968 ;;      Params:         0       0       0       0       0       0       0
  3969 ;;      Locals:         0       0       0       0       0       0       0
  3970 ;;      Temps:          2       0       0       0       0       0       0
  3971 ;;      Totals:         2       0       0       0       0       0       0
  3972 ;;Total ram usage:        2 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; Hardware stack levels required when called: 6
  3975 ;; This function calls:
  3976 ;;		_UpdateSetValue
  3977 ;; This function is called by:
  3978 ;;		_ActionButtons
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text13
  3983   00202E                     __ptext13:
  3984                           	callstack 0
  3985   00202E                     _DecValProcess:
  3986                           	callstack 22
  3987   00202E                     
  3988                           ;Buttons.c: 313:     counter_down_second --;
  3989   00202E  0635               	decf	_counter_down_second^0,f,c
  3990   002030                     
  3991                           ;Buttons.c: 314:     if( counter_down_second < 0 && counter_down_hour + counter_down_min
      +                          ute) {
  3992   002030  BE35               	btfsc	_counter_down_second^0,7,c
  3993   002032  EF1F  F010         	goto	u3560
  3994   002036  EF1D  F010         	goto	u3561
  3995   00203A                     u3561:
  3996   00203A  EF5B  F010         	goto	l6043
  3997   00203E                     u3560:
  3998   00203E  5037               	movf	_counter_down_hour^0,w,c
  3999   002040  2436               	addwf	_counter_down_minute^0,w,c
  4000   002042  6E58               	movwf	??_DecValProcess^0,c
  4001   002044  6AE8               	clrf	wreg,c
  4002   002046  B0D8               	btfsc	status,0,c
  4003   002048  2AE8               	incf	wreg,f,c
  4004   00204A  BE37               	btfsc	_counter_down_hour^0,7,c
  4005   00204C  06E8               	decf	wreg,f,c
  4006   00204E  BE36               	btfsc	_counter_down_minute^0,7,c
  4007   002050  06E8               	decf	wreg,f,c
  4008   002052  6E59               	movwf	(??_DecValProcess+1)^0,c
  4009   002054  5058               	movf	??_DecValProcess^0,w,c
  4010   002056  1059               	iorwf	(??_DecValProcess+1)^0,w,c
  4011   002058  B4D8               	btfsc	status,2,c
  4012   00205A  EF31  F010         	goto	u3571
  4013   00205E  EF33  F010         	goto	u3570
  4014   002062                     u3571:
  4015   002062  EF5B  F010         	goto	l6043
  4016   002066                     u3570:
  4017   002066                     
  4018                           ;Buttons.c: 315:         counter_down_second = 59;
  4019   002066  0E3B               	movlw	59
  4020   002068  6E35               	movwf	_counter_down_second^0,c
  4021   00206A                     
  4022                           ;Buttons.c: 316:         counter_down_minute --;
  4023   00206A  0636               	decf	_counter_down_minute^0,f,c
  4024   00206C                     
  4025                           ;Buttons.c: 317:         if( counter_down_minute < 0 && counter_down_hour ){
  4026   00206C  BE36               	btfsc	_counter_down_minute^0,7,c
  4027   00206E  EF3D  F010         	goto	u3580
  4028   002072  EF3B  F010         	goto	u3581
  4029   002076                     u3581:
  4030   002076  EF4A  F010         	goto	l6037
  4031   00207A                     u3580:
  4032   00207A  5037               	movf	_counter_down_hour^0,w,c
  4033   00207C  B4D8               	btfsc	status,2,c
  4034   00207E  EF43  F010         	goto	u3591
  4035   002082  EF45  F010         	goto	u3590
  4036   002086                     u3591:
  4037   002086  EF4A  F010         	goto	l6037
  4038   00208A                     u3590:
  4039   00208A                     
  4040                           ;Buttons.c: 318:             counter_down_minute = 59;
  4041   00208A  0E3B               	movlw	59
  4042   00208C  6E36               	movwf	_counter_down_minute^0,c
  4043   00208E                     
  4044                           ;Buttons.c: 319:             counter_down_hour --;
  4045   00208E  0637               	decf	_counter_down_hour^0,f,c
  4046                           
  4047                           ;Buttons.c: 320:         }
  4048   002090  EF5B  F010         	goto	l6043
  4049   002094                     l6037:
  4050   002094  BE36               	btfsc	_counter_down_minute^0,7,c
  4051   002096  EF51  F010         	goto	u3600
  4052   00209A  EF4F  F010         	goto	u3601
  4053   00209E                     u3601:
  4054   00209E  EF5B  F010         	goto	l6043
  4055   0020A2                     u3600:
  4056   0020A2  5037               	movf	_counter_down_hour^0,w,c
  4057   0020A4  A4D8               	btfss	status,2,c
  4058   0020A6  EF57  F010         	goto	u3611
  4059   0020AA  EF59  F010         	goto	u3610
  4060   0020AE                     u3611:
  4061   0020AE  EF5B  F010         	goto	l6043
  4062   0020B2                     u3610:
  4063   0020B2  0E00               	movlw	0
  4064   0020B4  6E36               	movwf	_counter_down_minute^0,c
  4065   0020B6                     l6043:
  4066                           
  4067                           ;Buttons.c: 323:     if( counter_down_second < 0 && !(counter_down_hour + counter_down_m
      +                          inute) ) counter_down_second = 0;
  4068   0020B6  BE35               	btfsc	_counter_down_second^0,7,c
  4069   0020B8  EF62  F010         	goto	u3620
  4070   0020BC  EF60  F010         	goto	u3621
  4071   0020C0                     u3621:
  4072   0020C0  EF78  F010         	goto	l6049
  4073   0020C4                     u3620:
  4074   0020C4  5037               	movf	_counter_down_hour^0,w,c
  4075   0020C6  2436               	addwf	_counter_down_minute^0,w,c
  4076   0020C8  6E58               	movwf	??_DecValProcess^0,c
  4077   0020CA  6AE8               	clrf	wreg,c
  4078   0020CC  B0D8               	btfsc	status,0,c
  4079   0020CE  2AE8               	incf	wreg,f,c
  4080   0020D0  BE37               	btfsc	_counter_down_hour^0,7,c
  4081   0020D2  06E8               	decf	wreg,f,c
  4082   0020D4  BE36               	btfsc	_counter_down_minute^0,7,c
  4083   0020D6  06E8               	decf	wreg,f,c
  4084   0020D8  6E59               	movwf	(??_DecValProcess+1)^0,c
  4085   0020DA  5058               	movf	??_DecValProcess^0,w,c
  4086   0020DC  1059               	iorwf	(??_DecValProcess+1)^0,w,c
  4087   0020DE  A4D8               	btfss	status,2,c
  4088   0020E0  EF74  F010         	goto	u3631
  4089   0020E4  EF76  F010         	goto	u3630
  4090   0020E8                     u3631:
  4091   0020E8  EF78  F010         	goto	l6049
  4092   0020EC                     u3630:
  4093   0020EC  0E00               	movlw	0
  4094   0020EE  6E35               	movwf	_counter_down_second^0,c
  4095   0020F0                     l6049:
  4096                           
  4097                           ;Buttons.c: 324:     UpdateSetValue();
  4098   0020F0  ECE6  F014         	call	_UpdateSetValue	;wreg free
  4099   0020F4  0012               	return		;funcret
  4100   0020F6                     __end_of_DecValProcess:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _UpdateSetValue *****************
  4104 ;; Defined at:
  4105 ;;		line 343 in file "Buttons.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;		None
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		None
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4119 ;;      Params:         0       0       0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0
  4122 ;;      Totals:         0       0       0       0       0       0       0
  4123 ;;Total ram usage:        0 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 5
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_IncValProcess
  4130 ;;		_DecValProcess
  4131 ;;		_UpDownTransfer
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text14
  4136   0029CC                     __ptext14:
  4137                           	callstack 0
  4138   0029CC                     _UpdateSetValue:
  4139                           	callstack 22
  4140   0029CC                     
  4141                           ;Buttons.c: 344:     counter_down_set_hour = counter_down_hour;
  4142   0029CC  C037  F034         	movff	_counter_down_hour,_counter_down_set_hour
  4143                           
  4144                           ;Buttons.c: 345:     counter_down_set_minute = counter_down_minute;
  4145   0029D0  C036  F033         	movff	_counter_down_minute,_counter_down_set_minute
  4146                           
  4147                           ;Buttons.c: 346:     counter_down_set_second = counter_down_second;
  4148   0029D4  C035  F032         	movff	_counter_down_second,_counter_down_set_second
  4149   0029D8  0012               	return		;funcret
  4150   0029DA                     __end_of_UpdateSetValue:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _UpdateDisplay *****************
  4154 ;; Defined at:
  4155 ;;		line 75 in file "Display.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  update_datas    2    6[BANK1 ] PTR unsigned char 
  4158 ;;		 -> ReadCounter@counter_datas(6), Ds1307Read@ds1307_date_datas(6), 
  4159 ;;  start_positi    1    8[BANK1 ] unsigned char 
  4160 ;;  end_position    1    9[BANK1 ] unsigned char 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  i               1   29[COMRAM] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4172 ;;      Params:         0       0       4       0       0       0       0
  4173 ;;      Locals:         1       0       0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0
  4175 ;;      Totals:         1       0       4       0       0       0       0
  4176 ;;Total ram usage:        5 bytes
  4177 ;; Hardware stack levels used: 1
  4178 ;; Hardware stack levels required when called: 6
  4179 ;; This function calls:
  4180 ;;		_MarkDisplay
  4181 ;; This function is called by:
  4182 ;;		_main
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text15
  4187   00270A                     __ptext15:
  4188                           	callstack 0
  4189   00270A                     _UpdateDisplay:
  4190                           	callstack 24
  4191   00270A                     
  4192                           ;Display.c: 77:     for( unsigned char i = start_position - 1; i < end_position; i ++ ) 
      +                          {
  4193   00270A  0101               	movlb	1	; () banked
  4194   00270C  0554               	decf	UpdateDisplay@start_position& (0+255),w,b
  4195   00270E  6E66               	movwf	UpdateDisplay@i^0,c
  4196   002710  EF9B  F013         	goto	l9309
  4197   002714                     l9305:
  4198                           
  4199                           ; BSR set to: 1
  4200                           ;Display.c: 78:         display_datas[ i ] = MarkDisplay( update_datas[ i ] );
  4201   002714  0E88               	movlw	low _display_datas
  4202   002716  2466               	addwf	UpdateDisplay@i^0,w,c
  4203   002718  6ED9               	movwf	fsr2l,c
  4204   00271A  6ADA               	clrf	fsr2h,c
  4205   00271C  0E00               	movlw	high _display_datas
  4206   00271E  22DA               	addwfc	fsr2h,f,c
  4207   002720  5066               	movf	UpdateDisplay@i^0,w,c
  4208   002722  2552               	addwf	UpdateDisplay@update_datas& (0+255),w,b
  4209   002724  6EE1               	movwf	fsr1l,c
  4210   002726  0E00               	movlw	0
  4211   002728  2153               	addwfc	(UpdateDisplay@update_datas+1)& (0+255),w,b
  4212   00272A  6EE2               	movwf	fsr1h,c
  4213   00272C  50E7               	movf	indf1,w,c
  4214   00272E  EC4E  F009         	call	_MarkDisplay
  4215   002732  6EDF               	movwf	indf2,c
  4216   002734                     
  4217                           ;Display.c: 79:     }
  4218   002734  2A66               	incf	UpdateDisplay@i^0,f,c
  4219   002736                     l9309:
  4220   002736  0101               	movlb	1	; () banked
  4221   002738  5155               	movf	UpdateDisplay@end_position& (0+255),w,b
  4222   00273A  5C66               	subwf	UpdateDisplay@i^0,w,c
  4223   00273C  A0D8               	btfss	status,0,c
  4224   00273E  EFA3  F013         	goto	u6431
  4225   002742  EFA5  F013         	goto	u6430
  4226   002746                     u6431:
  4227   002746  EF8A  F013         	goto	l9305
  4228   00274A                     u6430:
  4229   00274A                     
  4230                           ; BSR set to: 1
  4231   00274A  0012               	return		;funcret
  4232   00274C                     __end_of_UpdateDisplay:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _ReadCounter *****************
  4236 ;; Defined at:
  4237 ;;		line 36 in file "Counter.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  counter_data    6    0[BANK1 ] unsigned char [6]
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2   23[COMRAM] PTR unsigned char 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4251 ;;      Params:         2       0       0       0       0       0       0
  4252 ;;      Locals:         0       0       6       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0
  4254 ;;      Totals:         2       0       6       0       0       0       0
  4255 ;;Total ram usage:        8 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 6
  4258 ;; This function calls:
  4259 ;;		___awdiv
  4260 ;;		___awmod
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text16
  4267   0017D6                     __ptext16:
  4268                           	callstack 0
  4269   0017D6                     _ReadCounter:
  4270                           	callstack 24
  4271   0017D6                     
  4272                           ;Counter.c: 38:     unsigned char counter_datas[ 6 ];;Counter.c: 40:     if( counter_dir
      +                          ection_flg == 1 ) {
  4273   0017D6  042D               	decf	_counter_direction_flg^0,w,c
  4274   0017D8  A4D8               	btfss	status,2,c
  4275   0017DA  EFF1  F00B         	goto	u6441
  4276   0017DE  EFF3  F00B         	goto	u6440
  4277   0017E2                     u6441:
  4278   0017E2  EF3D  F00C         	goto	l9317
  4279   0017E6                     u6440:
  4280   0017E6                     
  4281                           ;Counter.c: 41:         counter_datas[ 0 + 1 ] = counter_up_hour % 10;
  4282   0017E6  C031  F058         	movff	_counter_up_hour,___awmod@dividend
  4283   0017EA  6A59               	clrf	(___awmod@dividend+1)^0,c
  4284   0017EC  0E00               	movlw	0
  4285   0017EE  6E5B               	movwf	(___awmod@divisor+1)^0,c
  4286   0017F0  0E0A               	movlw	10
  4287   0017F2  6E5A               	movwf	___awmod@divisor^0,c
  4288   0017F4  EC3D  F011         	call	___awmod	;wreg free
  4289   0017F8  5058               	movf	?___awmod^0,w,c
  4290   0017FA  0101               	movlb	1	; () banked
  4291   0017FC  6F4D               	movwf	(ReadCounter@counter_datas+1)& (0+255),b
  4292                           
  4293                           ;Counter.c: 42:         counter_datas[ 0 ] = counter_up_hour / 10;
  4294   0017FE  C031  F058         	movff	_counter_up_hour,___awdiv@dividend
  4295   001802  6A59               	clrf	(___awdiv@dividend+1)^0,c
  4296   001804  0E00               	movlw	0
  4297   001806  6E5B               	movwf	(___awdiv@divisor+1)^0,c
  4298   001808  0E0A               	movlw	10
  4299   00180A  6E5A               	movwf	___awdiv@divisor^0,c
  4300   00180C  EC7B  F010         	call	___awdiv	;wreg free
  4301   001810  5058               	movf	?___awdiv^0,w,c
  4302   001812  0101               	movlb	1	; () banked
  4303   001814  6F4C               	movwf	ReadCounter@counter_datas& (0+255),b
  4304                           
  4305                           ;Counter.c: 43:         counter_datas[ 2 + 1 ] = counter_up_minute % 10;
  4306   001816  C030  F058         	movff	_counter_up_minute,___awmod@dividend
  4307   00181A  6A59               	clrf	(___awmod@dividend+1)^0,c
  4308   00181C  0E00               	movlw	0
  4309   00181E  6E5B               	movwf	(___awmod@divisor+1)^0,c
  4310   001820  0E0A               	movlw	10
  4311   001822  6E5A               	movwf	___awmod@divisor^0,c
  4312   001824  EC3D  F011         	call	___awmod	;wreg free
  4313   001828  5058               	movf	?___awmod^0,w,c
  4314   00182A  0101               	movlb	1	; () banked
  4315   00182C  6F4F               	movwf	(ReadCounter@counter_datas+3)& (0+255),b
  4316                           
  4317                           ;Counter.c: 44:         counter_datas[ 2 ] = counter_up_minute / 10;
  4318   00182E  C030  F058         	movff	_counter_up_minute,___awdiv@dividend
  4319   001832  6A59               	clrf	(___awdiv@dividend+1)^0,c
  4320   001834  0E00               	movlw	0
  4321   001836  6E5B               	movwf	(___awdiv@divisor+1)^0,c
  4322   001838  0E0A               	movlw	10
  4323   00183A  6E5A               	movwf	___awdiv@divisor^0,c
  4324   00183C  EC7B  F010         	call	___awdiv	;wreg free
  4325   001840  5058               	movf	?___awdiv^0,w,c
  4326   001842  0101               	movlb	1	; () banked
  4327   001844  6F4E               	movwf	(ReadCounter@counter_datas+2)& (0+255),b
  4328                           
  4329                           ;Counter.c: 45:         counter_datas[ 4 + 1 ] = counter_up_second % 10;
  4330   001846  C02F  F058         	movff	_counter_up_second,___awmod@dividend
  4331   00184A  6A59               	clrf	(___awmod@dividend+1)^0,c
  4332   00184C  0E00               	movlw	0
  4333   00184E  6E5B               	movwf	(___awmod@divisor+1)^0,c
  4334   001850  0E0A               	movlw	10
  4335   001852  6E5A               	movwf	___awmod@divisor^0,c
  4336   001854  EC3D  F011         	call	___awmod	;wreg free
  4337   001858  5058               	movf	?___awmod^0,w,c
  4338   00185A  0101               	movlb	1	; () banked
  4339   00185C  6F51               	movwf	(ReadCounter@counter_datas+5)& (0+255),b
  4340                           
  4341                           ;Counter.c: 46:         counter_datas[ 4 ] = counter_up_second / 10;
  4342   00185E  C02F  F058         	movff	_counter_up_second,___awdiv@dividend
  4343   001862  6A59               	clrf	(___awdiv@dividend+1)^0,c
  4344   001864  0E00               	movlw	0
  4345   001866  6E5B               	movwf	(___awdiv@divisor+1)^0,c
  4346   001868  0E0A               	movlw	10
  4347   00186A  6E5A               	movwf	___awdiv@divisor^0,c
  4348   00186C  EC7B  F010         	call	___awdiv	;wreg free
  4349   001870  5058               	movf	?___awdiv^0,w,c
  4350   001872  0101               	movlb	1	; () banked
  4351   001874  6F50               	movwf	(ReadCounter@counter_datas+4)& (0+255),b
  4352                           
  4353                           ;Counter.c: 47:     }
  4354   001876  EF99  F00C         	goto	l9321
  4355   00187A                     l9317:
  4356   00187A  502D               	movf	_counter_direction_flg^0,w,c
  4357   00187C  A4D8               	btfss	status,2,c
  4358   00187E  EF43  F00C         	goto	u6451
  4359   001882  EF45  F00C         	goto	u6450
  4360   001886                     u6451:
  4361   001886  EF99  F00C         	goto	l9321
  4362   00188A                     u6450:
  4363   00188A                     
  4364                           ;Counter.c: 50:         counter_datas[ 0 + 1 ] = counter_down_hour % 10;
  4365   00188A  5037               	movf	_counter_down_hour^0,w,c
  4366   00188C  6E58               	movwf	___awmod@dividend^0,c
  4367   00188E  6A59               	clrf	(___awmod@dividend+1)^0,c
  4368   001890  BE58               	btfsc	___awmod@dividend^0,7,c
  4369   001892  0659               	decf	(___awmod@dividend+1)^0,f,c
  4370   001894  0E00               	movlw	0
  4371   001896  6E5B               	movwf	(___awmod@divisor+1)^0,c
  4372   001898  0E0A               	movlw	10
  4373   00189A  6E5A               	movwf	___awmod@divisor^0,c
  4374   00189C  EC3D  F011         	call	___awmod	;wreg free
  4375   0018A0  5058               	movf	?___awmod^0,w,c
  4376   0018A2  0101               	movlb	1	; () banked
  4377   0018A4  6F4D               	movwf	(ReadCounter@counter_datas+1)& (0+255),b
  4378                           
  4379                           ;Counter.c: 51:         counter_datas[ 0 ] = counter_down_hour / 10;
  4380   0018A6  5037               	movf	_counter_down_hour^0,w,c
  4381   0018A8  6E58               	movwf	___awdiv@dividend^0,c
  4382   0018AA  6A59               	clrf	(___awdiv@dividend+1)^0,c
  4383   0018AC  BE58               	btfsc	___awdiv@dividend^0,7,c
  4384   0018AE  0659               	decf	(___awdiv@dividend+1)^0,f,c
  4385   0018B0  0E00               	movlw	0
  4386   0018B2  6E5B               	movwf	(___awdiv@divisor+1)^0,c
  4387   0018B4  0E0A               	movlw	10
  4388   0018B6  6E5A               	movwf	___awdiv@divisor^0,c
  4389   0018B8  EC7B  F010         	call	___awdiv	;wreg free
  4390   0018BC  5058               	movf	?___awdiv^0,w,c
  4391   0018BE  0101               	movlb	1	; () banked
  4392   0018C0  6F4C               	movwf	ReadCounter@counter_datas& (0+255),b
  4393                           
  4394                           ;Counter.c: 52:         counter_datas[ 2 + 1 ] = counter_down_minute % 10;
  4395   0018C2  5036               	movf	_counter_down_minute^0,w,c
  4396   0018C4  6E58               	movwf	___awmod@dividend^0,c
  4397   0018C6  6A59               	clrf	(___awmod@dividend+1)^0,c
  4398   0018C8  BE58               	btfsc	___awmod@dividend^0,7,c
  4399   0018CA  0659               	decf	(___awmod@dividend+1)^0,f,c
  4400   0018CC  0E00               	movlw	0
  4401   0018CE  6E5B               	movwf	(___awmod@divisor+1)^0,c
  4402   0018D0  0E0A               	movlw	10
  4403   0018D2  6E5A               	movwf	___awmod@divisor^0,c
  4404   0018D4  EC3D  F011         	call	___awmod	;wreg free
  4405   0018D8  5058               	movf	?___awmod^0,w,c
  4406   0018DA  0101               	movlb	1	; () banked
  4407   0018DC  6F4F               	movwf	(ReadCounter@counter_datas+3)& (0+255),b
  4408                           
  4409                           ;Counter.c: 53:         counter_datas[ 2 ] = counter_down_minute / 10;
  4410   0018DE  5036               	movf	_counter_down_minute^0,w,c
  4411   0018E0  6E58               	movwf	___awdiv@dividend^0,c
  4412   0018E2  6A59               	clrf	(___awdiv@dividend+1)^0,c
  4413   0018E4  BE58               	btfsc	___awdiv@dividend^0,7,c
  4414   0018E6  0659               	decf	(___awdiv@dividend+1)^0,f,c
  4415   0018E8  0E00               	movlw	0
  4416   0018EA  6E5B               	movwf	(___awdiv@divisor+1)^0,c
  4417   0018EC  0E0A               	movlw	10
  4418   0018EE  6E5A               	movwf	___awdiv@divisor^0,c
  4419   0018F0  EC7B  F010         	call	___awdiv	;wreg free
  4420   0018F4  5058               	movf	?___awdiv^0,w,c
  4421   0018F6  0101               	movlb	1	; () banked
  4422   0018F8  6F4E               	movwf	(ReadCounter@counter_datas+2)& (0+255),b
  4423                           
  4424                           ;Counter.c: 54:         counter_datas[ 4 + 1 ] = counter_down_second % 10;
  4425   0018FA  5035               	movf	_counter_down_second^0,w,c
  4426   0018FC  6E58               	movwf	___awmod@dividend^0,c
  4427   0018FE  6A59               	clrf	(___awmod@dividend+1)^0,c
  4428   001900  BE58               	btfsc	___awmod@dividend^0,7,c
  4429   001902  0659               	decf	(___awmod@dividend+1)^0,f,c
  4430   001904  0E00               	movlw	0
  4431   001906  6E5B               	movwf	(___awmod@divisor+1)^0,c
  4432   001908  0E0A               	movlw	10
  4433   00190A  6E5A               	movwf	___awmod@divisor^0,c
  4434   00190C  EC3D  F011         	call	___awmod	;wreg free
  4435   001910  5058               	movf	?___awmod^0,w,c
  4436   001912  0101               	movlb	1	; () banked
  4437   001914  6F51               	movwf	(ReadCounter@counter_datas+5)& (0+255),b
  4438                           
  4439                           ;Counter.c: 55:         counter_datas[ 4 ] = counter_down_second / 10;
  4440   001916  5035               	movf	_counter_down_second^0,w,c
  4441   001918  6E58               	movwf	___awdiv@dividend^0,c
  4442   00191A  6A59               	clrf	(___awdiv@dividend+1)^0,c
  4443   00191C  BE58               	btfsc	___awdiv@dividend^0,7,c
  4444   00191E  0659               	decf	(___awdiv@dividend+1)^0,f,c
  4445   001920  0E00               	movlw	0
  4446   001922  6E5B               	movwf	(___awdiv@divisor+1)^0,c
  4447   001924  0E0A               	movlw	10
  4448   001926  6E5A               	movwf	___awdiv@divisor^0,c
  4449   001928  EC7B  F010         	call	___awdiv	;wreg free
  4450   00192C  5058               	movf	?___awdiv^0,w,c
  4451   00192E  0101               	movlb	1	; () banked
  4452   001930  6F50               	movwf	(ReadCounter@counter_datas+4)& (0+255),b
  4453   001932                     l9321:
  4454                           
  4455                           ;Counter.c: 58:     return counter_datas;
  4456   001932  0E4C               	movlw	low ReadCounter@counter_datas
  4457   001934  6E60               	movwf	?_ReadCounter^0,c
  4458   001936  0E01               	movlw	high ReadCounter@counter_datas
  4459   001938  6E61               	movwf	(?_ReadCounter+1)^0,c
  4460   00193A  0012               	return		;funcret
  4461   00193C                     __end_of_ReadCounter:
  4462                           	callstack 0
  4463                           
  4464 ;; *************** function ___awmod *****************
  4465 ;; Defined at:
  4466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  dividend        2   15[COMRAM] int 
  4469 ;;  divisor         2   17[COMRAM] int 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  sign            1   20[COMRAM] unsigned char 
  4472 ;;  counter         1   19[COMRAM] unsigned char 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  2   15[COMRAM] int 
  4475 ;; Registers used:
  4476 ;;		wreg, status,2, status,0
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4482 ;;      Params:         4       0       0       0       0       0       0
  4483 ;;      Locals:         2       0       0       0       0       0       0
  4484 ;;      Temps:          0       0       0       0       0       0       0
  4485 ;;      Totals:         6       0       0       0       0       0       0
  4486 ;;Total ram usage:        6 bytes
  4487 ;; Hardware stack levels used: 1
  4488 ;; Hardware stack levels required when called: 5
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		_ReadCounter
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text17
  4497   00227A                     __ptext17:
  4498                           	callstack 0
  4499   00227A                     ___awmod:
  4500                           	callstack 24
  4501   00227A  0E00               	movlw	0
  4502   00227C  6E5D               	movwf	___awmod@sign^0,c
  4503   00227E  BE59               	btfsc	(___awmod@dividend+1)^0,7,c
  4504   002280  EF46  F011         	goto	u6360
  4505   002284  EF44  F011         	goto	u6361
  4506   002288                     u6361:
  4507   002288  EF4C  F011         	goto	l9259
  4508   00228C                     u6360:
  4509   00228C  6C58               	negf	___awmod@dividend^0,c
  4510   00228E  1E59               	comf	(___awmod@dividend+1)^0,f,c
  4511   002290  B0D8               	btfsc	status,0,c
  4512   002292  2A59               	incf	(___awmod@dividend+1)^0,f,c
  4513   002294  0E01               	movlw	1
  4514   002296  6E5D               	movwf	___awmod@sign^0,c
  4515   002298                     l9259:
  4516   002298  BE5B               	btfsc	(___awmod@divisor+1)^0,7,c
  4517   00229A  EF53  F011         	goto	u6370
  4518   00229E  EF51  F011         	goto	u6371
  4519   0022A2                     u6371:
  4520   0022A2  EF57  F011         	goto	l9263
  4521   0022A6                     u6370:
  4522   0022A6  6C5A               	negf	___awmod@divisor^0,c
  4523   0022A8  1E5B               	comf	(___awmod@divisor+1)^0,f,c
  4524   0022AA  B0D8               	btfsc	status,0,c
  4525   0022AC  2A5B               	incf	(___awmod@divisor+1)^0,f,c
  4526   0022AE                     l9263:
  4527   0022AE  505A               	movf	___awmod@divisor^0,w,c
  4528   0022B0  105B               	iorwf	(___awmod@divisor+1)^0,w,c
  4529   0022B2  B4D8               	btfsc	status,2,c
  4530   0022B4  EF5E  F011         	goto	u6381
  4531   0022B8  EF60  F011         	goto	u6380
  4532   0022BC                     u6381:
  4533   0022BC  EF84  F011         	goto	l9279
  4534   0022C0                     u6380:
  4535   0022C0  0E01               	movlw	1
  4536   0022C2  6E5C               	movwf	___awmod@counter^0,c
  4537   0022C4  EF68  F011         	goto	l9269
  4538   0022C8                     l9267:
  4539   0022C8  90D8               	bcf	status,0,c
  4540   0022CA  365A               	rlcf	___awmod@divisor^0,f,c
  4541   0022CC  365B               	rlcf	(___awmod@divisor+1)^0,f,c
  4542   0022CE  2A5C               	incf	___awmod@counter^0,f,c
  4543   0022D0                     l9269:
  4544   0022D0  AE5B               	btfss	(___awmod@divisor+1)^0,7,c
  4545   0022D2  EF6D  F011         	goto	u6391
  4546   0022D6  EF6F  F011         	goto	u6390
  4547   0022DA                     u6391:
  4548   0022DA  EF64  F011         	goto	l9267
  4549   0022DE                     u6390:
  4550   0022DE                     l9271:
  4551   0022DE  505A               	movf	___awmod@divisor^0,w,c
  4552   0022E0  5C58               	subwf	___awmod@dividend^0,w,c
  4553   0022E2  505B               	movf	(___awmod@divisor+1)^0,w,c
  4554   0022E4  5859               	subwfb	(___awmod@dividend+1)^0,w,c
  4555   0022E6  A0D8               	btfss	status,0,c
  4556   0022E8  EF78  F011         	goto	u6401
  4557   0022EC  EF7A  F011         	goto	u6400
  4558   0022F0                     u6401:
  4559   0022F0  EF7E  F011         	goto	l9275
  4560   0022F4                     u6400:
  4561   0022F4  505A               	movf	___awmod@divisor^0,w,c
  4562   0022F6  5E58               	subwf	___awmod@dividend^0,f,c
  4563   0022F8  505B               	movf	(___awmod@divisor+1)^0,w,c
  4564   0022FA  5A59               	subwfb	(___awmod@dividend+1)^0,f,c
  4565   0022FC                     l9275:
  4566   0022FC  90D8               	bcf	status,0,c
  4567   0022FE  325B               	rrcf	(___awmod@divisor+1)^0,f,c
  4568   002300  325A               	rrcf	___awmod@divisor^0,f,c
  4569   002302  2E5C               	decfsz	___awmod@counter^0,f,c
  4570   002304  EF6F  F011         	goto	l9271
  4571   002308                     l9279:
  4572   002308  505D               	movf	___awmod@sign^0,w,c
  4573   00230A  B4D8               	btfsc	status,2,c
  4574   00230C  EF8A  F011         	goto	u6411
  4575   002310  EF8C  F011         	goto	u6410
  4576   002314                     u6411:
  4577   002314  EF90  F011         	goto	l9283
  4578   002318                     u6410:
  4579   002318  6C58               	negf	___awmod@dividend^0,c
  4580   00231A  1E59               	comf	(___awmod@dividend+1)^0,f,c
  4581   00231C  B0D8               	btfsc	status,0,c
  4582   00231E  2A59               	incf	(___awmod@dividend+1)^0,f,c
  4583   002320                     l9283:
  4584   002320  C058  F058         	movff	___awmod@dividend,?___awmod
  4585   002324  C059  F059         	movff	___awmod@dividend+1,?___awmod+1
  4586   002328  0012               	return		;funcret
  4587   00232A                     __end_of___awmod:
  4588                           	callstack 0
  4589                           
  4590 ;; *************** function ___awdiv *****************
  4591 ;; Defined at:
  4592 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  dividend        2   15[COMRAM] int 
  4595 ;;  divisor         2   17[COMRAM] int 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  quotient        2   21[COMRAM] int 
  4598 ;;  sign            1   20[COMRAM] unsigned char 
  4599 ;;  counter         1   19[COMRAM] unsigned char 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  2   15[COMRAM] int 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2, status,0
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4609 ;;      Params:         4       0       0       0       0       0       0
  4610 ;;      Locals:         4       0       0       0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0       0       0
  4612 ;;      Totals:         8       0       0       0       0       0       0
  4613 ;;Total ram usage:        8 bytes
  4614 ;; Hardware stack levels used: 1
  4615 ;; Hardware stack levels required when called: 5
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_ReadCounter
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text18
  4624   0020F6                     __ptext18:
  4625                           	callstack 0
  4626   0020F6                     ___awdiv:
  4627                           	callstack 24
  4628   0020F6  0E00               	movlw	0
  4629   0020F8  6E5D               	movwf	___awdiv@sign^0,c
  4630   0020FA  BE5B               	btfsc	(___awdiv@divisor+1)^0,7,c
  4631   0020FC  EF84  F010         	goto	u6300
  4632   002100  EF82  F010         	goto	u6301
  4633   002104                     u6301:
  4634   002104  EF8A  F010         	goto	l9215
  4635   002108                     u6300:
  4636   002108  6C5A               	negf	___awdiv@divisor^0,c
  4637   00210A  1E5B               	comf	(___awdiv@divisor+1)^0,f,c
  4638   00210C  B0D8               	btfsc	status,0,c
  4639   00210E  2A5B               	incf	(___awdiv@divisor+1)^0,f,c
  4640   002110  0E01               	movlw	1
  4641   002112  6E5D               	movwf	___awdiv@sign^0,c
  4642   002114                     l9215:
  4643   002114  BE59               	btfsc	(___awdiv@dividend+1)^0,7,c
  4644   002116  EF91  F010         	goto	u6310
  4645   00211A  EF8F  F010         	goto	u6311
  4646   00211E                     u6311:
  4647   00211E  EF97  F010         	goto	l9221
  4648   002122                     u6310:
  4649   002122  6C58               	negf	___awdiv@dividend^0,c
  4650   002124  1E59               	comf	(___awdiv@dividend+1)^0,f,c
  4651   002126  B0D8               	btfsc	status,0,c
  4652   002128  2A59               	incf	(___awdiv@dividend+1)^0,f,c
  4653   00212A  0E01               	movlw	1
  4654   00212C  1A5D               	xorwf	___awdiv@sign^0,f,c
  4655   00212E                     l9221:
  4656   00212E  0E00               	movlw	0
  4657   002130  6E5F               	movwf	(___awdiv@quotient+1)^0,c
  4658   002132  0E00               	movlw	0
  4659   002134  6E5E               	movwf	___awdiv@quotient^0,c
  4660   002136  505A               	movf	___awdiv@divisor^0,w,c
  4661   002138  105B               	iorwf	(___awdiv@divisor+1)^0,w,c
  4662   00213A  B4D8               	btfsc	status,2,c
  4663   00213C  EFA2  F010         	goto	u6321
  4664   002140  EFA4  F010         	goto	u6320
  4665   002144                     u6321:
  4666   002144  EFCC  F010         	goto	l9243
  4667   002148                     u6320:
  4668   002148  0E01               	movlw	1
  4669   00214A  6E5C               	movwf	___awdiv@counter^0,c
  4670   00214C  EFAC  F010         	goto	l9229
  4671   002150                     l9227:
  4672   002150  90D8               	bcf	status,0,c
  4673   002152  365A               	rlcf	___awdiv@divisor^0,f,c
  4674   002154  365B               	rlcf	(___awdiv@divisor+1)^0,f,c
  4675   002156  2A5C               	incf	___awdiv@counter^0,f,c
  4676   002158                     l9229:
  4677   002158  AE5B               	btfss	(___awdiv@divisor+1)^0,7,c
  4678   00215A  EFB1  F010         	goto	u6331
  4679   00215E  EFB3  F010         	goto	u6330
  4680   002162                     u6331:
  4681   002162  EFA8  F010         	goto	l9227
  4682   002166                     u6330:
  4683   002166                     l9231:
  4684   002166  90D8               	bcf	status,0,c
  4685   002168  365E               	rlcf	___awdiv@quotient^0,f,c
  4686   00216A  365F               	rlcf	(___awdiv@quotient+1)^0,f,c
  4687   00216C  505A               	movf	___awdiv@divisor^0,w,c
  4688   00216E  5C58               	subwf	___awdiv@dividend^0,w,c
  4689   002170  505B               	movf	(___awdiv@divisor+1)^0,w,c
  4690   002172  5859               	subwfb	(___awdiv@dividend+1)^0,w,c
  4691   002174  A0D8               	btfss	status,0,c
  4692   002176  EFBF  F010         	goto	u6341
  4693   00217A  EFC1  F010         	goto	u6340
  4694   00217E                     u6341:
  4695   00217E  EFC6  F010         	goto	l9239
  4696   002182                     u6340:
  4697   002182  505A               	movf	___awdiv@divisor^0,w,c
  4698   002184  5E58               	subwf	___awdiv@dividend^0,f,c
  4699   002186  505B               	movf	(___awdiv@divisor+1)^0,w,c
  4700   002188  5A59               	subwfb	(___awdiv@dividend+1)^0,f,c
  4701   00218A  805E               	bsf	___awdiv@quotient^0,0,c
  4702   00218C                     l9239:
  4703   00218C  90D8               	bcf	status,0,c
  4704   00218E  325B               	rrcf	(___awdiv@divisor+1)^0,f,c
  4705   002190  325A               	rrcf	___awdiv@divisor^0,f,c
  4706   002192  2E5C               	decfsz	___awdiv@counter^0,f,c
  4707   002194  EFB3  F010         	goto	l9231
  4708   002198                     l9243:
  4709   002198  505D               	movf	___awdiv@sign^0,w,c
  4710   00219A  B4D8               	btfsc	status,2,c
  4711   00219C  EFD2  F010         	goto	u6351
  4712   0021A0  EFD4  F010         	goto	u6350
  4713   0021A4                     u6351:
  4714   0021A4  EFD8  F010         	goto	l9247
  4715   0021A8                     u6350:
  4716   0021A8  6C5E               	negf	___awdiv@quotient^0,c
  4717   0021AA  1E5F               	comf	(___awdiv@quotient+1)^0,f,c
  4718   0021AC  B0D8               	btfsc	status,0,c
  4719   0021AE  2A5F               	incf	(___awdiv@quotient+1)^0,f,c
  4720   0021B0                     l9247:
  4721   0021B0  C05E  F058         	movff	___awdiv@quotient,?___awdiv
  4722   0021B4  C05F  F059         	movff	___awdiv@quotient+1,?___awdiv+1
  4723   0021B8  0012               	return		;funcret
  4724   0021BA                     __end_of___awdiv:
  4725                           	callstack 0
  4726                           
  4727 ;; *************** function _LEDProcess *****************
  4728 ;; Defined at:
  4729 ;;		line 121 in file "Main.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4743 ;;      Params:         0       0       0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0
  4745 ;;      Temps:          2       0       0       0       0       0       0
  4746 ;;      Totals:         2       0       0       0       0       0       0
  4747 ;;Total ram usage:        2 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 5
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_main
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text19
  4758   001CCA                     __ptext19:
  4759                           	callstack 0
  4760   001CCA                     _LEDProcess:
  4761                           	callstack 25
  4762   001CCA                     
  4763                           ;Main.c: 122:     display_datas[ 7 ] &= 0x00;
  4764   001CCA  0E00               	movlw	0
  4765   001CCC  0100               	movlb	0	; () banked
  4766   001CCE  6F8F               	movwf	(_display_datas+7)& (0+255),b
  4767                           
  4768                           ;Main.c: 123:     switch( SYSTEM_STATE_FLG ){
  4769   001CD0  EFA3  F00E         	goto	l7177
  4770   001CD4                     l7151:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;Main.c: 126:             if( rtc_clock_disp_type == 0 ) display_datas[ 7 ] |= 0x01;
  4774   001CD4  5041               	movf	_rtc_clock_disp_type^0,w,c
  4775   001CD6  A4D8               	btfss	status,2,c
  4776   001CD8  EF70  F00E         	goto	u4771
  4777   001CDC  EF72  F00E         	goto	u4770
  4778   001CE0                     u4771:
  4779   001CE0  EF75  F00E         	goto	l7155
  4780   001CE4                     u4770:
  4781   001CE4                     l7153:
  4782                           
  4783                           ; BSR set to: 0
  4784   001CE4  818F               	bsf	(_display_datas+7)& (0+255),0,b
  4785   001CE6  EFD2  F00E         	goto	l347
  4786   001CEA                     l7155:
  4787                           
  4788                           ; BSR set to: 0
  4789   001CEA  838F               	bsf	(_display_datas+7)& (0+255),1,b
  4790   001CEC  EFD2  F00E         	goto	l347
  4791   001CF0                     l7159:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;Main.c: 130:             display_datas[ 7 ] |= 0x20;
  4795   001CF0  8B8F               	bsf	(_display_datas+7)& (0+255),5,b
  4796   001CF2                     
  4797                           ; BSR set to: 0
  4798                           ;Main.c: 131:             if( counter_skip_flg ) {
  4799   001CF2  502C               	movf	_counter_skip_flg^0,w,c
  4800   001CF4  B4D8               	btfsc	status,2,c
  4801   001CF6  EF7F  F00E         	goto	u4781
  4802   001CFA  EF81  F00E         	goto	u4780
  4803   001CFE                     u4781:
  4804   001CFE  EFC8  F00E         	goto	l7179
  4805   001D02                     u4780:
  4806   001D02                     
  4807                           ; BSR set to: 0
  4808                           ;Main.c: 132:                 led_blink_cnt ++;
  4809   001D02  4A0D               	infsnz	_led_blink_cnt^0,f,c
  4810   001D04  2A0E               	incf	(_led_blink_cnt+1)^0,f,c
  4811   001D06                     
  4812                           ; BSR set to: 0
  4813                           ;Main.c: 133:                 if( led_blink_cnt < 40 / 2 ) display_datas[ 7 ] |= 0x04;
  4814   001D06  500E               	movf	(_led_blink_cnt+1)^0,w,c
  4815   001D08  E107               	bnz	u4791
  4816   001D0A  0E14               	movlw	20
  4817   001D0C  5C0D               	subwf	_led_blink_cnt^0,w,c
  4818   001D0E  B0D8               	btfsc	status,0,c
  4819   001D10  EF8C  F00E         	goto	u4791
  4820   001D14  EF8E  F00E         	goto	u4790
  4821   001D18                     u4791:
  4822   001D18  EF8F  F00E         	goto	l7169
  4823   001D1C                     u4790:
  4824   001D1C                     
  4825                           ; BSR set to: 0
  4826   001D1C  858F               	bsf	(_display_datas+7)& (0+255),2,b
  4827   001D1E                     l7169:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;Main.c: 134:                 if( led_blink_cnt > 40 ) led_blink_cnt = 0;
  4831   001D1E  500E               	movf	(_led_blink_cnt+1)^0,w,c
  4832   001D20  E109               	bnz	u4800
  4833   001D22  0E29               	movlw	41
  4834   001D24  5C0D               	subwf	_led_blink_cnt^0,w,c
  4835   001D26  A0D8               	btfss	status,0,c
  4836   001D28  EF98  F00E         	goto	u4801
  4837   001D2C  EF9A  F00E         	goto	u4800
  4838   001D30                     u4801:
  4839   001D30  EFC8  F00E         	goto	l7179
  4840   001D34                     u4800:
  4841   001D34                     
  4842                           ; BSR set to: 0
  4843   001D34  0E00               	movlw	0
  4844   001D36  6E0E               	movwf	(_led_blink_cnt+1)^0,c
  4845   001D38  0E00               	movlw	0
  4846   001D3A  6E0D               	movwf	_led_blink_cnt^0,c
  4847   001D3C  EFC8  F00E         	goto	l7179
  4848   001D40                     l7173:
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;Main.c: 138:             display_datas[ 7 ] |= 0x10;
  4852   001D40  898F               	bsf	(_display_datas+7)& (0+255),4,b
  4853                           
  4854                           ;Main.c: 139:             break;
  4855   001D42  EFC8  F00E         	goto	l7179
  4856   001D46                     l7177:
  4857                           
  4858                           ; BSR set to: 0
  4859   001D46  506F               	movf	_SYSTEM_STATE_FLG^0,w,c
  4860   001D48  6E58               	movwf	??_LEDProcess^0,c
  4861   001D4A  6A59               	clrf	(??_LEDProcess+1)^0,c
  4862                           
  4863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4864                           ; Switch size 1, requested type "simple"
  4865                           ; Number of cases is 1, Range of values is 0 to 0
  4866                           ; switch strategies available:
  4867                           ; Name         Instructions Cycles
  4868                           ; simple_byte            4     3 (average)
  4869                           ;	Chosen strategy is simple_byte
  4870   001D4C  5059               	movf	(??_LEDProcess+1)^0,w,c
  4871   001D4E  0A00               	xorlw	0	; case 0
  4872   001D50  B4D8               	btfsc	status,2,c
  4873   001D52  EFAD  F00E         	goto	l9899
  4874   001D56  EFC8  F00E         	goto	l7179
  4875   001D5A                     l9899:
  4876                           
  4877                           ; BSR set to: 0
  4878                           ; Switch size 1, requested type "simple"
  4879                           ; Number of cases is 6, Range of values is 100 to 203
  4880                           ; switch strategies available:
  4881                           ; Name         Instructions Cycles
  4882                           ; simple_byte           19    10 (average)
  4883                           ;	Chosen strategy is simple_byte
  4884   001D5A  5058               	movf	??_LEDProcess^0,w,c
  4885   001D5C  0A64               	xorlw	100	; case 100
  4886   001D5E  B4D8               	btfsc	status,2,c
  4887   001D60  EF6A  F00E         	goto	l7151
  4888   001D64  0A01               	xorlw	1	; case 101
  4889   001D66  B4D8               	btfsc	status,2,c
  4890   001D68  EF6A  F00E         	goto	l7151
  4891   001D6C  0AAD               	xorlw	173	; case 200
  4892   001D6E  B4D8               	btfsc	status,2,c
  4893   001D70  EF78  F00E         	goto	l7159
  4894   001D74  0A01               	xorlw	1	; case 201
  4895   001D76  B4D8               	btfsc	status,2,c
  4896   001D78  EFA0  F00E         	goto	l7173
  4897   001D7C  0A03               	xorlw	3	; case 202
  4898   001D7E  B4D8               	btfsc	status,2,c
  4899   001D80  EFC8  F00E         	goto	l7179
  4900   001D84  0A01               	xorlw	1	; case 203
  4901   001D86  B4D8               	btfsc	status,2,c
  4902   001D88  EFC8  F00E         	goto	l7179
  4903   001D8C  EFC8  F00E         	goto	l7179
  4904   001D90                     l7179:
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;Main.c: 144:     if( counter_direction_flg == 1 ) { display_datas[ 7 ] |= 0x01; }
  4908   001D90  042D               	decf	_counter_direction_flg^0,w,c
  4909   001D92  A4D8               	btfss	status,2,c
  4910   001D94  EFCE  F00E         	goto	u4811
  4911   001D98  EFD0  F00E         	goto	u4810
  4912   001D9C                     u4811:
  4913   001D9C  EF75  F00E         	goto	l7155
  4914   001DA0                     u4810:
  4915   001DA0  EF72  F00E         	goto	l7153
  4916   001DA4                     l347:
  4917                           
  4918                           ; BSR set to: 0
  4919   001DA4  0012               	return		;funcret
  4920   001DA6                     __end_of_LEDProcess:
  4921                           	callstack 0
  4922                           
  4923 ;; *************** function _Ds1307Read *****************
  4924 ;; Defined at:
  4925 ;;		line 21 in file "DS1307.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  disp_type       1    wreg     unsigned char 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;  disp_type       1   21[COMRAM] unsigned char 
  4930 ;;  i               1   22[COMRAM] unsigned char 
  4931 ;;  ds1307_date_    6   23[COMRAM] unsigned char [6]
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  2   17[COMRAM] PTR unsigned char 
  4934 ;; Registers used:
  4935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4941 ;;      Params:         2       0       0       0       0       0       0
  4942 ;;      Locals:         8       0       0       0       0       0       0
  4943 ;;      Temps:          2       0       0       0       0       0       0
  4944 ;;      Totals:        12       0       0       0       0       0       0
  4945 ;;Total ram usage:       12 bytes
  4946 ;; Hardware stack levels used: 1
  4947 ;; Hardware stack levels required when called: 8
  4948 ;; This function calls:
  4949 ;;		_I2cRead
  4950 ;;		_I2cRestart
  4951 ;;		_I2cStart
  4952 ;;		_I2cStop
  4953 ;;		_I2cWrite
  4954 ;; This function is called by:
  4955 ;;		_main
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text20
  4960   00193C                     __ptext20:
  4961                           	callstack 0
  4962   00193C                     _Ds1307Read:
  4963                           	callstack 22
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;incstack = 0
  4967                           ;Ds1307Read@disp_type stored from wreg
  4968   00193C  6E5E               	movwf	Ds1307Read@disp_type^0,c
  4969   00193E                     
  4970                           ;DS1307.c: 23:     I2cStart();
  4971   00193E  ECB0  F014         	call	_I2cStart	;wreg free
  4972   001942                     
  4973                           ;DS1307.c: 24:     I2cWrite( (0xD0) );
  4974   001942  0ED0               	movlw	208
  4975   001944  EC83  F014         	call	_I2cWrite
  4976   001948                     
  4977                           ;DS1307.c: 25:     I2cWrite( 0x00 );
  4978   001948  0E00               	movlw	0
  4979   00194A  EC83  F014         	call	_I2cWrite
  4980                           
  4981                           ;DS1307.c: 27:     I2cRestart();
  4982   00194E  ECB9  F014         	call	_I2cRestart	;wreg free
  4983   001952                     
  4984                           ;DS1307.c: 28:     I2cWrite( (0xD1) );
  4985   001952  0ED1               	movlw	209
  4986   001954  EC83  F014         	call	_I2cWrite
  4987   001958                     
  4988                           ;DS1307.c: 30:     unsigned char ds1307_date_datas[ 6 ];;DS1307.c: 32:     for( unsigned
      +                           char i = 0; i < 6; i++ ) real_rtc_data[ i ] = I2cRead( 0 ); real_rtc_data[ 6 ] = I2cRea
      +                          d( 1 );
  4989   001958  0E00               	movlw	0
  4990   00195A  6E5F               	movwf	Ds1307Read@i^0,c
  4991   00195C                     l6959:
  4992   00195C  0E42               	movlw	low _real_rtc_data
  4993   00195E  245F               	addwf	Ds1307Read@i^0,w,c
  4994   001960  6ED9               	movwf	fsr2l,c
  4995   001962  6ADA               	clrf	fsr2h,c
  4996   001964  0E00               	movlw	high _real_rtc_data
  4997   001966  22DA               	addwfc	fsr2h,f,c
  4998   001968  0E00               	movlw	0
  4999   00196A  ECDF  F013         	call	_I2cRead
  5000   00196E  6EDF               	movwf	indf2,c
  5001   001970  2A5F               	incf	Ds1307Read@i^0,f,c
  5002   001972  0E05               	movlw	5
  5003   001974  645F               	cpfsgt	Ds1307Read@i^0,c
  5004   001976  EFBF  F00C         	goto	u4441
  5005   00197A  EFC1  F00C         	goto	u4440
  5006   00197E                     u4441:
  5007   00197E  EFAE  F00C         	goto	l6959
  5008   001982                     u4440:
  5009   001982  0E01               	movlw	1
  5010   001984  ECDF  F013         	call	_I2cRead
  5011   001988  6E48               	movwf	(_real_rtc_data+6)^0,c
  5012   00198A                     
  5013                           ;DS1307.c: 34:     rtc_clock_disp_type = ( real_rtc_data[ 2 ] & 0x40 ) ? 1 : 0;
  5014   00198A  BC44               	btfsc	(_real_rtc_data+2)^0,6,c
  5015   00198C  EFCA  F00C         	goto	u4451
  5016   001990  EFCD  F00C         	goto	u4450
  5017   001994                     u4451:
  5018   001994  0E01               	movlw	1
  5019   001996  EFCE  F00C         	goto	u4460
  5020   00199A                     u4450:
  5021   00199A  0E00               	movlw	0
  5022   00199C                     u4460:
  5023   00199C  6E41               	movwf	_rtc_clock_disp_type^0,c
  5024   00199E                     
  5025                           ;DS1307.c: 35:     if( rtc_clock_disp_type == 0 ) real_rtc_data[ 2 ] = real_rtc_data[ 2 
      +                          ] & 0x3f;
  5026   00199E  5041               	movf	_rtc_clock_disp_type^0,w,c
  5027   0019A0  A4D8               	btfss	status,2,c
  5028   0019A2  EFD5  F00C         	goto	u4471
  5029   0019A6  EFD7  F00C         	goto	u4470
  5030   0019AA                     u4471:
  5031   0019AA  EFDC  F00C         	goto	l6973
  5032   0019AE                     u4470:
  5033   0019AE  5044               	movf	(_real_rtc_data+2)^0,w,c
  5034   0019B0  0B3F               	andlw	63
  5035   0019B2  6E44               	movwf	(_real_rtc_data+2)^0,c
  5036   0019B4  EF27  F00D         	goto	l6985
  5037   0019B8                     l6973:
  5038   0019B8  BA44               	btfsc	(_real_rtc_data+2)^0,5,c
  5039   0019BA  EFE1  F00C         	goto	u4481
  5040   0019BE  EFE4  F00C         	goto	u4480
  5041   0019C2                     u4481:
  5042   0019C2  0E01               	movlw	1
  5043   0019C4  EFE5  F00C         	goto	u4490
  5044   0019C8                     u4480:
  5045   0019C8  0E00               	movlw	0
  5046   0019CA                     u4490:
  5047   0019CA  6E40               	movwf	_rtc_hour_ampm_flg^0,c
  5048   0019CC  5044               	movf	(_real_rtc_data+2)^0,w,c
  5049   0019CE  0B1F               	andlw	31
  5050   0019D0  6E44               	movwf	(_real_rtc_data+2)^0,c
  5051   0019D2  EF27  F00D         	goto	l6985
  5052   0019D6                     l6977:
  5053                           
  5054                           ;DS1307.c: 40:                 ds1307_date_datas[ 0 ] = real_rtc_data[ 2 ] >> 4; ds1307_
      +                          date_datas[ 1 ] = real_rtc_data[ 2 ] % 16;
  5055   0019D6  3844               	swapf	(_real_rtc_data+2)^0,w,c
  5056   0019D8  0B0F               	andlw	15
  5057   0019DA  6E60               	movwf	Ds1307Read@ds1307_date_datas^0,c
  5058   0019DC  5044               	movf	(_real_rtc_data+2)^0,w,c
  5059   0019DE  0B0F               	andlw	15
  5060   0019E0  6E61               	movwf	(Ds1307Read@ds1307_date_datas+1)^0,c
  5061                           
  5062                           ;DS1307.c: 41:                 ds1307_date_datas[ 2 ] = real_rtc_data[ 1 ] >> 4; ds1307_
      +                          date_datas[ 3 ] = real_rtc_data[ 1 ] % 16;
  5063   0019E2  3843               	swapf	(_real_rtc_data+1)^0,w,c
  5064   0019E4  0B0F               	andlw	15
  5065   0019E6  6E62               	movwf	(Ds1307Read@ds1307_date_datas+2)^0,c
  5066   0019E8  5043               	movf	(_real_rtc_data+1)^0,w,c
  5067   0019EA  0B0F               	andlw	15
  5068   0019EC  6E63               	movwf	(Ds1307Read@ds1307_date_datas+3)^0,c
  5069                           
  5070                           ;DS1307.c: 42:                 ds1307_date_datas[ 4 ] = real_rtc_data[ 0 ] >> 4; ds1307_
      +                          date_datas[ 5 ] = real_rtc_data[ 0 ] % 16;
  5071   0019EE  3842               	swapf	_real_rtc_data^0,w,c
  5072   0019F0  0B0F               	andlw	15
  5073   0019F2  6E64               	movwf	(Ds1307Read@ds1307_date_datas+4)^0,c
  5074   0019F4  5042               	movf	_real_rtc_data^0,w,c
  5075   0019F6  0B0F               	andlw	15
  5076   0019F8  6E65               	movwf	(Ds1307Read@ds1307_date_datas+5)^0,c
  5077                           
  5078                           ;DS1307.c: 43:                 break;
  5079   0019FA  EF40  F00D         	goto	l6987
  5080   0019FE                     l6979:
  5081                           
  5082                           ;DS1307.c: 45:                 ds1307_date_datas[ 0 ] = real_rtc_data[ 2 ] >> 4; ds1307_
      +                          date_datas[ 1 ] = real_rtc_data[ 2 ] % 16;
  5083   0019FE  3844               	swapf	(_real_rtc_data+2)^0,w,c
  5084   001A00  0B0F               	andlw	15
  5085   001A02  6E60               	movwf	Ds1307Read@ds1307_date_datas^0,c
  5086   001A04  5044               	movf	(_real_rtc_data+2)^0,w,c
  5087   001A06  0B0F               	andlw	15
  5088   001A08  6E61               	movwf	(Ds1307Read@ds1307_date_datas+1)^0,c
  5089                           
  5090                           ;DS1307.c: 46:                 ds1307_date_datas[ 2 ] = real_rtc_data[ 1 ] >> 4; ds1307_
      +                          date_datas[ 3 ] = real_rtc_data[ 1 ] % 16;
  5091   001A0A  3843               	swapf	(_real_rtc_data+1)^0,w,c
  5092   001A0C  0B0F               	andlw	15
  5093   001A0E  6E62               	movwf	(Ds1307Read@ds1307_date_datas+2)^0,c
  5094   001A10  5043               	movf	(_real_rtc_data+1)^0,w,c
  5095   001A12  0B0F               	andlw	15
  5096   001A14  6E63               	movwf	(Ds1307Read@ds1307_date_datas+3)^0,c
  5097                           
  5098                           ;DS1307.c: 47:                 ds1307_date_datas[ 4 ] = real_rtc_data[ 3 ] >> 4; ds1307_
      +                          date_datas[ 5 ] = real_rtc_data[ 3 ] % 16;
  5099   001A16  3845               	swapf	(_real_rtc_data+3)^0,w,c
  5100   001A18  0B0F               	andlw	15
  5101   001A1A  6E64               	movwf	(Ds1307Read@ds1307_date_datas+4)^0,c
  5102   001A1C  5045               	movf	(_real_rtc_data+3)^0,w,c
  5103   001A1E  0B0F               	andlw	15
  5104   001A20  6E65               	movwf	(Ds1307Read@ds1307_date_datas+5)^0,c
  5105                           
  5106                           ;DS1307.c: 48:                 break;
  5107   001A22  EF40  F00D         	goto	l6987
  5108   001A26                     l6981:
  5109                           
  5110                           ;DS1307.c: 50:                 ds1307_date_datas[ 0 ] = real_rtc_data[ 6 ] >> 4; ds1307_
      +                          date_datas[ 1 ] = real_rtc_data[ 6 ] % 16;
  5111   001A26  3848               	swapf	(_real_rtc_data+6)^0,w,c
  5112   001A28  0B0F               	andlw	15
  5113   001A2A  6E60               	movwf	Ds1307Read@ds1307_date_datas^0,c
  5114   001A2C  5048               	movf	(_real_rtc_data+6)^0,w,c
  5115   001A2E  0B0F               	andlw	15
  5116   001A30  6E61               	movwf	(Ds1307Read@ds1307_date_datas+1)^0,c
  5117                           
  5118                           ;DS1307.c: 51:                 ds1307_date_datas[ 2 ] = real_rtc_data[ 5 ] >> 4; ds1307_
      +                          date_datas[ 3 ] = real_rtc_data[ 5 ] % 16;
  5119   001A32  3847               	swapf	(_real_rtc_data+5)^0,w,c
  5120   001A34  0B0F               	andlw	15
  5121   001A36  6E62               	movwf	(Ds1307Read@ds1307_date_datas+2)^0,c
  5122   001A38  5047               	movf	(_real_rtc_data+5)^0,w,c
  5123   001A3A  0B0F               	andlw	15
  5124   001A3C  6E63               	movwf	(Ds1307Read@ds1307_date_datas+3)^0,c
  5125                           
  5126                           ;DS1307.c: 52:                 ds1307_date_datas[ 4 ] = real_rtc_data[ 4 ] >> 4; ds1307_
      +                          date_datas[ 5 ] = real_rtc_data[ 4 ] % 16;
  5127   001A3E  3846               	swapf	(_real_rtc_data+4)^0,w,c
  5128   001A40  0B0F               	andlw	15
  5129   001A42  6E64               	movwf	(Ds1307Read@ds1307_date_datas+4)^0,c
  5130   001A44  5046               	movf	(_real_rtc_data+4)^0,w,c
  5131   001A46  0B0F               	andlw	15
  5132   001A48  6E65               	movwf	(Ds1307Read@ds1307_date_datas+5)^0,c
  5133                           
  5134                           ;DS1307.c: 53:                 break;
  5135   001A4A  EF40  F00D         	goto	l6987
  5136   001A4E                     l6985:
  5137   001A4E  505E               	movf	Ds1307Read@disp_type^0,w,c
  5138   001A50  6E5C               	movwf	??_Ds1307Read^0,c
  5139   001A52  6A5D               	clrf	(??_Ds1307Read+1)^0,c
  5140                           
  5141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5142                           ; Switch size 1, requested type "simple"
  5143                           ; Number of cases is 1, Range of values is 0 to 0
  5144                           ; switch strategies available:
  5145                           ; Name         Instructions Cycles
  5146                           ; simple_byte            4     3 (average)
  5147                           ;	Chosen strategy is simple_byte
  5148   001A54  505D               	movf	(??_Ds1307Read+1)^0,w,c
  5149   001A56  0A00               	xorlw	0	; case 0
  5150   001A58  B4D8               	btfsc	status,2,c
  5151   001A5A  EF31  F00D         	goto	l9901
  5152   001A5E  EF40  F00D         	goto	l6987
  5153   001A62                     l9901:
  5154                           
  5155                           ; Switch size 1, requested type "simple"
  5156                           ; Number of cases is 3, Range of values is 0 to 2
  5157                           ; switch strategies available:
  5158                           ; Name         Instructions Cycles
  5159                           ; simple_byte           10     6 (average)
  5160                           ;	Chosen strategy is simple_byte
  5161   001A62  505C               	movf	??_Ds1307Read^0,w,c
  5162   001A64  0A00               	xorlw	0	; case 0
  5163   001A66  B4D8               	btfsc	status,2,c
  5164   001A68  EFEB  F00C         	goto	l6977
  5165   001A6C  0A01               	xorlw	1	; case 1
  5166   001A6E  B4D8               	btfsc	status,2,c
  5167   001A70  EFFF  F00C         	goto	l6979
  5168   001A74  0A03               	xorlw	3	; case 2
  5169   001A76  B4D8               	btfsc	status,2,c
  5170   001A78  EF13  F00D         	goto	l6981
  5171   001A7C  EF40  F00D         	goto	l6987
  5172   001A80                     l6987:
  5173                           
  5174                           ;DS1307.c: 57:     I2cStop();
  5175   001A80  ECC2  F014         	call	_I2cStop	;wreg free
  5176   001A84                     
  5177                           ;DS1307.c: 58:     return ds1307_date_datas;
  5178   001A84  0E60               	movlw	low Ds1307Read@ds1307_date_datas
  5179   001A86  6E5A               	movwf	?_Ds1307Read^0,c
  5180   001A88  0E00               	movlw	high Ds1307Read@ds1307_date_datas
  5181   001A8A  6E5B               	movwf	(?_Ds1307Read+1)^0,c
  5182   001A8C  0012               	return		;funcret
  5183   001A8E                     __end_of_Ds1307Read:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function _I2cWrite *****************
  5187 ;; Defined at:
  5188 ;;		line 45 in file "I2C.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  data            1    wreg     unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  data            1   15[COMRAM] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5202 ;;      Params:         0       0       0       0       0       0       0
  5203 ;;      Locals:         1       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0
  5205 ;;      Totals:         1       0       0       0       0       0       0
  5206 ;;Total ram usage:        1 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 7
  5209 ;; This function calls:
  5210 ;;		_I2cWait
  5211 ;; This function is called by:
  5212 ;;		_Ds1307Read
  5213 ;;		_Ds1307Write
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text21
  5218   002906                     __ptext21:
  5219                           	callstack 0
  5220   002906                     _I2cWrite:
  5221                           	callstack 20
  5222                           
  5223                           ;incstack = 0
  5224                           ;I2cWrite@data stored from wreg
  5225   002906  6E58               	movwf	I2cWrite@data^0,c
  5226   002908                     
  5227                           ;I2C.c: 46:     SSPBUF = data;
  5228   002908  C058  FFC9         	movff	I2cWrite@data,4041	;volatile
  5229   00290C                     l128:
  5230   00290C  B0C7               	btfsc	199,0,c	;volatile
  5231   00290E  EF8B  F014         	goto	u3431
  5232   002912  EF8D  F014         	goto	u3430
  5233   002916                     u3431:
  5234   002916  EF86  F014         	goto	l128
  5235   00291A                     u3430:
  5236   00291A                     
  5237                           ;I2C.c: 48:     I2cWait();
  5238   00291A  EC65  F014         	call	_I2cWait	;wreg free
  5239   00291E  0012               	return		;funcret
  5240   002920                     __end_of_I2cWrite:
  5241                           	callstack 0
  5242                           
  5243 ;; *************** function _I2cStart *****************
  5244 ;; Defined at:
  5245 ;;		line 22 in file "I2C.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      void 
  5252 ;; Registers used:
  5253 ;;		None
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5259 ;;      Params:         0       0       0       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0
  5262 ;;      Totals:         0       0       0       0       0       0       0
  5263 ;;Total ram usage:        0 bytes
  5264 ;; Hardware stack levels used: 1
  5265 ;; Hardware stack levels required when called: 5
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_Ds1307Read
  5270 ;;		_Ds1307Write
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text22
  5275   002960                     __ptext22:
  5276                           	callstack 0
  5277   002960                     _I2cStart:
  5278                           	callstack 22
  5279   002960                     
  5280                           ;I2C.c: 23:     SSPCON2bits.SEN = 1;
  5281   002960  80C5               	bsf	197,0,c	;volatile
  5282   002962                     l103:
  5283   002962  B0C5               	btfsc	197,0,c	;volatile
  5284   002964  EFB6  F014         	goto	u3421
  5285   002968  EFB8  F014         	goto	u3420
  5286   00296C                     u3421:
  5287   00296C  EFB1  F014         	goto	l103
  5288   002970                     u3420:
  5289   002970  0012               	return		;funcret
  5290   002972                     __end_of_I2cStart:
  5291                           	callstack 0
  5292                           
  5293 ;; *************** function _I2cRestart *****************
  5294 ;; Defined at:
  5295 ;;		line 32 in file "I2C.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;		None
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;		None
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      void 
  5302 ;; Registers used:
  5303 ;;		None
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5309 ;;      Params:         0       0       0       0       0       0       0
  5310 ;;      Locals:         0       0       0       0       0       0       0
  5311 ;;      Temps:          0       0       0       0       0       0       0
  5312 ;;      Totals:         0       0       0       0       0       0       0
  5313 ;;Total ram usage:        0 bytes
  5314 ;; Hardware stack levels used: 1
  5315 ;; Hardware stack levels required when called: 5
  5316 ;; This function calls:
  5317 ;;		Nothing
  5318 ;; This function is called by:
  5319 ;;		_Ds1307Read
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text23
  5324   002972                     __ptext23:
  5325                           	callstack 0
  5326   002972                     _I2cRestart:
  5327                           	callstack 24
  5328   002972                     
  5329                           ;I2C.c: 33:     SSPCON2bits.RSEN = 1;
  5330   002972  82C5               	bsf	197,1,c	;volatile
  5331   002974                     l115:
  5332   002974  B2C5               	btfsc	197,1,c	;volatile
  5333   002976  EFBF  F014         	goto	u3741
  5334   00297A  EFC1  F014         	goto	u3740
  5335   00297E                     u3741:
  5336   00297E  EFBA  F014         	goto	l115
  5337   002982                     u3740:
  5338   002982  0012               	return		;funcret
  5339   002984                     __end_of_I2cRestart:
  5340                           	callstack 0
  5341                           
  5342 ;; *************** function _I2cRead *****************
  5343 ;; Defined at:
  5344 ;;		line 51 in file "I2C.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  ack             1    wreg     unsigned char 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  ack             1   15[COMRAM] unsigned char 
  5349 ;;  receive         1   16[COMRAM] unsigned char 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      unsigned char 
  5352 ;; Registers used:
  5353 ;;		wreg, status,2, cstack
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5359 ;;      Params:         0       0       0       0       0       0       0
  5360 ;;      Locals:         2       0       0       0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0       0       0
  5362 ;;      Totals:         2       0       0       0       0       0       0
  5363 ;;Total ram usage:        2 bytes
  5364 ;; Hardware stack levels used: 1
  5365 ;; Hardware stack levels required when called: 7
  5366 ;; This function calls:
  5367 ;;		_I2cWait
  5368 ;; This function is called by:
  5369 ;;		_Ds1307Read
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text24
  5374   0027BE                     __ptext24:
  5375                           	callstack 0
  5376   0027BE                     _I2cRead:
  5377                           	callstack 22
  5378                           
  5379                           ;incstack = 0
  5380                           ;I2cRead@ack stored from wreg
  5381   0027BE  6E58               	movwf	I2cRead@ack^0,c
  5382   0027C0                     
  5383                           ;I2C.c: 53:     SSPCON2bits.RCEN = 1;
  5384   0027C0  86C5               	bsf	197,3,c	;volatile
  5385   0027C2                     l134:
  5386   0027C2  A0C7               	btfss	199,0,c	;volatile
  5387   0027C4  EFE6  F013         	goto	u3751
  5388   0027C8  EFE8  F013         	goto	u3750
  5389   0027CC                     u3751:
  5390   0027CC  EFE1  F013         	goto	l134
  5391   0027D0                     u3750:
  5392   0027D0                     
  5393                           ;I2C.c: 55:     receive = SSPBUF;
  5394   0027D0  CFC9 F059          	movff	4041,I2cRead@receive	;volatile
  5395   0027D4                     
  5396                           ;I2C.c: 56:     I2cWait();
  5397   0027D4  EC65  F014         	call	_I2cWait	;wreg free
  5398   0027D8                     
  5399                           ;I2C.c: 57:     SSPCON2bits.ACKDT = ack;
  5400   0027D8  B058               	btfsc	I2cRead@ack^0,0,c
  5401   0027DA  D002               	bra	u3765
  5402   0027DC  9AC5               	bcf	197,5,c	;volatile
  5403   0027DE  D001               	bra	u3766
  5404   0027E0                     u3765:
  5405   0027E0  8AC5               	bsf	197,5,c	;volatile
  5406   0027E2                     u3766:
  5407   0027E2                     
  5408                           ;I2C.c: 58:     SSPCON2bits.ACKEN=1;
  5409   0027E2  88C5               	bsf	197,4,c	;volatile
  5410   0027E4                     l137:
  5411   0027E4  B8C5               	btfsc	197,4,c	;volatile
  5412   0027E6  EFF7  F013         	goto	u3771
  5413   0027EA  EFF9  F013         	goto	u3770
  5414   0027EE                     u3771:
  5415   0027EE  EFF2  F013         	goto	l137
  5416   0027F2                     u3770:
  5417   0027F2                     
  5418                           ;I2C.c: 60:     return receive;
  5419   0027F2  5059               	movf	I2cRead@receive^0,w,c
  5420   0027F4  0012               	return		;funcret
  5421   0027F6                     __end_of_I2cRead:
  5422                           	callstack 0
  5423                           
  5424 ;; *************** function _I2cWait *****************
  5425 ;; Defined at:
  5426 ;;		line 37 in file "I2C.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;		None
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		cstack
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5440 ;;      Params:         0       0       0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0       0       0
  5443 ;;      Totals:         0       0       0       0       0       0       0
  5444 ;;Total ram usage:        0 bytes
  5445 ;; Hardware stack levels used: 1
  5446 ;; Hardware stack levels required when called: 6
  5447 ;; This function calls:
  5448 ;;		_I2cStop
  5449 ;; This function is called by:
  5450 ;;		_I2cWrite
  5451 ;;		_I2cRead
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text25
  5456   0028CA                     __ptext25:
  5457                           	callstack 0
  5458   0028CA                     _I2cWait:
  5459                           	callstack 20
  5460   0028CA                     l121:
  5461                           
  5462                           ;I2C.c: 38:  while(SSPSTATbits.R_NOT_W == 1)
  5463   0028CA  B4C7               	btfsc	199,2,c	;volatile
  5464   0028CC  EF6A  F014         	goto	u3401
  5465   0028D0  EF6C  F014         	goto	u3400
  5466   0028D4                     u3401:
  5467   0028D4  EF65  F014         	goto	l121
  5468   0028D8                     u3400:
  5469   0028D8                     
  5470                           ;I2C.c: 40:  if(SSPCON2bits.ACKSTAT == 1) {
  5471   0028D8  ACC5               	btfss	197,6,c	;volatile
  5472   0028DA  EF71  F014         	goto	u3411
  5473   0028DE  EF73  F014         	goto	u3410
  5474   0028E2                     u3411:
  5475   0028E2  EF75  F014         	goto	l125
  5476   0028E6                     u3410:
  5477   0028E6                     
  5478                           ;I2C.c: 41:   I2cStop();
  5479   0028E6  ECC2  F014         	call	_I2cStop	;wreg free
  5480   0028EA                     l125:
  5481   0028EA  0012               	return		;funcret
  5482   0028EC                     __end_of_I2cWait:
  5483                           	callstack 0
  5484                           
  5485 ;; *************** function _I2cStop *****************
  5486 ;; Defined at:
  5487 ;;		line 27 in file "I2C.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;		None
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		None
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5501 ;;      Params:         0       0       0       0       0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0
  5503 ;;      Temps:          0       0       0       0       0       0       0
  5504 ;;      Totals:         0       0       0       0       0       0       0
  5505 ;;Total ram usage:        0 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; Hardware stack levels required when called: 5
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_Ds1307Read
  5512 ;;		_Ds1307Write
  5513 ;;		_I2cWait
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text26
  5518   002984                     __ptext26:
  5519                           	callstack 0
  5520   002984                     _I2cStop:
  5521                           	callstack 20
  5522   002984                     
  5523                           ;I2C.c: 28:     SSPCON2bits.PEN = 1;
  5524   002984  84C5               	bsf	197,2,c	;volatile
  5525   002986                     l109:
  5526   002986  B4C5               	btfsc	197,2,c	;volatile
  5527   002988  EFC8  F014         	goto	u3391
  5528   00298C  EFCA  F014         	goto	u3390
  5529   002990                     u3391:
  5530   002990  EFC3  F014         	goto	l109
  5531   002994                     u3390:
  5532   002994  0012               	return		;funcret
  5533   002996                     __end_of_I2cStop:
  5534                           	callstack 0
  5535                           
  5536 ;; *************** function _DeviceInit *****************
  5537 ;; Defined at:
  5538 ;;		line 75 in file "Main.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;		None
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;		None
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  1    wreg      void 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5552 ;;      Params:         0       0       0       0       0       0       0
  5553 ;;      Locals:         0       0       0       0       0       0       0
  5554 ;;      Temps:          0       0       0       0       0       0       0
  5555 ;;      Totals:         0       0       0       0       0       0       0
  5556 ;;Total ram usage:        0 bytes
  5557 ;; Hardware stack levels used: 1
  5558 ;; Hardware stack levels required when called: 7
  5559 ;; This function calls:
  5560 ;;		_Ds1307Init
  5561 ;;		_EnableAllInterrupts
  5562 ;;		_InitValue
  5563 ;;		_Open1USART
  5564 ;;		_OpenButtons
  5565 ;;		_OpenCounter
  5566 ;;		_OpenDisplay
  5567 ;;		_OpenTimer0
  5568 ;;		_OscillatorInit
  5569 ;;		_Puts1USART
  5570 ;;		_StartTimer0
  5571 ;;		_WriteTimer0
  5572 ;; This function is called by:
  5573 ;;		_main
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text27
  5578   002520                     __ptext27:
  5579                           	callstack 0
  5580   002520                     _DeviceInit:
  5581                           	callstack 23
  5582   002520                     
  5583                           ;Main.c: 77:     OscillatorInit();
  5584   002520  ECED  F014         	call	_OscillatorInit	;wreg free
  5585   002524                     
  5586                           ;Main.c: 79:     ADCON0 = 0x00; ADCON1 = 0x0F;
  5587   002524  0E00               	movlw	0
  5588   002526  6EC2               	movwf	194,c	;volatile
  5589   002528  0E0F               	movlw	15
  5590   00252A  6EC1               	movwf	193,c	;volatile
  5591                           
  5592                           ;Main.c: 80:     EnableAllInterrupts();
  5593   00252C  EC07  F015         	call	_EnableAllInterrupts	;wreg free
  5594   002530                     
  5595                           ;Main.c: 83:     SYSTEM_STATE_FLG = 201;
  5596   002530  0EC9               	movlw	201
  5597   002532  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  5598   002534                     
  5599                           ;Main.c: 85:     OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110010 );
  5600   002534  0E92               	movlw	146
  5601   002536  EC29  F014         	call	_OpenTimer0
  5602   00253A                     
  5603                           ;Main.c: 86:     WriteTimer0( 65285 ); StartTimer0();
  5604   00253A  0EFF               	movlw	255
  5605   00253C  6E59               	movwf	(WriteTimer0@timer0+1)^0,c
  5606   00253E  0E05               	movlw	5
  5607   002540  6E58               	movwf	WriteTimer0@timer0^0,c
  5608   002542  ECCB  F014         	call	_WriteTimer0	;wreg free
  5609   002546  EC05  F015         	call	_StartTimer0	;wreg free
  5610   00254A                     
  5611                           ;Main.c: 88:     OpenCounter();
  5612   00254A  EC3E  F013         	call	_OpenCounter	;wreg free
  5613   00254E                     
  5614                           ;Main.c: 89:     OpenDisplay();
  5615   00254E  EC59  F012         	call	_OpenDisplay	;wreg free
  5616   002552                     
  5617                           ;Main.c: 90:     OpenButtons();
  5618   002552  EC1E  F012         	call	_OpenButtons	;wreg free
  5619   002556                     
  5620                           ;Main.c: 91:     Ds1307Init();
  5621   002556  ECF4  F014         	call	_Ds1307Init	;wreg free
  5622   00255A                     
  5623                           ;Main.c: 96:     InitValue();
  5624   00255A  ECFB  F013         	call	_InitValue	;wreg free
  5625   00255E                     
  5626                           ;Main.c: 98:     Open1USART( 0b01111111 &
  5627   00255E  0E00               	movlw	0
  5628   002560  6E59               	movwf	(Open1USART@spbrg+1)^0,c
  5629   002562  0E67               	movlw	103
  5630   002564  6E58               	movwf	Open1USART@spbrg^0,c
  5631   002566  0E3C               	movlw	60
  5632   002568  ECDD  F010         	call	_Open1USART
  5633   00256C                     
  5634                           ;Main.c: 104:     Puts1USART( "This is Ethernet protocol test firmware!\r\n" );
  5635   00256C  0E01               	movlw	low STR_2
  5636   00256E  6E59               	movwf	Puts1USART@data^0,c
  5637   002570  0E06               	movlw	high STR_2
  5638   002572  6E5A               	movwf	(Puts1USART@data+1)^0,c
  5639   002574  EC62  F013         	call	_Puts1USART	;wreg free
  5640   002578                     
  5641                           ;Main.c: 106:     set_mode_release_cnt = 0;
  5642   002578  0E00               	movlw	0
  5643   00257A  0100               	movlb	0	; () banked
  5644   00257C  6FC9               	movwf	(_set_mode_release_cnt+1)& (0+255),b
  5645   00257E  0E00               	movlw	0
  5646   002580  6FC8               	movwf	_set_mode_release_cnt& (0+255),b
  5647   002582                     
  5648                           ; BSR set to: 0
  5649   002582  0012               	return		;funcret
  5650   002584                     __end_of_DeviceInit:
  5651                           	callstack 0
  5652                           
  5653 ;; *************** function _WriteTimer0 *****************
  5654 ;; Defined at:
  5655 ;;		line 37 in file "Timers.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  timer0          2   15[COMRAM] unsigned int 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  timer           2   17[COMRAM] struct Timers
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		None
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5669 ;;      Params:         2       0       0       0       0       0       0
  5670 ;;      Locals:         2       0       0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0       0       0
  5672 ;;      Totals:         4       0       0       0       0       0       0
  5673 ;;Total ram usage:        4 bytes
  5674 ;; Hardware stack levels used: 1
  5675 ;; Hardware stack levels required when called: 5
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_DeviceInit
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text28
  5684   002996                     __ptext28:
  5685                           	callstack 0
  5686   002996                     _WriteTimer0:
  5687                           	callstack 24
  5688   002996                     
  5689                           ;Timers.c: 37: void WriteTimer0(unsigned int timer0);Timers.c: 38: {;Timers.c: 39:     u
      +                          nion Timers timer;;Timers.c: 41:     timer.lt = timer0;
  5690   002996  C058  F05A         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5691   00299A  C059  F05B         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5692                           
  5693                           ;Timers.c: 43:     TMR0H = timer.bt[1];
  5694   00299E  C05B  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5695                           
  5696                           ;Timers.c: 44:     TMR0L = timer.bt[0];
  5697   0029A2  C05A  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5698   0029A6  0012               	return		;funcret
  5699   0029A8                     __end_of_WriteTimer0:
  5700                           	callstack 0
  5701                           
  5702 ;; *************** function _StartTimer0 *****************
  5703 ;; Defined at:
  5704 ;;		line 47 in file "Timers.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;		None
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;		None
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  1    wreg      void 
  5711 ;; Registers used:
  5712 ;;		None
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5718 ;;      Params:         0       0       0       0       0       0       0
  5719 ;;      Locals:         0       0       0       0       0       0       0
  5720 ;;      Temps:          0       0       0       0       0       0       0
  5721 ;;      Totals:         0       0       0       0       0       0       0
  5722 ;;Total ram usage:        0 bytes
  5723 ;; Hardware stack levels used: 1
  5724 ;; Hardware stack levels required when called: 5
  5725 ;; This function calls:
  5726 ;;		Nothing
  5727 ;; This function is called by:
  5728 ;;		_DeviceInit
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text29
  5733   002A0A                     __ptext29:
  5734                           	callstack 0
  5735   002A0A                     _StartTimer0:
  5736                           	callstack 24
  5737   002A0A                     
  5738                           ;Timers.c: 48:     T0CONbits.TMR0ON = 1;
  5739   002A0A  8ED5               	bsf	213,7,c	;volatile
  5740   002A0C  0012               	return		;funcret
  5741   002A0E                     __end_of_StartTimer0:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _Puts1USART *****************
  5745 ;; Defined at:
  5746 ;;		line 105 in file "Uart.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  data            2   16[COMRAM] PTR unsigned char 
  5749 ;;		 -> STR_2(43), 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5761 ;;      Params:         2       0       0       0       0       0       0
  5762 ;;      Locals:         0       0       0       0       0       0       0
  5763 ;;      Temps:          0       0       0       0       0       0       0
  5764 ;;      Totals:         2       0       0       0       0       0       0
  5765 ;;Total ram usage:        2 bytes
  5766 ;; Hardware stack levels used: 1
  5767 ;; Hardware stack levels required when called: 6
  5768 ;; This function calls:
  5769 ;;		_Busy1USART
  5770 ;;		_Write1USART
  5771 ;; This function is called by:
  5772 ;;		_DeviceInit
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text30
  5777   0026C4                     __ptext30:
  5778                           	callstack 0
  5779   0026C4                     _Puts1USART:
  5780                           	callstack 23
  5781   0026C4                     l1773:
  5782   0026C4                     l6247:
  5783   0026C4  EC90  F014         	call	_Busy1USART	;wreg free
  5784   0026C8  0900               	iorlw	0
  5785   0026CA  A4D8               	btfss	status,2,c
  5786   0026CC  EF6A  F013         	goto	u3911
  5787   0026D0  EF6C  F013         	goto	u3910
  5788   0026D4                     u3911:
  5789   0026D4  EF62  F013         	goto	l6247
  5790   0026D8                     u3910:
  5791   0026D8                     
  5792                           ;Uart.c: 109:             Write1USART(*data);
  5793   0026D8  C059  FFF6         	movff	Puts1USART@data,tblptrl
  5794   0026DC  C05A  FFF7         	movff	Puts1USART@data+1,tblptrh
  5795   0026E0                     	if	0	;tblptru may be non-zero
  5796   0026E0                     	endif
  5797   0026E0                     	if	0	;tblptru may be non-zero
  5798   0026E0                     	endif
  5799   0026E0  0008               	tblrd		*
  5800   0026E2  50F5               	movf	tablat,w,c
  5801   0026E4  EC3E  F014         	call	_Write1USART
  5802   0026E8                     
  5803                           ;Uart.c: 110:     } while( *data++ );
  5804   0026E8  C059  FFF6         	movff	Puts1USART@data,tblptrl
  5805   0026EC  C05A  FFF7         	movff	Puts1USART@data+1,tblptrh
  5806   0026F0  4A59               	infsnz	Puts1USART@data^0,f,c
  5807   0026F2  2A5A               	incf	(Puts1USART@data+1)^0,f,c
  5808   0026F4                     	if	0	;tblptru may be non-zero
  5809   0026F4                     	endif
  5810   0026F4                     	if	0	;tblptru may be non-zero
  5811   0026F4                     	endif
  5812   0026F4  0008               	tblrd		*
  5813   0026F6  50F5               	movf	tablat,w,c
  5814   0026F8  0900               	iorlw	0
  5815   0026FA  A4D8               	btfss	status,2,c
  5816   0026FC  EF82  F013         	goto	u3921
  5817   002700  EF84  F013         	goto	u3920
  5818   002704                     u3921:
  5819   002704  EF62  F013         	goto	l1773
  5820   002708                     u3920:
  5821   002708  0012               	return		;funcret
  5822   00270A                     __end_of_Puts1USART:
  5823                           	callstack 0
  5824                           
  5825 ;; *************** function _Write1USART *****************
  5826 ;; Defined at:
  5827 ;;		line 79 in file "Uart.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  data            1    wreg     unsigned char 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  data            1   15[COMRAM] unsigned char 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		wreg
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5841 ;;      Params:         0       0       0       0       0       0       0
  5842 ;;      Locals:         1       0       0       0       0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0
  5844 ;;      Totals:         1       0       0       0       0       0       0
  5845 ;;Total ram usage:        1 bytes
  5846 ;; Hardware stack levels used: 1
  5847 ;; Hardware stack levels required when called: 5
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_Puts1USART
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text31
  5856   00287C                     __ptext31:
  5857                           	callstack 0
  5858   00287C                     _Write1USART:
  5859                           	callstack 23
  5860                           
  5861                           ;incstack = 0
  5862                           ;Write1USART@data stored from wreg
  5863   00287C  6E58               	movwf	Write1USART@data^0,c
  5864   00287E                     
  5865                           ;Uart.c: 80:     if(TXSTA1bits.TX9)
  5866   00287E  ACAC               	btfss	172,6,c	;volatile
  5867   002880  EF44  F014         	goto	u3711
  5868   002884  EF46  F014         	goto	u3710
  5869   002888                     u3711:
  5870   002888  EF4F  F014         	goto	l6115
  5871   00288C                     u3710:
  5872   00288C                     
  5873                           ;Uart.c: 81:     {;Uart.c: 82:         TXSTA1bits.TX9D = 0;
  5874   00288C  90AC               	bcf	172,0,c	;volatile
  5875                           
  5876                           ;Uart.c: 83:         if(USART1_Status.TX_NINE)
  5877   00288E  A221               	btfss	_USART1_Status^0,1,c	;volatile
  5878   002890  EF4C  F014         	goto	u3721
  5879   002894  EF4E  F014         	goto	u3720
  5880   002898                     u3721:
  5881   002898  EF4F  F014         	goto	l6115
  5882   00289C                     u3720:
  5883   00289C                     
  5884                           ;Uart.c: 84:             TXSTA1bits.TX9D = 1;
  5885   00289C  80AC               	bsf	172,0,c	;volatile
  5886   00289E                     l6115:
  5887                           
  5888                           ;Uart.c: 87:     TXREG1 = data;
  5889   00289E  C058  FFAD         	movff	Write1USART@data,4013	;volatile
  5890   0028A2  0012               	return		;funcret
  5891   0028A4                     __end_of_Write1USART:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _Busy1USART *****************
  5895 ;; Defined at:
  5896 ;;		line 49 in file "Uart.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      unsigned char 
  5903 ;; Registers used:
  5904 ;;		wreg
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5910 ;;      Params:         0       0       0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0
  5913 ;;      Totals:         0       0       0       0       0       0       0
  5914 ;;Total ram usage:        0 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 5
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_Puts1USART
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text32
  5925   002920                     __ptext32:
  5926                           	callstack 0
  5927   002920                     _Busy1USART:
  5928                           	callstack 23
  5929   002920                     
  5930                           ;Uart.c: 51:     if(!TXSTA1bits.TRMT)
  5931   002920  B2AC               	btfsc	172,1,c	;volatile
  5932   002922  EF95  F014         	goto	u3701
  5933   002926  EF97  F014         	goto	u3700
  5934   00292A                     u3701:
  5935   00292A  EF9A  F014         	goto	l6105
  5936   00292E                     u3700:
  5937   00292E                     
  5938                           ;Uart.c: 52:         return 1;
  5939   00292E  0E01               	movlw	1
  5940   002930  EF9B  F014         	goto	l1749
  5941   002934                     l6105:
  5942                           
  5943                           ;Uart.c: 53:     return 0;
  5944   002934  0E00               	movlw	0
  5945   002936                     l1749:
  5946   002936  0012               	return		;funcret
  5947   002938                     __end_of_Busy1USART:
  5948                           	callstack 0
  5949                           
  5950 ;; *************** function _OscillatorInit *****************
  5951 ;; Defined at:
  5952 ;;		line 11 in file "Config.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;		None
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      void 
  5959 ;; Registers used:
  5960 ;;		None
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5966 ;;      Params:         0       0       0       0       0       0       0
  5967 ;;      Locals:         0       0       0       0       0       0       0
  5968 ;;      Temps:          0       0       0       0       0       0       0
  5969 ;;      Totals:         0       0       0       0       0       0       0
  5970 ;;Total ram usage:        0 bytes
  5971 ;; Hardware stack levels used: 1
  5972 ;; Hardware stack levels required when called: 5
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_DeviceInit
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           	psect	text33
  5981   0029DA                     __ptext33:
  5982                           	callstack 0
  5983   0029DA                     _OscillatorInit:
  5984                           	callstack 24
  5985   0029DA                     
  5986                           ;Config.c: 12:     OSCCONbits.SCS0 = 1;
  5987   0029DA  80D3               	bsf	211,0,c	;volatile
  5988                           
  5989                           ;Config.c: 13:     OSCCONbits.SCS1 = 1;
  5990   0029DC  82D3               	bsf	211,1,c	;volatile
  5991                           
  5992                           ;Config.c: 14:     OSCCONbits.IRCF0 = 1;
  5993   0029DE  88D3               	bsf	211,4,c	;volatile
  5994                           
  5995                           ;Config.c: 15:     OSCCONbits.IRCF1 = 1;
  5996   0029E0  8AD3               	bsf	211,5,c	;volatile
  5997                           
  5998                           ;Config.c: 16:     OSCCONbits.IRCF2 = 1;
  5999   0029E2  8CD3               	bsf	211,6,c	;volatile
  6000                           
  6001                           ;Config.c: 17:     OSCTUNEbits.PLLEN = 1;
  6002   0029E4  8C9B               	bsf	155,6,c	;volatile
  6003   0029E6  0012               	return		;funcret
  6004   0029E8                     __end_of_OscillatorInit:
  6005                           	callstack 0
  6006                           
  6007 ;; *************** function _OpenTimer0 *****************
  6008 ;; Defined at:
  6009 ;;		line 13 in file "Timers.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  config          1    wreg     unsigned char 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  config          1   15[COMRAM] unsigned char 
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2, status,0
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6023 ;;      Params:         0       0       0       0       0       0       0
  6024 ;;      Locals:         1       0       0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0
  6026 ;;      Totals:         1       0       0       0       0       0       0
  6027 ;;Total ram usage:        1 bytes
  6028 ;; Hardware stack levels used: 1
  6029 ;; Hardware stack levels required when called: 5
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_DeviceInit
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text34
  6038   002852                     __ptext34:
  6039                           	callstack 0
  6040   002852                     _OpenTimer0:
  6041                           	callstack 24
  6042                           
  6043                           ;incstack = 0
  6044                           ;OpenTimer0@config stored from wreg
  6045   002852  6E58               	movwf	OpenTimer0@config^0,c
  6046   002854                     
  6047                           ;Timers.c: 13: void OpenTimer0(unsigned char config);Timers.c: 14: {;Timers.c: 15:     T
      +                          0CON = (0x7f & config);
  6048   002854  5058               	movf	OpenTimer0@config^0,w,c
  6049   002856  0B7F               	andlw	127
  6050   002858  6ED5               	movwf	213,c	;volatile
  6051   00285A                     
  6052                           ;Timers.c: 16:     TMR0H = 0;
  6053   00285A  0E00               	movlw	0
  6054   00285C  6ED7               	movwf	215,c	;volatile
  6055   00285E                     
  6056                           ;Timers.c: 17:     TMR0L = 0;
  6057   00285E  0E00               	movlw	0
  6058   002860  6ED6               	movwf	214,c	;volatile
  6059   002862                     
  6060                           ;Timers.c: 18:     INTCONbits.TMR0IF = 0;
  6061   002862  94F2               	bcf	242,2,c	;volatile
  6062   002864                     
  6063                           ;Timers.c: 20:     if(config&0x80)
  6064   002864  AE58               	btfss	OpenTimer0@config^0,7,c
  6065   002866  EF37  F014         	goto	u3781
  6066   00286A  EF39  F014         	goto	u3780
  6067   00286E                     u3781:
  6068   00286E  EF3C  F014         	goto	l448
  6069   002872                     u3780:
  6070   002872                     
  6071                           ;Timers.c: 21:         INTCONbits.TMR0IE = 1;
  6072   002872  8AF2               	bsf	242,5,c	;volatile
  6073   002874  EF3D  F014         	goto	l450
  6074   002878                     l448:
  6075                           
  6076                           ;Timers.c: 23:         INTCONbits.TMR0IE = 0;
  6077   002878  9AF2               	bcf	242,5,c	;volatile
  6078   00287A                     l450:
  6079   00287A  0012               	return		;funcret
  6080   00287C                     __end_of_OpenTimer0:
  6081                           	callstack 0
  6082                           
  6083 ;; *************** function _OpenDisplay *****************
  6084 ;; Defined at:
  6085 ;;		line 9 in file "Display.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;		None
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  i               1   15[COMRAM] unsigned char 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  1    wreg      void 
  6092 ;; Registers used:
  6093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6099 ;;      Params:         0       0       0       0       0       0       0
  6100 ;;      Locals:         1       0       0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0
  6102 ;;      Totals:         1       0       0       0       0       0       0
  6103 ;;Total ram usage:        1 bytes
  6104 ;; Hardware stack levels used: 1
  6105 ;; Hardware stack levels required when called: 6
  6106 ;; This function calls:
  6107 ;;		_M74HC595Init
  6108 ;; This function is called by:
  6109 ;;		_DeviceInit
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text35
  6114   0024B2                     __ptext35:
  6115                           	callstack 0
  6116   0024B2                     _OpenDisplay:
  6117                           	callstack 23
  6118   0024B2                     
  6119                           ;Display.c: 12:     TRISCbits.TRISC2 = 0;
  6120   0024B2  9494               	bcf	148,2,c	;volatile
  6121                           
  6122                           ;Display.c: 13:     TRISCbits.TRISC1 = 0;
  6123   0024B4  9294               	bcf	148,1,c	;volatile
  6124                           
  6125                           ;Display.c: 14:     TRISCbits.TRISC0 = 0;
  6126   0024B6  9094               	bcf	148,0,c	;volatile
  6127                           
  6128                           ;Display.c: 15:     TRISCbits.TRISC5 = 0;
  6129   0024B8  9A94               	bcf	148,5,c	;volatile
  6130                           
  6131                           ;Display.c: 16:     TRISBbits.TRISB1 = 0;
  6132   0024BA  9293               	bcf	147,1,c	;volatile
  6133                           
  6134                           ;Display.c: 17:     TRISBbits.TRISB5 = 0;
  6135   0024BC  9A93               	bcf	147,5,c	;volatile
  6136                           
  6137                           ;Display.c: 18:     TRISDbits.TRISD7 = 0;
  6138   0024BE  9E95               	bcf	149,7,c	;volatile
  6139                           
  6140                           ;Display.c: 19:     TRISBbits.TRISB0 = 0;
  6141   0024C0  9093               	bcf	147,0,c	;volatile
  6142                           
  6143                           ;Display.c: 21:     LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATCbits.LATC5 = 
      +                          LATBbits.LATB1 = LATBbits.LATB5 = LATDbits.LATD7 = LATBbits.LATB0 = 1;
  6144   0024C2  808A               	bsf	138,0,c	;volatile
  6145   0024C4  8E8C               	bsf	140,7,c	;volatile
  6146   0024C6  8A8A               	bsf	138,5,c	;volatile
  6147   0024C8  828A               	bsf	138,1,c	;volatile
  6148   0024CA  8A8B               	bsf	139,5,c	;volatile
  6149   0024CC  808B               	bsf	139,0,c	;volatile
  6150   0024CE  828B               	bsf	139,1,c	;volatile
  6151   0024D0  848B               	bsf	139,2,c	;volatile
  6152   0024D2                     
  6153                           ;Display.c: 23:     M74HC595Init();
  6154   0024D2  ECD4  F014         	call	_M74HC595Init	;wreg free
  6155   0024D6                     
  6156                           ;Display.c: 26:     for( unsigned char i = 0; i < 7 + 1; i++ ){
  6157   0024D6  0E00               	movlw	0
  6158   0024D8  6E58               	movwf	OpenDisplay@i^0,c
  6159   0024DA                     l6193:
  6160                           
  6161                           ;Display.c: 27:         blink_pos[ i ] = 0;
  6162   0024DA  0E80               	movlw	low _blink_pos
  6163   0024DC  2458               	addwf	OpenDisplay@i^0,w,c
  6164   0024DE  6ED9               	movwf	fsr2l,c
  6165   0024E0  6ADA               	clrf	fsr2h,c
  6166   0024E2  0E00               	movlw	high _blink_pos
  6167   0024E4  22DA               	addwfc	fsr2h,f,c
  6168   0024E6  6ADF               	clrf	indf2,c
  6169                           
  6170                           ;Display.c: 28:         display_datas[ i ] = 0xff;
  6171   0024E8  0E88               	movlw	low _display_datas
  6172   0024EA  2458               	addwf	OpenDisplay@i^0,w,c
  6173   0024EC  6ED9               	movwf	fsr2l,c
  6174   0024EE  6ADA               	clrf	fsr2h,c
  6175   0024F0  0E00               	movlw	high _display_datas
  6176   0024F2  22DA               	addwfc	fsr2h,f,c
  6177   0024F4  0EFF               	movlw	255
  6178   0024F6  6EDF               	movwf	indf2,c
  6179   0024F8                     
  6180                           ;Display.c: 29:     }
  6181   0024F8  2A58               	incf	OpenDisplay@i^0,f,c
  6182   0024FA  0E07               	movlw	7
  6183   0024FC  6458               	cpfsgt	OpenDisplay@i^0,c
  6184   0024FE  EF83  F012         	goto	u3791
  6185   002502  EF85  F012         	goto	u3790
  6186   002506                     u3791:
  6187   002506  EF6D  F012         	goto	l6193
  6188   00250A                     u3790:
  6189   00250A                     
  6190                           ;Display.c: 31:     display_cnt = 0; blink_cnt = 0; blink_enable_flg = 0;
  6191   00250A  0E00               	movlw	0
  6192   00250C  6E27               	movwf	_display_cnt^0,c
  6193   00250E  0E00               	movlw	0
  6194   002510  6E26               	movwf	_blink_cnt^0,c
  6195   002512  0E00               	movlw	0
  6196   002514  6E28               	movwf	_blink_enable_flg^0,c
  6197                           
  6198                           ;Display.c: 32:     BLINK_TIME = 300;
  6199   002516  0E01               	movlw	1
  6200   002518  6E0C               	movwf	(_BLINK_TIME+1)^0,c
  6201   00251A  0E2C               	movlw	44
  6202   00251C  6E0B               	movwf	_BLINK_TIME^0,c
  6203   00251E  0012               	return		;funcret
  6204   002520                     __end_of_OpenDisplay:
  6205                           	callstack 0
  6206                           
  6207 ;; *************** function _M74HC595Init *****************
  6208 ;; Defined at:
  6209 ;;		line 11 in file "M74HC595.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;		None
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;		None
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  1    wreg      void 
  6216 ;; Registers used:
  6217 ;;		None
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6223 ;;      Params:         0       0       0       0       0       0       0
  6224 ;;      Locals:         0       0       0       0       0       0       0
  6225 ;;      Temps:          0       0       0       0       0       0       0
  6226 ;;      Totals:         0       0       0       0       0       0       0
  6227 ;;Total ram usage:        0 bytes
  6228 ;; Hardware stack levels used: 1
  6229 ;; Hardware stack levels required when called: 5
  6230 ;; This function calls:
  6231 ;;		Nothing
  6232 ;; This function is called by:
  6233 ;;		_OpenDisplay
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text36
  6238   0029A8                     __ptext36:
  6239                           	callstack 0
  6240   0029A8                     _M74HC595Init:
  6241                           	callstack 23
  6242   0029A8                     
  6243                           ;M74HC595.c: 14:     TRISAbits.TRISA0 = 0;
  6244   0029A8  9092               	bcf	146,0,c	;volatile
  6245                           
  6246                           ;M74HC595.c: 15:     TRISAbits.TRISA1 = 0;
  6247   0029AA  9292               	bcf	146,1,c	;volatile
  6248                           
  6249                           ;M74HC595.c: 16:     TRISAbits.TRISA3 = 0;
  6250   0029AC  9692               	bcf	146,3,c	;volatile
  6251                           
  6252                           ;M74HC595.c: 17:     TRISAbits.TRISA5 = 0;
  6253   0029AE  9A92               	bcf	146,5,c	;volatile
  6254                           
  6255                           ;M74HC595.c: 19:     PORTAbits.RA0 = 0;
  6256   0029B0  9080               	bcf	128,0,c	;volatile
  6257                           
  6258                           ;M74HC595.c: 20:     PORTAbits.RA1 = 0;
  6259   0029B2  9280               	bcf	128,1,c	;volatile
  6260                           
  6261                           ;M74HC595.c: 21:     PORTAbits.RA3 = 0;
  6262   0029B4  9680               	bcf	128,3,c	;volatile
  6263                           
  6264                           ;M74HC595.c: 22:     PORTAbits.RA5 = 0;
  6265   0029B6  9A80               	bcf	128,5,c	;volatile
  6266   0029B8  0012               	return		;funcret
  6267   0029BA                     __end_of_M74HC595Init:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function _OpenCounter *****************
  6271 ;; Defined at:
  6272 ;;		line 6 in file "Counter.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6286 ;;      Params:         0       0       0       0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0
  6289 ;;      Totals:         0       0       0       0       0       0       0
  6290 ;;Total ram usage:        0 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 5
  6293 ;; This function calls:
  6294 ;;		Nothing
  6295 ;; This function is called by:
  6296 ;;		_DeviceInit
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text37
  6301   00267C                     __ptext37:
  6302                           	callstack 0
  6303   00267C                     _OpenCounter:
  6304                           	callstack 24
  6305   00267C                     
  6306                           ;Counter.c: 8:     counter_down_hour = 0;
  6307   00267C  0E00               	movlw	0
  6308   00267E  6E37               	movwf	_counter_down_hour^0,c
  6309                           
  6310                           ;Counter.c: 9:     counter_down_minute = 0;
  6311   002680  0E00               	movlw	0
  6312   002682  6E36               	movwf	_counter_down_minute^0,c
  6313                           
  6314                           ;Counter.c: 10:     counter_down_second = 0;
  6315   002684  0E00               	movlw	0
  6316   002686  6E35               	movwf	_counter_down_second^0,c
  6317                           
  6318                           ;Counter.c: 12:     counter_down_set_hour = 0;
  6319   002688  0E00               	movlw	0
  6320   00268A  6E34               	movwf	_counter_down_set_hour^0,c
  6321                           
  6322                           ;Counter.c: 13:     counter_down_set_minute = 0;
  6323   00268C  0E00               	movlw	0
  6324   00268E  6E33               	movwf	_counter_down_set_minute^0,c
  6325                           
  6326                           ;Counter.c: 14:     counter_down_set_second = 0;
  6327   002690  0E00               	movlw	0
  6328   002692  6E32               	movwf	_counter_down_set_second^0,c
  6329                           
  6330                           ;Counter.c: 16:     counter_up_hour = 0;
  6331   002694  0E00               	movlw	0
  6332   002696  6E31               	movwf	_counter_up_hour^0,c
  6333                           
  6334                           ;Counter.c: 17:     counter_up_minute = 0;
  6335   002698  0E00               	movlw	0
  6336   00269A  6E30               	movwf	_counter_up_minute^0,c
  6337                           
  6338                           ;Counter.c: 18:     counter_up_second = 0;
  6339   00269C  0E00               	movlw	0
  6340   00269E  6E2F               	movwf	_counter_up_second^0,c
  6341                           
  6342                           ;Counter.c: 20:     counter_enable_flg = 0;
  6343   0026A0  0E00               	movlw	0
  6344   0026A2  6E2E               	movwf	_counter_enable_flg^0,c
  6345                           
  6346                           ;Counter.c: 21:     counter_skip_flg = 0;
  6347   0026A4  0E00               	movlw	0
  6348   0026A6  6E2C               	movwf	_counter_skip_flg^0,c
  6349                           
  6350                           ;Counter.c: 22:     counter_direction_flg = 1;
  6351   0026A8  0E01               	movlw	1
  6352   0026AA  6E2D               	movwf	_counter_direction_flg^0,c
  6353                           
  6354                           ;Counter.c: 23:     counter_seting_flg = 0;
  6355   0026AC  0E00               	movlw	0
  6356   0026AE  6E2B               	movwf	_counter_seting_flg^0,c
  6357                           
  6358                           ;Counter.c: 24:     counter_down_comp_flg = 0;
  6359   0026B0  0E00               	movlw	0
  6360   0026B2  6E2A               	movwf	_counter_down_comp_flg^0,c
  6361                           
  6362                           ;Counter.c: 26:     counter_down_comp_cnt = 0;
  6363   0026B4  0E00               	movlw	0
  6364   0026B6  6E29               	movwf	_counter_down_comp_cnt^0,c
  6365   0026B8                     
  6366                           ;Counter.c: 28:     TRISBbits.TRISB2 = 1;
  6367   0026B8  8493               	bsf	147,2,c	;volatile
  6368   0026BA                     
  6369                           ;Counter.c: 29:     INTCON3bits.INT2IP = 0;
  6370   0026BA  9EF0               	bcf	240,7,c	;volatile
  6371   0026BC                     
  6372                           ;Counter.c: 30:     INTCON3bits.INT2IF = 0;
  6373   0026BC  92F0               	bcf	240,1,c	;volatile
  6374   0026BE                     
  6375                           ;Counter.c: 31:     INTCON3bits.INT2IE = 1;
  6376   0026BE  88F0               	bsf	240,4,c	;volatile
  6377   0026C0                     
  6378                           ;Counter.c: 32:     INTCON2bits.INTEDG2 = 1;
  6379   0026C0  88F1               	bsf	241,4,c	;volatile
  6380   0026C2  0012               	return		;funcret
  6381   0026C4                     __end_of_OpenCounter:
  6382                           	callstack 0
  6383                           
  6384 ;; *************** function _OpenButtons *****************
  6385 ;; Defined at:
  6386 ;;		line 10 in file "Buttons.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;		None
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;		None
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  1    wreg      void 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6400 ;;      Params:         0       0       0       0       0       0       0
  6401 ;;      Locals:         0       0       0       0       0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0
  6403 ;;      Totals:         0       0       0       0       0       0       0
  6404 ;;Total ram usage:        0 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; Hardware stack levels required when called: 5
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_DeviceInit
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text38
  6415   00243C                     __ptext38:
  6416                           	callstack 0
  6417   00243C                     _OpenButtons:
  6418                           	callstack 24
  6419   00243C                     
  6420                           ;Buttons.c: 12:     TRISAbits.TRISA7 = 1;
  6421   00243C  8E92               	bsf	146,7,c	;volatile
  6422                           
  6423                           ;Buttons.c: 13:     TRISAbits.TRISA4 = 1;
  6424   00243E  8892               	bsf	146,4,c	;volatile
  6425                           
  6426                           ;Buttons.c: 14:     TRISAbits.TRISA6 = 1;
  6427   002440  8C92               	bsf	146,6,c	;volatile
  6428                           
  6429                           ;Buttons.c: 15:     TRISBbits.TRISB4 = 1;
  6430   002442  8893               	bsf	147,4,c	;volatile
  6431                           
  6432                           ;Buttons.c: 16:     TRISDbits.TRISD6 = 1;
  6433   002444  8C95               	bsf	149,6,c	;volatile
  6434   002446                     
  6435                           ;Buttons.c: 18:     BTN_CLICK_STATE = 0; BTN_CLICK_EVENT = 0;
  6436   002446  0E00               	movlw	0
  6437   002448  6E25               	movwf	_BTN_CLICK_STATE^0,c
  6438   00244A  0E00               	movlw	0
  6439   00244C  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  6440                           
  6441                           ;Buttons.c: 20:     hour_btn_pressed_cnt = 0; up_btn_pressed_cnt = 0; down_btn_pressed_c
      +                          nt = 0; sel_btn_pressed_cnt = 0; reset_btn_pressed_cnt = 0;
  6442   00244E  0E00               	movlw	0
  6443   002450  6E0A               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  6444   002452  0E00               	movlw	0
  6445   002454  6E09               	movwf	_hour_btn_pressed_cnt^0,c
  6446   002456  0E00               	movlw	0
  6447   002458  6E08               	movwf	(_up_btn_pressed_cnt+1)^0,c
  6448   00245A  0E00               	movlw	0
  6449   00245C  6E07               	movwf	_up_btn_pressed_cnt^0,c
  6450   00245E  0E00               	movlw	0
  6451   002460  6E06               	movwf	(_down_btn_pressed_cnt+1)^0,c
  6452   002462  0E00               	movlw	0
  6453   002464  6E05               	movwf	_down_btn_pressed_cnt^0,c
  6454   002466  0E00               	movlw	0
  6455   002468  6E04               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  6456   00246A  0E00               	movlw	0
  6457   00246C  6E03               	movwf	_sel_btn_pressed_cnt^0,c
  6458   00246E  0E00               	movlw	0
  6459   002470  6E02               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  6460   002472  0E00               	movlw	0
  6461   002474  6E01               	movwf	_reset_btn_pressed_cnt^0,c
  6462                           
  6463                           ;Buttons.c: 21:     hour_btn_released_cnt = 0; up_btn_released_cnt = 0; down_btn_release
      +                          d_cnt = 0; sel_btn_released_cnt = 0; reset_btn_released_cnt = 0;
  6464   002476  0E00               	movlw	0
  6465   002478  0100               	movlb	0	; () banked
  6466   00247A  6FC7               	movwf	(_hour_btn_released_cnt+1)& (0+255),b
  6467   00247C  0E00               	movlw	0
  6468   00247E  6FC6               	movwf	_hour_btn_released_cnt& (0+255),b
  6469   002480  0E00               	movlw	0
  6470   002482  6FC5               	movwf	(_up_btn_released_cnt+1)& (0+255),b
  6471   002484  0E00               	movlw	0
  6472   002486  6FC4               	movwf	_up_btn_released_cnt& (0+255),b
  6473   002488  0E00               	movlw	0
  6474   00248A  6FC3               	movwf	(_down_btn_released_cnt+1)& (0+255),b
  6475   00248C  0E00               	movlw	0
  6476   00248E  6FC2               	movwf	_down_btn_released_cnt& (0+255),b
  6477   002490  0E00               	movlw	0
  6478   002492  6FC1               	movwf	(_sel_btn_released_cnt+1)& (0+255),b
  6479   002494  0E00               	movlw	0
  6480   002496  6FC0               	movwf	_sel_btn_released_cnt& (0+255),b
  6481   002498  0E00               	movlw	0
  6482   00249A  6FBF               	movwf	(_reset_btn_released_cnt+1)& (0+255),b
  6483   00249C  0E00               	movlw	0
  6484   00249E  6FBE               	movwf	_reset_btn_released_cnt& (0+255),b
  6485                           
  6486                           ;Buttons.c: 22:     continue_pressed_cnt = 0;
  6487   0024A0  0E00               	movlw	0
  6488   0024A2  6FBD               	movwf	(_continue_pressed_cnt+1)& (0+255),b
  6489   0024A4  0E00               	movlw	0
  6490   0024A6  6FBC               	movwf	_continue_pressed_cnt& (0+255),b
  6491                           
  6492                           ;Buttons.c: 24:     btn_press_verify_flg = 0; btn_long_press_verify_flg = 0;
  6493   0024A8  0E00               	movlw	0
  6494   0024AA  6E23               	movwf	_btn_press_verify_flg^0,c
  6495   0024AC  0E00               	movlw	0
  6496   0024AE  6E22               	movwf	_btn_long_press_verify_flg^0,c
  6497   0024B0                     
  6498                           ; BSR set to: 0
  6499   0024B0  0012               	return		;funcret
  6500   0024B2                     __end_of_OpenButtons:
  6501                           	callstack 0
  6502                           
  6503 ;; *************** function _Open1USART *****************
  6504 ;; Defined at:
  6505 ;;		line 4 in file "Uart.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  config          1    wreg     unsigned char 
  6508 ;;  spbrg           2   15[COMRAM] unsigned int 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;  config          1   17[COMRAM] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6520 ;;      Params:         2       0       0       0       0       0       0
  6521 ;;      Locals:         1       0       0       0       0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0
  6523 ;;      Totals:         3       0       0       0       0       0       0
  6524 ;;Total ram usage:        3 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; Hardware stack levels required when called: 5
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_DeviceInit
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text39
  6535   0021BA                     __ptext39:
  6536                           	callstack 0
  6537   0021BA                     _Open1USART:
  6538                           	callstack 24
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;incstack = 0
  6542                           ;Open1USART@config stored from wreg
  6543   0021BA  6E5A               	movwf	Open1USART@config^0,c
  6544   0021BC                     
  6545                           ;Uart.c: 5:     TXSTA1 = 0;
  6546   0021BC  0E00               	movlw	0
  6547   0021BE  6EAC               	movwf	172,c	;volatile
  6548                           
  6549                           ;Uart.c: 6:     RCSTA1 = 0;
  6550   0021C0  0E00               	movlw	0
  6551   0021C2  6EAB               	movwf	171,c	;volatile
  6552   0021C4                     
  6553                           ;Uart.c: 8:     if(config&0x01)
  6554   0021C4  A05A               	btfss	Open1USART@config^0,0,c
  6555   0021C6  EFE7  F010         	goto	u3821
  6556   0021CA  EFE9  F010         	goto	u3820
  6557   0021CE                     u3821:
  6558   0021CE  EFEA  F010         	goto	l6219
  6559   0021D2                     u3820:
  6560   0021D2                     
  6561                           ;Uart.c: 9:         TXSTA1bits.SYNC = 1;
  6562   0021D2  88AC               	bsf	172,4,c	;volatile
  6563   0021D4                     l6219:
  6564                           
  6565                           ;Uart.c: 11:     if(config&0x02)
  6566   0021D4  A25A               	btfss	Open1USART@config^0,1,c
  6567   0021D6  EFEF  F010         	goto	u3831
  6568   0021DA  EFF1  F010         	goto	u3830
  6569   0021DE                     u3831:
  6570   0021DE  EFF3  F010         	goto	l6223
  6571   0021E2                     u3830:
  6572   0021E2                     
  6573                           ;Uart.c: 12:     {;Uart.c: 13:         TXSTA1bits.TX9 = 1;
  6574   0021E2  8CAC               	bsf	172,6,c	;volatile
  6575                           
  6576                           ;Uart.c: 14:         RCSTA1bits.RX9 = 1;
  6577   0021E4  8CAB               	bsf	171,6,c	;volatile
  6578   0021E6                     l6223:
  6579                           
  6580                           ;Uart.c: 17:     if(config&0x04)
  6581   0021E6  A45A               	btfss	Open1USART@config^0,2,c
  6582   0021E8  EFF8  F010         	goto	u3841
  6583   0021EC  EFFA  F010         	goto	u3840
  6584   0021F0                     u3841:
  6585   0021F0  EFFB  F010         	goto	l6227
  6586   0021F4                     u3840:
  6587   0021F4                     
  6588                           ;Uart.c: 18:         TXSTA1bits.CSRC = 1;
  6589   0021F4  8EAC               	bsf	172,7,c	;volatile
  6590   0021F6                     l6227:
  6591                           
  6592                           ;Uart.c: 20:     if(config&0x08)
  6593   0021F6  A65A               	btfss	Open1USART@config^0,3,c
  6594   0021F8  EF00  F011         	goto	u3851
  6595   0021FC  EF02  F011         	goto	u3850
  6596   002200                     u3851:
  6597   002200  EF05  F011         	goto	l1736
  6598   002204                     u3850:
  6599   002204                     
  6600                           ;Uart.c: 21:         RCSTA1bits.CREN = 1;
  6601   002204  88AB               	bsf	171,4,c	;volatile
  6602   002206  EF06  F011         	goto	l6231
  6603   00220A                     l1736:
  6604                           
  6605                           ;Uart.c: 23:         RCSTA1bits.SREN = 1;
  6606   00220A  8AAB               	bsf	171,5,c	;volatile
  6607   00220C                     l6231:
  6608                           
  6609                           ;Uart.c: 25:     if(config&0x10)
  6610   00220C  A85A               	btfss	Open1USART@config^0,4,c
  6611   00220E  EF0B  F011         	goto	u3861
  6612   002212  EF0D  F011         	goto	u3860
  6613   002216                     u3861:
  6614   002216  EF10  F011         	goto	l1738
  6615   00221A                     u3860:
  6616   00221A                     
  6617                           ;Uart.c: 26:         TXSTA1bits.BRGH = 1;
  6618   00221A  84AC               	bsf	172,2,c	;volatile
  6619   00221C  EF11  F011         	goto	l6235
  6620   002220                     l1738:
  6621                           
  6622                           ;Uart.c: 28:         TXSTA1bits.BRGH = 0;
  6623   002220  94AC               	bcf	172,2,c	;volatile
  6624   002222                     l6235:
  6625                           
  6626                           ;Uart.c: 30:     if(config&0x40)
  6627   002222  AC5A               	btfss	Open1USART@config^0,6,c
  6628   002224  EF16  F011         	goto	u3871
  6629   002228  EF18  F011         	goto	u3870
  6630   00222C                     u3871:
  6631   00222C  EF1B  F011         	goto	l1740
  6632   002230                     u3870:
  6633   002230                     
  6634                           ;Uart.c: 31:         PIE1bits.RC1IE = 1;
  6635   002230  8A9D               	bsf	157,5,c	;volatile
  6636   002232  EF1C  F011         	goto	l6239
  6637   002236                     l1740:
  6638                           
  6639                           ;Uart.c: 33:         PIE1bits.RC1IE = 0;
  6640   002236  9A9D               	bcf	157,5,c	;volatile
  6641   002238                     l6239:
  6642                           
  6643                           ;Uart.c: 35:     if(config&0x80)
  6644   002238  AE5A               	btfss	Open1USART@config^0,7,c
  6645   00223A  EF21  F011         	goto	u3881
  6646   00223E  EF23  F011         	goto	u3880
  6647   002242                     u3881:
  6648   002242  EF26  F011         	goto	l1742
  6649   002246                     u3880:
  6650   002246                     
  6651                           ;Uart.c: 36:         PIE1bits.TX1IE = 1;
  6652   002246  889D               	bsf	157,4,c	;volatile
  6653   002248  EF27  F011         	goto	l1743
  6654   00224C                     l1742:
  6655                           
  6656                           ;Uart.c: 38:         PIE1bits.TX1IE = 0;
  6657   00224C  989D               	bcf	157,4,c	;volatile
  6658   00224E                     l1743:
  6659                           
  6660                           ;Uart.c: 40:     SPBRG1 = spbrg;
  6661   00224E  C058  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  6662                           
  6663                           ;Uart.c: 42:     TXSTA1bits.TXEN = 1;
  6664   002252  8AAC               	bsf	172,5,c	;volatile
  6665                           
  6666                           ;Uart.c: 43:     RCSTA1bits.SPEN = 1;
  6667   002254  8EAB               	bsf	171,7,c	;volatile
  6668                           
  6669                           ;Uart.c: 44:     TRISCbits.TRISC6 = 0; TRISCbits.TRISC7 = 1;
  6670   002256  9C94               	bcf	148,6,c	;volatile
  6671   002258  8E94               	bsf	148,7,c	;volatile
  6672                           
  6673                           ;Uart.c: 45:     if(TXSTA1bits.SYNC && !TXSTA1bits.CSRC)
  6674   00225A  A8AC               	btfss	172,4,c	;volatile
  6675   00225C  EF32  F011         	goto	u3891
  6676   002260  EF34  F011         	goto	u3890
  6677   002264                     u3891:
  6678   002264  EF3C  F011         	goto	l1745
  6679   002268                     u3890:
  6680   002268  BEAC               	btfsc	172,7,c	;volatile
  6681   00226A  EF39  F011         	goto	u3901
  6682   00226E  EF3B  F011         	goto	u3900
  6683   002272                     u3901:
  6684   002272  EF3C  F011         	goto	l1745
  6685   002276                     u3900:
  6686   002276                     
  6687                           ;Uart.c: 46:         TRISCbits.TRISC6 = 1;
  6688   002276  8C94               	bsf	148,6,c	;volatile
  6689   002278                     l1745:
  6690   002278  0012               	return		;funcret
  6691   00227A                     __end_of_Open1USART:
  6692                           	callstack 0
  6693                           
  6694 ;; *************** function _InitValue *****************
  6695 ;; Defined at:
  6696 ;;		line 161 in file "Main.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      void 
  6703 ;; Registers used:
  6704 ;;		wreg, status,2, status,0
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6710 ;;      Params:         0       0       0       0       0       0       0
  6711 ;;      Locals:         0       0       0       0       0       0       0
  6712 ;;      Temps:          0       0       0       0       0       0       0
  6713 ;;      Totals:         0       0       0       0       0       0       0
  6714 ;;Total ram usage:        0 bytes
  6715 ;; Hardware stack levels used: 1
  6716 ;; Hardware stack levels required when called: 5
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_DeviceInit
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text40
  6725   0027F6                     __ptext40:
  6726                           	callstack 0
  6727   0027F6                     _InitValue:
  6728                           	callstack 24
  6729   0027F6                     
  6730                           ;Main.c: 162:     if( SYSTEM_STATE_FLG == 100 ){
  6731   0027F6  0E64               	movlw	100
  6732   0027F8  186F               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  6733   0027FA  A4D8               	btfss	status,2,c
  6734   0027FC  EF02  F014         	goto	u3801
  6735   002800  EF04  F014         	goto	u3800
  6736   002804                     u3801:
  6737   002804  EF06  F014         	goto	l6209
  6738   002808                     u3800:
  6739   002808  EF13  F014         	goto	l369
  6740   00280C                     l6209:
  6741   00280C  0EC8               	movlw	200
  6742   00280E  186F               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  6743   002810  A4D8               	btfss	status,2,c
  6744   002812  EF0D  F014         	goto	u3811
  6745   002816  EF0F  F014         	goto	u3810
  6746   00281A                     u3811:
  6747   00281A  EF13  F014         	goto	l369
  6748   00281E                     u3810:
  6749   00281E                     
  6750                           ;Main.c: 175:         counter_enable_flg = 0; counter_skip_flg = 0;
  6751   00281E  0E00               	movlw	0
  6752   002820  6E2E               	movwf	_counter_enable_flg^0,c
  6753   002822  0E00               	movlw	0
  6754   002824  6E2C               	movwf	_counter_skip_flg^0,c
  6755   002826                     l369:
  6756   002826  0012               	return		;funcret
  6757   002828                     __end_of_InitValue:
  6758                           	callstack 0
  6759                           
  6760 ;; *************** function _EnableAllInterrupts *****************
  6761 ;; Defined at:
  6762 ;;		line 65 in file "Interrupts.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;		None
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;		None
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1    wreg      void 
  6769 ;; Registers used:
  6770 ;;		None
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6776 ;;      Params:         0       0       0       0       0       0       0
  6777 ;;      Locals:         0       0       0       0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0
  6779 ;;      Totals:         0       0       0       0       0       0       0
  6780 ;;Total ram usage:        0 bytes
  6781 ;; Hardware stack levels used: 1
  6782 ;; Hardware stack levels required when called: 5
  6783 ;; This function calls:
  6784 ;;		Nothing
  6785 ;; This function is called by:
  6786 ;;		_DeviceInit
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text41
  6791   002A0E                     __ptext41:
  6792                           	callstack 0
  6793   002A0E                     _EnableAllInterrupts:
  6794                           	callstack 24
  6795   002A0E                     
  6796                           ;Interrupts.c: 66:     (INTCONbits.GIE = 1);
  6797   002A0E  8EF2               	bsf	242,7,c	;volatile
  6798   002A10  0012               	return		;funcret
  6799   002A12                     __end_of_EnableAllInterrupts:
  6800                           	callstack 0
  6801                           
  6802 ;; *************** function _Ds1307Init *****************
  6803 ;; Defined at:
  6804 ;;		line 11 in file "DS1307.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;		None
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;		None
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  1    wreg      void 
  6811 ;; Registers used:
  6812 ;;		wreg, status,2, cstack
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6818 ;;      Params:         0       0       0       0       0       0       0
  6819 ;;      Locals:         0       0       0       0       0       0       0
  6820 ;;      Temps:          0       0       0       0       0       0       0
  6821 ;;      Totals:         0       0       0       0       0       0       0
  6822 ;;Total ram usage:        0 bytes
  6823 ;; Hardware stack levels used: 1
  6824 ;; Hardware stack levels required when called: 6
  6825 ;; This function calls:
  6826 ;;		_I2cInit
  6827 ;; This function is called by:
  6828 ;;		_DeviceInit
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           	psect	text42
  6833   0029E8                     __ptext42:
  6834                           	callstack 0
  6835   0029E8                     _Ds1307Init:
  6836                           	callstack 23
  6837   0029E8                     
  6838                           ;DS1307.c: 15:     rtc_clock_disp_type = 1;
  6839   0029E8  0E01               	movlw	1
  6840   0029EA  6E41               	movwf	_rtc_clock_disp_type^0,c
  6841                           
  6842                           ;DS1307.c: 16:     rtc_hour_ampm_flg = 1;
  6843   0029EC  0E01               	movlw	1
  6844   0029EE  6E40               	movwf	_rtc_hour_ampm_flg^0,c
  6845   0029F0                     
  6846                           ;DS1307.c: 17:     I2cInit();
  6847   0029F0  ECA6  F014         	call	_I2cInit	;wreg free
  6848   0029F4  0012               	return		;funcret
  6849   0029F6                     __end_of_Ds1307Init:
  6850                           	callstack 0
  6851                           
  6852 ;; *************** function _I2cInit *****************
  6853 ;; Defined at:
  6854 ;;		line 10 in file "I2C.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;		None
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;		None
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6868 ;;      Params:         0       0       0       0       0       0       0
  6869 ;;      Locals:         0       0       0       0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0
  6871 ;;      Totals:         0       0       0       0       0       0       0
  6872 ;;Total ram usage:        0 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; Hardware stack levels required when called: 5
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_Ds1307Init
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text43
  6883   00294C                     __ptext43:
  6884                           	callstack 0
  6885   00294C                     _I2cInit:
  6886                           	callstack 23
  6887   00294C                     
  6888                           ;I2C.c: 12:     SSPSTATbits.SMP = 1;
  6889   00294C  8EC7               	bsf	199,7,c	;volatile
  6890                           
  6891                           ;I2C.c: 13:     SSPSTATbits.CKE = 0;
  6892   00294E  9CC7               	bcf	199,6,c	;volatile
  6893                           
  6894                           ;I2C.c: 15:     SSPCON1bits.SSPEN = 1;
  6895   002950  8AC6               	bsf	198,5,c	;volatile
  6896   002952                     
  6897                           ;I2C.c: 16:     SSPCON1bits.SSPM = 0b1000;
  6898   002952  50C6               	movf	198,w,c	;volatile
  6899   002954  0BF0               	andlw	-16
  6900   002956  0908               	iorlw	8
  6901   002958  6EC6               	movwf	198,c	;volatile
  6902                           
  6903                           ;I2C.c: 18:     SSPADD = 99;
  6904   00295A  0E63               	movlw	99
  6905   00295C  6EC8               	movwf	200,c	;volatile
  6906   00295E  0012               	return		;funcret
  6907   002960                     __end_of_I2cInit:
  6908                           	callstack 0
  6909                           
  6910 ;; *************** function _ClockSetting *****************
  6911 ;; Defined at:
  6912 ;;		line 112 in file "Main.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;		None
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;		None
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      void 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0, cstack
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6926 ;;      Params:         0       0       0       0       0       0       0
  6927 ;;      Locals:         0       0       0       0       0       0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0
  6929 ;;      Totals:         0       0       0       0       0       0       0
  6930 ;;Total ram usage:        0 bytes
  6931 ;; Hardware stack levels used: 1
  6932 ;; Hardware stack levels required when called: 6
  6933 ;; This function calls:
  6934 ;;		_MarkDisplay
  6935 ;; This function is called by:
  6936 ;;		_main
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text44
  6941   002632                     __ptext44:
  6942                           	callstack 0
  6943   002632                     _ClockSetting:
  6944                           	callstack 24
  6945   002632                     
  6946                           ;Main.c: 113:     display_datas[0] = MarkDisplay( real_rtc_data[ 2 ] >> 4 );
  6947   002632  3844               	swapf	(_real_rtc_data+2)^0,w,c
  6948   002634  0B0F               	andlw	15
  6949   002636  EC4E  F009         	call	_MarkDisplay
  6950   00263A  0100               	movlb	0	; () banked
  6951   00263C  6F88               	movwf	_display_datas& (0+255),b
  6952                           
  6953                           ;Main.c: 114:     display_datas[1] = MarkDisplay( real_rtc_data[ 2 ] % 16 );
  6954   00263E  5044               	movf	(_real_rtc_data+2)^0,w,c
  6955   002640  0B0F               	andlw	15
  6956   002642  EC4E  F009         	call	_MarkDisplay
  6957   002646  0100               	movlb	0	; () banked
  6958   002648  6F89               	movwf	(_display_datas+1)& (0+255),b
  6959                           
  6960                           ;Main.c: 115:     display_datas[2] = MarkDisplay( real_rtc_data[ 1 ] >> 4 );
  6961   00264A  3843               	swapf	(_real_rtc_data+1)^0,w,c
  6962   00264C  0B0F               	andlw	15
  6963   00264E  EC4E  F009         	call	_MarkDisplay
  6964   002652  0100               	movlb	0	; () banked
  6965   002654  6F8A               	movwf	(_display_datas+2)& (0+255),b
  6966                           
  6967                           ;Main.c: 116:     display_datas[3] = MarkDisplay( real_rtc_data[ 1 ] % 16 );
  6968   002656  5043               	movf	(_real_rtc_data+1)^0,w,c
  6969   002658  0B0F               	andlw	15
  6970   00265A  EC4E  F009         	call	_MarkDisplay
  6971   00265E  0100               	movlb	0	; () banked
  6972   002660  6F8B               	movwf	(_display_datas+3)& (0+255),b
  6973                           
  6974                           ;Main.c: 117:     display_datas[4] = MarkDisplay( real_rtc_data[ 0 ] >> 4 );
  6975   002662  3842               	swapf	_real_rtc_data^0,w,c
  6976   002664  0B0F               	andlw	15
  6977   002666  EC4E  F009         	call	_MarkDisplay
  6978   00266A  0100               	movlb	0	; () banked
  6979   00266C  6F8C               	movwf	(_display_datas+4)& (0+255),b
  6980                           
  6981                           ;Main.c: 118:     display_datas[5] = MarkDisplay( real_rtc_data[ 0 ] % 16 );
  6982   00266E  5042               	movf	_real_rtc_data^0,w,c
  6983   002670  0B0F               	andlw	15
  6984   002672  EC4E  F009         	call	_MarkDisplay
  6985   002676  0100               	movlb	0	; () banked
  6986   002678  6F8D               	movwf	(_display_datas+5)& (0+255),b
  6987   00267A                     
  6988                           ; BSR set to: 0
  6989   00267A  0012               	return		;funcret
  6990   00267C                     __end_of_ClockSetting:
  6991                           	callstack 0
  6992                           
  6993 ;; *************** function _MarkDisplay *****************
  6994 ;; Defined at:
  6995 ;;		line 82 in file "Display.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  mark            1    wreg     unsigned char 
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  mark            1   17[COMRAM] unsigned char 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  1    wreg      unsigned char 
  7002 ;; Registers used:
  7003 ;;		wreg, status,2, status,0
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7009 ;;      Params:         0       0       0       0       0       0       0
  7010 ;;      Locals:         1       0       0       0       0       0       0
  7011 ;;      Temps:          2       0       0       0       0       0       0
  7012 ;;      Totals:         3       0       0       0       0       0       0
  7013 ;;Total ram usage:        3 bytes
  7014 ;; Hardware stack levels used: 1
  7015 ;; Hardware stack levels required when called: 5
  7016 ;; This function calls:
  7017 ;;		Nothing
  7018 ;; This function is called by:
  7019 ;;		_ClockSetting
  7020 ;;		_UpdateDisplay
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           	psect	text45
  7025   00129C                     __ptext45:
  7026                           	callstack 0
  7027   00129C                     _MarkDisplay:
  7028                           	callstack 24
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;incstack = 0
  7032                           ;MarkDisplay@mark stored from wreg
  7033   00129C  6E5A               	movwf	MarkDisplay@mark^0,c
  7034   00129E                     
  7035                           ;Display.c: 85:     switch( mark ){
  7036   00129E  EFAE  F009         	goto	l9201
  7037   0012A2                     l9047:
  7038   0012A2  0EC0               	movlw	192
  7039   0012A4  EF53  F00A         	goto	l907
  7040   0012A8                     l9051:
  7041   0012A8  0EF9               	movlw	249
  7042   0012AA  EF53  F00A         	goto	l907
  7043   0012AE                     l9055:
  7044   0012AE  0EA4               	movlw	164
  7045   0012B0  EF53  F00A         	goto	l907
  7046   0012B4                     l9059:
  7047   0012B4  0EB0               	movlw	176
  7048   0012B6  EF53  F00A         	goto	l907
  7049   0012BA                     l9063:
  7050   0012BA  0E99               	movlw	153
  7051   0012BC  EF53  F00A         	goto	l907
  7052   0012C0                     l9067:
  7053   0012C0  0E92               	movlw	146
  7054   0012C2  EF53  F00A         	goto	l907
  7055   0012C6                     l9071:
  7056   0012C6  0E82               	movlw	130
  7057   0012C8  EF53  F00A         	goto	l907
  7058   0012CC                     l9075:
  7059   0012CC  0EF8               	movlw	248
  7060   0012CE  EF53  F00A         	goto	l907
  7061   0012D2                     l9079:
  7062   0012D2  0E80               	movlw	128
  7063   0012D4  EF53  F00A         	goto	l907
  7064   0012D8                     l9083:
  7065   0012D8  0E90               	movlw	144
  7066   0012DA  EF53  F00A         	goto	l907
  7067   0012DE                     l9087:
  7068   0012DE  0E88               	movlw	136
  7069   0012E0  EF53  F00A         	goto	l907
  7070   0012E4                     l9091:
  7071   0012E4  0EA0               	movlw	160
  7072   0012E6  EF53  F00A         	goto	l907
  7073   0012EA                     l9099:
  7074   0012EA  0E83               	movlw	131
  7075   0012EC  EF53  F00A         	goto	l907
  7076   0012F0                     l9103:
  7077   0012F0  0EC6               	movlw	198
  7078   0012F2  EF53  F00A         	goto	l907
  7079   0012F6                     l9107:
  7080   0012F6  0EA7               	movlw	167
  7081   0012F8  EF53  F00A         	goto	l907
  7082   0012FC                     l9115:
  7083   0012FC  0EA1               	movlw	161
  7084   0012FE  EF53  F00A         	goto	l907
  7085   001302                     l9119:
  7086   001302  0E86               	movlw	134
  7087   001304  EF53  F00A         	goto	l907
  7088   001308                     l9123:
  7089   001308  0E84               	movlw	132
  7090   00130A  EF53  F00A         	goto	l907
  7091   00130E                     l9127:
  7092   00130E  0E8E               	movlw	142
  7093   001310  EF53  F00A         	goto	l907
  7094   001314                     l9139:
  7095   001314  0E89               	movlw	137
  7096   001316  EF53  F00A         	goto	l907
  7097   00131A                     l9143:
  7098   00131A  0E8B               	movlw	139
  7099   00131C  EF53  F00A         	goto	l907
  7100   001320                     l9151:
  7101   001320  0EF1               	movlw	241
  7102   001322  EF53  F00A         	goto	l907
  7103   001326                     l9155:
  7104   001326  0EC7               	movlw	199
  7105   001328  EF53  F00A         	goto	l907
  7106   00132C                     l9159:
  7107   00132C  0EAB               	movlw	171
  7108   00132E  EF53  F00A         	goto	l907
  7109   001332                     l9167:
  7110   001332  0EA3               	movlw	163
  7111   001334  EF53  F00A         	goto	l907
  7112   001338                     l9171:
  7113   001338  0E8C               	movlw	140
  7114   00133A  EF53  F00A         	goto	l907
  7115   00133E                     l9175:
  7116   00133E  0E98               	movlw	152
  7117   001340  EF53  F00A         	goto	l907
  7118   001344                     l9179:
  7119   001344  0EAF               	movlw	175
  7120   001346  EF53  F00A         	goto	l907
  7121   00134A                     l9187:
  7122   00134A  0E87               	movlw	135
  7123   00134C  EF53  F00A         	goto	l907
  7124   001350                     l9191:
  7125   001350  0EC1               	movlw	193
  7126   001352  EF53  F00A         	goto	l907
  7127   001356                     l9195:
  7128   001356  0E91               	movlw	145
  7129   001358  EF53  F00A         	goto	l907
  7130   00135C                     l9201:
  7131   00135C  505A               	movf	MarkDisplay@mark^0,w,c
  7132   00135E  6E58               	movwf	??_MarkDisplay^0,c
  7133   001360  6A59               	clrf	(??_MarkDisplay+1)^0,c
  7134                           
  7135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7136                           ; Switch size 1, requested type "simple"
  7137                           ; Number of cases is 1, Range of values is 0 to 0
  7138                           ; switch strategies available:
  7139                           ; Name         Instructions Cycles
  7140                           ; simple_byte            4     3 (average)
  7141                           ;	Chosen strategy is simple_byte
  7142   001362  5059               	movf	(??_MarkDisplay+1)^0,w,c
  7143   001364  0A00               	xorlw	0	; case 0
  7144   001366  B4D8               	btfsc	status,2,c
  7145   001368  EFB8  F009         	goto	l9903
  7146   00136C  EF53  F00A         	goto	l907
  7147   001370                     l9903:
  7148                           
  7149                           ; Switch size 1, requested type "simple"
  7150                           ; Number of cases is 38, Range of values is 0 to 121
  7151                           ; switch strategies available:
  7152                           ; Name         Instructions Cycles
  7153                           ; simple_byte          115    58 (average)
  7154                           ;	Chosen strategy is simple_byte
  7155   001370  5058               	movf	??_MarkDisplay^0,w,c
  7156   001372  0A00               	xorlw	0	; case 0
  7157   001374  B4D8               	btfsc	status,2,c
  7158   001376  EF51  F009         	goto	l9047
  7159   00137A  0A01               	xorlw	1	; case 1
  7160   00137C  B4D8               	btfsc	status,2,c
  7161   00137E  EF54  F009         	goto	l9051
  7162   001382  0A03               	xorlw	3	; case 2
  7163   001384  B4D8               	btfsc	status,2,c
  7164   001386  EF57  F009         	goto	l9055
  7165   00138A  0A01               	xorlw	1	; case 3
  7166   00138C  B4D8               	btfsc	status,2,c
  7167   00138E  EF5A  F009         	goto	l9059
  7168   001392  0A07               	xorlw	7	; case 4
  7169   001394  B4D8               	btfsc	status,2,c
  7170   001396  EF5D  F009         	goto	l9063
  7171   00139A  0A01               	xorlw	1	; case 5
  7172   00139C  B4D8               	btfsc	status,2,c
  7173   00139E  EF60  F009         	goto	l9067
  7174   0013A2  0A03               	xorlw	3	; case 6
  7175   0013A4  B4D8               	btfsc	status,2,c
  7176   0013A6  EF63  F009         	goto	l9071
  7177   0013AA  0A01               	xorlw	1	; case 7
  7178   0013AC  B4D8               	btfsc	status,2,c
  7179   0013AE  EF66  F009         	goto	l9075
  7180   0013B2  0A0F               	xorlw	15	; case 8
  7181   0013B4  B4D8               	btfsc	status,2,c
  7182   0013B6  EF69  F009         	goto	l9079
  7183   0013BA  0A01               	xorlw	1	; case 9
  7184   0013BC  B4D8               	btfsc	status,2,c
  7185   0013BE  EF6C  F009         	goto	l9083
  7186   0013C2  0A48               	xorlw	72	; case 65
  7187   0013C4  B4D8               	btfsc	status,2,c
  7188   0013C6  EF6F  F009         	goto	l9087
  7189   0013CA  0A03               	xorlw	3	; case 66
  7190   0013CC  B4D8               	btfsc	status,2,c
  7191   0013CE  EF69  F009         	goto	l9079
  7192   0013D2  0A01               	xorlw	1	; case 67
  7193   0013D4  B4D8               	btfsc	status,2,c
  7194   0013D6  EF78  F009         	goto	l9103
  7195   0013DA  0A07               	xorlw	7	; case 68
  7196   0013DC  B4D8               	btfsc	status,2,c
  7197   0013DE  EF51  F009         	goto	l9047
  7198   0013E2  0A01               	xorlw	1	; case 69
  7199   0013E4  B4D8               	btfsc	status,2,c
  7200   0013E6  EF81  F009         	goto	l9119
  7201   0013EA  0A03               	xorlw	3	; case 70
  7202   0013EC  B4D8               	btfsc	status,2,c
  7203   0013EE  EF87  F009         	goto	l9127
  7204   0013F2  0A01               	xorlw	1	; case 71
  7205   0013F4  B4D8               	btfsc	status,2,c
  7206   0013F6  EF63  F009         	goto	l9071
  7207   0013FA  0A0F               	xorlw	15	; case 72
  7208   0013FC  B4D8               	btfsc	status,2,c
  7209   0013FE  EF8A  F009         	goto	l9139
  7210   001402  0A01               	xorlw	1	; case 73
  7211   001404  B4D8               	btfsc	status,2,c
  7212   001406  EF54  F009         	goto	l9051
  7213   00140A  0A03               	xorlw	3	; case 74
  7214   00140C  B4D8               	btfsc	status,2,c
  7215   00140E  EF90  F009         	goto	l9151
  7216   001412  0A06               	xorlw	6	; case 76
  7217   001414  B4D8               	btfsc	status,2,c
  7218   001416  EF93  F009         	goto	l9155
  7219   00141A  0A03               	xorlw	3	; case 79
  7220   00141C  B4D8               	btfsc	status,2,c
  7221   00141E  EF51  F009         	goto	l9047
  7222   001422  0A1F               	xorlw	31	; case 80
  7223   001424  B4D8               	btfsc	status,2,c
  7224   001426  EF9C  F009         	goto	l9171
  7225   00142A  0A03               	xorlw	3	; case 83
  7226   00142C  B4D8               	btfsc	status,2,c
  7227   00142E  EF60  F009         	goto	l9067
  7228   001432  0A06               	xorlw	6	; case 85
  7229   001434  B4D8               	btfsc	status,2,c
  7230   001436  EFA8  F009         	goto	l9191
  7231   00143A  0A34               	xorlw	52	; case 97
  7232   00143C  B4D8               	btfsc	status,2,c
  7233   00143E  EF72  F009         	goto	l9091
  7234   001442  0A03               	xorlw	3	; case 98
  7235   001444  B4D8               	btfsc	status,2,c
  7236   001446  EF75  F009         	goto	l9099
  7237   00144A  0A01               	xorlw	1	; case 99
  7238   00144C  B4D8               	btfsc	status,2,c
  7239   00144E  EF7B  F009         	goto	l9107
  7240   001452  0A07               	xorlw	7	; case 100
  7241   001454  B4D8               	btfsc	status,2,c
  7242   001456  EF7E  F009         	goto	l9115
  7243   00145A  0A01               	xorlw	1	; case 101
  7244   00145C  B4D8               	btfsc	status,2,c
  7245   00145E  EF84  F009         	goto	l9123
  7246   001462  0A02               	xorlw	2	; case 103
  7247   001464  B4D8               	btfsc	status,2,c
  7248   001466  EF6C  F009         	goto	l9083
  7249   00146A  0A0F               	xorlw	15	; case 104
  7250   00146C  B4D8               	btfsc	status,2,c
  7251   00146E  EF8D  F009         	goto	l9143
  7252   001472  0A06               	xorlw	6	; case 110
  7253   001474  B4D8               	btfsc	status,2,c
  7254   001476  EF96  F009         	goto	l9159
  7255   00147A  0A01               	xorlw	1	; case 111
  7256   00147C  B4D8               	btfsc	status,2,c
  7257   00147E  EF99  F009         	goto	l9167
  7258   001482  0A1E               	xorlw	30	; case 113
  7259   001484  B4D8               	btfsc	status,2,c
  7260   001486  EF9F  F009         	goto	l9175
  7261   00148A  0A03               	xorlw	3	; case 114
  7262   00148C  B4D8               	btfsc	status,2,c
  7263   00148E  EFA2  F009         	goto	l9179
  7264   001492  0A06               	xorlw	6	; case 116
  7265   001494  B4D8               	btfsc	status,2,c
  7266   001496  EFA5  F009         	goto	l9187
  7267   00149A  0A0D               	xorlw	13	; case 121
  7268   00149C  B4D8               	btfsc	status,2,c
  7269   00149E  EFAB  F009         	goto	l9195
  7270   0014A2  EF53  F00A         	goto	l907
  7271   0014A6                     l907:
  7272   0014A6  0012               	return		;funcret
  7273   0014A8                     __end_of_MarkDisplay:
  7274                           	callstack 0
  7275                           
  7276 ;; *************** function _BlinkDisable *****************
  7277 ;; Defined at:
  7278 ;;		line 117 in file "Display.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;		None
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;  i               1   15[COMRAM] unsigned char 
  7283 ;; Return value:  Size  Location     Type
  7284 ;;                  1    wreg      void 
  7285 ;; Registers used:
  7286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7292 ;;      Params:         0       0       0       0       0       0       0
  7293 ;;      Locals:         1       0       0       0       0       0       0
  7294 ;;      Temps:          0       0       0       0       0       0       0
  7295 ;;      Totals:         1       0       0       0       0       0       0
  7296 ;;Total ram usage:        1 bytes
  7297 ;; Hardware stack levels used: 1
  7298 ;; Hardware stack levels required when called: 5
  7299 ;; This function calls:
  7300 ;;		Nothing
  7301 ;; This function is called by:
  7302 ;;		_main
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           	psect	text46
  7307   0028A4                     __ptext46:
  7308                           	callstack 0
  7309   0028A4                     _BlinkDisable:
  7310                           	callstack 25
  7311   0028A4                     
  7312                           ;Display.c: 118:     for( unsigned char i = 0; i < 7; i ++ ){
  7313   0028A4  0E00               	movlw	0
  7314   0028A6  6E58               	movwf	BlinkDisable@i^0,c
  7315   0028A8                     l7197:
  7316                           
  7317                           ;Display.c: 119:         blink_pos[ i ] = 0;
  7318   0028A8  0E80               	movlw	low _blink_pos
  7319   0028AA  2458               	addwf	BlinkDisable@i^0,w,c
  7320   0028AC  6ED9               	movwf	fsr2l,c
  7321   0028AE  6ADA               	clrf	fsr2h,c
  7322   0028B0  0E00               	movlw	high _blink_pos
  7323   0028B2  22DA               	addwfc	fsr2h,f,c
  7324   0028B4  6ADF               	clrf	indf2,c
  7325   0028B6                     
  7326                           ;Display.c: 120:     }
  7327   0028B6  2A58               	incf	BlinkDisable@i^0,f,c
  7328   0028B8  0E06               	movlw	6
  7329   0028BA  6458               	cpfsgt	BlinkDisable@i^0,c
  7330   0028BC  EF62  F014         	goto	u4821
  7331   0028C0  EF64  F014         	goto	u4820
  7332   0028C4                     u4821:
  7333   0028C4  EF54  F014         	goto	l7197
  7334   0028C8                     u4820:
  7335   0028C8  0012               	return		;funcret
  7336   0028CA                     __end_of_BlinkDisable:
  7337                           	callstack 0
  7338                           
  7339 ;; *************** function _low_isr *****************
  7340 ;; Defined at:
  7341 ;;		line 55 in file "Interrupts.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;		None
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;		None
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  1    wreg      void 
  7348 ;; Registers used:
  7349 ;;		wreg, status,2, status,0, cstack
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7355 ;;      Params:         0       0       0       0       0       0       0
  7356 ;;      Locals:         0       0       0       0       0       0       0
  7357 ;;      Temps:          3       0       0       0       0       0       0
  7358 ;;      Totals:         3       0       0       0       0       0       0
  7359 ;;Total ram usage:        3 bytes
  7360 ;; Hardware stack levels used: 1
  7361 ;; Hardware stack levels required when called: 4
  7362 ;; This function calls:
  7363 ;;		_ScanCounter
  7364 ;; This function is called by:
  7365 ;;		Interrupt level 1
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	intcodelo
  7370   000018                     __pintcodelo:
  7371                           	callstack 0
  7372   000018                     _low_isr:
  7373                           	callstack 20
  7374                           
  7375                           ;incstack = 0
  7376   000018  8070               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7377   00001A  CFD8 F055          	movff	status,??_low_isr
  7378   00001E  CFE8 F056          	movff	wreg,??_low_isr+1
  7379   000022  CFE0 F057          	movff	bsr,??_low_isr+2
  7380   000026                     
  7381                           ;Interrupts.c: 57:     if( INTCON3bits.INT2IE && INTCON3bits.INT2IF ) {
  7382   000026  A8F0               	btfss	240,4,c	;volatile
  7383   000028  EF18  F000         	goto	i1u225_21
  7384   00002C  EF1A  F000         	goto	i1u225_20
  7385   000030                     i1u225_21:
  7386   000030  EF24  F000         	goto	i1l666
  7387   000034                     i1u225_20:
  7388   000034  A2F0               	btfss	240,1,c	;volatile
  7389   000036  EF1F  F000         	goto	i1u226_21
  7390   00003A  EF21  F000         	goto	i1u226_20
  7391   00003E                     i1u226_21:
  7392   00003E  EF24  F000         	goto	i1l666
  7393   000042                     i1u226_20:
  7394   000042                     
  7395                           ;Interrupts.c: 58:         INTCON3bits.INT2IF = 0;
  7396   000042  92F0               	bcf	240,1,c	;volatile
  7397   000044                     
  7398                           ;Interrupts.c: 60:         ScanCounter();
  7399   000044  ECD3  F00E         	call	_ScanCounter	;wreg free
  7400   000048                     i1l666:
  7401   000048  C057  FFE0         	movff	??_low_isr+2,bsr
  7402   00004C  C056  FFE8         	movff	??_low_isr+1,wreg
  7403   000050  C055  FFD8         	movff	??_low_isr,status
  7404   000054  9070               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7405   000056  0010               	retfie	
  7406   000058                     __end_of_low_isr:
  7407                           	callstack 0
  7408                           
  7409 ;; *************** function _ScanCounter *****************
  7410 ;; Defined at:
  7411 ;;		line 79 in file "Counter.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;		None
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;		None
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  1    wreg      void 
  7418 ;; Registers used:
  7419 ;;		wreg, status,2, status,0
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7425 ;;      Params:         0       0       0       0       0       0       0
  7426 ;;      Locals:         0       0       0       0       0       0       0
  7427 ;;      Temps:          0       0       0       0       0       0       0
  7428 ;;      Totals:         0       0       0       0       0       0       0
  7429 ;;Total ram usage:        0 bytes
  7430 ;; Hardware stack levels used: 1
  7431 ;; Hardware stack levels required when called: 3
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_low_isr
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text48
  7440   001DA6                     __ptext48:
  7441                           	callstack 0
  7442   001DA6                     _ScanCounter:
  7443                           	callstack 20
  7444   001DA6                     
  7445                           ;Counter.c: 80:     if(!counter_enable_flg) return;
  7446   001DA6  502E               	movf	_counter_enable_flg^0,w,c
  7447   001DA8  A4D8               	btfss	status,2,c
  7448   001DAA  EFD9  F00E         	goto	i1u170_21
  7449   001DAE  EFDB  F00E         	goto	i1u170_20
  7450   001DB2                     i1u170_21:
  7451   001DB2  EFDD  F00E         	goto	i1l4141
  7452   001DB6                     i1u170_20:
  7453   001DB6  EF3F  F00F         	goto	i1l779
  7454   001DBA                     i1l4141:
  7455                           
  7456                           ;Counter.c: 81:     if( counter_direction_flg == 1 ){
  7457   001DBA  042D               	decf	_counter_direction_flg^0,w,c
  7458   001DBC  A4D8               	btfss	status,2,c
  7459   001DBE  EFE3  F00E         	goto	i1u171_21
  7460   001DC2  EFE5  F00E         	goto	i1u171_20
  7461   001DC6                     i1u171_21:
  7462   001DC6  EF00  F00F         	goto	i1l4157
  7463   001DCA                     i1u171_20:
  7464   001DCA                     
  7465                           ;Counter.c: 82:         counter_up_second ++;
  7466   001DCA  2A2F               	incf	_counter_up_second^0,f,c
  7467   001DCC                     
  7468                           ;Counter.c: 83:         if( counter_up_second == 60 ){
  7469   001DCC  0E3C               	movlw	60
  7470   001DCE  182F               	xorwf	_counter_up_second^0,w,c
  7471   001DD0  A4D8               	btfss	status,2,c
  7472   001DD2  EFED  F00E         	goto	i1u172_21
  7473   001DD6  EFEF  F00E         	goto	i1u172_20
  7474   001DDA                     i1u172_21:
  7475   001DDA  EF3F  F00F         	goto	i1l779
  7476   001DDE                     i1u172_20:
  7477   001DDE                     
  7478                           ;Counter.c: 84:             counter_up_second = 0;
  7479   001DDE  0E00               	movlw	0
  7480   001DE0  6E2F               	movwf	_counter_up_second^0,c
  7481   001DE2                     
  7482                           ;Counter.c: 85:             counter_up_minute ++;
  7483   001DE2  2A30               	incf	_counter_up_minute^0,f,c
  7484   001DE4                     
  7485                           ;Counter.c: 86:             if(counter_up_minute == 60){
  7486   001DE4  0E3C               	movlw	60
  7487   001DE6  1830               	xorwf	_counter_up_minute^0,w,c
  7488   001DE8  A4D8               	btfss	status,2,c
  7489   001DEA  EFF9  F00E         	goto	i1u173_21
  7490   001DEE  EFFB  F00E         	goto	i1u173_20
  7491   001DF2                     i1u173_21:
  7492   001DF2  EF3F  F00F         	goto	i1l779
  7493   001DF6                     i1u173_20:
  7494   001DF6                     
  7495                           ;Counter.c: 87:                 counter_up_minute = 0;
  7496   001DF6  0E00               	movlw	0
  7497   001DF8  6E30               	movwf	_counter_up_minute^0,c
  7498   001DFA                     
  7499                           ;Counter.c: 88:                 counter_up_hour ++;
  7500   001DFA  2A31               	incf	_counter_up_hour^0,f,c
  7501   001DFC  EF3F  F00F         	goto	i1l779
  7502   001E00                     i1l4157:
  7503   001E00  502D               	movf	_counter_direction_flg^0,w,c
  7504   001E02  A4D8               	btfss	status,2,c
  7505   001E04  EF06  F00F         	goto	i1u174_21
  7506   001E08  EF08  F00F         	goto	i1u174_20
  7507   001E0C                     i1u174_21:
  7508   001E0C  EF3F  F00F         	goto	i1l779
  7509   001E10                     i1u174_20:
  7510   001E10                     
  7511                           ;Counter.c: 93:         if( counter_down_hour == 0 && counter_down_minute == 0 && counte
      +                          r_down_second == 0 ) {
  7512   001E10  5037               	movf	_counter_down_hour^0,w,c
  7513   001E12  A4D8               	btfss	status,2,c
  7514   001E14  EF0E  F00F         	goto	i1u175_21
  7515   001E18  EF10  F00F         	goto	i1u175_20
  7516   001E1C                     i1u175_21:
  7517   001E1C  EF28  F00F         	goto	i1l4169
  7518   001E20                     i1u175_20:
  7519   001E20  5036               	movf	_counter_down_minute^0,w,c
  7520   001E22  A4D8               	btfss	status,2,c
  7521   001E24  EF16  F00F         	goto	i1u176_21
  7522   001E28  EF18  F00F         	goto	i1u176_20
  7523   001E2C                     i1u176_21:
  7524   001E2C  EF28  F00F         	goto	i1l4169
  7525   001E30                     i1u176_20:
  7526   001E30  5035               	movf	_counter_down_second^0,w,c
  7527   001E32  A4D8               	btfss	status,2,c
  7528   001E34  EF1E  F00F         	goto	i1u177_21
  7529   001E38  EF20  F00F         	goto	i1u177_20
  7530   001E3C                     i1u177_21:
  7531   001E3C  EF28  F00F         	goto	i1l4169
  7532   001E40                     i1u177_20:
  7533   001E40                     
  7534                           ;Counter.c: 94:             counter_enable_flg = 0;
  7535   001E40  0E00               	movlw	0
  7536   001E42  6E2E               	movwf	_counter_enable_flg^0,c
  7537                           
  7538                           ;Counter.c: 95:             counter_down_comp_flg = 1; counter_down_comp_cnt = 0;
  7539   001E44  0E01               	movlw	1
  7540   001E46  6E2A               	movwf	_counter_down_comp_flg^0,c
  7541   001E48  0E00               	movlw	0
  7542   001E4A  6E29               	movwf	_counter_down_comp_cnt^0,c
  7543   001E4C  EF3F  F00F         	goto	i1l779
  7544   001E50                     i1l4169:
  7545                           
  7546                           ;Counter.c: 98:         counter_down_comp_flg = 0;
  7547   001E50  0E00               	movlw	0
  7548   001E52  6E2A               	movwf	_counter_down_comp_flg^0,c
  7549   001E54                     
  7550                           ;Counter.c: 99:         counter_down_second --;
  7551   001E54  0635               	decf	_counter_down_second^0,f,c
  7552   001E56                     
  7553                           ;Counter.c: 100:         if( counter_down_second < 0 ) {
  7554   001E56  BE35               	btfsc	_counter_down_second^0,7,c
  7555   001E58  EF32  F00F         	goto	i1u178_20
  7556   001E5C  EF30  F00F         	goto	i1u178_21
  7557   001E60                     i1u178_21:
  7558   001E60  EF3F  F00F         	goto	i1l779
  7559   001E64                     i1u178_20:
  7560   001E64                     
  7561                           ;Counter.c: 101:             counter_down_second = 59;
  7562   001E64  0E3B               	movlw	59
  7563   001E66  6E35               	movwf	_counter_down_second^0,c
  7564   001E68                     
  7565                           ;Counter.c: 102:             counter_down_minute --;
  7566   001E68  0636               	decf	_counter_down_minute^0,f,c
  7567   001E6A                     
  7568                           ;Counter.c: 103:             if( counter_down_minute < 0 ){
  7569   001E6A  BE36               	btfsc	_counter_down_minute^0,7,c
  7570   001E6C  EF3C  F00F         	goto	i1u179_20
  7571   001E70  EF3A  F00F         	goto	i1u179_21
  7572   001E74                     i1u179_21:
  7573   001E74  EF3F  F00F         	goto	i1l779
  7574   001E78                     i1u179_20:
  7575   001E78                     
  7576                           ;Counter.c: 104:                 counter_down_minute = 59;
  7577   001E78  0E3B               	movlw	59
  7578   001E7A  6E36               	movwf	_counter_down_minute^0,c
  7579   001E7C                     
  7580                           ;Counter.c: 105:                 counter_down_hour --;
  7581   001E7C  0637               	decf	_counter_down_hour^0,f,c
  7582   001E7E                     i1l779:
  7583   001E7E  0012               	return		;funcret
  7584   001E80                     __end_of_ScanCounter:
  7585                           	callstack 0
  7586                           
  7587 ;; *************** function _high_isr *****************
  7588 ;; Defined at:
  7589 ;;		line 20 in file "Interrupts.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;		None
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;		None
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      void 
  7596 ;; Registers used:
  7597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7603 ;;      Params:         0       0       0       0       0       0       0
  7604 ;;      Locals:         0       0       0       0       0       0       0
  7605 ;;      Temps:          4       0       0       0       0       0       0
  7606 ;;      Totals:         4       0       0       0       0       0       0
  7607 ;;Total ram usage:        4 bytes
  7608 ;; Hardware stack levels used: 1
  7609 ;; Hardware stack levels required when called: 2
  7610 ;; This function calls:
  7611 ;;		_ScanButtons
  7612 ;;		_ScanDisplay
  7613 ;;		i2_ScanCounter
  7614 ;;		i2_WriteTimer0
  7615 ;; This function is called by:
  7616 ;;		Interrupt level 2
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           	psect	intcode
  7621   000008                     __pintcode:
  7622                           	callstack 0
  7623   000008                     _high_isr:
  7624                           	callstack 20
  7625                           
  7626                           ;incstack = 0
  7627   000008  8270               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7628   00000A  EDD8  F00D         	call	int_func,f	;refresh shadow registers
  7629                           
  7630                           	psect	intcode_body
  7631   001BB0                     __pintcode_body:
  7632                           	callstack 20
  7633   001BB0                     int_func:
  7634                           	callstack 20
  7635   001BB0  0006               	pop		; remove dummy address from shadow register refresh
  7636   001BB2  CFD9 F053          	movff	fsr2l,??_high_isr+2
  7637   001BB6  CFDA F054          	movff	fsr2h,??_high_isr+3
  7638   001BBA                     
  7639                           ;Interrupts.c: 22:     if( INTCONbits.TMR0IE && INTCONbits.TMR0IF ) {
  7640   001BBA  AAF2               	btfss	242,5,c	;volatile
  7641   001BBC  EFE2  F00D         	goto	i2u527_41
  7642   001BC0  EFE4  F00D         	goto	i2u527_40
  7643   001BC4                     i2u527_41:
  7644   001BC4  EF4E  F00E         	goto	i2l646
  7645   001BC8                     i2u527_40:
  7646   001BC8  A4F2               	btfss	242,2,c	;volatile
  7647   001BCA  EFE9  F00D         	goto	i2u528_41
  7648   001BCE  EFEB  F00D         	goto	i2u528_40
  7649   001BD2                     i2u528_41:
  7650   001BD2  EF4E  F00E         	goto	i2l646
  7651   001BD6                     i2u528_40:
  7652   001BD6                     
  7653                           ;Interrupts.c: 23:         INTCONbits.TMR0IF = 0;
  7654   001BD6  94F2               	bcf	242,2,c	;volatile
  7655                           
  7656                           ;Interrupts.c: 25:         switch( display_cnt ){
  7657   001BD8  EFFE  F00D         	goto	i2l7785
  7658   001BDC                     i2l7767:
  7659   001BDC  0EFF               	movlw	255
  7660   001BDE  6E4A               	movwf	(i2WriteTimer0@timer0+1)^0,c
  7661   001BE0  0E05               	movlw	5
  7662   001BE2  6E49               	movwf	i2WriteTimer0@timer0^0,c
  7663   001BE4  ECDD  F014         	call	i2_WriteTimer0	;wreg free
  7664   001BE8  EF2B  F00E         	goto	i2l7787
  7665   001BEC                     i2l7781:
  7666   001BEC  0EFA               	movlw	250
  7667   001BEE  6E4A               	movwf	(i2WriteTimer0@timer0+1)^0,c
  7668   001BF0  0E55               	movlw	85
  7669   001BF2  6E49               	movwf	i2WriteTimer0@timer0^0,c
  7670   001BF4  ECDD  F014         	call	i2_WriteTimer0	;wreg free
  7671   001BF8  EF2B  F00E         	goto	i2l7787
  7672   001BFC                     i2l7785:
  7673   001BFC  5027               	movf	_display_cnt^0,w,c
  7674   001BFE  6E51               	movwf	??_high_isr^0,c
  7675   001C00  6A52               	clrf	(??_high_isr+1)^0,c
  7676                           
  7677                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7678                           ; Switch size 1, requested type "simple"
  7679                           ; Number of cases is 1, Range of values is 0 to 0
  7680                           ; switch strategies available:
  7681                           ; Name         Instructions Cycles
  7682                           ; simple_byte            4     3 (average)
  7683                           ;	Chosen strategy is simple_byte
  7684   001C02  5052               	movf	(??_high_isr+1)^0,w,c
  7685   001C04  0A00               	xorlw	0	; case 0
  7686   001C06  B4D8               	btfsc	status,2,c
  7687   001C08  EF08  F00E         	goto	i2l9905
  7688   001C0C  EF2B  F00E         	goto	i2l7787
  7689   001C10                     i2l9905:
  7690                           
  7691                           ; Switch size 1, requested type "simple"
  7692                           ; Number of cases is 8, Range of values is 0 to 7
  7693                           ; switch strategies available:
  7694                           ; Name         Instructions Cycles
  7695                           ; simple_byte           25    13 (average)
  7696                           ;	Chosen strategy is simple_byte
  7697   001C10  5051               	movf	??_high_isr^0,w,c
  7698   001C12  0A00               	xorlw	0	; case 0
  7699   001C14  B4D8               	btfsc	status,2,c
  7700   001C16  EFEE  F00D         	goto	i2l7767
  7701   001C1A  0A01               	xorlw	1	; case 1
  7702   001C1C  B4D8               	btfsc	status,2,c
  7703   001C1E  EFEE  F00D         	goto	i2l7767
  7704   001C22  0A03               	xorlw	3	; case 2
  7705   001C24  B4D8               	btfsc	status,2,c
  7706   001C26  EFEE  F00D         	goto	i2l7767
  7707   001C2A  0A01               	xorlw	1	; case 3
  7708   001C2C  B4D8               	btfsc	status,2,c
  7709   001C2E  EFEE  F00D         	goto	i2l7767
  7710   001C32  0A07               	xorlw	7	; case 4
  7711   001C34  B4D8               	btfsc	status,2,c
  7712   001C36  EFEE  F00D         	goto	i2l7767
  7713   001C3A  0A01               	xorlw	1	; case 5
  7714   001C3C  B4D8               	btfsc	status,2,c
  7715   001C3E  EFEE  F00D         	goto	i2l7767
  7716   001C42  0A03               	xorlw	3	; case 6
  7717   001C44  B4D8               	btfsc	status,2,c
  7718   001C46  EFEE  F00D         	goto	i2l7767
  7719   001C4A  0A01               	xorlw	1	; case 7
  7720   001C4C  B4D8               	btfsc	status,2,c
  7721   001C4E  EFF6  F00D         	goto	i2l7781
  7722   001C52  EF2B  F00E         	goto	i2l7787
  7723   001C56                     i2l7787:
  7724                           
  7725                           ;Interrupts.c: 35:         ScanDisplay();
  7726   001C56  EC54  F00A         	call	_ScanDisplay	;wreg free
  7727   001C5A                     
  7728                           ;Interrupts.c: 36:         ScanButtons();
  7729   001C5A  EC28  F00B         	call	_ScanButtons	;wreg free
  7730   001C5E                     
  7731                           ;Interrupts.c: 37:         cnt ++;
  7732   001C5E  0100               	movlb	0	; () banked
  7733   001C60  4BBA               	infsnz	_cnt& (0+255),f,b
  7734   001C62  2BBB               	incf	(_cnt+1)& (0+255),f,b
  7735   001C64                     
  7736                           ; BSR set to: 0
  7737                           ;Interrupts.c: 38:         if( cnt == 100 ){
  7738   001C64  0E64               	movlw	100
  7739   001C66  19BA               	xorwf	_cnt& (0+255),w,b
  7740   001C68  11BB               	iorwf	(_cnt+1)& (0+255),w,b
  7741   001C6A  A4D8               	btfss	status,2,c
  7742   001C6C  EF3A  F00E         	goto	i2u529_41
  7743   001C70  EF3C  F00E         	goto	i2u529_40
  7744   001C74                     i2u529_41:
  7745   001C74  EF41  F00E         	goto	i2l7799
  7746   001C78                     i2u529_40:
  7747   001C78                     
  7748                           ; BSR set to: 0
  7749                           ;Interrupts.c: 39:             SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE = 1; cnt = 0;
  7750   001C78  803E               	bsf	_SYSTEM_ACTION_FLG^0,0,c	;volatile
  7751   001C7A                     
  7752                           ; BSR set to: 0
  7753   001C7A  0E00               	movlw	0
  7754   001C7C  6FBB               	movwf	(_cnt+1)& (0+255),b
  7755   001C7E  0E00               	movlw	0
  7756   001C80  6FBA               	movwf	_cnt& (0+255),b
  7757   001C82                     i2l7799:
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;Interrupts.c: 41:         if( SYSTEM_STATE_FLG == 101 ){
  7761   001C82  0E65               	movlw	101
  7762   001C84  186F               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  7763   001C86  A4D8               	btfss	status,2,c
  7764   001C88  EF48  F00E         	goto	i2u530_41
  7765   001C8C  EF4A  F00E         	goto	i2u530_40
  7766   001C90                     i2u530_41:
  7767   001C90  EF5F  F00E         	goto	i2l659
  7768   001C94                     i2u530_40:
  7769   001C94                     
  7770                           ; BSR set to: 0
  7771                           ;Interrupts.c: 42:             set_mode_release_cnt ++;
  7772   001C94  4BC8               	infsnz	_set_mode_release_cnt& (0+255),f,b
  7773   001C96  2BC9               	incf	(_set_mode_release_cnt+1)& (0+255),f,b
  7774   001C98  EF5F  F00E         	goto	i2l659
  7775   001C9C                     i2l646:
  7776                           
  7777                           ;Interrupts.c: 46:     if( INTCON3bits.INT2IE && INTCON3bits.INT2IF ) {
  7778   001C9C  A8F0               	btfss	240,4,c	;volatile
  7779   001C9E  EF53  F00E         	goto	i2u531_41
  7780   001CA2  EF55  F00E         	goto	i2u531_40
  7781   001CA6                     i2u531_41:
  7782   001CA6  EF5F  F00E         	goto	i2l659
  7783   001CAA                     i2u531_40:
  7784   001CAA  A2F0               	btfss	240,1,c	;volatile
  7785   001CAC  EF5A  F00E         	goto	i2u532_41
  7786   001CB0  EF5C  F00E         	goto	i2u532_40
  7787   001CB4                     i2u532_41:
  7788   001CB4  EF5F  F00E         	goto	i2l659
  7789   001CB8                     i2u532_40:
  7790   001CB8                     
  7791                           ;Interrupts.c: 47:         INTCON3bits.INT2IF = 0;
  7792   001CB8  92F0               	bcf	240,1,c	;volatile
  7793   001CBA                     
  7794                           ;Interrupts.c: 48:         ScanCounter();
  7795   001CBA  EC40  F00F         	call	i2_ScanCounter	;wreg free
  7796   001CBE                     i2l659:
  7797   001CBE  C054  FFDA         	movff	??_high_isr+3,fsr2h
  7798   001CC2  C053  FFD9         	movff	??_high_isr+2,fsr2l
  7799   001CC6  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7800   001CC8  0011               	retfie		f
  7801   001CCA                     __end_of_high_isr:
  7802                           	callstack 0
  7803                           
  7804 ;; *************** function i2_WriteTimer0 *****************
  7805 ;; Defined at:
  7806 ;;		line 37 in file "Timers.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;  timer0          2    0[COMRAM] unsigned int 
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;  timer           2    2[COMRAM] struct Timers
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		None
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7820 ;;      Params:         2       0       0       0       0       0       0
  7821 ;;      Locals:         2       0       0       0       0       0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0
  7823 ;;      Totals:         4       0       0       0       0       0       0
  7824 ;;Total ram usage:        4 bytes
  7825 ;; Hardware stack levels used: 1
  7826 ;; This function calls:
  7827 ;;		Nothing
  7828 ;; This function is called by:
  7829 ;;		_high_isr
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text50
  7834   0029BA                     __ptext50:
  7835                           	callstack 0
  7836   0029BA                     i2_WriteTimer0:
  7837                           	callstack 21
  7838   0029BA                     
  7839                           ;Timers.c: 37: void WriteTimer0(unsigned int timer0);Timers.c: 38: {;Timers.c: 39:     u
      +                          nion Timers timer;;Timers.c: 41:     timer.lt = timer0;
  7840   0029BA  C049  F04B         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  7841   0029BE  C04A  F04C         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  7842                           
  7843                           ;Timers.c: 43:     TMR0H = timer.bt[1];
  7844   0029C2  C04C  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  7845                           
  7846                           ;Timers.c: 44:     TMR0L = timer.bt[0];
  7847   0029C6  C04B  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  7848   0029CA  0012               	return		;funcret
  7849   0029CC                     __end_ofi2_WriteTimer0:
  7850                           	callstack 0
  7851                           
  7852 ;; *************** function i2_ScanCounter *****************
  7853 ;; Defined at:
  7854 ;;		line 79 in file "Counter.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;		None
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      void 
  7861 ;; Registers used:
  7862 ;;		wreg, status,2, status,0
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7868 ;;      Params:         0       0       0       0       0       0       0
  7869 ;;      Locals:         0       0       0       0       0       0       0
  7870 ;;      Temps:          0       0       0       0       0       0       0
  7871 ;;      Totals:         0       0       0       0       0       0       0
  7872 ;;Total ram usage:        0 bytes
  7873 ;; Hardware stack levels used: 1
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_high_isr
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text51
  7882   001E80                     __ptext51:
  7883                           	callstack 0
  7884   001E80                     i2_ScanCounter:
  7885                           	callstack 21
  7886   001E80                     
  7887                           ;Counter.c: 80:     if(!counter_enable_flg) return;
  7888   001E80  502E               	movf	_counter_enable_flg^0,w,c
  7889   001E82  A4D8               	btfss	status,2,c
  7890   001E84  EF46  F00F         	goto	i2u511_41
  7891   001E88  EF48  F00F         	goto	i2u511_40
  7892   001E8C                     i2u511_41:
  7893   001E8C  EF4A  F00F         	goto	i2l7607
  7894   001E90                     i2u511_40:
  7895   001E90  EFAC  F00F         	goto	i2l779
  7896   001E94                     i2l7607:
  7897                           
  7898                           ;Counter.c: 81:     if( counter_direction_flg == 1 ){
  7899   001E94  042D               	decf	_counter_direction_flg^0,w,c
  7900   001E96  A4D8               	btfss	status,2,c
  7901   001E98  EF50  F00F         	goto	i2u512_41
  7902   001E9C  EF52  F00F         	goto	i2u512_40
  7903   001EA0                     i2u512_41:
  7904   001EA0  EF6D  F00F         	goto	i2l7623
  7905   001EA4                     i2u512_40:
  7906   001EA4                     
  7907                           ;Counter.c: 82:         counter_up_second ++;
  7908   001EA4  2A2F               	incf	_counter_up_second^0,f,c
  7909   001EA6                     
  7910                           ;Counter.c: 83:         if( counter_up_second == 60 ){
  7911   001EA6  0E3C               	movlw	60
  7912   001EA8  182F               	xorwf	_counter_up_second^0,w,c
  7913   001EAA  A4D8               	btfss	status,2,c
  7914   001EAC  EF5A  F00F         	goto	i2u513_41
  7915   001EB0  EF5C  F00F         	goto	i2u513_40
  7916   001EB4                     i2u513_41:
  7917   001EB4  EFAC  F00F         	goto	i2l779
  7918   001EB8                     i2u513_40:
  7919   001EB8                     
  7920                           ;Counter.c: 84:             counter_up_second = 0;
  7921   001EB8  0E00               	movlw	0
  7922   001EBA  6E2F               	movwf	_counter_up_second^0,c
  7923   001EBC                     
  7924                           ;Counter.c: 85:             counter_up_minute ++;
  7925   001EBC  2A30               	incf	_counter_up_minute^0,f,c
  7926   001EBE                     
  7927                           ;Counter.c: 86:             if(counter_up_minute == 60){
  7928   001EBE  0E3C               	movlw	60
  7929   001EC0  1830               	xorwf	_counter_up_minute^0,w,c
  7930   001EC2  A4D8               	btfss	status,2,c
  7931   001EC4  EF66  F00F         	goto	i2u514_41
  7932   001EC8  EF68  F00F         	goto	i2u514_40
  7933   001ECC                     i2u514_41:
  7934   001ECC  EFAC  F00F         	goto	i2l779
  7935   001ED0                     i2u514_40:
  7936   001ED0                     
  7937                           ;Counter.c: 87:                 counter_up_minute = 0;
  7938   001ED0  0E00               	movlw	0
  7939   001ED2  6E30               	movwf	_counter_up_minute^0,c
  7940   001ED4                     
  7941                           ;Counter.c: 88:                 counter_up_hour ++;
  7942   001ED4  2A31               	incf	_counter_up_hour^0,f,c
  7943   001ED6  EFAC  F00F         	goto	i2l779
  7944   001EDA                     i2l7623:
  7945   001EDA  502D               	movf	_counter_direction_flg^0,w,c
  7946   001EDC  A4D8               	btfss	status,2,c
  7947   001EDE  EF73  F00F         	goto	i2u515_41
  7948   001EE2  EF75  F00F         	goto	i2u515_40
  7949   001EE6                     i2u515_41:
  7950   001EE6  EFAC  F00F         	goto	i2l779
  7951   001EEA                     i2u515_40:
  7952   001EEA                     
  7953                           ;Counter.c: 93:         if( counter_down_hour == 0 && counter_down_minute == 0 && counte
      +                          r_down_second == 0 ) {
  7954   001EEA  5037               	movf	_counter_down_hour^0,w,c
  7955   001EEC  A4D8               	btfss	status,2,c
  7956   001EEE  EF7B  F00F         	goto	i2u516_41
  7957   001EF2  EF7D  F00F         	goto	i2u516_40
  7958   001EF6                     i2u516_41:
  7959   001EF6  EF95  F00F         	goto	i2l7635
  7960   001EFA                     i2u516_40:
  7961   001EFA  5036               	movf	_counter_down_minute^0,w,c
  7962   001EFC  A4D8               	btfss	status,2,c
  7963   001EFE  EF83  F00F         	goto	i2u517_41
  7964   001F02  EF85  F00F         	goto	i2u517_40
  7965   001F06                     i2u517_41:
  7966   001F06  EF95  F00F         	goto	i2l7635
  7967   001F0A                     i2u517_40:
  7968   001F0A  5035               	movf	_counter_down_second^0,w,c
  7969   001F0C  A4D8               	btfss	status,2,c
  7970   001F0E  EF8B  F00F         	goto	i2u518_41
  7971   001F12  EF8D  F00F         	goto	i2u518_40
  7972   001F16                     i2u518_41:
  7973   001F16  EF95  F00F         	goto	i2l7635
  7974   001F1A                     i2u518_40:
  7975   001F1A                     
  7976                           ;Counter.c: 94:             counter_enable_flg = 0;
  7977   001F1A  0E00               	movlw	0
  7978   001F1C  6E2E               	movwf	_counter_enable_flg^0,c
  7979                           
  7980                           ;Counter.c: 95:             counter_down_comp_flg = 1; counter_down_comp_cnt = 0;
  7981   001F1E  0E01               	movlw	1
  7982   001F20  6E2A               	movwf	_counter_down_comp_flg^0,c
  7983   001F22  0E00               	movlw	0
  7984   001F24  6E29               	movwf	_counter_down_comp_cnt^0,c
  7985   001F26  EFAC  F00F         	goto	i2l779
  7986   001F2A                     i2l7635:
  7987                           
  7988                           ;Counter.c: 98:         counter_down_comp_flg = 0;
  7989   001F2A  0E00               	movlw	0
  7990   001F2C  6E2A               	movwf	_counter_down_comp_flg^0,c
  7991   001F2E                     
  7992                           ;Counter.c: 99:         counter_down_second --;
  7993   001F2E  0635               	decf	_counter_down_second^0,f,c
  7994   001F30                     
  7995                           ;Counter.c: 100:         if( counter_down_second < 0 ) {
  7996   001F30  BE35               	btfsc	_counter_down_second^0,7,c
  7997   001F32  EF9F  F00F         	goto	i2u519_40
  7998   001F36  EF9D  F00F         	goto	i2u519_41
  7999   001F3A                     i2u519_41:
  8000   001F3A  EFAC  F00F         	goto	i2l779
  8001   001F3E                     i2u519_40:
  8002   001F3E                     
  8003                           ;Counter.c: 101:             counter_down_second = 59;
  8004   001F3E  0E3B               	movlw	59
  8005   001F40  6E35               	movwf	_counter_down_second^0,c
  8006   001F42                     
  8007                           ;Counter.c: 102:             counter_down_minute --;
  8008   001F42  0636               	decf	_counter_down_minute^0,f,c
  8009   001F44                     
  8010                           ;Counter.c: 103:             if( counter_down_minute < 0 ){
  8011   001F44  BE36               	btfsc	_counter_down_minute^0,7,c
  8012   001F46  EFA9  F00F         	goto	i2u520_40
  8013   001F4A  EFA7  F00F         	goto	i2u520_41
  8014   001F4E                     i2u520_41:
  8015   001F4E  EFAC  F00F         	goto	i2l779
  8016   001F52                     i2u520_40:
  8017   001F52                     
  8018                           ;Counter.c: 104:                 counter_down_minute = 59;
  8019   001F52  0E3B               	movlw	59
  8020   001F54  6E36               	movwf	_counter_down_minute^0,c
  8021   001F56                     
  8022                           ;Counter.c: 105:                 counter_down_hour --;
  8023   001F56  0637               	decf	_counter_down_hour^0,f,c
  8024   001F58                     i2l779:
  8025   001F58  0012               	return		;funcret
  8026   001F5A                     __end_ofi2_ScanCounter:
  8027                           	callstack 0
  8028                           
  8029 ;; *************** function _ScanDisplay *****************
  8030 ;; Defined at:
  8031 ;;		line 35 in file "Display.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;		None
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;		None
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      void 
  8038 ;; Registers used:
  8039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8045 ;;      Params:         0       0       0       0       0       0       0
  8046 ;;      Locals:         0       0       0       0       0       0       0
  8047 ;;      Temps:          4       0       0       0       0       0       0
  8048 ;;      Totals:         4       0       0       0       0       0       0
  8049 ;;Total ram usage:        4 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 1
  8052 ;; This function calls:
  8053 ;;		_M74HC595Write
  8054 ;; This function is called by:
  8055 ;;		_high_isr
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text52
  8060   0014A8                     __ptext52:
  8061                           	callstack 0
  8062   0014A8                     _ScanDisplay:
  8063                           	callstack 20
  8064   0014A8  908A               	bcf	138,0,c	;volatile
  8065   0014AA  9E8C               	bcf	140,7,c	;volatile
  8066                           
  8067                           ;Display.c: 52:     LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATCbits.LATC5 = 
      +                          LATBbits.LATB1 = LATBbits.LATB5 = LATDbits.LATD7 = LATBbits.LATB0 = 0;
  8068   0014AC  9A8A               	bcf	138,5,c	;volatile
  8069   0014AE  928A               	bcf	138,1,c	;volatile
  8070   0014B0  9A8B               	bcf	139,5,c	;volatile
  8071   0014B2  908B               	bcf	139,0,c	;volatile
  8072   0014B4  928B               	bcf	139,1,c	;volatile
  8073   0014B6  948B               	bcf	139,2,c	;volatile
  8074   0014B8                     
  8075                           ;Display.c: 53:     display_cnt ++;
  8076   0014B8  2A27               	incf	_display_cnt^0,f,c
  8077   0014BA                     
  8078                           ;Display.c: 54:     if( blink_pos[ display_cnt - 1 ] && blink_cnt < BLINK_TIME / 2 ) ret
      +                          urn;
  8079   0014BA  0E7F               	movlw	low (_blink_pos+65535)
  8080   0014BC  2427               	addwf	_display_cnt^0,w,c
  8081   0014BE  6ED9               	movwf	fsr2l,c
  8082   0014C0  6ADA               	clrf	fsr2h,c
  8083   0014C2  0E00               	movlw	high (_blink_pos+65535)
  8084   0014C4  22DA               	addwfc	fsr2h,f,c
  8085   0014C6  50DF               	movf	indf2,w,c
  8086   0014C8  B4D8               	btfsc	status,2,c
  8087   0014CA  EF69  F00A         	goto	i2u486_41
  8088   0014CE  EF6B  F00A         	goto	i2u486_40
  8089   0014D2                     i2u486_41:
  8090   0014D2  EFC8  F00A         	goto	i2l7277
  8091   0014D6                     i2u486_40:
  8092   0014D6  90D8               	bcf	status,0,c
  8093   0014D8  300C               	rrcf	(_BLINK_TIME+1)^0,w,c
  8094   0014DA  6E4E               	movwf	(??_ScanDisplay+1)^0,c
  8095   0014DC  300B               	rrcf	_BLINK_TIME^0,w,c
  8096   0014DE  6E4D               	movwf	??_ScanDisplay^0,c
  8097   0014E0  5026               	movf	_blink_cnt^0,w,c
  8098   0014E2  6E4F               	movwf	(??_ScanDisplay+2)^0,c
  8099   0014E4  6A50               	clrf	(??_ScanDisplay+3)^0,c
  8100   0014E6  504D               	movf	??_ScanDisplay^0,w,c
  8101   0014E8  5C4F               	subwf	(??_ScanDisplay+2)^0,w,c
  8102   0014EA  504E               	movf	(??_ScanDisplay+1)^0,w,c
  8103   0014EC  5850               	subwfb	(??_ScanDisplay+3)^0,w,c
  8104   0014EE  B0D8               	btfsc	status,0,c
  8105   0014F0  EF7C  F00A         	goto	i2u487_41
  8106   0014F4  EF7E  F00A         	goto	i2u487_40
  8107   0014F8                     i2u487_41:
  8108   0014F8  EFC8  F00A         	goto	i2l7277
  8109   0014FC                     i2u487_40:
  8110   0014FC  EF27  F00B         	goto	i2l881
  8111   001500                     i2l7235:
  8112   001500  0100               	movlb	0	; () banked
  8113   001502  5188               	movf	_display_datas& (0+255),w,b
  8114   001504  ECC2  F012         	call	_M74HC595Write
  8115   001508  848B               	bsf	139,2,c	;volatile
  8116   00150A  EFF5  F00A         	goto	i2l7279
  8117   00150E                     i2l7239:
  8118   00150E  0100               	movlb	0	; () banked
  8119   001510  5189               	movf	(_display_datas+1)& (0+255),w,b
  8120   001512  ECC2  F012         	call	_M74HC595Write
  8121   001516  828B               	bsf	139,1,c	;volatile
  8122   001518  EFF5  F00A         	goto	i2l7279
  8123   00151C                     i2l7243:
  8124   00151C  0100               	movlb	0	; () banked
  8125   00151E  518A               	movf	(_display_datas+2)& (0+255),w,b
  8126   001520  ECC2  F012         	call	_M74HC595Write
  8127   001524  808B               	bsf	139,0,c	;volatile
  8128   001526  EFF5  F00A         	goto	i2l7279
  8129   00152A                     i2l7247:
  8130   00152A  0100               	movlb	0	; () banked
  8131   00152C  518B               	movf	(_display_datas+3)& (0+255),w,b
  8132   00152E  ECC2  F012         	call	_M74HC595Write
  8133   001532  8A8B               	bsf	139,5,c	;volatile
  8134   001534  EFF5  F00A         	goto	i2l7279
  8135   001538                     i2l7251:
  8136   001538  0100               	movlb	0	; () banked
  8137   00153A  518C               	movf	(_display_datas+4)& (0+255),w,b
  8138   00153C  ECC2  F012         	call	_M74HC595Write
  8139   001540  828A               	bsf	138,1,c	;volatile
  8140   001542  EFF5  F00A         	goto	i2l7279
  8141   001546                     i2l7255:
  8142   001546  0100               	movlb	0	; () banked
  8143   001548  518D               	movf	(_display_datas+5)& (0+255),w,b
  8144   00154A  ECC2  F012         	call	_M74HC595Write
  8145   00154E  8A8A               	bsf	138,5,c	;volatile
  8146   001550  EFF5  F00A         	goto	i2l7279
  8147   001554                     i2l7259:
  8148   001554  0100               	movlb	0	; () banked
  8149   001556  5186               	movf	(_blink_pos+6)& (0+255),w,b
  8150   001558  B4D8               	btfsc	status,2,c
  8151   00155A  EFB1  F00A         	goto	i2u488_41
  8152   00155E  EFB3  F00A         	goto	i2u488_40
  8153   001562                     i2u488_41:
  8154   001562  EFB8  F00A         	goto	i2l7263
  8155   001566                     i2u488_40:
  8156   001566                     
  8157                           ; BSR set to: 0
  8158   001566  0E00               	movlw	0
  8159   001568  ECC2  F012         	call	_M74HC595Write
  8160   00156C  EFBB  F00A         	goto	i2l7265
  8161   001570                     i2l7263:
  8162                           
  8163                           ; BSR set to: 0
  8164   001570  0EFF               	movlw	255
  8165   001572  ECC2  F012         	call	_M74HC595Write
  8166   001576                     i2l7265:
  8167   001576  8E8C               	bsf	140,7,c	;volatile
  8168   001578  EFF5  F00A         	goto	i2l7279
  8169   00157C                     i2l7267:
  8170   00157C  0100               	movlb	0	; () banked
  8171   00157E  518F               	movf	(_display_datas+7)& (0+255),w,b
  8172   001580  ECC2  F012         	call	_M74HC595Write
  8173   001584  808A               	bsf	138,0,c	;volatile
  8174   001586  0E00               	movlw	0
  8175   001588  6E27               	movwf	_display_cnt^0,c
  8176   00158A  2A26               	incf	_blink_cnt^0,f,c
  8177   00158C  EFF5  F00A         	goto	i2l7279
  8178   001590                     i2l7277:
  8179   001590  5027               	movf	_display_cnt^0,w,c
  8180   001592  6E4D               	movwf	??_ScanDisplay^0,c
  8181   001594  6A4E               	clrf	(??_ScanDisplay+1)^0,c
  8182                           
  8183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8184                           ; Switch size 1, requested type "simple"
  8185                           ; Number of cases is 1, Range of values is 0 to 0
  8186                           ; switch strategies available:
  8187                           ; Name         Instructions Cycles
  8188                           ; simple_byte            4     3 (average)
  8189                           ;	Chosen strategy is simple_byte
  8190   001596  504E               	movf	(??_ScanDisplay+1)^0,w,c
  8191   001598  0A00               	xorlw	0	; case 0
  8192   00159A  B4D8               	btfsc	status,2,c
  8193   00159C  EFD2  F00A         	goto	i2l9907
  8194   0015A0  EFF5  F00A         	goto	i2l7279
  8195   0015A4                     i2l9907:
  8196                           
  8197                           ; Switch size 1, requested type "simple"
  8198                           ; Number of cases is 8, Range of values is 1 to 8
  8199                           ; switch strategies available:
  8200                           ; Name         Instructions Cycles
  8201                           ; simple_byte           25    13 (average)
  8202                           ;	Chosen strategy is simple_byte
  8203   0015A4  504D               	movf	??_ScanDisplay^0,w,c
  8204   0015A6  0A01               	xorlw	1	; case 1
  8205   0015A8  B4D8               	btfsc	status,2,c
  8206   0015AA  EF80  F00A         	goto	i2l7235
  8207   0015AE  0A03               	xorlw	3	; case 2
  8208   0015B0  B4D8               	btfsc	status,2,c
  8209   0015B2  EF87  F00A         	goto	i2l7239
  8210   0015B6  0A01               	xorlw	1	; case 3
  8211   0015B8  B4D8               	btfsc	status,2,c
  8212   0015BA  EF8E  F00A         	goto	i2l7243
  8213   0015BE  0A07               	xorlw	7	; case 4
  8214   0015C0  B4D8               	btfsc	status,2,c
  8215   0015C2  EF95  F00A         	goto	i2l7247
  8216   0015C6  0A01               	xorlw	1	; case 5
  8217   0015C8  B4D8               	btfsc	status,2,c
  8218   0015CA  EF9C  F00A         	goto	i2l7251
  8219   0015CE  0A03               	xorlw	3	; case 6
  8220   0015D0  B4D8               	btfsc	status,2,c
  8221   0015D2  EFA3  F00A         	goto	i2l7255
  8222   0015D6  0A01               	xorlw	1	; case 7
  8223   0015D8  B4D8               	btfsc	status,2,c
  8224   0015DA  EFAA  F00A         	goto	i2l7259
  8225   0015DE  0A0F               	xorlw	15	; case 8
  8226   0015E0  B4D8               	btfsc	status,2,c
  8227   0015E2  EFBE  F00A         	goto	i2l7267
  8228   0015E6  EFF5  F00A         	goto	i2l7279
  8229   0015EA                     i2l7279:
  8230                           
  8231                           ;Display.c: 65:     if( blink_cnt == BLINK_TIME ) {
  8232   0015EA  5026               	movf	_blink_cnt^0,w,c
  8233   0015EC  6E4D               	movwf	??_ScanDisplay^0,c
  8234   0015EE  6A4E               	clrf	(??_ScanDisplay+1)^0,c
  8235   0015F0  500B               	movf	_BLINK_TIME^0,w,c
  8236   0015F2  184D               	xorwf	??_ScanDisplay^0,w,c
  8237   0015F4  E107               	bnz	i2u489_41
  8238   0015F6  500C               	movf	(_BLINK_TIME+1)^0,w,c
  8239   0015F8  184E               	xorwf	(??_ScanDisplay+1)^0,w,c
  8240   0015FA  A4D8               	btfss	status,2,c
  8241   0015FC  EF02  F00B         	goto	i2u489_41
  8242   001600  EF04  F00B         	goto	i2u489_40
  8243   001604                     i2u489_41:
  8244   001604  EF27  F00B         	goto	i2l881
  8245   001608                     i2u489_40:
  8246   001608                     
  8247                           ;Display.c: 66:         blink_cnt = 0;
  8248   001608  0E00               	movlw	0
  8249   00160A  6E26               	movwf	_blink_cnt^0,c
  8250                           
  8251                           ;Display.c: 67:         if( counter_down_comp_flg ) counter_down_comp_cnt ++;
  8252   00160C  502A               	movf	_counter_down_comp_flg^0,w,c
  8253   00160E  B4D8               	btfsc	status,2,c
  8254   001610  EF0C  F00B         	goto	i2u490_41
  8255   001614  EF0E  F00B         	goto	i2u490_40
  8256   001618                     i2u490_41:
  8257   001618  EF0F  F00B         	goto	i2l7285
  8258   00161C                     i2u490_40:
  8259   00161C  2A29               	incf	_counter_down_comp_cnt^0,f,c
  8260   00161E                     i2l7285:
  8261                           
  8262                           ;Display.c: 68:         if( counter_down_comp_cnt > 5 && counter_down_comp_flg ) {
  8263   00161E  0E05               	movlw	5
  8264   001620  6429               	cpfsgt	_counter_down_comp_cnt^0,c
  8265   001622  EF15  F00B         	goto	i2u491_41
  8266   001626  EF17  F00B         	goto	i2u491_40
  8267   00162A                     i2u491_41:
  8268   00162A  EF27  F00B         	goto	i2l881
  8269   00162E                     i2u491_40:
  8270   00162E  502A               	movf	_counter_down_comp_flg^0,w,c
  8271   001630  B4D8               	btfsc	status,2,c
  8272   001632  EF1D  F00B         	goto	i2u492_41
  8273   001636  EF1F  F00B         	goto	i2u492_40
  8274   00163A                     i2u492_41:
  8275   00163A  EF27  F00B         	goto	i2l881
  8276   00163E                     i2u492_40:
  8277   00163E                     
  8278                           ;Display.c: 69:             counter_down_comp_flg = 0; blink_enable_flg = 0; counter_dow
      +                          n_comp_cnt = 5;
  8279   00163E  0E00               	movlw	0
  8280   001640  6E2A               	movwf	_counter_down_comp_flg^0,c
  8281   001642  0E00               	movlw	0
  8282   001644  6E28               	movwf	_blink_enable_flg^0,c
  8283   001646  0E05               	movlw	5
  8284   001648  6E29               	movwf	_counter_down_comp_cnt^0,c
  8285                           
  8286                           ;Display.c: 70:             SYSTEM_STATE_FLG = 203;
  8287   00164A  0ECB               	movlw	203
  8288   00164C  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  8289   00164E                     i2l881:
  8290   00164E  0012               	return		;funcret
  8291   001650                     __end_of_ScanDisplay:
  8292                           	callstack 0
  8293                           
  8294 ;; *************** function _M74HC595Write *****************
  8295 ;; Defined at:
  8296 ;;		line 31 in file "M74HC595.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;  data            1    wreg     unsigned char 
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;  data            1    1[COMRAM] unsigned char 
  8301 ;;  i               1    3[COMRAM] unsigned char 
  8302 ;;  temp            1    2[COMRAM] unsigned char 
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		wreg, status,2, status,0
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8312 ;;      Params:         0       0       0       0       0       0       0
  8313 ;;      Locals:         3       0       0       0       0       0       0
  8314 ;;      Temps:          1       0       0       0       0       0       0
  8315 ;;      Totals:         4       0       0       0       0       0       0
  8316 ;;Total ram usage:        4 bytes
  8317 ;; Hardware stack levels used: 1
  8318 ;; This function calls:
  8319 ;;		Nothing
  8320 ;; This function is called by:
  8321 ;;		_ScanDisplay
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	text53
  8326   002584                     __ptext53:
  8327                           	callstack 0
  8328   002584                     _M74HC595Write:
  8329                           	callstack 20
  8330                           
  8331                           ;incstack = 0
  8332                           ;M74HC595Write@data stored from wreg
  8333   002584  6E4A               	movwf	M74HC595Write@data^0,c
  8334   002586                     
  8335                           ;M74HC595.c: 34:     unsigned char temp = data;
  8336   002586  C04A  F04B         	movff	M74HC595Write@data,M74HC595Write@temp
  8337   00258A                     
  8338                           ;M74HC595.c: 35:     PORTAbits.RA0 = 0;
  8339   00258A  9080               	bcf	128,0,c	;volatile
  8340   00258C                     
  8341                           ;M74HC595.c: 36:     for( unsigned char i = 0; i < 8; i++ ){
  8342   00258C  0E00               	movlw	0
  8343   00258E  6E4C               	movwf	M74HC595Write@i^0,c
  8344   002590                     i2l6425:
  8345                           
  8346                           ;M74HC595.c: 37:         PORTAbits.RA0 = (temp & 0x80) ? 1 : 0; _delay((unsigned long)((
      +                          1)*(32000000UL/4000000.0)));
  8347   002590  BE4B               	btfsc	M74HC595Write@temp^0,7,c
  8348   002592  EFCD  F012         	goto	i2u393_41
  8349   002596  EFD1  F012         	goto	i2u393_40
  8350   00259A                     i2u393_41:
  8351   00259A  6A49               	clrf	??_M74HC595Write^0,c
  8352   00259C  2A49               	incf	??_M74HC595Write^0,f,c
  8353   00259E  EFD2  F012         	goto	i2u394_48
  8354   0025A2                     i2u393_40:
  8355   0025A2  6A49               	clrf	??_M74HC595Write^0,c
  8356   0025A4                     i2u394_48:
  8357   0025A4  5080               	movf	128,w,c	;volatile
  8358   0025A6  1849               	xorwf	??_M74HC595Write^0,w,c
  8359   0025A8  0BFE               	andlw	-2
  8360   0025AA  1849               	xorwf	??_M74HC595Write^0,w,c
  8361   0025AC  6E80               	movwf	128,c	;volatile
  8362   0025AE  D000               	nop2		;2 cycle nop
  8363   0025B0  D000               	nop2		;2 cycle nop
  8364   0025B2  D000               	nop2		;2 cycle nop
  8365   0025B4  D000               	nop2		;2 cycle nop
  8366   0025B6                     
  8367                           ;M74HC595.c: 38:         PORTAbits.RA1 = 1; __nop(); PORTAbits.RA1 = 0; __nop();
  8368   0025B6  8280               	bsf	128,1,c	;volatile
  8369   0025B8  F000               	nop	
  8370   0025BA  9280               	bcf	128,1,c	;volatile
  8371   0025BC  F000               	nop	
  8372                           
  8373                           ;M74HC595.c: 39:         temp = temp << 1;
  8374   0025BE  504B               	movf	M74HC595Write@temp^0,w,c
  8375   0025C0  244B               	addwf	M74HC595Write@temp^0,w,c
  8376   0025C2  6E4B               	movwf	M74HC595Write@temp^0,c
  8377   0025C4                     
  8378                           ;M74HC595.c: 40:     }
  8379   0025C4  2A4C               	incf	M74HC595Write@i^0,f,c
  8380   0025C6  0E07               	movlw	7
  8381   0025C8  644C               	cpfsgt	M74HC595Write@i^0,c
  8382   0025CA  EFE9  F012         	goto	i2u395_41
  8383   0025CE  EFEB  F012         	goto	i2u395_40
  8384   0025D2                     i2u395_41:
  8385   0025D2  EFC8  F012         	goto	i2l6425
  8386   0025D6                     i2u395_40:
  8387   0025D6                     
  8388                           ;M74HC595.c: 41:     PORTAbits.RA3 = 1; __nop(); PORTAbits.RA3 = 0; __nop();
  8389   0025D6  8680               	bsf	128,3,c	;volatile
  8390   0025D8  F000               	nop	
  8391   0025DA  9680               	bcf	128,3,c	;volatile
  8392   0025DC  F000               	nop	
  8393   0025DE  0012               	return		;funcret
  8394   0025E0                     __end_of_M74HC595Write:
  8395                           	callstack 0
  8396                           
  8397 ;; *************** function _ScanButtons *****************
  8398 ;; Defined at:
  8399 ;;		line 28 in file "Buttons.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;		None
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;		None
  8404 ;; Return value:  Size  Location     Type
  8405 ;;                  1    wreg      void 
  8406 ;; Registers used:
  8407 ;;		wreg, status,2, status,0
  8408 ;; Tracked objects:
  8409 ;;		On entry : 0/0
  8410 ;;		On exit  : 0/0
  8411 ;;		Unchanged: 0/0
  8412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8413 ;;      Params:         0       0       0       0       0       0       0
  8414 ;;      Locals:         0       0       0       0       0       0       0
  8415 ;;      Temps:          0       0       0       0       0       0       0
  8416 ;;      Totals:         0       0       0       0       0       0       0
  8417 ;;Total ram usage:        0 bytes
  8418 ;; Hardware stack levels used: 1
  8419 ;; This function calls:
  8420 ;;		Nothing
  8421 ;; This function is called by:
  8422 ;;		_high_isr
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           	psect	text54
  8427   001650                     __ptext54:
  8428                           	callstack 0
  8429   001650                     _ScanButtons:
  8430                           	callstack 21
  8431   001650                     
  8432                           ;Buttons.c: 30:     if( PORTAbits.RA7 == 0 ) { hour_btn_released_cnt = 0; hour_btn_press
      +                          ed_cnt ++; BTN_CLICK_EVENT = 1; }
  8433   001650  BE80               	btfsc	128,7,c	;volatile
  8434   001652  EF2D  F00B         	goto	i2u493_41
  8435   001656  EF2F  F00B         	goto	i2u493_40
  8436   00165A                     i2u493_41:
  8437   00165A  EF38  F00B         	goto	i2l7303
  8438   00165E                     i2u493_40:
  8439   00165E  0E00               	movlw	0
  8440   001660  0100               	movlb	0	; () banked
  8441   001662  6FC7               	movwf	(_hour_btn_released_cnt+1)& (0+255),b
  8442   001664  0E00               	movlw	0
  8443   001666  6FC6               	movwf	_hour_btn_released_cnt& (0+255),b
  8444   001668                     
  8445                           ; BSR set to: 0
  8446   001668  4A09               	infsnz	_hour_btn_pressed_cnt^0,f,c
  8447   00166A  2A0A               	incf	(_hour_btn_pressed_cnt+1)^0,f,c
  8448   00166C                     
  8449                           ; BSR set to: 0
  8450   00166C  0E01               	movlw	1
  8451   00166E  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  8452   001670                     i2l7303:
  8453                           
  8454                           ;Buttons.c: 31:     if( PORTAbits.RA7 == 1 && BTN_CLICK_EVENT == 1 ){ hour_btn_pressed_c
      +                          nt = 0; hour_btn_released_cnt ++; }
  8455   001670  AE80               	btfss	128,7,c	;volatile
  8456   001672  EF3D  F00B         	goto	i2u494_41
  8457   001676  EF3F  F00B         	goto	i2u494_40
  8458   00167A                     i2u494_41:
  8459   00167A  EF4E  F00B         	goto	i2l7311
  8460   00167E                     i2u494_40:
  8461   00167E  0424               	decf	_BTN_CLICK_EVENT^0,w,c
  8462   001680  A4D8               	btfss	status,2,c
  8463   001682  EF45  F00B         	goto	i2u495_41
  8464   001686  EF47  F00B         	goto	i2u495_40
  8465   00168A                     i2u495_41:
  8466   00168A  EF4E  F00B         	goto	i2l7311
  8467   00168E                     i2u495_40:
  8468   00168E  0E00               	movlw	0
  8469   001690  6E0A               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  8470   001692  0E00               	movlw	0
  8471   001694  6E09               	movwf	_hour_btn_pressed_cnt^0,c
  8472   001696  0100               	movlb	0	; () banked
  8473   001698  4BC6               	infsnz	_hour_btn_released_cnt& (0+255),f,b
  8474   00169A  2BC7               	incf	(_hour_btn_released_cnt+1)& (0+255),f,b
  8475   00169C                     i2l7311:
  8476                           
  8477                           ;Buttons.c: 33:     if( PORTAbits.RA4 == 0 ) { up_btn_released_cnt = 0; up_btn_pressed_c
      +                          nt ++; BTN_CLICK_EVENT = 2; }
  8478   00169C  B880               	btfsc	128,4,c	;volatile
  8479   00169E  EF53  F00B         	goto	i2u496_41
  8480   0016A2  EF55  F00B         	goto	i2u496_40
  8481   0016A6                     i2u496_41:
  8482   0016A6  EF5E  F00B         	goto	i2l7319
  8483   0016AA                     i2u496_40:
  8484   0016AA  0E00               	movlw	0
  8485   0016AC  0100               	movlb	0	; () banked
  8486   0016AE  6FC5               	movwf	(_up_btn_released_cnt+1)& (0+255),b
  8487   0016B0  0E00               	movlw	0
  8488   0016B2  6FC4               	movwf	_up_btn_released_cnt& (0+255),b
  8489   0016B4                     
  8490                           ; BSR set to: 0
  8491   0016B4  4A07               	infsnz	_up_btn_pressed_cnt^0,f,c
  8492   0016B6  2A08               	incf	(_up_btn_pressed_cnt+1)^0,f,c
  8493   0016B8                     
  8494                           ; BSR set to: 0
  8495   0016B8  0E02               	movlw	2
  8496   0016BA  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  8497   0016BC                     i2l7319:
  8498                           
  8499                           ;Buttons.c: 34:     if( PORTAbits.RA4 == 1 && BTN_CLICK_EVENT == 2 ){ up_btn_pressed_cnt
      +                           = 0; up_btn_released_cnt ++; }
  8500   0016BC  A880               	btfss	128,4,c	;volatile
  8501   0016BE  EF63  F00B         	goto	i2u497_41
  8502   0016C2  EF65  F00B         	goto	i2u497_40
  8503   0016C6                     i2u497_41:
  8504   0016C6  EF75  F00B         	goto	i2l7327
  8505   0016CA                     i2u497_40:
  8506   0016CA  0E02               	movlw	2
  8507   0016CC  1824               	xorwf	_BTN_CLICK_EVENT^0,w,c
  8508   0016CE  A4D8               	btfss	status,2,c
  8509   0016D0  EF6C  F00B         	goto	i2u498_41
  8510   0016D4  EF6E  F00B         	goto	i2u498_40
  8511   0016D8                     i2u498_41:
  8512   0016D8  EF75  F00B         	goto	i2l7327
  8513   0016DC                     i2u498_40:
  8514   0016DC  0E00               	movlw	0
  8515   0016DE  6E08               	movwf	(_up_btn_pressed_cnt+1)^0,c
  8516   0016E0  0E00               	movlw	0
  8517   0016E2  6E07               	movwf	_up_btn_pressed_cnt^0,c
  8518   0016E4  0100               	movlb	0	; () banked
  8519   0016E6  4BC4               	infsnz	_up_btn_released_cnt& (0+255),f,b
  8520   0016E8  2BC5               	incf	(_up_btn_released_cnt+1)& (0+255),f,b
  8521   0016EA                     i2l7327:
  8522                           
  8523                           ;Buttons.c: 36:     if( PORTAbits.RA6 == 0 ) { down_btn_released_cnt = 0; down_btn_press
      +                          ed_cnt ++; BTN_CLICK_EVENT = 3; }
  8524   0016EA  BC80               	btfsc	128,6,c	;volatile
  8525   0016EC  EF7A  F00B         	goto	i2u499_41
  8526   0016F0  EF7C  F00B         	goto	i2u499_40
  8527   0016F4                     i2u499_41:
  8528   0016F4  EF85  F00B         	goto	i2l7335
  8529   0016F8                     i2u499_40:
  8530   0016F8  0E00               	movlw	0
  8531   0016FA  0100               	movlb	0	; () banked
  8532   0016FC  6FC3               	movwf	(_down_btn_released_cnt+1)& (0+255),b
  8533   0016FE  0E00               	movlw	0
  8534   001700  6FC2               	movwf	_down_btn_released_cnt& (0+255),b
  8535   001702                     
  8536                           ; BSR set to: 0
  8537   001702  4A05               	infsnz	_down_btn_pressed_cnt^0,f,c
  8538   001704  2A06               	incf	(_down_btn_pressed_cnt+1)^0,f,c
  8539   001706                     
  8540                           ; BSR set to: 0
  8541   001706  0E03               	movlw	3
  8542   001708  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  8543   00170A                     i2l7335:
  8544                           
  8545                           ;Buttons.c: 37:     if( PORTAbits.RA6 == 1 && BTN_CLICK_EVENT == 3 ){ down_btn_pressed_c
      +                          nt = 0; down_btn_released_cnt ++; }
  8546   00170A  AC80               	btfss	128,6,c	;volatile
  8547   00170C  EF8A  F00B         	goto	i2u500_41
  8548   001710  EF8C  F00B         	goto	i2u500_40
  8549   001714                     i2u500_41:
  8550   001714  EF9C  F00B         	goto	i2l7343
  8551   001718                     i2u500_40:
  8552   001718  0E03               	movlw	3
  8553   00171A  1824               	xorwf	_BTN_CLICK_EVENT^0,w,c
  8554   00171C  A4D8               	btfss	status,2,c
  8555   00171E  EF93  F00B         	goto	i2u501_41
  8556   001722  EF95  F00B         	goto	i2u501_40
  8557   001726                     i2u501_41:
  8558   001726  EF9C  F00B         	goto	i2l7343
  8559   00172A                     i2u501_40:
  8560   00172A  0E00               	movlw	0
  8561   00172C  6E06               	movwf	(_down_btn_pressed_cnt+1)^0,c
  8562   00172E  0E00               	movlw	0
  8563   001730  6E05               	movwf	_down_btn_pressed_cnt^0,c
  8564   001732  0100               	movlb	0	; () banked
  8565   001734  4BC2               	infsnz	_down_btn_released_cnt& (0+255),f,b
  8566   001736  2BC3               	incf	(_down_btn_released_cnt+1)& (0+255),f,b
  8567   001738                     i2l7343:
  8568                           
  8569                           ;Buttons.c: 39:     if( PORTBbits.RB4 == 0 ) { sel_btn_released_cnt = 0; sel_btn_pressed
      +                          _cnt ++; BTN_CLICK_EVENT = 4; }
  8570   001738  B881               	btfsc	129,4,c	;volatile
  8571   00173A  EFA1  F00B         	goto	i2u502_41
  8572   00173E  EFA3  F00B         	goto	i2u502_40
  8573   001742                     i2u502_41:
  8574   001742  EFAC  F00B         	goto	i2l7351
  8575   001746                     i2u502_40:
  8576   001746  0E00               	movlw	0
  8577   001748  0100               	movlb	0	; () banked
  8578   00174A  6FC1               	movwf	(_sel_btn_released_cnt+1)& (0+255),b
  8579   00174C  0E00               	movlw	0
  8580   00174E  6FC0               	movwf	_sel_btn_released_cnt& (0+255),b
  8581   001750                     
  8582                           ; BSR set to: 0
  8583   001750  4A03               	infsnz	_sel_btn_pressed_cnt^0,f,c
  8584   001752  2A04               	incf	(_sel_btn_pressed_cnt+1)^0,f,c
  8585   001754                     
  8586                           ; BSR set to: 0
  8587   001754  0E04               	movlw	4
  8588   001756  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  8589   001758                     i2l7351:
  8590                           
  8591                           ;Buttons.c: 40:     if( PORTBbits.RB4 == 1 && BTN_CLICK_EVENT == 4 ){ sel_btn_pressed_cn
      +                          t = 0; sel_btn_released_cnt ++; }
  8592   001758  A881               	btfss	129,4,c	;volatile
  8593   00175A  EFB1  F00B         	goto	i2u503_41
  8594   00175E  EFB3  F00B         	goto	i2u503_40
  8595   001762                     i2u503_41:
  8596   001762  EFC3  F00B         	goto	i2l7359
  8597   001766                     i2u503_40:
  8598   001766  0E04               	movlw	4
  8599   001768  1824               	xorwf	_BTN_CLICK_EVENT^0,w,c
  8600   00176A  A4D8               	btfss	status,2,c
  8601   00176C  EFBA  F00B         	goto	i2u504_41
  8602   001770  EFBC  F00B         	goto	i2u504_40
  8603   001774                     i2u504_41:
  8604   001774  EFC3  F00B         	goto	i2l7359
  8605   001778                     i2u504_40:
  8606   001778  0E00               	movlw	0
  8607   00177A  6E04               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  8608   00177C  0E00               	movlw	0
  8609   00177E  6E03               	movwf	_sel_btn_pressed_cnt^0,c
  8610   001780  0100               	movlb	0	; () banked
  8611   001782  4BC0               	infsnz	_sel_btn_released_cnt& (0+255),f,b
  8612   001784  2BC1               	incf	(_sel_btn_released_cnt+1)& (0+255),f,b
  8613   001786                     i2l7359:
  8614                           
  8615                           ;Buttons.c: 42:     if( PORTDbits.RD6 == 0 ) { reset_btn_released_cnt = 0; reset_btn_pre
      +                          ssed_cnt ++; BTN_CLICK_EVENT = 5; }
  8616   001786  BC83               	btfsc	131,6,c	;volatile
  8617   001788  EFC8  F00B         	goto	i2u505_41
  8618   00178C  EFCA  F00B         	goto	i2u505_40
  8619   001790                     i2u505_41:
  8620   001790  EFD3  F00B         	goto	i2l7367
  8621   001794                     i2u505_40:
  8622   001794  0E00               	movlw	0
  8623   001796  0100               	movlb	0	; () banked
  8624   001798  6FBF               	movwf	(_reset_btn_released_cnt+1)& (0+255),b
  8625   00179A  0E00               	movlw	0
  8626   00179C  6FBE               	movwf	_reset_btn_released_cnt& (0+255),b
  8627   00179E                     
  8628                           ; BSR set to: 0
  8629   00179E  4A01               	infsnz	_reset_btn_pressed_cnt^0,f,c
  8630   0017A0  2A02               	incf	(_reset_btn_pressed_cnt+1)^0,f,c
  8631   0017A2                     
  8632                           ; BSR set to: 0
  8633   0017A2  0E05               	movlw	5
  8634   0017A4  6E24               	movwf	_BTN_CLICK_EVENT^0,c
  8635   0017A6                     i2l7367:
  8636                           
  8637                           ;Buttons.c: 43:     if( PORTDbits.RD6 == 1 && BTN_CLICK_EVENT == 5 ){ reset_btn_pressed_
      +                          cnt = 0; reset_btn_released_cnt ++; }
  8638   0017A6  AC83               	btfss	131,6,c	;volatile
  8639   0017A8  EFD8  F00B         	goto	i2u506_41
  8640   0017AC  EFDA  F00B         	goto	i2u506_40
  8641   0017B0                     i2u506_41:
  8642   0017B0  EFEA  F00B         	goto	i2l1100
  8643   0017B4                     i2u506_40:
  8644   0017B4  0E05               	movlw	5
  8645   0017B6  1824               	xorwf	_BTN_CLICK_EVENT^0,w,c
  8646   0017B8  A4D8               	btfss	status,2,c
  8647   0017BA  EFE1  F00B         	goto	i2u507_41
  8648   0017BE  EFE3  F00B         	goto	i2u507_40
  8649   0017C2                     i2u507_41:
  8650   0017C2  EFEA  F00B         	goto	i2l1100
  8651   0017C6                     i2u507_40:
  8652   0017C6  0E00               	movlw	0
  8653   0017C8  6E02               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  8654   0017CA  0E00               	movlw	0
  8655   0017CC  6E01               	movwf	_reset_btn_pressed_cnt^0,c
  8656   0017CE  0100               	movlb	0	; () banked
  8657   0017D0  4BBE               	infsnz	_reset_btn_released_cnt& (0+255),f,b
  8658   0017D2  2BBF               	incf	(_reset_btn_released_cnt+1)& (0+255),f,b
  8659   0017D4                     i2l1100:
  8660   0017D4  0012               	return		;funcret
  8661   0017D6                     __end_of_ScanButtons:
  8662                           	callstack 0
  8663                           
  8664                           	psect	rparam
  8665   000000                     
  8666                           	psect	temp
  8667   000070                     btemp:
  8668                           	callstack 0
  8669   000070                     	ds	1
  8670   000000                     int$flags	set	btemp
  8671   000000                     wtemp8	set	btemp+1
  8672   000000                     ttemp5	set	btemp+1
  8673   000000                     ttemp6	set	btemp+4
  8674   000000                     ttemp7	set	btemp+8
  8675                           
  8676                           	psect	config
  8677                           
  8678                           ; Padding undefined space
  8679   300000                     	org	3145728
  8680   300000  FF                 	db	255
  8681                           
  8682                           ;Config register CONFIG1H @ 0x300001
  8683                           ;	Oscillator Selection bits
  8684                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  8685                           ;	Fail-Safe Clock Monitor Enable bit
  8686                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8687                           ;	Internal/External Oscillator Switchover bit
  8688                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8689   300001                     	org	3145729
  8690   300001  08                 	db	8
  8691                           
  8692                           ;Config register CONFIG2L @ 0x300002
  8693                           ;	Power-up Timer Enable bit
  8694                           ;	PWRT = OFF, PWRT disabled
  8695                           ;	Brown-out Reset Enable bits
  8696                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8697                           ;	Brown Out Reset Voltage bits
  8698                           ;	BORV = 3, Minimum setting
  8699   300002                     	org	3145730
  8700   300002  1F                 	db	31
  8701                           
  8702                           ;Config register CONFIG2H @ 0x300003
  8703                           ;	Watchdog Timer Enable bit
  8704                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8705                           ;	Watchdog Timer Postscale Select bits
  8706                           ;	WDTPS = 32768, 1:32768
  8707   300003                     	org	3145731
  8708   300003  1E                 	db	30
  8709                           
  8710                           ; Padding undefined space
  8711   300004                     	org	3145732
  8712   300004  FF                 	db	255
  8713                           
  8714                           ;Config register CONFIG3H @ 0x300005
  8715                           ;	CCP2 MUX bit
  8716                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8717                           ;	PORTB A/D Enable bit
  8718                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8719                           ;	Low-Power Timer1 Oscillator Enable bit
  8720                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8721                           ;	MCLR Pin Enable bit
  8722                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  8723   300005                     	org	3145733
  8724   300005  01                 	db	1
  8725                           
  8726                           ;Config register CONFIG4L @ 0x300006
  8727                           ;	Stack Full/Underflow Reset Enable bit
  8728                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8729                           ;	Single-Supply ICSP Enable bit
  8730                           ;	LVP = OFF, Single-Supply ICSP disabled
  8731                           ;	Extended Instruction Set Enable bit
  8732                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8733                           ;	Background Debugger Enable bit
  8734                           ;	DEBUG = 0x1, unprogrammed default
  8735   300006                     	org	3145734
  8736   300006  80                 	db	128
  8737                           
  8738                           ; Padding undefined space
  8739   300007                     	org	3145735
  8740   300007  FF                 	db	255
  8741                           
  8742                           ;Config register CONFIG5L @ 0x300008
  8743                           ;	Code Protection bit
  8744                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8745                           ;	Code Protection bit
  8746                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8747                           ;	Code Protection bit
  8748                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8749                           ;	Code Protection bit
  8750                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8751   300008                     	org	3145736
  8752   300008  0F                 	db	15
  8753                           
  8754                           ;Config register CONFIG5H @ 0x300009
  8755                           ;	Boot Block Code Protection bit
  8756                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8757                           ;	Data EEPROM Code Protection bit
  8758                           ;	CPD = OFF, Data EEPROM not code-protected
  8759   300009                     	org	3145737
  8760   300009  C0                 	db	192
  8761                           
  8762                           ;Config register CONFIG6L @ 0x30000A
  8763                           ;	Write Protection bit
  8764                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8765                           ;	Write Protection bit
  8766                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8767                           ;	Write Protection bit
  8768                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8769                           ;	Write Protection bit
  8770                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8771   30000A                     	org	3145738
  8772   30000A  0F                 	db	15
  8773                           
  8774                           ;Config register CONFIG6H @ 0x30000B
  8775                           ;	Configuration Register Write Protection bit
  8776                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8777                           ;	Boot Block Write Protection bit
  8778                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8779                           ;	Data EEPROM Write Protection bit
  8780                           ;	WRTD = OFF, Data EEPROM not write-protected
  8781   30000B                     	org	3145739
  8782   30000B  E0                 	db	224
  8783                           
  8784                           ;Config register CONFIG7L @ 0x30000C
  8785                           ;	Table Read Protection bit
  8786                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8787                           ;	Table Read Protection bit
  8788                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8789                           ;	Table Read Protection bit
  8790                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8791                           ;	Table Read Protection bit
  8792                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8793   30000C                     	org	3145740
  8794   30000C  0F                 	db	15
  8795                           
  8796                           ;Config register CONFIG7H @ 0x30000D
  8797                           ;	Boot Block Table Read Protection bit
  8798                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8799   30000D                     	org	3145741
  8800   30000D  40                 	db	64
  8801                           tosu	equ	0xFFF
  8802                           tosh	equ	0xFFE
  8803                           tosl	equ	0xFFD
  8804                           stkptr	equ	0xFFC
  8805                           pclatu	equ	0xFFB
  8806                           pclath	equ	0xFFA
  8807                           pcl	equ	0xFF9
  8808                           tblptru	equ	0xFF8
  8809                           tblptrh	equ	0xFF7
  8810                           tblptrl	equ	0xFF6
  8811                           tablat	equ	0xFF5
  8812                           prodh	equ	0xFF4
  8813                           prodl	equ	0xFF3
  8814                           indf0	equ	0xFEF
  8815                           postinc0	equ	0xFEE
  8816                           postdec0	equ	0xFED
  8817                           preinc0	equ	0xFEC
  8818                           plusw0	equ	0xFEB
  8819                           fsr0h	equ	0xFEA
  8820                           fsr0l	equ	0xFE9
  8821                           wreg	equ	0xFE8
  8822                           indf1	equ	0xFE7
  8823                           postinc1	equ	0xFE6
  8824                           postdec1	equ	0xFE5
  8825                           preinc1	equ	0xFE4
  8826                           plusw1	equ	0xFE3
  8827                           fsr1h	equ	0xFE2
  8828                           fsr1l	equ	0xFE1
  8829                           bsr	equ	0xFE0
  8830                           indf2	equ	0xFDF
  8831                           postinc2	equ	0xFDE
  8832                           postdec2	equ	0xFDD
  8833                           preinc2	equ	0xFDC
  8834                           plusw2	equ	0xFDB
  8835                           fsr2h	equ	0xFDA
  8836                           fsr2l	equ	0xFD9
  8837                           status	equ	0xFD8

Data Sizes:
    Strings     82
    Constant    0
    Data        54
    BSS         228
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     30     111
    BANK0           128      2     128
    BANK1           256     14      90
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[11]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[11]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(COMRAM[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S3988$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    S3940$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3940$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Puts1USART@data	PTR unsigned char  size(2) Largest target is 43
		 -> STR_2(CODE[43]), 

    UpdateDisplay@update_datas	PTR unsigned char  size(2) Largest target is 6
		 -> ReadCounter@counter_datas(BANK1[6]), Ds1307Read@ds1307_date_datas(COMRAM[6]), 

    sp__ReadCounter	PTR unsigned char  size(2) Largest target is 6
		 -> ReadCounter@counter_datas(BANK1[6]), 

    Ds1307Write@write_datas	PTR unsigned char  size(2) Largest target is 7
		 -> real_rtc_data(COMRAM[7]), 

    sp__Ds1307Read	PTR unsigned char  size(2) Largest target is 6
		 -> Ds1307Read@ds1307_date_datas(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_UpdateDisplay
    _printf->_vfprintf
    _vfpfcnvrt->_fputc
    _VerifyButtons->_ActionButtons
    _ActionButtons->_Ds1307Write
    _Ds1307Write->_I2cWrite
    _UpdateDisplay->_Ds1307Read
    _ReadCounter->___awdiv
    _Ds1307Read->_I2cRead
    _DeviceInit->_WriteTimer0
    _Puts1USART->_Write1USART
    _ClockSetting->_MarkDisplay

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_ScanDisplay
    _ScanDisplay->_M74HC595Write

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _UpdateDisplay->_ReadCounter

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10147
                                             12 BANK1      2     2      0
                       _BlinkDisable
                       _ClockSetting
                         _DeviceInit
                         _Ds1307Read
                        _Ds1307Write
                         _LEDProcess
                        _ReadCounter
                      _UpdateDisplay
                      _VerifyButtons
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    2072
                                             27 COMRAM     2     0      2
                                              0 BANK0      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    1907
                                             25 COMRAM     2     2      0
                                              6 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           18    12      6    1233
                                              0 BANK1      6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               10     6      4     777
                                             15 COMRAM    10     6      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _VerifyButtons                                        2     2      0     808
                                             22 COMRAM     2     2      0
                      _ActionButtons
 ---------------------------------------------------------------------------------
 (2) _ActionButtons                                        3     3      0     808
                                             19 COMRAM     3     3      0
                      _DecValProcess
                        _Ds1307Write
                      _IncValProcess
                       _StartCounter
                        _StopCounter
                     _UpDownTransfer
 ---------------------------------------------------------------------------------
 (3) _UpDownTransfer                                       0     0      0       0
                     _UpdateSetValue
 ---------------------------------------------------------------------------------
 (3) _StopCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartCounter                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _IncValProcess                                        0     0      0       0
                     _UpdateSetValue
 ---------------------------------------------------------------------------------
 (3) _Ds1307Write                                          3     1      2     531
                                             16 COMRAM     3     1      2
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (3) _DecValProcess                                        2     2      0       0
                                             15 COMRAM     2     2      0
                     _UpdateSetValue
 ---------------------------------------------------------------------------------
 (4) _UpdateSetValue                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateDisplay                                        5     1      4    1573
                                             29 COMRAM     1     1      0
                                              6 BANK1      4     0      4
                         _Ds1307Read (ARG)
                        _MarkDisplay
                        _ReadCounter (ARG)
 ---------------------------------------------------------------------------------
 (1) _ReadCounter                                          8     6      2    3448
                                             23 COMRAM     2     0      2
                                              0 BANK1      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1513
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1525
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDProcess                                           2     2      0       0
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Ds1307Read                                          12    10      2     544
                                             17 COMRAM    12    10      2
                            _I2cRead
                         _I2cRestart
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (4) _I2cWrite                                             1     1      0      22
                                             15 COMRAM     1     1      0
                            _I2cWait
 ---------------------------------------------------------------------------------
 (4) _I2cStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2cRestart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2cRead                                              2     2      0      46
                                             15 COMRAM     2     2      0
                            _I2cWait
 ---------------------------------------------------------------------------------
 (5) _I2cWait                                              0     0      0       0
                            _I2cStop
 ---------------------------------------------------------------------------------
 (6) _I2cStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DeviceInit                                           0     0      0    1072
                         _Ds1307Init
                _EnableAllInterrupts
                          _InitValue
                         _Open1USART
                        _OpenButtons
                        _OpenCounter
                        _OpenDisplay
                         _OpenTimer0
                     _OscillatorInit
                         _Puts1USART
                        _StartTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     544
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _StartTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Puts1USART                                           2     0      2     142
                                             16 COMRAM     2     0      2
                         _Busy1USART
                        _Write1USART
 ---------------------------------------------------------------------------------
 (3) _Write1USART                                          1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Busy1USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OscillatorInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenDisplay                                          1     1      0      90
                                             15 COMRAM     1     1      0
                       _M74HC595Init
 ---------------------------------------------------------------------------------
 (3) _M74HC595Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenButtons                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     252
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitValue                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EnableAllInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ds1307Init                                           0     0      0       0
                            _I2cInit
 ---------------------------------------------------------------------------------
 (3) _I2cInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClockSetting                                         0     0      0      31
                        _MarkDisplay
 ---------------------------------------------------------------------------------
 (2) _MarkDisplay                                          3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _BlinkDisable                                         1     1      0      68
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                              3     3      0       0
                                             12 COMRAM     3     3      0
                        _ScanCounter
 ---------------------------------------------------------------------------------
 (8) _ScanCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_isr                                             4     4      0     390
                                              8 COMRAM     4     4      0
                        _ScanButtons
                        _ScanDisplay
                      i2_ScanCounter
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (10) i2_WriteTimer0                                       4     2      2     276
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) i2_ScanCounter                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ScanDisplay                                         4     4      0     114
                                              4 COMRAM     4     4      0
                      _M74HC595Write
 ---------------------------------------------------------------------------------
 (11) _M74HC595Write                                       4     4      0     114
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (10) _ScanButtons                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlinkDisable
   _ClockSetting
     _MarkDisplay
   _DeviceInit
     _Ds1307Init
       _I2cInit
     _EnableAllInterrupts
     _InitValue
     _Open1USART
     _OpenButtons
     _OpenCounter
     _OpenDisplay
       _M74HC595Init
     _OpenTimer0
     _OscillatorInit
     _Puts1USART
       _Busy1USART
       _Write1USART
     _StartTimer0
     _WriteTimer0
   _Ds1307Read
     _I2cRead
       _I2cWait
         _I2cStop
     _I2cRestart
     _I2cStart
     _I2cStop
     _I2cWrite
       _I2cWait
   _Ds1307Write
     _I2cStart
     _I2cStop
     _I2cWrite
   _LEDProcess
   _ReadCounter
     ___awdiv
     ___awmod
   _UpdateDisplay
     _Ds1307Read (ARG)
     _MarkDisplay (ARG)
     _ReadCounter (ARG)
   _VerifyButtons
     _ActionButtons
       _DecValProcess
         _UpdateSetValue
       _Ds1307Write
       _IncValProcess
         _UpdateSetValue
       _StartCounter
       _StopCounter
       _UpDownTransfer
         _UpdateSetValue
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch

 _low_isr (ROOT)
   _ScanCounter

 _high_isr (ROOT)
   _ScanButtons
   _ScanDisplay
     _M74HC595Write
   i2_ScanCounter
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      E      5A       7       35.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      2      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1E      6F       1       88.1%
BITBIGSFRhhhll      18      0       0      17        0.0%
BITBIGSFRlhllhh      D      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRllllh       6      0       0      30        0.0%
BITBIGSFRlllh        5      0       0      29        0.0%
BITBIGSFRllh         5      0       0      28        0.0%
BITBIGSFRlhllhl      4      0       0      25        0.0%
BITBIGSFRlhhhh       2      0       0      19        0.0%
BITBIGSFRlhlh        2      0       0      21        0.0%
BITBIGSFRlhllhl      1      0       0      24        0.0%
BITBIGSFRlhllhl      1      0       0      23        0.0%
BITBIGSFRlhllhl      1      0       0      26        0.0%
BITBIGSFRlhhl        1      0       0      20        0.0%
BITBIGSFRlhlll       1      0       0      27        0.0%
BITBIGSFRhl          1      0       0      18        0.0%
BITBIGSFRlllll       1      0       0      31        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     149      32        0.0%
DATA                 0      0     149       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Nov 30 05:25:10 2023

                          l7 29E6              ??_UpdateDisplay 0066                  _SSPSTATbits 0FC7  
                         l41 1A8C                           l28 29F4                           l45 1AC4  
                         l49 1BAE              ?_UpDownTransfer 0049                 ___awdiv@sign 005D  
                         bsr 0FE0     ReadCounter@counter_datas 014C    UpdateDisplay@end_position 0155  
                        l100 295E                  ?_LEDProcess 0049                          l103 2962  
                        l112 2994                          l121 28CA                          l106 2970  
                        l123 28D8                          l115 2974                          l131 291E  
                        l140 27F4                          l109 2986                          l125 28EA  
                        l134 27C2                          l118 2982                          l136 27D0  
                        l128 290C                          l137 27E4                          l139 27F2  
                        l308 111A                          l333 2582                          l450 287A  
                        l339 267A                          l347 1DA4                          l448 2878  
                        l456 29A6                          l369 2826                          l459 2A0C  
                        l397 29B8                          l902 274A                          l907 14A6  
                        l763 193A                          l772 2A08                          l669 2A10  
                        l757 26C2                          l775 2A02                          l956 28C8  
                        l877 251E         __end_of_BlinkDisable 28CA                  ?_Ds1307Init 0049  
                ?_Ds1307Read 005A                          _cnt 00BA                 ___awmod@sign 005D  
             ?_M74HC595Write 0049                          wreg 0FE8                   _TXSTA1bits 0FAC  
           ??_UpdateSetValue 0058                ??_MarkDisplay 0058              __end_of_I2cInit 2960  
            __end_of_I2cRead 27F6              __end_of_I2cWait 28EC              __end_of_I2cStop 2996  
           _SYSTEM_STATE_FLG 006F                         l1121 0E40                         l1114 0D98  
                       l1106 0CF4                         l1131 0F14                         l1124 0E7E  
                       l1141 0FF6                         l1117 0DD6                         l1109 0D32  
                       l1134 0F52                         l1143 1070                         l1152 06AC  
                       l1241 20F4                         l1233 27BC                         l1153 06DE  
                       l1226 0C24                         l1154 06DA                         l1138 0FB8  
                       l1163 0734                         l1155 0CC4                         l2141 21B8  
                       l1246 2784                         l1087 24B0                         l1175 085E  
                       l1249 29D8                         l2154 2328                         l1178 08C4  
                       l1740 2236                         l2620 2630                         l1742 224C  
                       l2614 243A                         l1743 224E                         l1736 220A  
                       l2632 202C                         l1745 2278                         l1761 28A2  
                       l6001 2780                         l1738 2220                         l2650 2A12  
                       l6011 27A0                         l6003 2786                         l1749 2936  
                       l6101 292E                         l1773 26C4                         l6021 2030  
                       l6013 27B2                         l6005 2788                         l6111 288C  
                       l6031 207A                         l6023 203E                         l6015 27B6  
                       l6007 279A                         l2647 2850                         l6201 243C  
                       l6105 2934                         l6113 289C                         l6041 20B2  
                       l6033 208A                         l6025 2066                         l6009 279E  
                       l6017 27B8                         l1778 2708                         l6211 281E  
                       l6203 2446                         l6115 289E                         l7011 2534  
                       l7003 2520                         l6035 208E                         l6027 206A  
                       l6043 20B6                         l6019 202E                         l6205 27F6  
                       l6221 21E2                         l6213 21BC                         l6109 287E  
                       l7021 2552                         l7013 253A                         l7005 2524  
                       l6141 2972                         l6045 20C4                         l6037 2094  
                       l6029 206C                         l7101 0EEA                         l6231 220C  
                       l6223 21E6                         l6215 21C4                         l6135 29DA  
                       l7031 2578                         l7023 2556                         l7015 2546  
                       l7007 2528                         l6151 27E2                         l6143 27C0  
                       l6047 20EC                         l6039 20A2                         l7111 0F3E  
                       l7103 0F00                         l7201 28B8                         l6137 29E8  
                       l6153 2A0E                         l6209 280C                         l6241 2246  
                       l6233 221A                         l6225 21F4                         l6217 21D2  
                       l6161 2862                         l7025 255A                         l7017 254A  
                       l7009 2530                         l6145 27C0                         l6049 20F0  
                       l7121 0F8E                         l7113 0F4E                         l7105 0F10  
                       l7041 0D00                         l7033 0CC6                         l6139 29F0  
                       l6243 2268                         l6235 2222                         l6227 21F6  
                       l6219 21D4                         l6171 267C                         l6163 2864  
                       l6155 2854                         l6251 26E8                         l7027 255E  
                       l7019 254E                         l6147 27D4                         l7131 0FE2  
                       l7123 0FA4                         l7107 0F20                         l7051 0D3A  
                       l7043 0D08                         l7035 0CCA                         l6245 2276  
                       l6237 2230                         l6229 2204                         l6181 26C0  
                       l6173 26B8                         l6165 2872                         l6157 285A  
                       l7029 256C                         l6149 27D8                         l6501 0808  
                       l7133 0FF2                         l7125 0FB4                         l7117 0F5A  
                       l7109 0F28                         l7061 0DA4                         l7053 0D52  
                       l7045 0D1E                         l7037 0CE0                         l6239 2238  
                       l6175 26BA                         l6183 24B2                         l6159 285E  
                       l6247 26C4                         l6167 2996                         l7151 1CD4  
                       l6511 082A                         l6503 080C                         l7127 0FC4  
                       l7119 0F72                         l7071 0DDE                         l7063 0DAC  
                       l7055 0D6E                         l7047 0D2E                         l7039 0CF0  
                       l7143 102E                         l6177 26BC                         l6193 24DA  
                       l6185 24D2                         l6249 26D8                         l6169 2A0A  
                       l7161 1CF2                         l7153 1CE4                         l6601 0A22  
                       l6513 082C                         l6441 0654                         l7137 0FFE  
                       l7129 0FCC                         l7081 0E4C                         l7073 0DF6  
                       l7065 0DC2                         l7057 0D84                         l6179 26BE  
                       l6195 24F8                         l6187 24D6                         l6099 2920  
                       l7171 1D34                         l7163 1D02                         l7155 1CEA  
                       l6611 0A3E                         l6603 0A26                         l6531 08C0  
                       l6523 0888                         l6515 085A                         l6507 0822  
                       l6451 06A8                         l6443 0664                         l7139 1016  
                       l7091 0E86                         l7083 0E54                         l7075 0E16  
                       l7067 0DD2                         l7059 0D94                         l9011 1F5A  
                       l6197 24FA                         l7173 1D40                         l7165 1D06  
                       l7149 1CCA                         l6621 0A6E                         l6613 0A4E  
                       l6541 08EE                         l6533 08D8                         l6525 088C  
                       l6517 0872                         l6509 0826                         l6453 06B4  
                       l6445 0678                         l7093 0E9E                         l7085 0E6A  
                       l7077 0E2C                         l9021 1FDC                         l9013 1F6C  
                       l7191 28A4                         l9103 12F0                         l6199 250A  
                       l5903 2984                         l5911 2908                         l7167 1D1C  
                       l7159 1CF0                         l6615 0A5E                         l6551 094C  
                       l6543 0920                         l6535 08DC                         l6527 0890  
                       l6519 0876                         l6471 06FA                         l6463 06F2  
                       l6455 06C4                         l6447 0688                         l7095 0ECA  
                       l7087 0E7A                         l7079 0E3C                         l9023 201A  
                       l9015 1F7E                         l9031 23EE                         l9201 135C  
                       l5905 28CA                         l5913 291A                         l7169 1D1E  
                       l7177 1D46                         l6721 0BE0                         l6713 0BD4  
                       l6705 0BC8                         l6633 0A8A                         l6609 0A2E  
                       l6561 0964                         l6553 0950                         l6529 0892  
                       l6481 077C                         l6473 0738                         l6457 06D6  
                       l6449 0698                         l7097 0ED2                         l9017 1F88  
                       l9033 23FC                         l9123 1308                         l9115 12FC  
                       l9107 12F6                         l9051 12A8                         l5907 28E6  
                       l7179 1D90                         l9211 2108                         l5915 29CC  
                       l6715 0BD8                         l6707 0BCC                         l6635 0A92  
                       l6627 0A76                         l6571 09A8                         l6555 0958  
                       l6547 0938                         l6491 07C4                         l6483 0790  
                       l6475 073A                         l6459 06E2                         l7099 0EE2  
                       l9019 1FA6                         l9035 2400                         l9027 23BC  
                       l7197 28A8                         l9045 129E                         l5933 294C  
                       l5909 2960                         l9221 212E                         l9213 2110  
                       l5941 1AAE                         l6653 0AF4                         l6645 0AA6  
                       l6565 096C                         l6557 095C                         l6549 0948  
                       l6493 07D8                         l6485 0794                         l6477 0768  
                       l9029 23E0                         l7199 28B6                         l9151 1320  
                       l9143 131A                         l9127 130E                         l9119 1302  
                       l9071 12C6                         l9063 12BA                         l9055 12AE  
                       l9047 12A2                         l9311 2632                         l5935 2952  
                       l9231 2166                         l9223 2136                         l9215 2114  
                       l9207 20F6                         l9303 270A                         l5951 1B04  
                       l5943 1ABE                         l6671 0B24                         l6663 0B04  
                       l6655 0AF8                         l6647 0AE8                         l6591 0A0A  
                       l6575 09B0                         l6559 0960                         l6495 07DC  
                       l6487 07A8                         l6479 076C                         l9039 2412  
                       l9241 2192                         l9233 216C                         l9225 2148  
                       l9217 2122                         l9209 20FA                         l9321 1932  
                       l9313 17D6                         l9305 2714                         l5961 1B2A  
                       l5945 1ADA                         l5953 1B0A                         l5937 1A8E  
                       l6753 0C30                         l6745 0C08                         l6737 0BF4  
                       l6673 0B28                         l6657 0AFC                         l6593 0A0E  
                       l6585 09BC                         l6577 09B4                         l6569 0980  
                       l6497 07F0                         l6489 07B4                         l9401 11F6  
                       l9171 1338                         l9155 1326                         l9139 1314  
                       l9091 12E4                         l9083 12D8                         l9075 12CC  
                       l9067 12C0                         l9059 12B4                         l9235 2182  
                       l9227 2150                         l9243 2198                         l9219 212A  
                       l9251 227A                         l9315 17E6                         l9307 2734  
                       l5971 1B80                         l5963 1B38                         l5955 1B1A  
                       l5947 1AE4                         l5939 1A9E                         l6747 0C18  
                       l6691 0B96                         l6675 0B2C                         l6667 0B18  
                       l6683 0B34                         l6595 0A12                         l6587 09EE  
                       l6499 0800                         l9411 123E                         l9331 1086  
                       l9245 21A8                         l9237 218A                         l9229 2158  
                       l9261 22A6                         l9253 227E                         l9317 187A  
                       l9309 2736                         l5973 1B92                         l5965 1B4A  
                       l5957 1B1E                         l5949 1AF4                         l5981 29FE  
                       l6685 0B76                         l6669 0B20                         l6597 0A1A  
                       l6589 09FA                         l6757 0C7A                         l9421 125C  
                       l9405 11FE                         l9333 1098                         l9341 10CA  
                       l9325 1072                         l9191 1350                         l9175 133E  
                       l9167 1332                         l9159 132C                         l9087 12DE  
                       l9079 12D2                         l6951 1952                         l9247 21B0  
                       l9239 218C                         l9271 22DE                         l9263 22AE  
                       l9255 228C                         l9319 188A                         l5975 1BA4  
                       l5967 1B5C                         l5959 1B24                         l5991 2768  
                       l5983 274C                         l6695 0BA4                         l6687 0B7C  
                       l6599 0A1E                         l9407 122A                         l9351 1108  
                       l9343 10DA                         l9335 10B0                         l9327 107E  
                       l5977 29A8                         l6961 1970                         l6953 1958  
                       l6945 193E                         l9281 2318                         l9273 22F4  
                       l9265 22C0                         l9257 2294                         l5969 1B6E  
                       l5985 275C                         l5993 2770                         l6697 0BAA  
                       l6689 0B92                         l9361 1130                         l9345 10EA  
                       l9337 10BC                         l9329 1082                         l9195 1356  
                       l9187 134A                         l9179 1344                         l9099 12EA  
                       l6971 19AE                         l6963 1972                         l6947 1942  
                       l9283 2320                         l9275 22FC                         l9267 22C8  
                       l9259 2298                         l5979 2A04                         l5995 2774  
                       l5987 2760                         l6699 0BC0                         l9291 260A  
                       l9371 1150                         l9363 113A                         l9355 111C  
                       l9347 10F2                         l9339 10C6                         l6981 1A26  
                       l6973 19B8                         l6965 1982                         l6949 1948  
                       l9277 2302                         l9269 22D0                         l5997 2778  
                       l5989 2764                         l9293 2626                         l9381 1170  
                       l9373 1156                         l9365 113E                         l9357 1124  
                       l9349 1104                         l6975 19CC                         l6967 198A  
                       l6959 195C                         l9279 2308                         l5999 277C  
                       l9287 25E0                         l9383 1174                         l9375 115E  
                       l9367 1144                         l9359 112C                         l6977 19D6  
                       l6985 1A4E                         l6969 199E                         l9289 25EC  
                       l9297 2828                         l9385 117A                         l9377 1162  
                       l9369 114C                         l6979 19FE                         l6987 1A80  
                       l9299 2832                         l9387 117E                         l9379 1168  
                       l6989 1A84                         l9901 1A62                         l9389 1182  
                       l9397 118A                         l9903 1370                         l9399 11D6  
                       STR_1 064D                         STR_2 0601                         l9881 1272  
                       STR_4 0642                         l9891 0ABA                         l9883 1042  
                       STR_5 062C                         l9893 0B48                         l9885 070E  
                       l9877 11A0                         l9895 0C44                         l9887 0902  
                       l9879 1214                         l9897 0C8E                         l9889 09D0  
                       l9899 1D5A                         u4000 06C4                         u4001 06C0  
                       u4010 06D6                         u4011 06D2                         u4100 085A  
                       u4020 0768                         u4101 0856                         u4021 0764  
                       u4110 0872                         u4030 077C                         u4111 086E  
                       u4031 0778                         u3400 28D8                         u4200 0A3E  
                       u4120 08C0                         u4040 0790                         u3401 28D4  
                       u4201 0A3A                         u4121 08BC                         u4041 078C  
                       u3410 28E6                         u4210 0A5E                         u4130 08D8  
                       u4050 07A8                         u3411 28E2                         u4211 0A5A  
                       u4131 08D4                         u4051 07A4                         u3420 2970  
                       u3500 1ADA                         u4220 0A86                         u4140 0934  
                       u4060 07C4                         u3421 296C                         u3501 1AD6  
                       u4221 0A82                         u4141 0930                         u4061 07C0  
                       u3430 291A                         u3510 1AF4                         u4230 0AA2  
                       u4150 0948                         u4070 07D8                         u3431 2916  
                       u3511 1AF0                         u4231 0A9E                         u4151 0944  
                       u4071 07D4                         _PIE1 0F9D                         u3600 20A2  
                       u3520 1B04                         u4240 0B92                         u4160 097C  
                       u4080 07F0                         u3601 209E                         u3521 1B00  
                       u4241 0B8E                         u4161 0978                         u4081 07EC  
                       u3610 20B2                         u3530 275C                         u4250 0BC0  
                       u4170 09A4                         u4090 0800                         u3611 20AE  
                       u3531 2758                         u4251 0BBC                         u4171 099E  
                       u4091 07FC                         u3700 292E                         u3620 20C4  
                       u3540 279A                         u4260 0BF0                         u4180 09A6  
                       u4500 0CE0                         u3701 292A                         u3621 20C0  
                       u3541 2796                         u4261 0BEC                         u4501 0CDC  
                       u3710 288C                         u3390 2994                         u3630 20EC  
                       u3550 27B2                         u4270 0C04                         u4190 0A0A  
                       u4510 0CF0                         u3711 2888                         u3391 2990  
                       u3631 20E8                         u3551 27AE                         u4271 0C00  
                       u4191 0A06                         u4511 0CEC                         u3800 2808  
                       u3720 289C                         u4440 1982                         u3560 203E  
                       u3480 1AAE                         u4280 0C18                         u4600 0E2C  
                       u4520 0D1E                         u3801 2804                         u3721 2898  
                       u4441 197E                         u3561 203A                         u3481 1AAA  
                       u4281 0C14                         u4601 0E28                         u4521 0D1A  
                       u3810 281E                         u4450 199A                         u3570 2066  
                       u3490 1ABE                         u4610 0E3C                         u4530 0D2E  
                       u3811 281A                         u4451 1994                         u3571 2062  
                       u3491 1ABA                         u4611 0E38                         u4531 0D2A  
                       u3900 2276                         u3820 21D2                         u3740 2982  
                       u4460 199C                         u6300 2108                         u3580 207A  
                       u4700 0F4E                         u4620 0E6A                         u4540 0D52  
                       u3901 2272                         u3821 21CE                         u3741 297E  
                       u6301 2104                         u3581 2076                         u4701 0F4A  
                       u4621 0E66                         u4541 0D4E                         u3830 21E2  
                       u3910 26D8                         u3750 27D0                         u4470 19AE  
                       u6310 2122                         u3590 208A                         u4710 0F72  
                       u4630 0E7A                         u4550 0D84                         u3831 21DE  
                       u3911 26D4                         u3751 27CC                         u4471 19AA  
                       u6311 211E                         u3591 2086                         u4711 0F6E  
                       u4631 0E76                         u4551 0D80                         u3840 21F4  
                       u3920 2708                         u4480 19C8                         u4800 1D34  
                       u6320 2148                         u6400 22F4                         u4720 0FA4  
                       u4640 0E9E                         u4560 0D94                         u3841 21F0  
                       u3921 2704                         u4481 19C2                         u4801 1D30  
                       u6321 2144                         u6401 22F0                         u4721 0FA0  
                       u4641 0E9A                         u4561 0D90                         u3850 2204  
                       u3770 27F2                         u4490 19CA                         u4810 1DA0  
                       u6330 2166                         u6410 2318                         u4730 0FB4  
                       u4650 0ECA                         u4570 0DC2                         u6250 1F6C  
                       u3851 2200                         u3771 27EE                         u4811 1D9C  
                       u6331 2162                         u6411 2314                         u4731 0FB0  
                       u4651 0EC6                         u4571 0DBE                         u6251 1F68  
                       u4820 28C8                         u3860 221A                         u3780 2872  
                       u6340 2182                         u4740 0FE2                         u4660 0EE2  
                       u4580 0DD2                         u6260 1F7E                         u6420 2626  
                       u6500 1116                         u4821 28C4                         u3861 2216  
                       u3781 286E                         u3765 27E0                         u6341 217E  
                       u4741 0FDE                         u4661 0EDE                         u4581 0DCE  
                       u6261 1F7A                         u6421 2622                         u6501 1112  
                       u3870 2230                         u3790 250A                         u3766 27E2  
                       u6350 21A8                         u6430 274A                         u4750 0FF2  
                       u4670 0F00                         u4590 0DF6                         u6270 1FA6  
                       u6510 123A                         u3871 222C                         u3791 2506  
                       u6351 21A4                         u6431 2746                         u4751 0FEE  
                       u4671 0EFC                         u4591 0DF2                         u6271 1FA2  
                       u6511 1236                         u3880 2246                         u6360 228C  
                       u6440 17E6                         u3960 0664                         u4760 1016  
                       u4680 0F10                         u6280 1FDC                         u3881 2242  
                       u6361 2288                         u6441 17E2                         u3961 0660  
                       u4761 1012                         u4681 0F0C                         u6281 1FD8  
                       u3890 2268                         u4770 1CE4                         u6370 22A6  
                       u6450 188A                         u3970 0688                         u4690 0F3E  
                       u6290 23E0                         u3891 2264                         u4771 1CE0  
                       u6371 22A2                         u6451 1886                         u3971 0684  
                       u4691 0F3A                         u6291 23DC                         u4780 1D02  
                       u6380 22C0                         u3980 0698                         u6460 1098  
                       u4781 1CFE                         u6381 22BC                         u3981 0694  
                       u6461 1094                         u4790 1D1C                         u6390 22DE  
                       u3990 06A8                         u6470 10B0                         u4791 1D18  
                       u6391 22DA                         u3991 06A4                         u6471 10AC  
                       u6480 10DA                         u6481 10D6                         u6490 1104  
                       u6491 1100                         _TMR2 0FCC                         _dbuf 0100  
                       _main 1072                 ?_Ds1307Write 0059                         _prec 0096  
                       fsr1h 0FE2                         fsr2h 0FDA                         indf1 0FE7  
                       indf2 0FDF                         fsr1l 0FE1                         fsr2l 0FD9  
                       btemp 0070                         start 0058                ??_ReadCounter 0062  
               ___param_bank 0000             __end_of_I2cStart 2972             __end_of_I2cWrite 2920  
                 _DeviceInit 2520         __end_of_ClockSetting 267C              ??i2_ScanCounter 0049  
                      ?_main 0049                ??_ScanDisplay 004D              __end_of___awdiv 21BA  
                      _EEADR 0FA9              __end_of___awmod 232A                   _Gateway_IP 012E  
                      _T0CON 0FD5              ___awdiv@divisor 005A                        _T1CON 0FCD  
                      _T2CON 0FCA                        _T3CON 0FB1                ??_ScanCounter 0055  
                      i2l401 25D6                        i2l402 25DE                        i1l666 0048  
                      i2l456 29CA                        i1l779 1E7E                        i2l646 1C9C  
                      i2l659 1CBE                        i2l881 164E                        i2l779 1F58  
            ___awdiv@counter 005C                ??_ScanButtons 0049                 vfpfcnvrt@fmt 014E  
       _continue_pressed_cnt 00BC                        _TMR0H 0FD7                        _TMR1H 0FCF  
                      _TMR0L 0FD6                        _TMR1L 0FCE                        _TMR3H 0FB3  
                      _TMR3L 0FB2           _rtc_default_values 0132  Ds1307Read@ds1307_date_datas 0060  
                 _Busy1USART 2920                        _flags 000F                        _fputc 1F5A  
                      _width 0094                        _putch 2A12              __end_of_low_isr 0058  
                      tablat 0FF5          __end_of_MarkDisplay 14A8                        ttemp5 0071  
                      ttemp6 0074                        ttemp7 0078                        status 0FD8  
                      wtemp8 0071                _DecValProcess 202E              __initialization 232A  
                Ds1307Read@i 005F                 __end_of_main 129C          _up_btn_released_cnt 00C4  
              ??_OpenDisplay 0058                ??_OpenCounter 0058                   _Open1USART 21BA  
              ??_OpenButtons 0058  UpdateDisplay@start_position 0154                       ??_main 0158  
        __end_of_ReadCounter 193C                i2_WriteTimer0 29BA                    ??_I2cInit 0058  
                  ??_I2cRead 0058              ??_M74HC595Write 0049                    ??_I2cWait 0058  
             _OscillatorInit 29DA                __activetblptr 0002                    ??_I2cStop 0058  
        __end_of_ScanDisplay 1650                       _ADCON0 0FC2                       _ADCON1 0FC1  
     Ds1307Write@write_datas 0059                       ?_fputc 0058                       _EEDATA 0FA8  
        __end_of_ScanCounter 1E80                       _EECON2 0FA7             ___awdiv@dividend 0058  
                     ?_putch 0049          __end_of_ScanButtons 17D6                       _S0_DIP 00E6  
                     _S1_DIP 00E2                       i2l1100 17D4                       i1l4141 1DBA  
                     i1l4151 1DE4                       i1l4143 1DCA                       i1l4161 1E20  
                     i1l4153 1DF6                       i1l4145 1DCC                       i1l4137 1DA6  
                     i1l4171 1E54                       i1l4163 1E30                       i1l4155 1DFA  
                     i1l4147 1DDE                       i1l4181 1E78                       i1l4173 1E56  
                     i1l4165 1E40                       i1l4149 1DE2                       i1l4157 1E00  
                     i1l4183 1E7C                       i1l4175 1E64                       i1l4159 1E10  
                     i1l4177 1E68                       i1l4169 1E50                       _S2_DIP 00DE  
                     i1l4179 1E6A                       i1l4801 0044                   _OpenTimer0 2852  
                     _S3_DIP 00DA                       i1l4795 0026                       i1l4797 0034  
                     i1l4799 0042                       _S4_DIP 00D6                       i2l7301 166C  
                     i2l7311 169C                       i2l7303 1670                       i2l6431 25B8  
                     i2l6415 2586                       i2l7231 14D6                       i2l7321 16CA  
                     i2l7313 16AA                       i2l7305 167E                       i2l6433 25BA  
                     i2l6425 2590                       i2l6417 258A                       i2l7241 1516  
                     i2l7225 14A8                       _S5_DIP 00D2                       i2l7331 1702  
                     i2l7323 16DC                       i2l7315 16B4                       i2l7307 168E  
                     i2l6435 25BC                       i2l6427 25AE                       i2l6419 258C  
                     i2l7251 1538                       i2l7243 151C                       i2l7235 1500  
                     i2l7227 14B8                       i2l7341 1732                       i2l7333 1706  
                     i2l7325 16E4                       i2l7317 16B8                       i2l7309 1696  
                     i2l6437 25C4                       i2l6429 25B6                       i2l7261 1566  
                     i2l7253 1540                       i2l7245 1524                       i2l7237 1508  
                     i2l7229 14BA                       i2l7351 1758                       i2l7343 1738  
                     i2l7335 170A                       i2l7327 16EA                       i2l7319 16BC  
                     i2l6439 25C6                       i2l7271 1586                       i2l7263 1570  
                     i2l7255 1546                       i2l7247 152A                       i2l7239 150E  
                     i2l7361 1794                       i2l7353 1766                       i2l7345 1746  
                     i2l7337 1718                       i2l7329 16F8                       i2l7281 1608  
                     i2l7273 158A                       i2l7265 1576                       i2l7257 154E  
                     i2l7249 1532                       i2l7601 29BA                       i2l7371 17C6  
                     i2l7363 179E                       i2l7355 1778                       i2l7347 1750  
                     i2l7339 172A                       i2l7283 161C                       i2l7267 157C  
                     i2l7259 1554                       i2l7611 1EA6                       i2l7603 1E80  
                     i2l7373 17CE                       i2l7365 17A2                       i2l7357 1780  
                     i2l7349 1754                       i2l7285 161E                       i2l7269 1584  
                     i2l7277 1590                       i2l7621 1ED4                       i2l7613 1EB8  
                     i2l7367 17A6                       i2l7359 1786                       i2l7295 1650  
                     i2l7287 162E                       i2l7279 15EA                       i2l7631 1F1A  
                     i2l7615 1EBC                       i2l7623 1EDA                       i2l7607 1E94  
                     i2l7369 17B4                       i2l7297 165E                       i2l7289 163E  
                     i2l7641 1F3E                       i2l7625 1EEA                       i2l7617 1EBE  
                     i2l7609 1EA4                       i2l7801 1C94                       _S6_DIP 00CE  
                     i2l7299 1668                       i2l7643 1F42                       i2l7627 1EFA  
                     i2l7635 1F2A                       i2l7619 1ED0                       i2l7645 1F44  
                     i2l7637 1F2E                       i2l7629 1F0A                       i2l7805 1CAA  
                     i2l7647 1F52                       i2l7639 1F30                       i2l7807 1CB8  
                     i2l7649 1F56                       i2l7809 1CBA                       i2l7761 1BBA  
                     i2l7763 1BC8                       i2l7781 1BEC                       i2l7765 1BD6  
                     i2l7791 1C5E                       i2l7767 1BDC                       i2l7793 1C64  
                     i2l7785 1BFC                       _S7_DIP 00CA                       i2l7795 1C78  
                     i2l7787 1C56                       i2l7797 1C7A                       i2l7789 1C5A  
                     i2l7799 1C82                       i2l9905 1C10                       i2l9907 15A4  
                     _RCREG1 0FAE                       _RCSTA1 0FAB                       _SPBRG1 0FAF  
          _temp_system_state 003A                       _SSPADD 0FC8                       _SSPBUF 0FC9  
                     _TXREG1 0FAD                       _TXSTA1 0FAC         _sel_btn_released_cnt 00C0  
     _counter_hour_set_value 003D               ?_DecValProcess 0049                 vfprintf@cfmt 0062  
           __end_of_high_isr 1CCA                    ??___awdiv 005C                    ??___awmod 005C  
                ?_DeviceInit 0049             OpenTimer0@config 0058       __end_of_OscillatorInit 29E8  
                     clear_0 2390                       clear_1 239C                       clear_2 23A8  
           ___awdiv@quotient 005E              ___awmod@divisor 005A                   _Puts1USART 26C4  
                     isa$std 0001               ?i2_WriteTimer0 0049              ___awmod@counter 005C  
                     _printf 2828                       fputc@c 0058                 __pdataCOMRAM 0067  
        _rtc_clock_disp_mode 0039          _rtc_clock_disp_type 0041          __end_of_OpenDisplay 2520  
               __mediumconst 0000                    ??_low_isr 0055                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8          __end_of_OpenCounter 26C4  
       _hour_btn_pressed_cnt 0009                  ?_Busy1USART 0049                  _MarkDisplay 129C  
        __end_of_OpenButtons 24B2         Ds1307Write@hour_temp 005B                       putch@c 0049  
           __end_of_vfprintf 2632            M74HC595Write@data 004A            M74HC595Write@temp 004B  
               ??_I2cRestart 0058                    ?_I2cStart 0049                    ?_I2cWrite 0049  
        _EnableAllInterrupts 2A0E                   __accesstop 0080      __end_of__initialization 23AE  
              ___rparam_used 0001                 _BlinkDisable 28A4             ??_UpDownTransfer 0058  
             __pcstackCOMRAM 0049                  _ReadCounter 17D6                 __pidataBANK0 2938  
               __pidataBANK1 28EC                ??_StartTimer0 0058                __end_of_fputc 202E  
              __end_of_putch 2A14         ?_EnableAllInterrupts 0049              ?_OscillatorInit 0049  
                ?_Open1USART 0058                 ??_LEDProcess 0058           __end_of_I2cRestart 2984  
          __end_of_InitValue 2828                  _ScanDisplay 14A8                 ??_Ds1307Init 0058  
               ??_Ds1307Read 005C                  _ScanCounter 1DA6        _hour_btn_released_cnt 00C6  
                _ScanButtons 1650                ??_StopCounter 0058        _counter_down_comp_flg 002A  
      _counter_down_comp_cnt 0029      _counter_down_set_minute 0033      _counter_down_set_second 0032  
      __end_of_IncValProcess 27BE    _btn_long_press_verify_flg 0022                      ??_fputc 005C  
              BlinkDisable@i 0058                      ??_putch 0058                   __pbssBANK0 0080  
                 __pbssBANK1 0100                   ??_I2cStart 0058                  ?_OpenTimer0 0049  
                 ??_I2cWrite 0058                 _ClockSetting 2632                ??_Write1USART 0058  
                 __pnvCOMRAM 006F              ??_DecValProcess 0058        _counter_down_set_hour 0034  
         __end_of_LEDProcess 1DA6           __end_of_Ds1307Init 29F6           __end_of_Ds1307Read 1A8E  
      __end_of_VerifyButtons 1072               I2cRead@receive 0059              ??i2_WriteTimer0 004B  
      ??_EnableAllInterrupts 0058             WriteTimer0@timer 005A        __end_of_UpdateDisplay 274C  
              ??_WriteTimer0 005A                  _OpenDisplay 24B2                  ?_Puts1USART 0059  
                _OpenCounter 267C                      ?_printf 0064                  _OpenButtons 243C  
                    _I2cInit 294C                      _I2cRead 27BE                      _I2cWait 28CA  
                    _I2cStop 2984             Open1USART@config 005A          __end_of_StartTimer0 2A0E  
        Ds1307Read@disp_type 005E                      _S0_Data 0018                      _S1_Data 0017  
         _counter_enable_flg 002E                      _S2_Data 0016                      _S3_Data 0015  
                    _S0_Mode 006E                      _S4_Data 0014                      _S1_Mode 006D  
                    _S5_Data 0013                      _S2_Mode 006C                      _S0_Port 00B8  
              _ActionButtons 0654                      _S6_Data 0012                      _S3_Mode 006B  
                    _S1_Port 00B6                      _S7_Data 0011                      _S4_Mode 006A  
                    _S2_Port 00B4                      _S5_Mode 0069                      _S3_Port 00B2  
                    _S6_Mode 0068                      _S4_Port 00B0                      _S7_Mode 0067  
                    _S5_Port 00AE                      _IP_Addr 0090                      _S6_Port 00AC  
                    _S7_Port 00AA                      _SSPCON1 0FC6             _counter_skip_flg 002C  
                  ?_high_isr 0049                      _SSPSTAT 0FC7          __end_of_StopCounter 2A04  
        i2WriteTimer0@timer0 0049                      __Hparam 0000                      __Lparam 0000  
        __end_of_Write1USART 28A4               M74HC595Write@i 004C                      ___awdiv 20F6  
                    ___awmod 227A                    ?_vfprintf 0152                 __psmallconst 0600  
       _btn_press_verify_flg 0023                      __pcinit 232A                      __ramtop 0600  
                    __ptext0 1072                      __ptext1 2828                      __ptext2 25E0  
                    __ptext3 23BC                      __ptext4 1F5A                      __ptext5 2A12  
                    __ptext6 0CC6                      __ptext7 0654                      __ptext8 274C  
                    __ptext9 29FE                    _T0CONbits 0FD5               OpenS5500@F2850 00EA  
             OpenS5500@F2852 0148               OpenS5500@F2846 013C               OpenS5500@F2848 00EE  
                  _T1CONbits 0FCD                    _T2CONbits 0FCA        __end_ofi2_ScanCounter 1F5A  
                    _int_cnt 003F               ?_ActionButtons 0049                    _T3CONbits 0FB1  
           ___awmod@dividend 0058                _real_rtc_data 0042          __end_of_WriteTimer0 29A8  
                    _low_isr 0018            _rtc_hour_ampm_flg 0040                   ??_high_isr 0051  
             __pintcode_body 1BB0         end_of_initialization 23AE                      fputc@fp 005A  
              __Lmediumconst 0000                      int_func 1BB0                   I2cRead@ack 0058  
          __end_of_vfpfcnvrt 243C                      postdec1 0FE5                      postdec2 0FDD  
             Puts1USART@data 0059                      postinc0 0FEE                      postinc1 0FE6  
                    postinc2 0FDE                 ??_DeviceInit 005C                ?_StartCounter 0049  
                _StartTimer0 2A0A                   ??_vfprintf 0062                    _UDP_DPORT 0098  
                  _PORTAbits 0F80                    _PORTBbits 0F81                    _PORTDbits 0F83  
             OpenW5500@F2673 0142               OpenW5500@F2675 00FA               OpenW5500@F2677 00F6  
             OpenW5500@F2679 00F2           _counter_seting_flg 002B        __end_of_M74HC595Write 25E0  
                  _TRISAbits 0F92                    _TRISBbits 0F93                    _TRISCbits 0F94  
                _StopCounter 29FE                    _TRISDbits 0F95                 ??_Busy1USART 0058  
               ?_MarkDisplay 0049       _reset_btn_released_cnt 00BE                ?_M74HC595Init 0049  
         __end_of_DeviceInit 2584        _counter_min_set_value 003C                  _Write1USART 287C  
               OpenDisplay@i 0058             ??_OscillatorInit 0058                 ?_ReadCounter 0060  
             ??_StartCounter 0058           __end_of_Busy1USART 2938                  vfpfcnvrt@ap 0150  
                vfpfcnvrt@fp 014C                __pidataCOMRAM 29F6                 ??_Open1USART 005A  
                _WriteTimer0 2996              ??_ActionButtons 005C                 ?_ScanDisplay 0049  
               ?_ScanCounter 0049               __end_of_printf 2852                 ?_ScanButtons 0049  
        start_initialization 232A         _down_btn_pressed_cnt 0005                    _InitValue 27F6  
             ??_M74HC595Init 0058                 ??_OpenTimer0 0058                ??_Ds1307Write 005B  
  UpdateDisplay@update_datas 0152           __end_of_Open1USART 227A                  vfprintf@fmt 0154  
      _counter_sec_set_value 003B              _BTN_CLICK_EVENT 0024              _BTN_CLICK_STATE 0025  
                __pdataBANK0 00EA                  __pdataBANK1 0132                 ?_OpenDisplay 0049  
               ??_Puts1USART 005B                 ?_OpenCounter 0049                     ??_printf 0066  
               ?_OpenButtons 0049                     ?_I2cInit 0049           __end_of_OpenTimer0 287C  
                   ?_I2cRead 0049                     ?_I2cWait 0049                     ?_I2cStop 0049  
                __pbssCOMRAM 0001              MarkDisplay@mark 005A                __pcstackBANK0 00FE  
              __pcstackBANK1 014C                   ?_InitValue 0049           _rtc_clock_set_mode 0038  
             _UpdateSetValue 29CC           _up_btn_pressed_cnt 0007           __end_of_Puts1USART 270A  
      __end_of_DecValProcess 20F6  __end_of_EnableAllInterrupts 2A12                    __pintcode 0008  
        __end_of_Ds1307Write 1BB0                    _blink_cnt 0026                    _blink_pos 0080  
                   ?___awdiv 0058                     ?___awmod 0058                  __pintcodelo 0018  
            Open1USART@spbrg 0058          _sel_btn_pressed_cnt 0003        __end_ofi2_WriteTimer0 29CC  
            _counter_up_hour 0031                  __smallconst 0600            WriteTimer0@timer0 0058  
         i2WriteTimer0@timer 004B                     ?_low_isr 0049            _counter_down_hour 0037  
            Write1USART@data 0058         __end_of_StartCounter 2A0A                     _I2cStart 2960  
     __end_of_UpdateSetValue 29DA                     _I2cWrite 2906                     _LATBbits 0F8A  
                   _LATCbits 0F8B                     _LATDbits 0F8C                     _S0_DPort 00A8  
                   _S1_DPort 00A6                     _S2_DPort 00A4                     _S3_DPort 00A2  
                   _PIE1bits 0F9D                     _PIE2bits 0FA0         _set_mode_release_cnt 00C8  
                   _S4_DPort 00A0                     _S5_DPort 009E                     _S6_DPort 009C  
                   i1u225_20 0034                     i1u225_21 0030                     i1u170_20 1DB6  
                   i1u226_20 0042                     i1u170_21 1DB2                     i1u226_21 003E  
                   i1u171_20 1DCA                     i1u171_21 1DC6                     i1u172_20 1DDE  
                   i1u172_21 1DDA                     _S7_DPort 009A                     i1u173_20 1DF6  
                   i1u173_21 1DF2                     i1u174_20 1E10                     i1u174_21 1E0C  
                   _S0_State 0020                     i1u175_20 1E20                     i1u175_21 1E1C  
                   i1u176_20 1E30                     i1u176_21 1E2C                     i1u177_20 1E40  
                   i1u177_21 1E3C                     i1u178_20 1E64                     i1u178_21 1E60  
                   i1u179_20 1E78                     i1u179_21 1E74                     _S1_State 001F  
                   i2u500_40 1718                     i2u500_41 1714                     i2u501_40 172A  
                   i2u501_41 1726                     _S2_State 001E                     i2u502_40 1746  
                   i2u502_41 1742                     i2u503_40 1766                     i2u511_40 1E90  
                   i2u503_41 1762                     i2u511_41 1E8C                     i2u504_40 1778  
                   i2u520_40 1F52                     i2u512_40 1EA4                     i2u504_41 1774  
                   i2u520_41 1F4E                     i2u512_41 1EA0                     i2u505_40 1794  
                   i2u513_40 1EB8                     i2u505_41 1790                     i2u513_41 1EB4  
                   _PIR1bits 0F9E                     i2u506_40 17B4                     i2u514_40 1ED0  
                   i2u530_40 1C94                     i2u506_41 17B0                     i2u514_41 1ECC  
                   i2u530_41 1C90                     i2u507_40 17C6                     i2u515_40 1EEA  
                   i2u531_40 1CAA                     i2u507_41 17C2                     i2u515_41 1EE6  
                   i2u531_41 1CA6                     _PIR2bits 0FA1                     i2u516_40 1EFA  
                   i2u532_40 1CB8                     i2u516_41 1EF6                     i2u532_41 1CB4  
                   i2u517_40 1F0A                     i2u517_41 1F06                     _S3_State 001D  
                   i2u518_40 1F1A                     i2u518_41 1F16                     i2u519_40 1F3E  
                   i2u527_40 1BC8                     i2u519_41 1F3A                     i2u527_41 1BC4  
                   i2u528_40 1BD6                     i2u528_41 1BD2                     i2u393_40 25A2  
                   i2u529_40 1C78                     i2u393_41 259A                     i2u529_41 1C74  
                   i2u490_40 161C                     i2u490_41 1618                     i2u395_40 25D6  
                   i2u394_48 25A4                     i2u491_40 162E                     i2u395_41 25D2  
                   i2u491_41 162A                     i2u492_40 163E                     i2u492_41 163A  
                   i2u493_40 165E                     i2u493_41 165A                     _S4_State 001C  
                   i2u494_40 167E                     i2u486_40 14D6                     i2u494_41 167A  
                   i2u486_41 14D2                     i2u495_40 168E                     i2u487_40 14FC  
                   i2u495_41 168A                     i2u487_41 14F8                     i2u496_40 16AA  
                   i2u488_40 1566                     i2u496_41 16A6                     i2u488_41 1562  
                   i2u497_40 16CA                     i2u489_40 1608                     i2u497_41 16C6  
                   i2u489_41 1604                     i2u498_40 16DC                     i2u498_41 16D8  
                   i2u499_40 16F8                     i2u499_41 16F4                     _S5_State 001B  
                   _S6_State 001A                     _RCONbits 0FD0                     _S7_State 0019  
                   _UDP_DIPR 0126                 ?_StartTimer0 0049                  _display_cnt 0027  
       __end_of_M74HC595Init 29BA                    _vfpfcnvrt 23BC            _counter_up_minute 0030  
          _counter_up_second 002F                 ?_StopCounter 0049                  ??_InitValue 0058  
                _INTCON2bits 0FF1                  _INTCON3bits 0FF0                    copy_data0 233E  
                  copy_data1 235E                    copy_data2 237E                _IncValProcess 2786  
            ?_UpdateSetValue 0049                 ?_Write1USART 0049                  _Ds1307Write 1A8E  
                 _EECON1bits 0FA6                ?_BlinkDisable 0049                     _Phy_Addr 0120  
                   __Hrparam 0000                   vfprintf@ap 0156                     __Lrparam 0000  
                 vfprintf@fp 0152                     _Sub_Mask 012A                _VerifyButtons 0CC6  
             UpdateDisplay@i 0066              _W5500_Interrupt 0010                   _BLINK_TIME 000B  
                 ?_vfpfcnvrt 014C                 ?_WriteTimer0 0058                _UpdateDisplay 270A  
        _counter_down_minute 0036          _counter_down_second 0035                     __ptext10 2A04  
                   __ptext11 2786                     __ptext20 193C                     __ptext12 1A8E  
                   __ptext21 2906                     __ptext13 202E                     __ptext30 26C4  
                   __ptext22 2960                     __ptext14 29CC                     __ptext31 287C  
                   __ptext23 2972                     __ptext15 270A                     __ptext40 27F6  
                   __ptext32 2920                     __ptext24 27BE                     __ptext16 17D6  
                   __ptext41 2A0E                     __ptext33 29DA                     __ptext25 28CA  
                   __ptext17 227A                     __ptext50 29BA                     __ptext42 29E8  
                   __ptext34 2852                     __ptext26 2984                     __ptext18 20F6  
                   __ptext51 1E80                     __ptext43 294C                     __ptext35 24B2  
                   __ptext27 2520                     __ptext19 1CCA                     __ptext52 14A8  
                   __ptext44 2632                     __ptext36 29A8                     __ptext28 2996  
                   __ptext53 2584                     __ptext45 129C                     __ptext37 267C  
                   __ptext29 2A0A                     __ptext54 1650                     __ptext46 28A4  
                   __ptext38 243C                     __ptext39 21BA                     __ptext48 1DA6  
             ?_IncValProcess 0049        _reset_btn_pressed_cnt 0001                     _high_isr 0008  
              ?_ClockSetting 0049                   _I2cRestart 2972               ??_BlinkDisable 0058  
             ?_VerifyButtons 0049                     isa$xinst 0000                     int$flags 0070  
                   _vfprintf 25E0                    printf@fmt 0064               ?_UpdateDisplay 0152  
          _SYSTEM_ACTION_FLG 003E               _UpDownTransfer 274C                _USART1_Status 0021  
                 _LEDProcess 1CCA                   _Ds1307Init 29E8                   _Ds1307Read 193C  
           _blink_enable_flg 0028                  _OSCTUNEbits 0F9B        __end_of_ActionButtons 0CC6  
                 _INTCONbits 0FF2                i2_ScanCounter 1E80               ??_ClockSetting 005B  
                   intlevel1 0000                     intlevel2 0000                   _RCSTA1bits 0FAB  
                 _OSCCONbits 0FD3                     printf@ap 00FE       __end_of_UpDownTransfer 2786  
               _StartCounter 2A04                  ??_vfpfcnvrt 0062        _down_btn_released_cnt 00C2  
             ?i2_ScanCounter 0049                _led_blink_cnt 000D              ??_IncValProcess 0058  
              _M74HC595Write 2584                  _SSPCON1bits 0FC6                  _SSPCON2bits 0FC5  
               I2cWrite@data 0058                  ?_I2cRestart 0049                _display_datas 0088  
               _M74HC595Init 29A8        _counter_direction_flg 002D            ActionButtons@temp 005E  
            ??_VerifyButtons 005F  
