

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Dec 01 09:43:32 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Generated 23/03/2023 GMT
    72                           ; 
    73                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4520 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   000000                     
   106                           	psect	idataBANK0
   107   00278E                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for _rtc_default_values
   111   00278E  10                 	db	16
   112   00278F  12                 	db	18
   113   002790  09                 	db	9
   114   002791  05                 	db	5
   115   002792  30                 	db	48
   116   002793  11                 	db	17
   117   002794  23                 	db	35
   118   002795  00                 	db	0
   119   002796  00                 	db	0
   120   002797  00                 	db	0
   121   000000                     _EECON2	set	4007
   122   000000                     _EEDATA	set	4008
   123   000000                     _EEADR	set	4009
   124   000000                     _TXREG1	set	4013
   125   000000                     _RCREG1	set	4014
   126   000000                     _SPBRG1	set	4015
   127   000000                     _INTCON2bits	set	4081
   128   000000                     _TMR3L	set	4018
   129   000000                     _TMR3H	set	4019
   130   000000                     _TMR1L	set	4046
   131   000000                     _TMR1H	set	4047
   132   000000                     _TMR0L	set	4054
   133   000000                     _TMR0H	set	4055
   134                           
   135                           	psect	nvCOMRAM
   136   00006F                     __pnvCOMRAM:
   137                           	callstack 0
   138   00006F                     _SYSTEM_STATE_FLG:
   139                           	callstack 0
   140   00006F                     	ds	1
   141   000000                     _SSPCON1	set	4038
   142   000000                     _SSPSTAT	set	4039
   143   000000                     _PIE1	set	3997
   144   000000                     _RCSTA1bits	set	4011
   145   000000                     _TXSTA1bits	set	4012
   146   000000                     _T3CONbits	set	4017
   147   000000                     _T2CONbits	set	4042
   148   000000                     _T1CONbits	set	4045
   149   000000                     _T0CONbits	set	4053
   150   000000                     _PORTDbits	set	3971
   151   000000                     _PORTBbits	set	3969
   152   000000                     _LATBbits	set	3978
   153   000000                     _LATCbits	set	3979
   154   000000                     _PORTAbits	set	3968
   155   000000                     _TRISAbits	set	3986
   156   000000                     _OSCTUNEbits	set	3995
   157   000000                     _OSCCONbits	set	4051
   158   000000                     _T0CON	set	4053
   159   000000                     _PIE1bits	set	3997
   160   000000                     _PIR1bits	set	3998
   161   000000                     _ADCON1	set	4033
   162   000000                     _ADCON0	set	4034
   163   000000                     _SSPCON2bits	set	4037
   164   000000                     _SSPCON1bits	set	4038
   165   000000                     _SSPSTATbits	set	4039
   166   000000                     _TMR2	set	4044
   167   000000                     _T2CON	set	4042
   168   000000                     _T1CON	set	4045
   169   000000                     _SSPBUF	set	4041
   170   000000                     _SSPADD	set	4040
   171   000000                     _TRISDbits	set	3989
   172   000000                     _TRISCbits	set	3988
   173   000000                     _TRISBbits	set	3987
   174   000000                     _INTCON3bits	set	4080
   175   000000                     _INTCONbits	set	4082
   176   000000                     _RCONbits	set	4048
   177   000000                     _PIE2bits	set	4000
   178   000000                     _PIR2bits	set	4001
   179   000000                     _T3CON	set	4017
   180   000000                     _EECON1bits	set	4006
   181   000000                     _RCSTA1	set	4011
   182   000000                     _TXSTA1	set	4012
   183   000000                     _LATDbits	set	3980
   184                           
   185                           	psect	smallconst
   186   000600                     __psmallconst:
   187                           	callstack 0
   188   000600  00                 	db	0
   189   000601                     STR_1:
   190   000601  54                 	db	84	;'T'
   191   000602  68                 	db	104	;'h'
   192   000603  69                 	db	105	;'i'
   193   000604  73                 	db	115	;'s'
   194   000605  20                 	db	32
   195   000606  69                 	db	105	;'i'
   196   000607  73                 	db	115	;'s'
   197   000608  20                 	db	32
   198   000609  45                 	db	69	;'E'
   199   00060A  74                 	db	116	;'t'
   200   00060B  68                 	db	104	;'h'
   201   00060C  65                 	db	101	;'e'
   202   00060D  72                 	db	114	;'r'
   203   00060E  6E                 	db	110	;'n'
   204   00060F  65                 	db	101	;'e'
   205   000610  74                 	db	116	;'t'
   206   000611  20                 	db	32
   207   000612  70                 	db	112	;'p'
   208   000613  72                 	db	114	;'r'
   209   000614  6F                 	db	111	;'o'
   210   000615  74                 	db	116	;'t'
   211   000616  6F                 	db	111	;'o'
   212   000617  63                 	db	99	;'c'
   213   000618  6F                 	db	111	;'o'
   214   000619  6C                 	db	108	;'l'
   215   00061A  20                 	db	32
   216   00061B  74                 	db	116	;'t'
   217   00061C  65                 	db	101	;'e'
   218   00061D  73                 	db	115	;'s'
   219   00061E  74                 	db	116	;'t'
   220   00061F  20                 	db	32
   221   000620  66                 	db	102	;'f'
   222   000621  69                 	db	105	;'i'
   223   000622  72                 	db	114	;'r'
   224   000623  6D                 	db	109	;'m'
   225   000624  77                 	db	119	;'w'
   226   000625  61                 	db	97	;'a'
   227   000626  72                 	db	114	;'r'
   228   000627  65                 	db	101	;'e'
   229   000628  21                 	db	33
   230   000629  0D                 	db	13
   231   00062A  0A                 	db	10
   232   00062B  00                 	db	0
   233   00062C  00                 	db	0	; dummy byte at the end
   234   000000                     
   235                           ; #config settings
   236                           
   237                           	psect	cinit
   238   0024F8                     __pcinit:
   239                           	callstack 0
   240   0024F8                     start_initialization:
   241                           	callstack 0
   242   0024F8                     __initialization:
   243                           	callstack 0
   244                           
   245                           ; Initialize objects allocated to BANK0 (10 bytes)
   246                           ; load TBLPTR registers with __pidataBANK0
   247   0024F8  0E8E               	movlw	low __pidataBANK0
   248   0024FA  6EF6               	movwf	tblptrl,c
   249   0024FC  0E27               	movlw	high __pidataBANK0
   250   0024FE  6EF7               	movwf	tblptrh,c
   251   002500  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   252   002502  6EF8               	movwf	tblptru,c
   253   002504  EE00  F080         	lfsr	0,__pdataBANK0
   254   002508  EE10 F00A          	lfsr	1,10
   255   00250C                     copy_data0:
   256   00250C  0009               	tblrd		*+
   257   00250E  CFF5 FFEE          	movff	tablat,postinc0
   258   002512  50E5               	movf	postdec1,w,c
   259   002514  50E1               	movf	fsr1l,w,c
   260   002516  E1FA               	bnz	copy_data0
   261                           
   262                           ; Clear objects allocated to COMRAM (89 bytes)
   263   002518  EE00  F001         	lfsr	0,__pbssCOMRAM
   264   00251C  0E59               	movlw	89
   265   00251E                     clear_0:
   266   00251E  6AEE               	clrf	postinc0,c
   267   002520  06E8               	decf	wreg,f,c
   268   002522  E1FD               	bnz	clear_0
   269   002524                     end_of_initialization:
   270                           	callstack 0
   271   002524                     __end_of__initialization:
   272                           	callstack 0
   273   002524  9070               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   274   002526  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   275   002528  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276   00252A  6EF8               	movwf	tblptru,c
   277   00252C  0100               	movlb	0
   278   00252E  EF1C  F00A         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281   000001                     __pbssCOMRAM:
   282                           	callstack 0
   283   000001                     _blink_pos:
   284                           	callstack 0
   285   000001                     	ds	8
   286   000009                     _real_rtc_data:
   287                           	callstack 0
   288   000009                     	ds	7
   289   000010                     	ds	3
   290   000013                     _cnt:
   291                           	callstack 0
   292   000013                     	ds	2
   293   000015                     _continue_pressed_cnt:
   294                           	callstack 0
   295   000015                     	ds	2
   296   000017                     _reset_btn_released_cnt:
   297                           	callstack 0
   298   000017                     	ds	2
   299   000019                     _sel_btn_released_cnt:
   300                           	callstack 0
   301   000019                     	ds	2
   302   00001B                     _down_btn_released_cnt:
   303                           	callstack 0
   304   00001B                     	ds	2
   305   00001D                     _up_btn_released_cnt:
   306                           	callstack 0
   307   00001D                     	ds	2
   308   00001F                     _hour_btn_released_cnt:
   309                           	callstack 0
   310   00001F                     	ds	2
   311   000021                     _reset_btn_pressed_cnt:
   312                           	callstack 0
   313   000021                     	ds	2
   314   000023                     _sel_btn_pressed_cnt:
   315                           	callstack 0
   316   000023                     	ds	2
   317   000025                     _down_btn_pressed_cnt:
   318                           	callstack 0
   319   000025                     	ds	2
   320   000027                     _up_btn_pressed_cnt:
   321                           	callstack 0
   322   000027                     	ds	2
   323   000029                     _hour_btn_pressed_cnt:
   324                           	callstack 0
   325   000029                     	ds	2
   326   00002B                     _BLINK_TIME:
   327                           	callstack 0
   328   00002B                     	ds	2
   329   00002D                     _led_blink_cnt:
   330                           	callstack 0
   331   00002D                     	ds	2
   332   00002F                     _set_mode_release_cnt:
   333                           	callstack 0
   334   00002F                     	ds	2
   335   000031                     _USART1_Status:
   336                           	callstack 0
   337   000031                     	ds	1
   338   000032                     _btn_long_press_verify_flg:
   339                           	callstack 0
   340   000032                     	ds	1
   341   000033                     _btn_press_verify_flg:
   342                           	callstack 0
   343   000033                     	ds	1
   344   000034                     _BTN_CLICK_EVENT:
   345                           	callstack 0
   346   000034                     	ds	1
   347   000035                     _BTN_CLICK_STATE:
   348                           	callstack 0
   349   000035                     	ds	1
   350   000036                     _blink_cnt:
   351                           	callstack 0
   352   000036                     	ds	1
   353   000037                     _display_cnt:
   354                           	callstack 0
   355   000037                     	ds	1
   356   000038                     _blink_enable_flg:
   357                           	callstack 0
   358   000038                     	ds	1
   359   000039                     _counter_down_comp_cnt:
   360                           	callstack 0
   361   000039                     	ds	1
   362   00003A                     _counter_down_comp_flg:
   363                           	callstack 0
   364   00003A                     	ds	1
   365   00003B                     _counter_seting_flg:
   366                           	callstack 0
   367   00003B                     	ds	1
   368   00003C                     _counter_skip_flg:
   369                           	callstack 0
   370   00003C                     	ds	1
   371   00003D                     _counter_direction_flg:
   372                           	callstack 0
   373   00003D                     	ds	1
   374   00003E                     _counter_enable_flg:
   375                           	callstack 0
   376   00003E                     	ds	1
   377   00003F                     _counter_up_second:
   378                           	callstack 0
   379   00003F                     	ds	1
   380   000040                     _counter_up_minute:
   381                           	callstack 0
   382   000040                     	ds	1
   383   000041                     _counter_up_hour:
   384                           	callstack 0
   385   000041                     	ds	1
   386   000042                     _counter_down_set_second:
   387                           	callstack 0
   388   000042                     	ds	1
   389   000043                     _counter_down_set_minute:
   390                           	callstack 0
   391   000043                     	ds	1
   392   000044                     _counter_down_set_hour:
   393                           	callstack 0
   394   000044                     	ds	1
   395   000045                     _counter_down_second:
   396                           	callstack 0
   397   000045                     	ds	1
   398   000046                     _counter_down_minute:
   399                           	callstack 0
   400   000046                     	ds	1
   401   000047                     _counter_down_hour:
   402                           	callstack 0
   403   000047                     	ds	1
   404   000048                     _rtc_clock_set_mode:
   405                           	callstack 0
   406   000048                     	ds	1
   407   000049                     _rtc_clock_disp_mode:
   408                           	callstack 0
   409   000049                     	ds	1
   410   00004A                     _temp_system_state:
   411                           	callstack 0
   412   00004A                     	ds	1
   413   00004B                     _counter_sec_set_value:
   414                           	callstack 0
   415   00004B                     	ds	1
   416   00004C                     _counter_min_set_value:
   417                           	callstack 0
   418   00004C                     	ds	1
   419   00004D                     _counter_hour_set_value:
   420                           	callstack 0
   421   00004D                     	ds	1
   422   00004E                     _SYSTEM_ACTION_FLG:
   423                           	callstack 0
   424   00004E                     	ds	1
   425   00004F                     _int_cnt:
   426                           	callstack 0
   427   00004F                     	ds	1
   428   000050                     _rtc_hour_ampm_flg:
   429                           	callstack 0
   430   000050                     	ds	1
   431   000051                     _rtc_clock_disp_type:
   432                           	callstack 0
   433   000051                     	ds	1
   434   000052                     _display_datas:
   435                           	callstack 0
   436   000052                     	ds	8
   437                           
   438                           	psect	dataBANK0
   439   000080                     __pdataBANK0:
   440                           	callstack 0
   441   000080                     _rtc_default_values:
   442                           	callstack 0
   443   000080                     	ds	10
   444                           
   445                           	psect	cstackBANK0
   446   00008A                     __pcstackBANK0:
   447                           	callstack 0
   448   00008A                     ActionButtons@temp:
   449                           	callstack 0
   450   00008A                     ___awdiv@counter:
   451                           	callstack 0
   452   00008A                     Ds1307HMSRead@ds1307_date_datas:
   453                           	callstack 0
   454                           
   455                           ; 3 bytes @ 0x0
   456   00008A                     	ds	1
   457   00008B                     ??_VerifyButtons:
   458   00008B                     ___awdiv@sign:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x1
   462   00008B                     	ds	1
   463   00008C                     ___awdiv@quotient:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x2
   467   00008C                     	ds	1
   468   00008D                     UpdateDisplay@update_datas:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x3
   472   00008D                     	ds	1
   473   00008E                     ReadCounter@read_buffer:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x4
   477   00008E                     	ds	1
   478   00008F                     UpdateDisplay@start_position:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x5
   482   00008F                     	ds	1
   483   000090                     UpdateDisplay@end_position:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x6
   487   000090                     	ds	1
   488   000091                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x7
   491   000091                     	ds	2
   492                           
   493                           	psect	cstackCOMRAM
   494   00005A                     __pcstackCOMRAM:
   495                           	callstack 0
   496   00005A                     ??_M74HC595Write:
   497   00005A                     i2WriteTimer0@timer0:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x0
   501   00005A                     	ds	1
   502   00005B                     M74HC595Write@data:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x1
   506   00005B                     	ds	1
   507   00005C                     M74HC595Write@temp:
   508                           	callstack 0
   509   00005C                     i2WriteTimer0@timer:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x2
   513   00005C                     	ds	1
   514   00005D                     M74HC595Write@i:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x3
   518   00005D                     	ds	1
   519   00005E                     ??_ScanDisplay:
   520                           
   521                           ; 1 bytes @ 0x4
   522   00005E                     	ds	4
   523   000062                     ??_high_isr:
   524                           
   525                           ; 1 bytes @ 0x8
   526   000062                     	ds	4
   527   000066                     ??_low_isr:
   528                           
   529                           ; 1 bytes @ 0xC
   530   000066                     	ds	3
   531   000069                     ??_LEDProcess:
   532   000069                     ??_MarkDisplay:
   533   000069                     ??_DecValProcess:
   534   000069                     ?___awdiv:
   535                           	callstack 0
   536   000069                     ?___awmod:
   537                           	callstack 0
   538   000069                     I2cWrite@data:
   539                           	callstack 0
   540   000069                     I2cRead@ack:
   541                           	callstack 0
   542   000069                     OpenTimer0@config:
   543                           	callstack 0
   544   000069                     OpenDisplay@i:
   545                           	callstack 0
   546   000069                     BlinkDisable@i:
   547                           	callstack 0
   548   000069                     Write1USART@data:
   549                           	callstack 0
   550   000069                     WriteTimer0@timer0:
   551                           	callstack 0
   552   000069                     Open1USART@spbrg:
   553                           	callstack 0
   554   000069                     ___awdiv@dividend:
   555                           	callstack 0
   556   000069                     ___awmod@dividend:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0xF
   560   000069                     	ds	1
   561   00006A                     ??_Ds1307HourSet:
   562   00006A                     Ds1307MinuteSet@minute_data:
   563                           	callstack 0
   564   00006A                     Ds1307SecondSet@second_data:
   565                           	callstack 0
   566   00006A                     I2cRead@receive:
   567                           	callstack 0
   568   00006A                     Ds1307Write@write_datas:
   569                           	callstack 0
   570   00006A                     Puts1USART@data:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x10
   574   00006A                     	ds	1
   575   00006B                     ?_Ds1307HMSRead:
   576                           	callstack 0
   577   00006B                     Ds1307HourSet@hour_data:
   578                           	callstack 0
   579   00006B                     MarkDisplay@mark:
   580                           	callstack 0
   581   00006B                     Open1USART@config:
   582                           	callstack 0
   583   00006B                     WriteTimer0@timer:
   584                           	callstack 0
   585   00006B                     ___awdiv@divisor:
   586                           	callstack 0
   587   00006B                     ___awmod@divisor:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x11
   591   00006B                     	ds	1
   592   00006C                     ??_Ds1307Write:
   593   00006C                     Ds1307HourSet@hour_temp:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0x12
   597   00006C                     	ds	1
   598   00006D                     ??_ActionButtons:
   599   00006D                     Ds1307Write@hour_temp:
   600                           	callstack 0
   601   00006D                     UpdateDisplay@i:
   602                           	callstack 0
   603   00006D                     ___awmod@counter:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x13
   607   00006D                     	ds	1
   608   00006E                     ___awmod@sign:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x14
   612   00006E                     	ds	1
   613   00006F                     
   614                           ; 1 bytes @ 0x15
   615 ;;
   616 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   617 ;;
   618 ;; *************** function _main *****************
   619 ;; Defined at:
   620 ;;		line 24 in file "Main.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   634 ;;      Params:         0       0       0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0       0       0
   636 ;;      Temps:          0       2       0       0       0       0       0
   637 ;;      Totals:         0       2       0       0       0       0       0
   638 ;;Total ram usage:        2 bytes
   639 ;; Hardware stack levels required when called: 11
   640 ;; This function calls:
   641 ;;		_BlinkDisable
   642 ;;		_DeviceInit
   643 ;;		_Ds1307HMSRead
   644 ;;		_LEDProcess
   645 ;;		_ReadCounter
   646 ;;		_UpdateDisplay
   647 ;;		_VerifyButtons
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text0
   654   001438                     __ptext0:
   655                           	callstack 0
   656   001438                     _main:
   657                           	callstack 20
   658   001438                     
   659                           ;Main.c: 28:     DeviceInit();
   660   001438  EC94  F011         	call	_DeviceInit	;wreg free
   661   00143C                     l6395:
   662                           
   663                           ;Main.c: 31:     {;Main.c: 32:         VerifyButtons();
   664   00143C  EC63  F006         	call	_VerifyButtons	;wreg free
   665   001440                     
   666                           ;Main.c: 34:         if( counter_down_comp_flg ) {
   667   001440  503A               	movf	_counter_down_comp_flg^0,w,c
   668   001442  B4D8               	btfsc	status,2,c
   669   001444  EF26  F00A         	goto	u5011
   670   001448  EF28  F00A         	goto	u5010
   671   00144C                     u5011:
   672   00144C  EF32  F00A         	goto	l6401
   673   001450                     u5010:
   674   001450                     
   675                           ;Main.c: 35:             BLINK_TIME = 80; blink_enable_flg = 5; counter_skip_flg = 0;
   676   001450  0E00               	movlw	0
   677   001452  6E2C               	movwf	(_BLINK_TIME+1)^0,c
   678   001454  0E50               	movlw	80
   679   001456  6E2B               	movwf	_BLINK_TIME^0,c
   680   001458  0E05               	movlw	5
   681   00145A  6E38               	movwf	_blink_enable_flg^0,c
   682   00145C  0E00               	movlw	0
   683   00145E  6E3C               	movwf	_counter_skip_flg^0,c
   684                           
   685                           ;Main.c: 36:         }
   686   001460  EF41  F00A         	goto	l6407
   687   001464                     l6401:
   688                           
   689                           ;Main.c: 38:             BLINK_TIME = 300;
   690   001464  0E01               	movlw	1
   691   001466  6E2C               	movwf	(_BLINK_TIME+1)^0,c
   692   001468  0E2C               	movlw	44
   693   00146A  6E2B               	movwf	_BLINK_TIME^0,c
   694   00146C                     
   695                           ;Main.c: 39:             if( SYSTEM_STATE_FLG == 203 ) blink_enable_flg = 0;
   696   00146C  0ECB               	movlw	203
   697   00146E  186F               	xorwf	_SYSTEM_STATE_FLG^0,w,c
   698   001470  A4D8               	btfss	status,2,c
   699   001472  EF3D  F00A         	goto	u5021
   700   001476  EF3F  F00A         	goto	u5020
   701   00147A                     u5021:
   702   00147A  EF41  F00A         	goto	l6407
   703   00147E                     u5020:
   704   00147E  0E00               	movlw	0
   705   001480  6E38               	movwf	_blink_enable_flg^0,c
   706   001482                     l6407:
   707                           
   708                           ;Main.c: 42:         if( !SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE ) continue;
   709   001482  B04E               	btfsc	_SYSTEM_ACTION_FLG^0,0,c	;volatile
   710   001484  EF46  F00A         	goto	u5031
   711   001488  EF48  F00A         	goto	u5030
   712   00148C                     u5031:
   713   00148C  EF4A  F00A         	goto	l326
   714   001490                     u5030:
   715   001490  EF1E  F00A         	goto	l6395
   716   001494                     l326:
   717                           
   718                           ;Main.c: 43:         SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE = 0;
   719   001494  904E               	bcf	_SYSTEM_ACTION_FLG^0,0,c	;volatile
   720   001496                     
   721                           ;Main.c: 45:         LEDProcess();
   722   001496  EC9C  F00D         	call	_LEDProcess	;wreg free
   723                           
   724                           ;Main.c: 47:         switch( blink_enable_flg ) {
   725   00149A  EF7D  F00A         	goto	l6453
   726   00149E                     l6413:
   727                           
   728                           ; BSR set to: 0
   729   00149E  EC17  F013         	call	_BlinkDisable	;wreg free
   730   0014A2  EFB2  F00A         	goto	l6459
   731   0014A6                     l6415:
   732                           
   733                           ; BSR set to: 0
   734   0014A6  EC17  F013         	call	_BlinkDisable	;wreg free
   735   0014AA  0E01               	movlw	1
   736   0014AC  6E07               	movwf	(_blink_pos+6)^0,c
   737   0014AE  EFB2  F00A         	goto	l6459
   738   0014B2                     l6419:
   739                           
   740                           ; BSR set to: 0
   741   0014B2  EC17  F013         	call	_BlinkDisable	;wreg free
   742   0014B6  0E01               	movlw	1
   743   0014B8  6E01               	movwf	_blink_pos^0,c
   744   0014BA  0E01               	movlw	1
   745   0014BC  6E02               	movwf	(_blink_pos+1)^0,c
   746   0014BE  EFB2  F00A         	goto	l6459
   747   0014C2                     l6425:
   748                           
   749                           ; BSR set to: 0
   750   0014C2  EC17  F013         	call	_BlinkDisable	;wreg free
   751   0014C6  0E01               	movlw	1
   752   0014C8  6E03               	movwf	(_blink_pos+2)^0,c
   753   0014CA  0E01               	movlw	1
   754   0014CC  6E04               	movwf	(_blink_pos+3)^0,c
   755   0014CE  EFB2  F00A         	goto	l6459
   756   0014D2                     l6431:
   757                           
   758                           ; BSR set to: 0
   759   0014D2  EC17  F013         	call	_BlinkDisable	;wreg free
   760   0014D6                     l6433:
   761   0014D6  0E01               	movlw	1
   762   0014D8  6E05               	movwf	(_blink_pos+4)^0,c
   763   0014DA  0E01               	movlw	1
   764   0014DC  6E06               	movwf	(_blink_pos+5)^0,c
   765   0014DE  EFB2  F00A         	goto	l6459
   766   0014E2                     l6437:
   767                           
   768                           ; BSR set to: 0
   769   0014E2  EC17  F013         	call	_BlinkDisable	;wreg free
   770   0014E6  0E01               	movlw	1
   771   0014E8  6E01               	movwf	_blink_pos^0,c
   772   0014EA  0E01               	movlw	1
   773   0014EC  6E02               	movwf	(_blink_pos+1)^0,c
   774   0014EE  0E01               	movlw	1
   775   0014F0  6E03               	movwf	(_blink_pos+2)^0,c
   776   0014F2  0E01               	movlw	1
   777   0014F4  6E04               	movwf	(_blink_pos+3)^0,c
   778   0014F6  EF6B  F00A         	goto	l6433
   779   0014FA                     l6453:
   780   0014FA  5038               	movf	_blink_enable_flg^0,w,c
   781   0014FC  0100               	movlb	0	; () banked
   782   0014FE  6F91               	movwf	??_main& (0+255),b
   783   001500  6B92               	clrf	(??_main+1)& (0+255),b
   784                           
   785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   786                           ; Switch size 1, requested type "simple"
   787                           ; Number of cases is 1, Range of values is 0 to 0
   788                           ; switch strategies available:
   789                           ; Name         Instructions Cycles
   790                           ; simple_byte            4     3 (average)
   791                           ;	Chosen strategy is simple_byte
   792   001502  5192               	movf	(??_main+1)& (0+255),w,b
   793   001504  0A00               	xorlw	0	; case 0
   794   001506  B4D8               	btfsc	status,2,c
   795   001508  EF88  F00A         	goto	l6809
   796   00150C  EFB2  F00A         	goto	l6459
   797   001510                     l6809:
   798                           
   799                           ; BSR set to: 0
   800                           ; Switch size 1, requested type "simple"
   801                           ; Number of cases is 6, Range of values is 0 to 5
   802                           ; switch strategies available:
   803                           ; Name         Instructions Cycles
   804                           ; simple_byte           19    10 (average)
   805                           ;	Chosen strategy is simple_byte
   806   001510  5191               	movf	??_main& (0+255),w,b
   807   001512  0A00               	xorlw	0	; case 0
   808   001514  B4D8               	btfsc	status,2,c
   809   001516  EF4F  F00A         	goto	l6413
   810   00151A  0A01               	xorlw	1	; case 1
   811   00151C  B4D8               	btfsc	status,2,c
   812   00151E  EF53  F00A         	goto	l6415
   813   001522  0A03               	xorlw	3	; case 2
   814   001524  B4D8               	btfsc	status,2,c
   815   001526  EF59  F00A         	goto	l6419
   816   00152A  0A01               	xorlw	1	; case 3
   817   00152C  B4D8               	btfsc	status,2,c
   818   00152E  EF61  F00A         	goto	l6425
   819   001532  0A07               	xorlw	7	; case 4
   820   001534  B4D8               	btfsc	status,2,c
   821   001536  EF69  F00A         	goto	l6431
   822   00153A  0A01               	xorlw	1	; case 5
   823   00153C  B4D8               	btfsc	status,2,c
   824   00153E  EF71  F00A         	goto	l6437
   825   001542  EFB2  F00A         	goto	l6459
   826   001546                     l6455:
   827                           
   828                           ; BSR set to: 0
   829   001546  EC6D  F010         	call	_Ds1307HMSRead	;wreg free
   830   00154A  C06B  F08D         	movff	?_Ds1307HMSRead,UpdateDisplay@update_datas
   831   00154E  C06C  F08E         	movff	?_Ds1307HMSRead+1,UpdateDisplay@update_datas+1
   832   001552  0E01               	movlw	1
   833   001554  0100               	movlb	0	; () banked
   834   001556  6F8F               	movwf	UpdateDisplay@start_position& (0+255),b
   835   001558  0E06               	movlw	6
   836   00155A  6F90               	movwf	UpdateDisplay@end_position& (0+255),b
   837   00155C  EC3A  F012         	call	_UpdateDisplay	;wreg free
   838   001560  EFC4  F00A         	goto	l6461
   839   001564                     l6459:
   840   001564  506F               	movf	_SYSTEM_STATE_FLG^0,w,c
   841   001566  0100               	movlb	0	; () banked
   842   001568  6F91               	movwf	??_main& (0+255),b
   843   00156A  6B92               	clrf	(??_main+1)& (0+255),b
   844                           
   845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   846                           ; Switch size 1, requested type "simple"
   847                           ; Number of cases is 1, Range of values is 0 to 0
   848                           ; switch strategies available:
   849                           ; Name         Instructions Cycles
   850                           ; simple_byte            4     3 (average)
   851                           ;	Chosen strategy is simple_byte
   852   00156C  5192               	movf	(??_main+1)& (0+255),w,b
   853   00156E  0A00               	xorlw	0	; case 0
   854   001570  B4D8               	btfsc	status,2,c
   855   001572  EFBD  F00A         	goto	l6811
   856   001576  EFC4  F00A         	goto	l6461
   857   00157A                     l6811:
   858                           
   859                           ; BSR set to: 0
   860                           ; Switch size 1, requested type "simple"
   861                           ; Number of cases is 1, Range of values is 100 to 100
   862                           ; switch strategies available:
   863                           ; Name         Instructions Cycles
   864                           ; simple_byte            4     3 (average)
   865                           ;	Chosen strategy is simple_byte
   866   00157A  5191               	movf	??_main& (0+255),w,b
   867   00157C  0A64               	xorlw	100	; case 100
   868   00157E  B4D8               	btfsc	status,2,c
   869   001580  EFA3  F00A         	goto	l6455
   870   001584  EFC4  F00A         	goto	l6461
   871   001588                     l6461:
   872                           
   873                           ;Main.c: 62:         if( counter_skip_flg ) continue;
   874   001588  503C               	movf	_counter_skip_flg^0,w,c
   875   00158A  B4D8               	btfsc	status,2,c
   876   00158C  EFCA  F00A         	goto	u5041
   877   001590  EFCC  F00A         	goto	u5040
   878   001594                     u5041:
   879   001594  EFD6  F00A         	goto	l6469
   880   001598                     u5040:
   881   001598  EF1E  F00A         	goto	l6395
   882   00159C                     l343:
   883   00159C                     l6465:
   884                           
   885                           ; BSR set to: 0
   886   00159C  0E52               	movlw	low _display_datas
   887   00159E  6F8E               	movwf	ReadCounter@read_buffer& (0+255),b
   888   0015A0  0E00               	movlw	high _display_datas
   889   0015A2  6F8F               	movwf	(ReadCounter@read_buffer+1)& (0+255),b
   890   0015A4  EC1F  F009         	call	_ReadCounter	;wreg free
   891   0015A8  EF1E  F00A         	goto	l6395
   892   0015AC                     l6469:
   893   0015AC  506F               	movf	_SYSTEM_STATE_FLG^0,w,c
   894   0015AE  0100               	movlb	0	; () banked
   895   0015B0  6F91               	movwf	??_main& (0+255),b
   896   0015B2  6B92               	clrf	(??_main+1)& (0+255),b
   897                           
   898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   899                           ; Switch size 1, requested type "simple"
   900                           ; Number of cases is 1, Range of values is 0 to 0
   901                           ; switch strategies available:
   902                           ; Name         Instructions Cycles
   903                           ; simple_byte            4     3 (average)
   904                           ;	Chosen strategy is simple_byte
   905   0015B4  5192               	movf	(??_main+1)& (0+255),w,b
   906   0015B6  0A00               	xorlw	0	; case 0
   907   0015B8  B4D8               	btfsc	status,2,c
   908   0015BA  EFE1  F00A         	goto	l6813
   909   0015BE  EF1E  F00A         	goto	l6395
   910   0015C2                     l6813:
   911                           
   912                           ; BSR set to: 0
   913                           ; Switch size 1, requested type "simple"
   914                           ; Number of cases is 4, Range of values is 200 to 203
   915                           ; switch strategies available:
   916                           ; Name         Instructions Cycles
   917                           ; simple_byte           13     7 (average)
   918                           ;	Chosen strategy is simple_byte
   919   0015C2  5191               	movf	??_main& (0+255),w,b
   920   0015C4  0AC8               	xorlw	200	; case 200
   921   0015C6  B4D8               	btfsc	status,2,c
   922   0015C8  EFCE  F00A         	goto	l343
   923   0015CC  0A01               	xorlw	1	; case 201
   924   0015CE  B4D8               	btfsc	status,2,c
   925   0015D0  EFCE  F00A         	goto	l6465
   926   0015D4  0A03               	xorlw	3	; case 202
   927   0015D6  B4D8               	btfsc	status,2,c
   928   0015D8  EFCE  F00A         	goto	l6465
   929   0015DC  0A01               	xorlw	1	; case 203
   930   0015DE  B4D8               	btfsc	status,2,c
   931   0015E0  EFCE  F00A         	goto	l6465
   932   0015E4  EF1E  F00A         	goto	l6395
   933   0015E8  EF2C  F000         	goto	start
   934   0015EC                     __end_of_main:
   935                           	callstack 0
   936                           
   937 ;; *************** function _VerifyButtons *****************
   938 ;; Defined at:
   939 ;;		line 46 in file "Buttons.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   953 ;;      Params:         0       0       0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0
   955 ;;      Temps:          0       2       0       0       0       0       0
   956 ;;      Totals:         0       2       0       0       0       0       0
   957 ;;Total ram usage:        2 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 10
   960 ;; This function calls:
   961 ;;		_ActionButtons
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text1
   968   000CC6                     __ptext1:
   969                           	callstack 0
   970   000CC6                     _VerifyButtons:
   971                           	callstack 20
   972   000CC6                     
   973                           ;Buttons.c: 48:     switch( BTN_CLICK_EVENT ) {
   974   000CC6  EFF6  F007         	goto	l6319
   975   000CCA                     l6217:
   976                           
   977                           ; BSR set to: 0
   978   000CCA  0EB1               	movlw	177
   979   000CCC  5C29               	subwf	_hour_btn_pressed_cnt^0,w,c
   980   000CCE  0E04               	movlw	4
   981   000CD0  582A               	subwfb	(_hour_btn_pressed_cnt+1)^0,w,c
   982   000CD2  A0D8               	btfss	status,0,c
   983   000CD4  EF6E  F006         	goto	u4671
   984   000CD8  EF70  F006         	goto	u4670
   985   000CDC                     u4671:
   986   000CDC  EF84  F006         	goto	l6225
   987   000CE0                     u4670:
   988   000CE0                     
   989                           ; BSR set to: 0
   990   000CE0  5032               	movf	_btn_long_press_verify_flg^0,w,c
   991   000CE2  A4D8               	btfss	status,2,c
   992   000CE4  EF76  F006         	goto	u4681
   993   000CE8  EF78  F006         	goto	u4680
   994   000CEC                     u4681:
   995   000CEC  EF7A  F006         	goto	l1118
   996   000CF0                     u4680:
   997   000CF0                     
   998                           ; BSR set to: 0
   999   000CF0  0E10               	movlw	16
  1000   000CF2  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1001   000CF4                     l1118:
  1002                           
  1003                           ; BSR set to: 0
  1004   000CF4  0E01               	movlw	1
  1005   000CF6  6E32               	movwf	_btn_long_press_verify_flg^0,c
  1006   000CF8  0E04               	movlw	4
  1007   000CFA  6E2A               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  1008   000CFC  0EB0               	movlw	176
  1009   000CFE  6E29               	movwf	_hour_btn_pressed_cnt^0,c
  1010   000D00                     l6223:
  1011                           
  1012                           ; BSR set to: 0
  1013   000D00  EC17  F003         	call	_ActionButtons	;wreg free
  1014   000D04  EF9D  F006         	goto	l6233
  1015   000D08                     l6225:
  1016                           
  1017                           ; BSR set to: 0
  1018   000D08  502A               	movf	(_hour_btn_pressed_cnt+1)^0,w,c
  1019   000D0A  E109               	bnz	u4690
  1020   000D0C  0E33               	movlw	51
  1021   000D0E  5C29               	subwf	_hour_btn_pressed_cnt^0,w,c
  1022   000D10  A0D8               	btfss	status,0,c
  1023   000D12  EF8D  F006         	goto	u4691
  1024   000D16  EF8F  F006         	goto	u4690
  1025   000D1A                     u4691:
  1026   000D1A  EF9D  F006         	goto	l6233
  1027   000D1E                     u4690:
  1028   000D1E                     
  1029                           ; BSR set to: 0
  1030   000D1E  5033               	movf	_btn_press_verify_flg^0,w,c
  1031   000D20  A4D8               	btfss	status,2,c
  1032   000D22  EF95  F006         	goto	u4701
  1033   000D26  EF97  F006         	goto	u4700
  1034   000D2A                     u4701:
  1035   000D2A  EF99  F006         	goto	l1121
  1036   000D2E                     u4700:
  1037   000D2E                     
  1038                           ; BSR set to: 0
  1039   000D2E  0E0B               	movlw	11
  1040   000D30  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1041   000D32                     l1121:
  1042                           
  1043                           ; BSR set to: 0
  1044   000D32  0E01               	movlw	1
  1045   000D34  6E33               	movwf	_btn_press_verify_flg^0,c
  1046   000D36  EF80  F006         	goto	l6223
  1047   000D3A                     l6233:
  1048                           
  1049                           ;Buttons.c: 52:                 if( hour_btn_released_cnt > 5 ) {
  1050   000D3A  5020               	movf	(_hour_btn_released_cnt+1)^0,w,c
  1051   000D3C  E109               	bnz	u4710
  1052   000D3E  0E06               	movlw	6
  1053   000D40  5C1F               	subwf	_hour_btn_released_cnt^0,w,c
  1054   000D42  A0D8               	btfss	status,0,c
  1055   000D44  EFA6  F006         	goto	u4711
  1056   000D48  EFA8  F006         	goto	u4710
  1057   000D4C                     u4711:
  1058   000D4C  EF18  F008         	goto	l1152
  1059   000D50                     u4710:
  1060   000D50                     
  1061                           ;Buttons.c: 53:                     hour_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn_
      +                          long_press_verify_flg = 0; btn_press_verify_flg = 0; BTN_CLICK_STATE = 0;
  1062   000D50  0E00               	movlw	0
  1063   000D52  6E20               	movwf	(_hour_btn_released_cnt+1)^0,c
  1064   000D54  0E00               	movlw	0
  1065   000D56  6E1F               	movwf	_hour_btn_released_cnt^0,c
  1066   000D58  0E00               	movlw	0
  1067   000D5A  6E34               	movwf	_BTN_CLICK_EVENT^0,c
  1068   000D5C  0E00               	movlw	0
  1069   000D5E  6E32               	movwf	_btn_long_press_verify_flg^0,c
  1070   000D60  0E00               	movlw	0
  1071   000D62  6E33               	movwf	_btn_press_verify_flg^0,c
  1072   000D64  0E00               	movlw	0
  1073   000D66  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1074   000D68  EF18  F008         	goto	l1152
  1075   000D6C                     l6237:
  1076                           
  1077                           ; BSR set to: 0
  1078   000D6C  0EB1               	movlw	177
  1079   000D6E  5C27               	subwf	_up_btn_pressed_cnt^0,w,c
  1080   000D70  0E04               	movlw	4
  1081   000D72  5828               	subwfb	(_up_btn_pressed_cnt+1)^0,w,c
  1082   000D74  A0D8               	btfss	status,0,c
  1083   000D76  EFBF  F006         	goto	u4721
  1084   000D7A  EFC1  F006         	goto	u4720
  1085   000D7E                     u4721:
  1086   000D7E  EFD5  F006         	goto	l6245
  1087   000D82                     u4720:
  1088   000D82                     
  1089                           ; BSR set to: 0
  1090   000D82  5032               	movf	_btn_long_press_verify_flg^0,w,c
  1091   000D84  A4D8               	btfss	status,2,c
  1092   000D86  EFC7  F006         	goto	u4731
  1093   000D8A  EFC9  F006         	goto	u4730
  1094   000D8E                     u4731:
  1095   000D8E  EFCB  F006         	goto	l1126
  1096   000D92                     u4730:
  1097   000D92                     
  1098                           ; BSR set to: 0
  1099   000D92  0E11               	movlw	17
  1100   000D94  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1101   000D96                     l1126:
  1102                           
  1103                           ; BSR set to: 0
  1104   000D96  0E01               	movlw	1
  1105   000D98  6E32               	movwf	_btn_long_press_verify_flg^0,c
  1106   000D9A  0E04               	movlw	4
  1107   000D9C  6E28               	movwf	(_up_btn_pressed_cnt+1)^0,c
  1108   000D9E  0EB0               	movlw	176
  1109   000DA0  6E27               	movwf	_up_btn_pressed_cnt^0,c
  1110   000DA2                     l6243:
  1111                           
  1112                           ; BSR set to: 0
  1113   000DA2  EC17  F003         	call	_ActionButtons	;wreg free
  1114   000DA6  EFEE  F006         	goto	l6253
  1115   000DAA                     l6245:
  1116                           
  1117                           ; BSR set to: 0
  1118   000DAA  5028               	movf	(_up_btn_pressed_cnt+1)^0,w,c
  1119   000DAC  E109               	bnz	u4740
  1120   000DAE  0E33               	movlw	51
  1121   000DB0  5C27               	subwf	_up_btn_pressed_cnt^0,w,c
  1122   000DB2  A0D8               	btfss	status,0,c
  1123   000DB4  EFDE  F006         	goto	u4741
  1124   000DB8  EFE0  F006         	goto	u4740
  1125   000DBC                     u4741:
  1126   000DBC  EFEE  F006         	goto	l6253
  1127   000DC0                     u4740:
  1128   000DC0                     
  1129                           ; BSR set to: 0
  1130   000DC0  5033               	movf	_btn_press_verify_flg^0,w,c
  1131   000DC2  A4D8               	btfss	status,2,c
  1132   000DC4  EFE6  F006         	goto	u4751
  1133   000DC8  EFE8  F006         	goto	u4750
  1134   000DCC                     u4751:
  1135   000DCC  EFEA  F006         	goto	l1129
  1136   000DD0                     u4750:
  1137   000DD0                     
  1138                           ; BSR set to: 0
  1139   000DD0  0E0C               	movlw	12
  1140   000DD2  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1141   000DD4                     l1129:
  1142                           
  1143                           ; BSR set to: 0
  1144   000DD4  0E01               	movlw	1
  1145   000DD6  6E33               	movwf	_btn_press_verify_flg^0,c
  1146   000DD8  EFD1  F006         	goto	l6243
  1147   000DDC                     l6253:
  1148                           
  1149                           ;Buttons.c: 59:                 if( up_btn_released_cnt > 5 ) {
  1150   000DDC  501E               	movf	(_up_btn_released_cnt+1)^0,w,c
  1151   000DDE  E109               	bnz	u4760
  1152   000DE0  0E06               	movlw	6
  1153   000DE2  5C1D               	subwf	_up_btn_released_cnt^0,w,c
  1154   000DE4  A0D8               	btfss	status,0,c
  1155   000DE6  EFF7  F006         	goto	u4761
  1156   000DEA  EFF9  F006         	goto	u4760
  1157   000DEE                     u4761:
  1158   000DEE  EF18  F008         	goto	l1152
  1159   000DF2                     u4760:
  1160   000DF2                     
  1161                           ;Buttons.c: 60:                     up_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn_lo
      +                          ng_press_verify_flg = 0; btn_press_verify_flg = 0; BTN_CLICK_STATE = 0;
  1162   000DF2  0E00               	movlw	0
  1163   000DF4  6E1E               	movwf	(_up_btn_released_cnt+1)^0,c
  1164   000DF6  0E00               	movlw	0
  1165   000DF8  6E1D               	movwf	_up_btn_released_cnt^0,c
  1166   000DFA  0E00               	movlw	0
  1167   000DFC  6E34               	movwf	_BTN_CLICK_EVENT^0,c
  1168   000DFE  0E00               	movlw	0
  1169   000E00  6E32               	movwf	_btn_long_press_verify_flg^0,c
  1170   000E02  0E00               	movlw	0
  1171   000E04  6E33               	movwf	_btn_press_verify_flg^0,c
  1172   000E06  0E00               	movlw	0
  1173   000E08  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1174   000E0A  EF18  F008         	goto	l1152
  1175   000E0E                     l6257:
  1176                           
  1177                           ; BSR set to: 0
  1178   000E0E  0EB1               	movlw	177
  1179   000E10  5C25               	subwf	_down_btn_pressed_cnt^0,w,c
  1180   000E12  0E04               	movlw	4
  1181   000E14  5826               	subwfb	(_down_btn_pressed_cnt+1)^0,w,c
  1182   000E16  A0D8               	btfss	status,0,c
  1183   000E18  EF10  F007         	goto	u4771
  1184   000E1C  EF12  F007         	goto	u4770
  1185   000E20                     u4771:
  1186   000E20  EF26  F007         	goto	l6265
  1187   000E24                     u4770:
  1188   000E24                     
  1189                           ; BSR set to: 0
  1190   000E24  5032               	movf	_btn_long_press_verify_flg^0,w,c
  1191   000E26  A4D8               	btfss	status,2,c
  1192   000E28  EF18  F007         	goto	u4781
  1193   000E2C  EF1A  F007         	goto	u4780
  1194   000E30                     u4781:
  1195   000E30  EF1C  F007         	goto	l1133
  1196   000E34                     u4780:
  1197   000E34                     
  1198                           ; BSR set to: 0
  1199   000E34  0E12               	movlw	18
  1200   000E36  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1201   000E38                     l1133:
  1202                           
  1203                           ; BSR set to: 0
  1204   000E38  0E01               	movlw	1
  1205   000E3A  6E32               	movwf	_btn_long_press_verify_flg^0,c
  1206   000E3C  0E04               	movlw	4
  1207   000E3E  6E26               	movwf	(_down_btn_pressed_cnt+1)^0,c
  1208   000E40  0EB0               	movlw	176
  1209   000E42  6E25               	movwf	_down_btn_pressed_cnt^0,c
  1210   000E44                     l6263:
  1211                           
  1212                           ; BSR set to: 0
  1213   000E44  EC17  F003         	call	_ActionButtons	;wreg free
  1214   000E48  EF3F  F007         	goto	l6273
  1215   000E4C                     l6265:
  1216                           
  1217                           ; BSR set to: 0
  1218   000E4C  5026               	movf	(_down_btn_pressed_cnt+1)^0,w,c
  1219   000E4E  E109               	bnz	u4790
  1220   000E50  0E33               	movlw	51
  1221   000E52  5C25               	subwf	_down_btn_pressed_cnt^0,w,c
  1222   000E54  A0D8               	btfss	status,0,c
  1223   000E56  EF2F  F007         	goto	u4791
  1224   000E5A  EF31  F007         	goto	u4790
  1225   000E5E                     u4791:
  1226   000E5E  EF3F  F007         	goto	l6273
  1227   000E62                     u4790:
  1228   000E62                     
  1229                           ; BSR set to: 0
  1230   000E62  5033               	movf	_btn_press_verify_flg^0,w,c
  1231   000E64  A4D8               	btfss	status,2,c
  1232   000E66  EF37  F007         	goto	u4801
  1233   000E6A  EF39  F007         	goto	u4800
  1234   000E6E                     u4801:
  1235   000E6E  EF3B  F007         	goto	l1136
  1236   000E72                     u4800:
  1237   000E72                     
  1238                           ; BSR set to: 0
  1239   000E72  0E0D               	movlw	13
  1240   000E74  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1241   000E76                     l1136:
  1242                           
  1243                           ; BSR set to: 0
  1244   000E76  0E01               	movlw	1
  1245   000E78  6E33               	movwf	_btn_press_verify_flg^0,c
  1246   000E7A  EF22  F007         	goto	l6263
  1247   000E7E                     l6273:
  1248                           
  1249                           ;Buttons.c: 66:                 if( down_btn_released_cnt > 5 ) {
  1250   000E7E  501C               	movf	(_down_btn_released_cnt+1)^0,w,c
  1251   000E80  E109               	bnz	u4810
  1252   000E82  0E06               	movlw	6
  1253   000E84  5C1B               	subwf	_down_btn_released_cnt^0,w,c
  1254   000E86  A0D8               	btfss	status,0,c
  1255   000E88  EF48  F007         	goto	u4811
  1256   000E8C  EF4A  F007         	goto	u4810
  1257   000E90                     u4811:
  1258   000E90  EF18  F008         	goto	l1152
  1259   000E94                     u4810:
  1260   000E94                     
  1261                           ;Buttons.c: 67:                     down_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn_
      +                          long_press_verify_flg = 0; btn_press_verify_flg = 0; BTN_CLICK_STATE = 0;
  1262   000E94  0E00               	movlw	0
  1263   000E96  6E1C               	movwf	(_down_btn_released_cnt+1)^0,c
  1264   000E98  0E00               	movlw	0
  1265   000E9A  6E1B               	movwf	_down_btn_released_cnt^0,c
  1266   000E9C  0E00               	movlw	0
  1267   000E9E  6E34               	movwf	_BTN_CLICK_EVENT^0,c
  1268   000EA0  0E00               	movlw	0
  1269   000EA2  6E32               	movwf	_btn_long_press_verify_flg^0,c
  1270   000EA4  0E00               	movlw	0
  1271   000EA6  6E33               	movwf	_btn_press_verify_flg^0,c
  1272   000EA8  0E00               	movlw	0
  1273   000EAA  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1274   000EAC  EF18  F008         	goto	l1152
  1275   000EB0                     l6277:
  1276                           
  1277                           ; BSR set to: 0
  1278   000EB0  0EB1               	movlw	177
  1279   000EB2  5C23               	subwf	_sel_btn_pressed_cnt^0,w,c
  1280   000EB4  0E04               	movlw	4
  1281   000EB6  5824               	subwfb	(_sel_btn_pressed_cnt+1)^0,w,c
  1282   000EB8  A0D8               	btfss	status,0,c
  1283   000EBA  EF61  F007         	goto	u4821
  1284   000EBE  EF63  F007         	goto	u4820
  1285   000EC2                     u4821:
  1286   000EC2  EF77  F007         	goto	l6285
  1287   000EC6                     u4820:
  1288   000EC6                     
  1289                           ; BSR set to: 0
  1290   000EC6  5032               	movf	_btn_long_press_verify_flg^0,w,c
  1291   000EC8  A4D8               	btfss	status,2,c
  1292   000ECA  EF69  F007         	goto	u4831
  1293   000ECE  EF6B  F007         	goto	u4830
  1294   000ED2                     u4831:
  1295   000ED2  EF6D  F007         	goto	l1140
  1296   000ED6                     u4830:
  1297   000ED6                     
  1298                           ; BSR set to: 0
  1299   000ED6  0E13               	movlw	19
  1300   000ED8  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1301   000EDA                     l1140:
  1302                           
  1303                           ; BSR set to: 0
  1304   000EDA  0E01               	movlw	1
  1305   000EDC  6E32               	movwf	_btn_long_press_verify_flg^0,c
  1306   000EDE  0E04               	movlw	4
  1307   000EE0  6E24               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  1308   000EE2  0EB0               	movlw	176
  1309   000EE4  6E23               	movwf	_sel_btn_pressed_cnt^0,c
  1310   000EE6                     l6283:
  1311                           
  1312                           ; BSR set to: 0
  1313   000EE6  EC17  F003         	call	_ActionButtons	;wreg free
  1314   000EEA  EF90  F007         	goto	l6293
  1315   000EEE                     l6285:
  1316                           
  1317                           ; BSR set to: 0
  1318   000EEE  5024               	movf	(_sel_btn_pressed_cnt+1)^0,w,c
  1319   000EF0  E109               	bnz	u4840
  1320   000EF2  0E33               	movlw	51
  1321   000EF4  5C23               	subwf	_sel_btn_pressed_cnt^0,w,c
  1322   000EF6  A0D8               	btfss	status,0,c
  1323   000EF8  EF80  F007         	goto	u4841
  1324   000EFC  EF82  F007         	goto	u4840
  1325   000F00                     u4841:
  1326   000F00  EF90  F007         	goto	l6293
  1327   000F04                     u4840:
  1328   000F04                     
  1329                           ; BSR set to: 0
  1330   000F04  5033               	movf	_btn_press_verify_flg^0,w,c
  1331   000F06  A4D8               	btfss	status,2,c
  1332   000F08  EF88  F007         	goto	u4851
  1333   000F0C  EF8A  F007         	goto	u4850
  1334   000F10                     u4851:
  1335   000F10  EF8C  F007         	goto	l1143
  1336   000F14                     u4850:
  1337   000F14                     
  1338                           ; BSR set to: 0
  1339   000F14  0E0E               	movlw	14
  1340   000F16  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1341   000F18                     l1143:
  1342                           
  1343                           ; BSR set to: 0
  1344   000F18  0E01               	movlw	1
  1345   000F1A  6E33               	movwf	_btn_press_verify_flg^0,c
  1346   000F1C  EF73  F007         	goto	l6283
  1347   000F20                     l6293:
  1348                           
  1349                           ;Buttons.c: 73:                 if( sel_btn_released_cnt > 5 ) {
  1350   000F20  501A               	movf	(_sel_btn_released_cnt+1)^0,w,c
  1351   000F22  E109               	bnz	u4860
  1352   000F24  0E06               	movlw	6
  1353   000F26  5C19               	subwf	_sel_btn_released_cnt^0,w,c
  1354   000F28  A0D8               	btfss	status,0,c
  1355   000F2A  EF99  F007         	goto	u4861
  1356   000F2E  EF9B  F007         	goto	u4860
  1357   000F32                     u4861:
  1358   000F32  EF18  F008         	goto	l1152
  1359   000F36                     u4860:
  1360   000F36                     
  1361                           ;Buttons.c: 74:                     sel_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn_l
      +                          ong_press_verify_flg = 0; btn_press_verify_flg = 0;
  1362   000F36  0E00               	movlw	0
  1363   000F38  6E1A               	movwf	(_sel_btn_released_cnt+1)^0,c
  1364   000F3A  0E00               	movlw	0
  1365   000F3C  6E19               	movwf	_sel_btn_released_cnt^0,c
  1366   000F3E  0E00               	movlw	0
  1367   000F40  6E34               	movwf	_BTN_CLICK_EVENT^0,c
  1368   000F42  0E00               	movlw	0
  1369   000F44  6E32               	movwf	_btn_long_press_verify_flg^0,c
  1370   000F46  0E00               	movlw	0
  1371   000F48  6E33               	movwf	_btn_press_verify_flg^0,c
  1372   000F4A  EF18  F008         	goto	l1152
  1373   000F4E                     l6297:
  1374                           
  1375                           ; BSR set to: 0
  1376   000F4E  0EB1               	movlw	177
  1377   000F50  5C21               	subwf	_reset_btn_pressed_cnt^0,w,c
  1378   000F52  0E04               	movlw	4
  1379   000F54  5822               	subwfb	(_reset_btn_pressed_cnt+1)^0,w,c
  1380   000F56  A0D8               	btfss	status,0,c
  1381   000F58  EFB0  F007         	goto	u4871
  1382   000F5C  EFB2  F007         	goto	u4870
  1383   000F60                     u4871:
  1384   000F60  EFC6  F007         	goto	l6305
  1385   000F64                     u4870:
  1386   000F64                     
  1387                           ; BSR set to: 0
  1388   000F64  5032               	movf	_btn_long_press_verify_flg^0,w,c
  1389   000F66  A4D8               	btfss	status,2,c
  1390   000F68  EFB8  F007         	goto	u4881
  1391   000F6C  EFBA  F007         	goto	u4880
  1392   000F70                     u4881:
  1393   000F70  EFBC  F007         	goto	l1147
  1394   000F74                     u4880:
  1395   000F74                     
  1396                           ; BSR set to: 0
  1397   000F74  0E14               	movlw	20
  1398   000F76  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1399   000F78                     l1147:
  1400                           
  1401                           ; BSR set to: 0
  1402   000F78  0E01               	movlw	1
  1403   000F7A  6E32               	movwf	_btn_long_press_verify_flg^0,c
  1404   000F7C  0E04               	movlw	4
  1405   000F7E  6E22               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  1406   000F80  0EB0               	movlw	176
  1407   000F82  6E21               	movwf	_reset_btn_pressed_cnt^0,c
  1408   000F84                     l6303:
  1409                           
  1410                           ; BSR set to: 0
  1411   000F84  EC17  F003         	call	_ActionButtons	;wreg free
  1412   000F88  EFDF  F007         	goto	l6313
  1413   000F8C                     l6305:
  1414                           
  1415                           ; BSR set to: 0
  1416   000F8C  5022               	movf	(_reset_btn_pressed_cnt+1)^0,w,c
  1417   000F8E  E109               	bnz	u4890
  1418   000F90  0E33               	movlw	51
  1419   000F92  5C21               	subwf	_reset_btn_pressed_cnt^0,w,c
  1420   000F94  A0D8               	btfss	status,0,c
  1421   000F96  EFCF  F007         	goto	u4891
  1422   000F9A  EFD1  F007         	goto	u4890
  1423   000F9E                     u4891:
  1424   000F9E  EFDF  F007         	goto	l6313
  1425   000FA2                     u4890:
  1426   000FA2                     
  1427                           ; BSR set to: 0
  1428   000FA2  5033               	movf	_btn_press_verify_flg^0,w,c
  1429   000FA4  A4D8               	btfss	status,2,c
  1430   000FA6  EFD7  F007         	goto	u4901
  1431   000FAA  EFD9  F007         	goto	u4900
  1432   000FAE                     u4901:
  1433   000FAE  EFDB  F007         	goto	l1150
  1434   000FB2                     u4900:
  1435   000FB2                     
  1436                           ; BSR set to: 0
  1437   000FB2  0E0F               	movlw	15
  1438   000FB4  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1439   000FB6                     l1150:
  1440                           
  1441                           ; BSR set to: 0
  1442   000FB6  0E01               	movlw	1
  1443   000FB8  6E33               	movwf	_btn_press_verify_flg^0,c
  1444   000FBA  EFC2  F007         	goto	l6303
  1445   000FBE                     l6313:
  1446                           
  1447                           ;Buttons.c: 80:                 if( reset_btn_released_cnt > 5 ) {
  1448   000FBE  5018               	movf	(_reset_btn_released_cnt+1)^0,w,c
  1449   000FC0  E109               	bnz	u4910
  1450   000FC2  0E06               	movlw	6
  1451   000FC4  5C17               	subwf	_reset_btn_released_cnt^0,w,c
  1452   000FC6  A0D8               	btfss	status,0,c
  1453   000FC8  EFE8  F007         	goto	u4911
  1454   000FCC  EFEA  F007         	goto	u4910
  1455   000FD0                     u4911:
  1456   000FD0  EF18  F008         	goto	l1152
  1457   000FD4                     u4910:
  1458   000FD4                     
  1459                           ;Buttons.c: 81:                     reset_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn
      +                          _long_press_verify_flg = 0; btn_press_verify_flg = 0;
  1460   000FD4  0E00               	movlw	0
  1461   000FD6  6E18               	movwf	(_reset_btn_released_cnt+1)^0,c
  1462   000FD8  0E00               	movlw	0
  1463   000FDA  6E17               	movwf	_reset_btn_released_cnt^0,c
  1464   000FDC  0E00               	movlw	0
  1465   000FDE  6E34               	movwf	_BTN_CLICK_EVENT^0,c
  1466   000FE0  0E00               	movlw	0
  1467   000FE2  6E32               	movwf	_btn_long_press_verify_flg^0,c
  1468   000FE4  0E00               	movlw	0
  1469   000FE6  6E33               	movwf	_btn_press_verify_flg^0,c
  1470   000FE8  EF18  F008         	goto	l1152
  1471   000FEC                     l6319:
  1472   000FEC  5034               	movf	_BTN_CLICK_EVENT^0,w,c
  1473   000FEE  0100               	movlb	0	; () banked
  1474   000FF0  6F8B               	movwf	??_VerifyButtons& (0+255),b
  1475   000FF2  6B8C               	clrf	(??_VerifyButtons+1)& (0+255),b
  1476                           
  1477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1478                           ; Switch size 1, requested type "simple"
  1479                           ; Number of cases is 1, Range of values is 0 to 0
  1480                           ; switch strategies available:
  1481                           ; Name         Instructions Cycles
  1482                           ; simple_byte            4     3 (average)
  1483                           ;	Chosen strategy is simple_byte
  1484   000FF4  518C               	movf	(??_VerifyButtons+1)& (0+255),w,b
  1485   000FF6  0A00               	xorlw	0	; case 0
  1486   000FF8  B4D8               	btfsc	status,2,c
  1487   000FFA  EF01  F008         	goto	l6815
  1488   000FFE  EF18  F008         	goto	l1152
  1489   001002                     l6815:
  1490                           
  1491                           ; BSR set to: 0
  1492                           ; Switch size 1, requested type "simple"
  1493                           ; Number of cases is 5, Range of values is 1 to 5
  1494                           ; switch strategies available:
  1495                           ; Name         Instructions Cycles
  1496                           ; simple_byte           16     9 (average)
  1497                           ;	Chosen strategy is simple_byte
  1498   001002  518B               	movf	??_VerifyButtons& (0+255),w,b
  1499   001004  0A01               	xorlw	1	; case 1
  1500   001006  B4D8               	btfsc	status,2,c
  1501   001008  EF65  F006         	goto	l6217
  1502   00100C  0A03               	xorlw	3	; case 2
  1503   00100E  B4D8               	btfsc	status,2,c
  1504   001010  EFB6  F006         	goto	l6237
  1505   001014  0A01               	xorlw	1	; case 3
  1506   001016  B4D8               	btfsc	status,2,c
  1507   001018  EF07  F007         	goto	l6257
  1508   00101C  0A07               	xorlw	7	; case 4
  1509   00101E  B4D8               	btfsc	status,2,c
  1510   001020  EF58  F007         	goto	l6277
  1511   001024  0A01               	xorlw	1	; case 5
  1512   001026  B4D8               	btfsc	status,2,c
  1513   001028  EFA7  F007         	goto	l6297
  1514   00102C  EF18  F008         	goto	l1152
  1515   001030                     l1152:
  1516   001030  0012               	return		;funcret
  1517   001032                     __end_of_VerifyButtons:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function _ActionButtons *****************
  1521 ;; Defined at:
  1522 ;;		line 87 in file "Buttons.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  temp            1    0[BANK0 ] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1536 ;;      Params:         0       0       0       0       0       0       0
  1537 ;;      Locals:         0       1       0       0       0       0       0
  1538 ;;      Temps:          2       0       0       0       0       0       0
  1539 ;;      Totals:         2       1       0       0       0       0       0
  1540 ;;Total ram usage:        3 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; Hardware stack levels required when called: 9
  1543 ;; This function calls:
  1544 ;;		_DecValProcess
  1545 ;;		_Ds1307HourSet
  1546 ;;		_Ds1307MinuteSet
  1547 ;;		_Ds1307SecondSet
  1548 ;;		_IncValProcess
  1549 ;;		_StartCounter
  1550 ;;		_StopCounter
  1551 ;;		_UpDownTransfer
  1552 ;; This function is called by:
  1553 ;;		_VerifyButtons
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text2
  1558   00062E                     __ptext2:
  1559                           	callstack 0
  1560   00062E                     _ActionButtons:
  1561                           	callstack 20
  1562   00062E                     
  1563                           ;Buttons.c: 89:     if( counter_down_comp_flg ) {
  1564   00062E  503A               	movf	_counter_down_comp_flg^0,w,c
  1565   000630  B4D8               	btfsc	status,2,c
  1566   000632  EF1D  F003         	goto	u4171
  1567   000636  EF1F  F003         	goto	u4170
  1568   00063A                     u4171:
  1569   00063A  EF3D  F006         	goto	l6071
  1570   00063E                     u4170:
  1571   00063E                     
  1572                           ;Buttons.c: 90:         blink_enable_flg = 0; counter_down_comp_flg = 0; SYSTEM_STATE_FL
      +                          G = 203; BTN_CLICK_STATE = 0;
  1573   00063E  0E00               	movlw	0
  1574   000640  6E38               	movwf	_blink_enable_flg^0,c
  1575   000642  0E00               	movlw	0
  1576   000644  6E3A               	movwf	_counter_down_comp_flg^0,c
  1577   000646  0ECB               	movlw	203
  1578   000648  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  1579   00064A  0E00               	movlw	0
  1580   00064C  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1581   00064E  EF3D  F006         	goto	l6071
  1582   000652                     l5723:
  1583                           
  1584                           ;Buttons.c: 103:                     if( rtc_clock_disp_type == 0 ){
  1585   000652  5051               	movf	_rtc_clock_disp_type^0,w,c
  1586   000654  A4D8               	btfss	status,2,c
  1587   000656  EF2F  F003         	goto	u4181
  1588   00065A  EF31  F003         	goto	u4180
  1589   00065E                     u4181:
  1590   00065E  EF47  F003         	goto	l5731
  1591   000662                     u4180:
  1592   000662                     
  1593                           ;Buttons.c: 104:                         if( rtc_hour_ampm_flg == 0 && real_rtc_data[ 2 
      +                          ] == 0 ) real_rtc_data[ 2 ] = 0x12;
  1594   000662  5050               	movf	_rtc_hour_ampm_flg^0,w,c
  1595   000664  A4D8               	btfss	status,2,c
  1596   000666  EF37  F003         	goto	u4191
  1597   00066A  EF39  F003         	goto	u4190
  1598   00066E                     u4191:
  1599   00066E  EF43  F003         	goto	l1161
  1600   000672                     u4190:
  1601   000672  500B               	movf	(_real_rtc_data+2)^0,w,c
  1602   000674  A4D8               	btfss	status,2,c
  1603   000676  EF3F  F003         	goto	u4201
  1604   00067A  EF41  F003         	goto	u4200
  1605   00067E                     u4201:
  1606   00067E  EF43  F003         	goto	l1161
  1607   000682                     u4200:
  1608   000682  0E12               	movlw	18
  1609   000684  6E0B               	movwf	(_real_rtc_data+2)^0,c
  1610   000686                     l1161:
  1611                           
  1612                           ;Buttons.c: 105:                         rtc_clock_disp_type = 1;
  1613   000686  0E01               	movlw	1
  1614   000688  6E51               	movwf	_rtc_clock_disp_type^0,c
  1615                           
  1616                           ;Buttons.c: 106:                     }
  1617   00068A  EF5C  F003         	goto	l1162
  1618   00068E                     l5731:
  1619                           
  1620                           ;Buttons.c: 108:                         if( rtc_hour_ampm_flg == 0 && real_rtc_data[ 2 
      +                          ] == 0x12 ) real_rtc_data[ 2 ] = 0x00;
  1621   00068E  5050               	movf	_rtc_hour_ampm_flg^0,w,c
  1622   000690  A4D8               	btfss	status,2,c
  1623   000692  EF4D  F003         	goto	u4211
  1624   000696  EF4F  F003         	goto	u4210
  1625   00069A                     u4211:
  1626   00069A  EF5A  F003         	goto	l1163
  1627   00069E                     u4210:
  1628   00069E  0E12               	movlw	18
  1629   0006A0  180B               	xorwf	(_real_rtc_data+2)^0,w,c
  1630   0006A2  A4D8               	btfss	status,2,c
  1631   0006A4  EF56  F003         	goto	u4221
  1632   0006A8  EF58  F003         	goto	u4220
  1633   0006AC                     u4221:
  1634   0006AC  EF5A  F003         	goto	l1163
  1635   0006B0                     u4220:
  1636   0006B0  0E00               	movlw	0
  1637   0006B2  6E0B               	movwf	(_real_rtc_data+2)^0,c
  1638   0006B4                     l1163:
  1639                           
  1640                           ;Buttons.c: 109:                         rtc_clock_disp_type = 0;
  1641   0006B4  0E00               	movlw	0
  1642   0006B6  6E51               	movwf	_rtc_clock_disp_type^0,c
  1643   0006B8                     l1162:
  1644                           
  1645                           ;Buttons.c: 111:                     BTN_CLICK_STATE = 0; Ds1307HourSet(real_rtc_data[ 2
      +                           ]);
  1646   0006B8  0E00               	movlw	0
  1647   0006BA  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1648   0006BC  500B               	movf	(_real_rtc_data+2)^0,w,c
  1649   0006BE  EC47  F00F         	call	_Ds1307HourSet
  1650   0006C2  EF62  F006         	goto	l1164
  1651   0006C6                     l1165:
  1652                           
  1653                           ;Buttons.c: 114:                     temp = real_rtc_data[ 2 ]; temp ++;
  1654   0006C6  C00B  F08A         	movff	_real_rtc_data+2,ActionButtons@temp
  1655   0006CA  0100               	movlb	0	; () banked
  1656   0006CC  2B8A               	incf	ActionButtons@temp& (0+255),f,b
  1657   0006CE                     
  1658                           ; BSR set to: 0
  1659                           ;Buttons.c: 115:                     if( temp % 16 >= 10 ) temp += 6;
  1660   0006CE  C08A  F06D         	movff	ActionButtons@temp,??_ActionButtons
  1661   0006D2  0E0F               	movlw	15
  1662   0006D4  166D               	andwf	??_ActionButtons^0,f,c
  1663   0006D6  0E09               	movlw	9
  1664   0006D8  646D               	cpfsgt	??_ActionButtons^0,c
  1665   0006DA  EF71  F003         	goto	u4231
  1666   0006DE  EF73  F003         	goto	u4230
  1667   0006E2                     u4231:
  1668   0006E2  EF75  F003         	goto	l5747
  1669   0006E6                     u4230:
  1670   0006E6                     
  1671                           ; BSR set to: 0
  1672   0006E6  0E06               	movlw	6
  1673   0006E8  278A               	addwf	ActionButtons@temp& (0+255),f,b
  1674   0006EA                     l5747:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;Buttons.c: 116:                     if( rtc_clock_disp_type == 0 ){
  1678   0006EA  5051               	movf	_rtc_clock_disp_type^0,w,c
  1679   0006EC  A4D8               	btfss	status,2,c
  1680   0006EE  EF7B  F003         	goto	u4241
  1681   0006F2  EF7D  F003         	goto	u4240
  1682   0006F6                     u4241:
  1683   0006F6  EF95  F003         	goto	l5757
  1684   0006FA                     u4240:
  1685   0006FA                     
  1686                           ; BSR set to: 0
  1687                           ;Buttons.c: 117:                         if( temp > 0x11 ) { rtc_hour_ampm_flg = 1; }
  1688   0006FA  0E11               	movlw	17
  1689   0006FC  658A               	cpfsgt	ActionButtons@temp& (0+255),b
  1690   0006FE  EF83  F003         	goto	u4251
  1691   000702  EF85  F003         	goto	u4250
  1692   000706                     u4251:
  1693   000706  EF87  F003         	goto	l5753
  1694   00070A                     u4250:
  1695   00070A                     
  1696                           ; BSR set to: 0
  1697   00070A  0E01               	movlw	1
  1698   00070C  6E50               	movwf	_rtc_hour_ampm_flg^0,c
  1699   00070E                     l5753:
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;Buttons.c: 118:                         if( temp > 0x23 ) { temp = 0; rtc_hour_ampm_flg
      +                           = 0; }
  1703   00070E  0E23               	movlw	35
  1704   000710  658A               	cpfsgt	ActionButtons@temp& (0+255),b
  1705   000712  EF8D  F003         	goto	u4261
  1706   000716  EF8F  F003         	goto	u4260
  1707   00071A                     u4261:
  1708   00071A  EFBD  F003         	goto	l5771
  1709   00071E                     u4260:
  1710   00071E                     
  1711                           ; BSR set to: 0
  1712   00071E  0E00               	movlw	0
  1713   000720  6F8A               	movwf	ActionButtons@temp& (0+255),b
  1714   000722  0E00               	movlw	0
  1715   000724  6E50               	movwf	_rtc_hour_ampm_flg^0,c
  1716   000726  EFBD  F003         	goto	l5771
  1717   00072A                     l5757:
  1718                           
  1719                           ; BSR set to: 0
  1720   00072A  0451               	decf	_rtc_clock_disp_type^0,w,c
  1721   00072C  A4D8               	btfss	status,2,c
  1722   00072E  EF9B  F003         	goto	u4271
  1723   000732  EF9D  F003         	goto	u4270
  1724   000736                     u4271:
  1725   000736  EFBD  F003         	goto	l5771
  1726   00073A                     u4270:
  1727   00073A                     
  1728                           ; BSR set to: 0
  1729                           ;Buttons.c: 121:                         if( temp > 0x12 ) temp = 1;
  1730   00073A  0E12               	movlw	18
  1731   00073C  658A               	cpfsgt	ActionButtons@temp& (0+255),b
  1732   00073E  EFA3  F003         	goto	u4281
  1733   000742  EFA5  F003         	goto	u4280
  1734   000746                     u4281:
  1735   000746  EFA7  F003         	goto	l5763
  1736   00074A                     u4280:
  1737   00074A                     
  1738                           ; BSR set to: 0
  1739   00074A  0E01               	movlw	1
  1740   00074C  6F8A               	movwf	ActionButtons@temp& (0+255),b
  1741   00074E                     l5763:
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;Buttons.c: 122:                         if( temp > 0x11 ) {
  1745   00074E  0E11               	movlw	17
  1746   000750  658A               	cpfsgt	ActionButtons@temp& (0+255),b
  1747   000752  EFAD  F003         	goto	u4291
  1748   000756  EFAF  F003         	goto	u4290
  1749   00075A                     u4291:
  1750   00075A  EFBD  F003         	goto	l5771
  1751   00075E                     u4290:
  1752   00075E                     
  1753                           ; BSR set to: 0
  1754                           ;Buttons.c: 123:                             if( rtc_hour_ampm_flg == 1 ) rtc_hour_ampm_
      +                          flg = 0;
  1755   00075E  0450               	decf	_rtc_hour_ampm_flg^0,w,c
  1756   000760  A4D8               	btfss	status,2,c
  1757   000762  EFB5  F003         	goto	u4301
  1758   000766  EFB7  F003         	goto	u4300
  1759   00076A                     u4301:
  1760   00076A  EFBB  F003         	goto	l5769
  1761   00076E                     u4300:
  1762   00076E                     
  1763                           ; BSR set to: 0
  1764   00076E  0E00               	movlw	0
  1765   000770  6E50               	movwf	_rtc_hour_ampm_flg^0,c
  1766   000772  EFBD  F003         	goto	l5771
  1767   000776                     l5769:
  1768                           
  1769                           ; BSR set to: 0
  1770   000776  0E01               	movlw	1
  1771   000778  6E50               	movwf	_rtc_hour_ampm_flg^0,c
  1772   00077A                     l5771:
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;Buttons.c: 127:                     real_rtc_data[ 2 ] = temp;
  1776   00077A  C08A  F00B         	movff	ActionButtons@temp,_real_rtc_data+2
  1777   00077E                     
  1778                           ; BSR set to: 0
  1779                           ;Buttons.c: 128:                     Ds1307HourSet(real_rtc_data[ 2 ]);
  1780   00077E  500B               	movf	(_real_rtc_data+2)^0,w,c
  1781   000780  EC47  F00F         	call	_Ds1307HourSet
  1782   000784                     l5775:
  1783                           
  1784                           ;Buttons.c: 129:                     BTN_CLICK_STATE = 0;
  1785   000784  0E00               	movlw	0
  1786   000786  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1787                           
  1788                           ;Buttons.c: 130:                     break;
  1789   000788  EF62  F006         	goto	l1164
  1790   00078C                     l5777:
  1791                           
  1792                           ;Buttons.c: 132:                     continue_pressed_cnt ++;
  1793   00078C  4A15               	infsnz	_continue_pressed_cnt^0,f,c
  1794   00078E  2A16               	incf	(_continue_pressed_cnt+1)^0,f,c
  1795   000790                     
  1796                           ;Buttons.c: 133:                     if( continue_pressed_cnt > 600 ) {
  1797   000790  0E59               	movlw	89
  1798   000792  5C15               	subwf	_continue_pressed_cnt^0,w,c
  1799   000794  0E02               	movlw	2
  1800   000796  5816               	subwfb	(_continue_pressed_cnt+1)^0,w,c
  1801   000798  A0D8               	btfss	status,0,c
  1802   00079A  EFD1  F003         	goto	u4311
  1803   00079E  EFD3  F003         	goto	u4310
  1804   0007A2                     u4311:
  1805   0007A2  EF62  F006         	goto	l1164
  1806   0007A6                     u4310:
  1807   0007A6                     
  1808                           ;Buttons.c: 134:                         temp = real_rtc_data[ 1 ]; temp ++;
  1809   0007A6  C00A  F08A         	movff	_real_rtc_data+1,ActionButtons@temp
  1810   0007AA  0100               	movlb	0	; () banked
  1811   0007AC  2B8A               	incf	ActionButtons@temp& (0+255),f,b
  1812   0007AE                     
  1813                           ; BSR set to: 0
  1814                           ;Buttons.c: 135:                         if( temp % 16 >= 10 ) temp += 6;
  1815   0007AE  C08A  F06D         	movff	ActionButtons@temp,??_ActionButtons
  1816   0007B2  0E0F               	movlw	15
  1817   0007B4  166D               	andwf	??_ActionButtons^0,f,c
  1818   0007B6  0E09               	movlw	9
  1819   0007B8  646D               	cpfsgt	??_ActionButtons^0,c
  1820   0007BA  EFE1  F003         	goto	u4321
  1821   0007BE  EFE3  F003         	goto	u4320
  1822   0007C2                     u4321:
  1823   0007C2  EFE5  F003         	goto	l1179
  1824   0007C6                     u4320:
  1825   0007C6                     
  1826                           ; BSR set to: 0
  1827   0007C6  0E06               	movlw	6
  1828   0007C8  278A               	addwf	ActionButtons@temp& (0+255),f,b
  1829   0007CA                     l1179:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;Buttons.c: 136:                         if( temp > 0x59 ) temp = 0;
  1833   0007CA  0E59               	movlw	89
  1834   0007CC  658A               	cpfsgt	ActionButtons@temp& (0+255),b
  1835   0007CE  EFEB  F003         	goto	u4331
  1836   0007D2  EFED  F003         	goto	u4330
  1837   0007D6                     u4331:
  1838   0007D6  EFEF  F003         	goto	l5791
  1839   0007DA                     u4330:
  1840   0007DA                     
  1841                           ; BSR set to: 0
  1842   0007DA  0E00               	movlw	0
  1843   0007DC  6F8A               	movwf	ActionButtons@temp& (0+255),b
  1844   0007DE                     l5791:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;Buttons.c: 137:                         real_rtc_data[ 1 ] = temp;
  1848   0007DE  C08A  F00A         	movff	ActionButtons@temp,_real_rtc_data+1
  1849   0007E2                     
  1850                           ; BSR set to: 0
  1851                           ;Buttons.c: 138:                         Ds1307MinuteSet(real_rtc_data[ 1 ]);
  1852   0007E2  500A               	movf	(_real_rtc_data+1)^0,w,c
  1853   0007E4  EC4A  F013         	call	_Ds1307MinuteSet
  1854   0007E8                     l5795:
  1855                           
  1856                           ;Buttons.c: 139:                         continue_pressed_cnt = 0;
  1857   0007E8  0E00               	movlw	0
  1858   0007EA  6E16               	movwf	(_continue_pressed_cnt+1)^0,c
  1859   0007EC  0E00               	movlw	0
  1860   0007EE  6E15               	movwf	_continue_pressed_cnt^0,c
  1861   0007F0  EF62  F006         	goto	l1164
  1862   0007F4                     l5799:
  1863                           
  1864                           ;Buttons.c: 143:                     continue_pressed_cnt ++;
  1865   0007F4  4A15               	infsnz	_continue_pressed_cnt^0,f,c
  1866   0007F6  2A16               	incf	(_continue_pressed_cnt+1)^0,f,c
  1867   0007F8                     
  1868                           ;Buttons.c: 144:                     if( continue_pressed_cnt > 600 ) {
  1869   0007F8  0E59               	movlw	89
  1870   0007FA  5C15               	subwf	_continue_pressed_cnt^0,w,c
  1871   0007FC  0E02               	movlw	2
  1872   0007FE  5816               	subwfb	(_continue_pressed_cnt+1)^0,w,c
  1873   000800  A0D8               	btfss	status,0,c
  1874   000802  EF05  F004         	goto	u4341
  1875   000806  EF07  F004         	goto	u4340
  1876   00080A                     u4341:
  1877   00080A  EF62  F006         	goto	l1164
  1878   00080E                     u4340:
  1879   00080E                     
  1880                           ;Buttons.c: 145:                         temp = real_rtc_data[ 0 ]; temp ++;
  1881   00080E  C009  F08A         	movff	_real_rtc_data,ActionButtons@temp
  1882   000812  0100               	movlb	0	; () banked
  1883   000814  2B8A               	incf	ActionButtons@temp& (0+255),f,b
  1884   000816                     
  1885                           ; BSR set to: 0
  1886                           ;Buttons.c: 146:                         if( temp % 16 >= 10 ) temp += 6;
  1887   000816  C08A  F06D         	movff	ActionButtons@temp,??_ActionButtons
  1888   00081A  0E0F               	movlw	15
  1889   00081C  166D               	andwf	??_ActionButtons^0,f,c
  1890   00081E  0E09               	movlw	9
  1891   000820  646D               	cpfsgt	??_ActionButtons^0,c
  1892   000822  EF15  F004         	goto	u4351
  1893   000826  EF17  F004         	goto	u4350
  1894   00082A                     u4351:
  1895   00082A  EF19  F004         	goto	l1183
  1896   00082E                     u4350:
  1897   00082E                     
  1898                           ; BSR set to: 0
  1899   00082E  0E06               	movlw	6
  1900   000830  278A               	addwf	ActionButtons@temp& (0+255),f,b
  1901   000832                     l1183:
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;Buttons.c: 147:                         if( temp > 0x59 ) temp = 0;
  1905   000832  0E59               	movlw	89
  1906   000834  658A               	cpfsgt	ActionButtons@temp& (0+255),b
  1907   000836  EF1F  F004         	goto	u4361
  1908   00083A  EF21  F004         	goto	u4360
  1909   00083E                     u4361:
  1910   00083E  EF23  F004         	goto	l5813
  1911   000842                     u4360:
  1912   000842                     
  1913                           ; BSR set to: 0
  1914   000842  0E00               	movlw	0
  1915   000844  6F8A               	movwf	ActionButtons@temp& (0+255),b
  1916   000846                     l5813:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;Buttons.c: 148:                         real_rtc_data[ 0 ] = temp;
  1920   000846  C08A  F009         	movff	ActionButtons@temp,_real_rtc_data
  1921   00084A                     
  1922                           ; BSR set to: 0
  1923                           ;Buttons.c: 149:                         Ds1307SecondSet(real_rtc_data[ 0 ]);
  1924   00084A  5009               	movf	_real_rtc_data^0,w,c
  1925   00084C  EC3B  F013         	call	_Ds1307SecondSet
  1926   000850  EFF4  F003         	goto	l5795
  1927   000854                     l5821:
  1928                           
  1929                           ;Buttons.c: 154:                     BTN_CLICK_STATE = 0;
  1930   000854  0E00               	movlw	0
  1931   000856  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1932   000858                     
  1933                           ;Buttons.c: 155:                     temp = real_rtc_data[ 1 ]; temp ++;
  1934   000858  C00A  F08A         	movff	_real_rtc_data+1,ActionButtons@temp
  1935   00085C  0100               	movlb	0	; () banked
  1936   00085E  2B8A               	incf	ActionButtons@temp& (0+255),f,b
  1937   000860                     
  1938                           ; BSR set to: 0
  1939                           ;Buttons.c: 156:                     if( temp % 16 >= 10 ) temp += 6;
  1940   000860  C08A  F06D         	movff	ActionButtons@temp,??_ActionButtons
  1941   000864  0E0F               	movlw	15
  1942   000866  166D               	andwf	??_ActionButtons^0,f,c
  1943   000868  0E09               	movlw	9
  1944   00086A  646D               	cpfsgt	??_ActionButtons^0,c
  1945   00086C  EF3A  F004         	goto	u4371
  1946   000870  EF3C  F004         	goto	u4370
  1947   000874                     u4371:
  1948   000874  EF3E  F004         	goto	l1186
  1949   000878                     u4370:
  1950   000878                     
  1951                           ; BSR set to: 0
  1952   000878  0E06               	movlw	6
  1953   00087A  278A               	addwf	ActionButtons@temp& (0+255),f,b
  1954   00087C                     l1186:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;Buttons.c: 157:                     if( temp > 0x59 ) temp = 0;
  1958   00087C  0E59               	movlw	89
  1959   00087E  658A               	cpfsgt	ActionButtons@temp& (0+255),b
  1960   000880  EF44  F004         	goto	u4381
  1961   000884  EF46  F004         	goto	u4380
  1962   000888                     u4381:
  1963   000888  EF48  F004         	goto	l5833
  1964   00088C                     u4380:
  1965   00088C                     
  1966                           ; BSR set to: 0
  1967   00088C  0E00               	movlw	0
  1968   00088E  6F8A               	movwf	ActionButtons@temp& (0+255),b
  1969   000890                     l5833:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;Buttons.c: 158:                     real_rtc_data[ 1 ] = temp;
  1973   000890  C08A  F00A         	movff	ActionButtons@temp,_real_rtc_data+1
  1974   000894                     
  1975                           ; BSR set to: 0
  1976                           ;Buttons.c: 159:                     Ds1307MinuteSet(real_rtc_data[ 1 ]);
  1977   000894  500A               	movf	(_real_rtc_data+1)^0,w,c
  1978   000896  EC4A  F013         	call	_Ds1307MinuteSet
  1979                           
  1980                           ;Buttons.c: 160:                     break;
  1981   00089A  EF62  F006         	goto	l1164
  1982   00089E                     l5837:
  1983                           
  1984                           ;Buttons.c: 162:                     BTN_CLICK_STATE = 0;
  1985   00089E  0E00               	movlw	0
  1986   0008A0  6E35               	movwf	_BTN_CLICK_STATE^0,c
  1987   0008A2                     
  1988                           ;Buttons.c: 163:                     temp = real_rtc_data[ 0 ]; temp ++;
  1989   0008A2  C009  F08A         	movff	_real_rtc_data,ActionButtons@temp
  1990   0008A6  0100               	movlb	0	; () banked
  1991   0008A8  2B8A               	incf	ActionButtons@temp& (0+255),f,b
  1992   0008AA                     
  1993                           ; BSR set to: 0
  1994                           ;Buttons.c: 164:                     if( temp % 16 >= 10 ) temp += 6;
  1995   0008AA  C08A  F06D         	movff	ActionButtons@temp,??_ActionButtons
  1996   0008AE  0E0F               	movlw	15
  1997   0008B0  166D               	andwf	??_ActionButtons^0,f,c
  1998   0008B2  0E09               	movlw	9
  1999   0008B4  646D               	cpfsgt	??_ActionButtons^0,c
  2000   0008B6  EF5F  F004         	goto	u4391
  2001   0008BA  EF61  F004         	goto	u4390
  2002   0008BE                     u4391:
  2003   0008BE  EF63  F004         	goto	l1189
  2004   0008C2                     u4390:
  2005   0008C2                     
  2006                           ; BSR set to: 0
  2007   0008C2  0E06               	movlw	6
  2008   0008C4  278A               	addwf	ActionButtons@temp& (0+255),f,b
  2009   0008C6                     l1189:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;Buttons.c: 165:                     if( temp > 0x59 ) temp = 0;
  2013   0008C6  0E59               	movlw	89
  2014   0008C8  658A               	cpfsgt	ActionButtons@temp& (0+255),b
  2015   0008CA  EF69  F004         	goto	u4401
  2016   0008CE  EF6B  F004         	goto	u4400
  2017   0008D2                     u4401:
  2018   0008D2  EF6D  F004         	goto	l5849
  2019   0008D6                     u4400:
  2020   0008D6                     
  2021                           ; BSR set to: 0
  2022   0008D6  0E00               	movlw	0
  2023   0008D8  6F8A               	movwf	ActionButtons@temp& (0+255),b
  2024   0008DA                     l5849:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;Buttons.c: 166:                     real_rtc_data[ 0 ] = temp;
  2028   0008DA  C08A  F009         	movff	ActionButtons@temp,_real_rtc_data
  2029   0008DE                     
  2030                           ; BSR set to: 0
  2031                           ;Buttons.c: 167:                     Ds1307SecondSet(real_rtc_data[ 0 ]);
  2032   0008DE  5009               	movf	_real_rtc_data^0,w,c
  2033   0008E0  EC3B  F013         	call	_Ds1307SecondSet
  2034                           
  2035                           ;Buttons.c: 168:                     break;
  2036   0008E4  EF62  F006         	goto	l1164
  2037   0008E8                     l5855:
  2038   0008E8  5035               	movf	_BTN_CLICK_STATE^0,w,c
  2039   0008EA  6E6D               	movwf	??_ActionButtons^0,c
  2040   0008EC  6A6E               	clrf	(??_ActionButtons+1)^0,c
  2041                           
  2042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2043                           ; Switch size 1, requested type "simple"
  2044                           ; Number of cases is 1, Range of values is 0 to 0
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte            4     3 (average)
  2048                           ;	Chosen strategy is simple_byte
  2049   0008EE  506E               	movf	(??_ActionButtons+1)^0,w,c
  2050   0008F0  0A00               	xorlw	0	; case 0
  2051   0008F2  B4D8               	btfsc	status,2,c
  2052   0008F4  EF7E  F004         	goto	l6817
  2053   0008F8  EF62  F006         	goto	l1164
  2054   0008FC                     l6817:
  2055                           
  2056                           ; Switch size 1, requested type "simple"
  2057                           ; Number of cases is 6, Range of values is 11 to 18
  2058                           ; switch strategies available:
  2059                           ; Name         Instructions Cycles
  2060                           ; simple_byte           19    10 (average)
  2061                           ;	Chosen strategy is simple_byte
  2062   0008FC  506D               	movf	??_ActionButtons^0,w,c
  2063   0008FE  0A0B               	xorlw	11	; case 11
  2064   000900  B4D8               	btfsc	status,2,c
  2065   000902  EF63  F003         	goto	l1165
  2066   000906  0A07               	xorlw	7	; case 12
  2067   000908  B4D8               	btfsc	status,2,c
  2068   00090A  EF2A  F004         	goto	l5821
  2069   00090E  0A01               	xorlw	1	; case 13
  2070   000910  B4D8               	btfsc	status,2,c
  2071   000912  EF4F  F004         	goto	l5837
  2072   000916  0A03               	xorlw	3	; case 14
  2073   000918  B4D8               	btfsc	status,2,c
  2074   00091A  EF29  F003         	goto	l5723
  2075   00091E  0A1F               	xorlw	31	; case 17
  2076   000920  B4D8               	btfsc	status,2,c
  2077   000922  EFC6  F003         	goto	l5777
  2078   000926  0A03               	xorlw	3	; case 18
  2079   000928  B4D8               	btfsc	status,2,c
  2080   00092A  EFFA  F003         	goto	l5799
  2081   00092E  EF62  F006         	goto	l1164
  2082   000932                     l5857:
  2083                           
  2084                           ;Buttons.c: 179:                     BTN_CLICK_STATE = 0;
  2085   000932  0E00               	movlw	0
  2086   000934  6E35               	movwf	_BTN_CLICK_STATE^0,c
  2087                           
  2088                           ;Buttons.c: 180:                     if( counter_skip_flg ) return;
  2089   000936  503C               	movf	_counter_skip_flg^0,w,c
  2090   000938  B4D8               	btfsc	status,2,c
  2091   00093A  EFA1  F004         	goto	u4411
  2092   00093E  EFA3  F004         	goto	u4410
  2093   000942                     u4411:
  2094   000942  EFA5  F004         	goto	l5861
  2095   000946                     u4410:
  2096   000946  EF62  F006         	goto	l1164
  2097   00094A                     l5861:
  2098                           
  2099                           ;Buttons.c: 181:                     if( !counter_enable_flg ) { SYSTEM_STATE_FLG = 200;
      +                           StartCounter(); blink_enable_flg = 1; }
  2100   00094A  503E               	movf	_counter_enable_flg^0,w,c
  2101   00094C  A4D8               	btfss	status,2,c
  2102   00094E  EFAB  F004         	goto	u4421
  2103   000952  EFAD  F004         	goto	u4420
  2104   000956                     u4421:
  2105   000956  EFB5  F004         	goto	l5869
  2106   00095A                     u4420:
  2107   00095A  0EC8               	movlw	200
  2108   00095C  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  2109   00095E  ECCF  F013         	call	_StartCounter	;wreg free
  2110   000962  0E01               	movlw	1
  2111   000964  6E38               	movwf	_blink_enable_flg^0,c
  2112   000966  EFBB  F004         	goto	l5875
  2113   00096A                     l5869:
  2114   00096A  0EC9               	movlw	201
  2115   00096C  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  2116   00096E  ECCC  F013         	call	_StopCounter	;wreg free
  2117   000972  0E00               	movlw	0
  2118   000974  6E38               	movwf	_blink_enable_flg^0,c
  2119   000976                     l5875:
  2120                           
  2121                           ;Buttons.c: 183:                     temp_system_state = SYSTEM_STATE_FLG;
  2122   000976  C06F  F04A         	movff	_SYSTEM_STATE_FLG,_temp_system_state
  2123   00097A  EF62  F006         	goto	l1164
  2124   00097E                     l5879:
  2125                           
  2126                           ;Buttons.c: 186:                     if( !counter_enable_flg ) return;
  2127   00097E  503E               	movf	_counter_enable_flg^0,w,c
  2128   000980  A4D8               	btfss	status,2,c
  2129   000982  EFC5  F004         	goto	u4431
  2130   000986  EFC7  F004         	goto	u4430
  2131   00098A                     u4431:
  2132   00098A  EFC9  F004         	goto	l5883
  2133   00098E                     u4430:
  2134   00098E  EF62  F006         	goto	l1164
  2135   000992                     l5883:
  2136                           
  2137                           ;Buttons.c: 187:                     counter_skip_flg = 1 - counter_skip_flg;
  2138   000992  0E01               	movlw	1
  2139   000994  6E6D               	movwf	??_ActionButtons^0,c
  2140   000996  0E00               	movlw	0
  2141   000998  6E6E               	movwf	(??_ActionButtons+1)^0,c
  2142   00099A  503C               	movf	_counter_skip_flg^0,w,c
  2143   00099C  5E6D               	subwf	??_ActionButtons^0,f,c
  2144   00099E  0E00               	movlw	0
  2145   0009A0  5A6E               	subwfb	(??_ActionButtons+1)^0,f,c
  2146   0009A2  506D               	movf	??_ActionButtons^0,w,c
  2147   0009A4  106E               	iorwf	(??_ActionButtons+1)^0,w,c
  2148   0009A6  A4D8               	btfss	status,2,c
  2149   0009A8  EFD8  F004         	goto	u4441
  2150   0009AC  EFDB  F004         	goto	u4440
  2151   0009B0                     u4441:
  2152   0009B0  0E01               	movlw	1
  2153   0009B2  EFDC  F004         	goto	u4450
  2154   0009B6                     u4440:
  2155   0009B6  0E00               	movlw	0
  2156   0009B8                     u4450:
  2157   0009B8  6E3C               	movwf	_counter_skip_flg^0,c
  2158   0009BA  EFC2  F003         	goto	l5775
  2159   0009BE                     l5889:
  2160                           
  2161                           ;Buttons.c: 191:                     UpDownTransfer();
  2162   0009BE  EC99  F012         	call	_UpDownTransfer	;wreg free
  2163   0009C2                     
  2164                           ;Buttons.c: 192:                     counter_skip_flg = 0;
  2165   0009C2  0E00               	movlw	0
  2166   0009C4  6E3C               	movwf	_counter_skip_flg^0,c
  2167   0009C6  EFC2  F003         	goto	l5775
  2168   0009CA                     l5899:
  2169   0009CA  5035               	movf	_BTN_CLICK_STATE^0,w,c
  2170   0009CC  6E6D               	movwf	??_ActionButtons^0,c
  2171   0009CE  6A6E               	clrf	(??_ActionButtons+1)^0,c
  2172                           
  2173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2174                           ; Switch size 1, requested type "simple"
  2175                           ; Number of cases is 1, Range of values is 0 to 0
  2176                           ; switch strategies available:
  2177                           ; Name         Instructions Cycles
  2178                           ; simple_byte            4     3 (average)
  2179                           ;	Chosen strategy is simple_byte
  2180   0009D0  506E               	movf	(??_ActionButtons+1)^0,w,c
  2181   0009D2  0A00               	xorlw	0	; case 0
  2182   0009D4  B4D8               	btfsc	status,2,c
  2183   0009D6  EFEF  F004         	goto	l6819
  2184   0009DA  EF62  F006         	goto	l1164
  2185   0009DE                     l6819:
  2186                           
  2187                           ; Switch size 1, requested type "simple"
  2188                           ; Number of cases is 3, Range of values is 14 to 20
  2189                           ; switch strategies available:
  2190                           ; Name         Instructions Cycles
  2191                           ; simple_byte           10     6 (average)
  2192                           ;	Chosen strategy is simple_byte
  2193   0009DE  506D               	movf	??_ActionButtons^0,w,c
  2194   0009E0  0A0E               	xorlw	14	; case 14
  2195   0009E2  B4D8               	btfsc	status,2,c
  2196   0009E4  EF99  F004         	goto	l5857
  2197   0009E8  0A01               	xorlw	1	; case 15
  2198   0009EA  B4D8               	btfsc	status,2,c
  2199   0009EC  EFBF  F004         	goto	l5879
  2200   0009F0  0A1B               	xorlw	27	; case 20
  2201   0009F2  B4D8               	btfsc	status,2,c
  2202   0009F4  EFDF  F004         	goto	l5889
  2203   0009F8  EF62  F006         	goto	l1164
  2204   0009FC                     l5901:
  2205                           
  2206                           ;Buttons.c: 198:             counter_skip_flg = 0; blink_enable_flg = 0;
  2207   0009FC  0E00               	movlw	0
  2208   0009FE  6E3C               	movwf	_counter_skip_flg^0,c
  2209   000A00  0E00               	movlw	0
  2210   000A02  6E38               	movwf	_blink_enable_flg^0,c
  2211                           
  2212                           ;Buttons.c: 199:             switch( BTN_CLICK_STATE ) {
  2213   000A04  EF5A  F005         	goto	l5959
  2214   000A08                     l5903:
  2215                           
  2216                           ;Buttons.c: 201:                     if( !counter_enable_flg ) { SYSTEM_STATE_FLG = 200;
      +                           StartCounter(); blink_enable_flg = 1; }
  2217   000A08  503E               	movf	_counter_enable_flg^0,w,c
  2218   000A0A  A4D8               	btfss	status,2,c
  2219   000A0C  EF0A  F005         	goto	u4461
  2220   000A10  EF0C  F005         	goto	u4460
  2221   000A14                     u4461:
  2222   000A14  EF14  F005         	goto	l5911
  2223   000A18                     u4460:
  2224   000A18  0EC8               	movlw	200
  2225   000A1A  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  2226   000A1C  ECCF  F013         	call	_StartCounter	;wreg free
  2227   000A20  0E01               	movlw	1
  2228   000A22  6E38               	movwf	_blink_enable_flg^0,c
  2229   000A24  EF1A  F005         	goto	l5917
  2230   000A28                     l5911:
  2231   000A28  0EC9               	movlw	201
  2232   000A2A  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  2233   000A2C  ECCC  F013         	call	_StopCounter	;wreg free
  2234   000A30  0E00               	movlw	0
  2235   000A32  6E38               	movwf	_blink_enable_flg^0,c
  2236   000A34                     l5917:
  2237                           
  2238                           ;Buttons.c: 203:                     BTN_CLICK_STATE = 0; temp_system_state = SYSTEM_STA
      +                          TE_FLG;
  2239   000A34  0E00               	movlw	0
  2240   000A36  6E35               	movwf	_BTN_CLICK_STATE^0,c
  2241   000A38  EFBB  F004         	goto	l5875
  2242   000A3C                     l5923:
  2243                           
  2244                           ;Buttons.c: 206:                     if( counter_direction_flg == 1 ){
  2245   000A3C  043D               	decf	_counter_direction_flg^0,w,c
  2246   000A3E  A4D8               	btfss	status,2,c
  2247   000A40  EF24  F005         	goto	u4471
  2248   000A44  EF26  F005         	goto	u4470
  2249   000A48                     u4471:
  2250   000A48  EF2E  F005         	goto	l5927
  2251   000A4C                     u4470:
  2252   000A4C                     
  2253                           ;Buttons.c: 207:                         counter_up_hour = 0;
  2254   000A4C  0E00               	movlw	0
  2255   000A4E  6E41               	movwf	_counter_up_hour^0,c
  2256                           
  2257                           ;Buttons.c: 208:                         counter_up_minute = 0;
  2258   000A50  0E00               	movlw	0
  2259   000A52  6E40               	movwf	_counter_up_minute^0,c
  2260                           
  2261                           ;Buttons.c: 209:                         counter_up_second = 0;
  2262   000A54  0E00               	movlw	0
  2263   000A56  6E3F               	movwf	_counter_up_second^0,c
  2264                           
  2265                           ;Buttons.c: 210:                     }
  2266   000A58  EFC2  F003         	goto	l5775
  2267   000A5C                     l5927:
  2268   000A5C  503D               	movf	_counter_direction_flg^0,w,c
  2269   000A5E  A4D8               	btfss	status,2,c
  2270   000A60  EF34  F005         	goto	u4481
  2271   000A64  EF36  F005         	goto	u4480
  2272   000A68                     u4481:
  2273   000A68  EFC2  F003         	goto	l5775
  2274   000A6C                     u4480:
  2275   000A6C                     
  2276                           ;Buttons.c: 212:                         counter_down_hour = counter_down_set_hour;
  2277   000A6C  C044  F047         	movff	_counter_down_set_hour,_counter_down_hour
  2278                           
  2279                           ;Buttons.c: 213:                         counter_down_minute = counter_down_set_minute;
  2280   000A70  C043  F046         	movff	_counter_down_set_minute,_counter_down_minute
  2281                           
  2282                           ;Buttons.c: 214:                         counter_down_second = counter_down_set_second;
  2283   000A74  C042  F045         	movff	_counter_down_set_second,_counter_down_second
  2284   000A78  EFC2  F003         	goto	l5775
  2285   000A7C                     l5935:
  2286                           
  2287                           ;Buttons.c: 219:                     UpDownTransfer();
  2288   000A7C  EC99  F012         	call	_UpDownTransfer	;wreg free
  2289   000A80  EFC2  F003         	goto	l5775
  2290   000A84                     l5941:
  2291                           
  2292                           ;Buttons.c: 223:                     if( counter_direction_flg == 1 ) { BTN_CLICK_STATE 
      +                          = 0; return; }
  2293   000A84  043D               	decf	_counter_direction_flg^0,w,c
  2294   000A86  A4D8               	btfss	status,2,c
  2295   000A88  EF48  F005         	goto	u4491
  2296   000A8C  EF4A  F005         	goto	u4490
  2297   000A90                     u4491:
  2298   000A90  EF4C  F005         	goto	l5947
  2299   000A94                     u4490:
  2300   000A94  EFC2  F003         	goto	l5775
  2301   000A98                     l5947:
  2302                           
  2303                           ;Buttons.c: 224:                     SYSTEM_STATE_FLG = 202;
  2304   000A98  0ECA               	movlw	202
  2305   000A9A  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  2306                           
  2307                           ;Buttons.c: 225:                     break;
  2308   000A9C  EF62  F006         	goto	l1164
  2309   000AA0                     l5949:
  2310                           
  2311                           ;Buttons.c: 227:                     if( counter_direction_flg == 1 ) { BTN_CLICK_STATE 
      +                          = 0; return; }
  2312   000AA0  043D               	decf	_counter_direction_flg^0,w,c
  2313   000AA2  A4D8               	btfss	status,2,c
  2314   000AA4  EF56  F005         	goto	u4501
  2315   000AA8  EF58  F005         	goto	u4500
  2316   000AAC                     u4501:
  2317   000AAC  EF4C  F005         	goto	l5947
  2318   000AB0                     u4500:
  2319   000AB0  EFC2  F003         	goto	l5775
  2320   000AB4                     l5959:
  2321   000AB4  5035               	movf	_BTN_CLICK_STATE^0,w,c
  2322   000AB6  6E6D               	movwf	??_ActionButtons^0,c
  2323   000AB8  6A6E               	clrf	(??_ActionButtons+1)^0,c
  2324                           
  2325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2326                           ; Switch size 1, requested type "simple"
  2327                           ; Number of cases is 1, Range of values is 0 to 0
  2328                           ; switch strategies available:
  2329                           ; Name         Instructions Cycles
  2330                           ; simple_byte            4     3 (average)
  2331                           ;	Chosen strategy is simple_byte
  2332   000ABA  506E               	movf	(??_ActionButtons+1)^0,w,c
  2333   000ABC  0A00               	xorlw	0	; case 0
  2334   000ABE  B4D8               	btfsc	status,2,c
  2335   000AC0  EF64  F005         	goto	l6821
  2336   000AC4  EF62  F006         	goto	l1164
  2337   000AC8                     l6821:
  2338                           
  2339                           ; Switch size 1, requested type "simple"
  2340                           ; Number of cases is 5, Range of values is 12 to 20
  2341                           ; switch strategies available:
  2342                           ; Name         Instructions Cycles
  2343                           ; simple_byte           16     9 (average)
  2344                           ;	Chosen strategy is simple_byte
  2345   000AC8  506D               	movf	??_ActionButtons^0,w,c
  2346   000ACA  0A0C               	xorlw	12	; case 12
  2347   000ACC  B4D8               	btfsc	status,2,c
  2348   000ACE  EF42  F005         	goto	l5941
  2349   000AD2  0A01               	xorlw	1	; case 13
  2350   000AD4  B4D8               	btfsc	status,2,c
  2351   000AD6  EF50  F005         	goto	l5949
  2352   000ADA  0A03               	xorlw	3	; case 14
  2353   000ADC  B4D8               	btfsc	status,2,c
  2354   000ADE  EF04  F005         	goto	l5903
  2355   000AE2  0A01               	xorlw	1	; case 15
  2356   000AE4  B4D8               	btfsc	status,2,c
  2357   000AE6  EF1E  F005         	goto	l5923
  2358   000AEA  0A1B               	xorlw	27	; case 20
  2359   000AEC  B4D8               	btfsc	status,2,c
  2360   000AEE  EF3E  F005         	goto	l5935
  2361   000AF2  EF62  F006         	goto	l1164
  2362   000AF6                     l5961:
  2363                           
  2364                           ;Buttons.c: 233:             counter_direction_flg = 0;
  2365   000AF6  0E00               	movlw	0
  2366   000AF8  6E3D               	movwf	_counter_direction_flg^0,c
  2367                           
  2368                           ;Buttons.c: 234:             blink_enable_flg = 0;
  2369   000AFA  0E00               	movlw	0
  2370   000AFC  6E38               	movwf	_blink_enable_flg^0,c
  2371                           
  2372                           ;Buttons.c: 235:             switch( BTN_CLICK_STATE ) {
  2373   000AFE  EFA1  F005         	goto	l5997
  2374   000B02                     l5967:
  2375                           
  2376                           ;Buttons.c: 241:                     SYSTEM_STATE_FLG = 200; StartCounter(); blink_enabl
      +                          e_flg = 1;
  2377   000B02  0EC8               	movlw	200
  2378   000B04  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  2379   000B06  ECCF  F013         	call	_StartCounter	;wreg free
  2380   000B0A  0E01               	movlw	1
  2381   000B0C  6E38               	movwf	_blink_enable_flg^0,c
  2382   000B0E  EFC2  F003         	goto	l5775
  2383   000B12                     l5977:
  2384                           
  2385                           ;Buttons.c: 245:                     counter_down_hour = 0;
  2386   000B12  0E00               	movlw	0
  2387   000B14  6E47               	movwf	_counter_down_hour^0,c
  2388                           
  2389                           ;Buttons.c: 246:                     counter_down_minute = 0;
  2390   000B16  0E00               	movlw	0
  2391   000B18  6E46               	movwf	_counter_down_minute^0,c
  2392                           
  2393                           ;Buttons.c: 247:                     counter_down_second = 0;
  2394   000B1A  0E00               	movlw	0
  2395   000B1C  6E45               	movwf	_counter_down_second^0,c
  2396                           
  2397                           ;Buttons.c: 248:                     BTN_CLICK_STATE = 0;
  2398   000B1E  0E00               	movlw	0
  2399   000B20  6E35               	movwf	_BTN_CLICK_STATE^0,c
  2400   000B22  EF62  F006         	goto	l1164
  2401   000B26                     l5981:
  2402                           
  2403                           ;Buttons.c: 251:                     counter_direction_flg = 1;
  2404   000B26  0E01               	movlw	1
  2405   000B28  6E3D               	movwf	_counter_direction_flg^0,c
  2406                           
  2407                           ;Buttons.c: 252:                     SYSTEM_STATE_FLG = 201; StopCounter();
  2408   000B2A  0EC9               	movlw	201
  2409   000B2C  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  2410   000B2E  ECCC  F013         	call	_StopCounter	;wreg free
  2411   000B32                     
  2412                           ;Buttons.c: 253:                     counter_up_hour = counter_down_hour;
  2413   000B32  C047  F041         	movff	_counter_down_hour,_counter_up_hour
  2414   000B36                     
  2415                           ;Buttons.c: 254:                     counter_up_minute = counter_down_minute;
  2416   000B36  C046  F040         	movff	_counter_down_minute,_counter_up_minute
  2417   000B3A                     
  2418                           ;Buttons.c: 255:                     counter_up_second = counter_down_second;
  2419   000B3A  C045  F03F         	movff	_counter_down_second,_counter_up_second
  2420   000B3E  EFC2  F003         	goto	l5775
  2421   000B42                     l5997:
  2422   000B42  5035               	movf	_BTN_CLICK_STATE^0,w,c
  2423   000B44  6E6D               	movwf	??_ActionButtons^0,c
  2424   000B46  6A6E               	clrf	(??_ActionButtons+1)^0,c
  2425                           
  2426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2427                           ; Switch size 1, requested type "simple"
  2428                           ; Number of cases is 1, Range of values is 0 to 0
  2429                           ; switch strategies available:
  2430                           ; Name         Instructions Cycles
  2431                           ; simple_byte            4     3 (average)
  2432                           ;	Chosen strategy is simple_byte
  2433   000B48  506E               	movf	(??_ActionButtons+1)^0,w,c
  2434   000B4A  0A00               	xorlw	0	; case 0
  2435   000B4C  B4D8               	btfsc	status,2,c
  2436   000B4E  EFAB  F005         	goto	l6823
  2437   000B52  EF62  F006         	goto	l1164
  2438   000B56                     l6823:
  2439                           
  2440                           ; Switch size 1, requested type "simple"
  2441                           ; Number of cases is 5, Range of values is 12 to 20
  2442                           ; switch strategies available:
  2443                           ; Name         Instructions Cycles
  2444                           ; simple_byte           16     9 (average)
  2445                           ;	Chosen strategy is simple_byte
  2446   000B56  506D               	movf	??_ActionButtons^0,w,c
  2447   000B58  0A0C               	xorlw	12	; case 12
  2448   000B5A  B4D8               	btfsc	status,2,c
  2449   000B5C  EF4C  F005         	goto	l5947
  2450   000B60  0A01               	xorlw	1	; case 13
  2451   000B62  B4D8               	btfsc	status,2,c
  2452   000B64  EF4C  F005         	goto	l5947
  2453   000B68  0A03               	xorlw	3	; case 14
  2454   000B6A  B4D8               	btfsc	status,2,c
  2455   000B6C  EF81  F005         	goto	l5967
  2456   000B70  0A01               	xorlw	1	; case 15
  2457   000B72  B4D8               	btfsc	status,2,c
  2458   000B74  EF89  F005         	goto	l5977
  2459   000B78  0A1B               	xorlw	27	; case 20
  2460   000B7A  B4D8               	btfsc	status,2,c
  2461   000B7C  EF93  F005         	goto	l5981
  2462   000B80  EF62  F006         	goto	l1164
  2463   000B84                     l5999:
  2464                           
  2465                           ;Buttons.c: 263:                     continue_pressed_cnt ++;
  2466   000B84  4A15               	infsnz	_continue_pressed_cnt^0,f,c
  2467   000B86  2A16               	incf	(_continue_pressed_cnt+1)^0,f,c
  2468   000B88                     
  2469                           ;Buttons.c: 264:                     if( continue_pressed_cnt > 600 ) {
  2470   000B88  0E59               	movlw	89
  2471   000B8A  5C15               	subwf	_continue_pressed_cnt^0,w,c
  2472   000B8C  0E02               	movlw	2
  2473   000B8E  5816               	subwfb	(_continue_pressed_cnt+1)^0,w,c
  2474   000B90  A0D8               	btfss	status,0,c
  2475   000B92  EFCD  F005         	goto	u4511
  2476   000B96  EFCF  F005         	goto	u4510
  2477   000B9A                     u4511:
  2478   000B9A  EF62  F006         	goto	l1164
  2479   000B9E                     u4510:
  2480   000B9E                     
  2481                           ;Buttons.c: 265:                         IncValProcess(); continue_pressed_cnt = 0;
  2482   000B9E  ECB6  F012         	call	_IncValProcess	;wreg free
  2483   000BA2  EFF4  F003         	goto	l5795
  2484   000BA6                     l6009:
  2485                           
  2486                           ;Buttons.c: 269:                     continue_pressed_cnt ++;
  2487   000BA6  4A15               	infsnz	_continue_pressed_cnt^0,f,c
  2488   000BA8  2A16               	incf	(_continue_pressed_cnt+1)^0,f,c
  2489   000BAA                     
  2490                           ;Buttons.c: 270:                     if( continue_pressed_cnt > 600 ) {
  2491   000BAA  0E59               	movlw	89
  2492   000BAC  5C15               	subwf	_continue_pressed_cnt^0,w,c
  2493   000BAE  0E02               	movlw	2
  2494   000BB0  5816               	subwfb	(_continue_pressed_cnt+1)^0,w,c
  2495   000BB2  A0D8               	btfss	status,0,c
  2496   000BB4  EFDE  F005         	goto	u4521
  2497   000BB8  EFE0  F005         	goto	u4520
  2498   000BBC                     u4521:
  2499   000BBC  EF62  F006         	goto	l1164
  2500   000BC0                     u4520:
  2501   000BC0                     
  2502                           ;Buttons.c: 271:                         DecValProcess(); continue_pressed_cnt = 0;
  2503   000BC0  ECE3  F00E         	call	_DecValProcess	;wreg free
  2504   000BC4  EFF4  F003         	goto	l5795
  2505   000BC8                     l6019:
  2506                           
  2507                           ;Buttons.c: 275:                     blink_enable_flg = 1;
  2508   000BC8  0E01               	movlw	1
  2509   000BCA  6E38               	movwf	_blink_enable_flg^0,c
  2510   000BCC                     
  2511                           ;Buttons.c: 276:                     IncValProcess();
  2512   000BCC  ECB6  F012         	call	_IncValProcess	;wreg free
  2513   000BD0  EFC2  F003         	goto	l5775
  2514   000BD4                     l6027:
  2515                           
  2516                           ;Buttons.c: 280:                     blink_enable_flg = 1;
  2517   000BD4  0E01               	movlw	1
  2518   000BD6  6E38               	movwf	_blink_enable_flg^0,c
  2519   000BD8                     
  2520                           ;Buttons.c: 281:                     DecValProcess();
  2521   000BD8  ECE3  F00E         	call	_DecValProcess	;wreg free
  2522   000BDC  EFC2  F003         	goto	l5775
  2523   000BE0                     l6035:
  2524                           
  2525                           ;Buttons.c: 285:                     if( counter_direction_flg == 1 ){
  2526   000BE0  043D               	decf	_counter_direction_flg^0,w,c
  2527   000BE2  A4D8               	btfss	status,2,c
  2528   000BE4  EFF6  F005         	goto	u4531
  2529   000BE8  EFF8  F005         	goto	u4530
  2530   000BEC                     u4531:
  2531   000BEC  EF81  F005         	goto	l5967
  2532   000BF0                     u4530:
  2533   000BF0  EFC2  F003         	goto	l5775
  2534   000BF4                     l6051:
  2535                           
  2536                           ;Buttons.c: 292:                     if( counter_direction_flg == 1 ){
  2537   000BF4  043D               	decf	_counter_direction_flg^0,w,c
  2538   000BF6  A4D8               	btfss	status,2,c
  2539   000BF8  EF00  F006         	goto	u4541
  2540   000BFC  EF02  F006         	goto	u4540
  2541   000C00                     u4541:
  2542   000C00  EF04  F006         	goto	l6059
  2543   000C04                     u4540:
  2544   000C04  EFC2  F003         	goto	l5775
  2545   000C08                     l6059:
  2546   000C08  503D               	movf	_counter_direction_flg^0,w,c
  2547   000C0A  A4D8               	btfss	status,2,c
  2548   000C0C  EF0A  F006         	goto	u4551
  2549   000C10  EF0C  F006         	goto	u4550
  2550   000C14                     u4551:
  2551   000C14  EF12  F006         	goto	l1238
  2552   000C18                     u4550:
  2553   000C18                     
  2554                           ;Buttons.c: 296:                         counter_down_hour = 0;
  2555   000C18  0E00               	movlw	0
  2556   000C1A  6E47               	movwf	_counter_down_hour^0,c
  2557                           
  2558                           ;Buttons.c: 297:                         counter_down_minute = 0;
  2559   000C1C  0E00               	movlw	0
  2560   000C1E  6E46               	movwf	_counter_down_minute^0,c
  2561                           
  2562                           ;Buttons.c: 298:                         counter_down_second = 0;
  2563   000C20  0E00               	movlw	0
  2564   000C22  6E45               	movwf	_counter_down_second^0,c
  2565   000C24                     l1238:
  2566                           
  2567                           ;Buttons.c: 300:                     blink_enable_flg = 0;
  2568   000C24  0E00               	movlw	0
  2569   000C26  6E38               	movwf	_blink_enable_flg^0,c
  2570                           
  2571                           ;Buttons.c: 301:                     BTN_CLICK_STATE = 0;
  2572   000C28  0E00               	movlw	0
  2573   000C2A  6E35               	movwf	_BTN_CLICK_STATE^0,c
  2574   000C2C  EF62  F006         	goto	l1164
  2575   000C30                     l6067:
  2576   000C30  5035               	movf	_BTN_CLICK_STATE^0,w,c
  2577   000C32  6E6D               	movwf	??_ActionButtons^0,c
  2578   000C34  6A6E               	clrf	(??_ActionButtons+1)^0,c
  2579                           
  2580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2581                           ; Switch size 1, requested type "simple"
  2582                           ; Number of cases is 1, Range of values is 0 to 0
  2583                           ; switch strategies available:
  2584                           ; Name         Instructions Cycles
  2585                           ; simple_byte            4     3 (average)
  2586                           ;	Chosen strategy is simple_byte
  2587   000C36  506E               	movf	(??_ActionButtons+1)^0,w,c
  2588   000C38  0A00               	xorlw	0	; case 0
  2589   000C3A  B4D8               	btfsc	status,2,c
  2590   000C3C  EF22  F006         	goto	l6825
  2591   000C40  EF62  F006         	goto	l1164
  2592   000C44                     l6825:
  2593                           
  2594                           ; Switch size 1, requested type "simple"
  2595                           ; Number of cases is 6, Range of values is 12 to 18
  2596                           ; switch strategies available:
  2597                           ; Name         Instructions Cycles
  2598                           ; simple_byte           19    10 (average)
  2599                           ;	Chosen strategy is simple_byte
  2600   000C44  506D               	movf	??_ActionButtons^0,w,c
  2601   000C46  0A0C               	xorlw	12	; case 12
  2602   000C48  B4D8               	btfsc	status,2,c
  2603   000C4A  EFE4  F005         	goto	l6019
  2604   000C4E  0A01               	xorlw	1	; case 13
  2605   000C50  B4D8               	btfsc	status,2,c
  2606   000C52  EFEA  F005         	goto	l6027
  2607   000C56  0A03               	xorlw	3	; case 14
  2608   000C58  B4D8               	btfsc	status,2,c
  2609   000C5A  EFF0  F005         	goto	l6035
  2610   000C5E  0A01               	xorlw	1	; case 15
  2611   000C60  B4D8               	btfsc	status,2,c
  2612   000C62  EFFA  F005         	goto	l6051
  2613   000C66  0A1E               	xorlw	30	; case 17
  2614   000C68  B4D8               	btfsc	status,2,c
  2615   000C6A  EFC2  F005         	goto	l5999
  2616   000C6E  0A03               	xorlw	3	; case 18
  2617   000C70  B4D8               	btfsc	status,2,c
  2618   000C72  EFD3  F005         	goto	l6009
  2619   000C76  EF62  F006         	goto	l1164
  2620   000C7A                     l6071:
  2621   000C7A  506F               	movf	_SYSTEM_STATE_FLG^0,w,c
  2622   000C7C  6E6D               	movwf	??_ActionButtons^0,c
  2623   000C7E  6A6E               	clrf	(??_ActionButtons+1)^0,c
  2624                           
  2625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2626                           ; Switch size 1, requested type "simple"
  2627                           ; Number of cases is 1, Range of values is 0 to 0
  2628                           ; switch strategies available:
  2629                           ; Name         Instructions Cycles
  2630                           ; simple_byte            4     3 (average)
  2631                           ;	Chosen strategy is simple_byte
  2632   000C80  506E               	movf	(??_ActionButtons+1)^0,w,c
  2633   000C82  0A00               	xorlw	0	; case 0
  2634   000C84  B4D8               	btfsc	status,2,c
  2635   000C86  EF47  F006         	goto	l6827
  2636   000C8A  EF62  F006         	goto	l1164
  2637   000C8E                     l6827:
  2638                           
  2639                           ; Switch size 1, requested type "simple"
  2640                           ; Number of cases is 6, Range of values is 100 to 203
  2641                           ; switch strategies available:
  2642                           ; Name         Instructions Cycles
  2643                           ; simple_byte           19    10 (average)
  2644                           ;	Chosen strategy is simple_byte
  2645   000C8E  506D               	movf	??_ActionButtons^0,w,c
  2646   000C90  0A64               	xorlw	100	; case 100
  2647   000C92  B4D8               	btfsc	status,2,c
  2648   000C94  EF74  F004         	goto	l5855
  2649   000C98  0A01               	xorlw	1	; case 101
  2650   000C9A  B4D8               	btfsc	status,2,c
  2651   000C9C  EF62  F006         	goto	l1164
  2652   000CA0  0AAD               	xorlw	173	; case 200
  2653   000CA2  B4D8               	btfsc	status,2,c
  2654   000CA4  EFE5  F004         	goto	l5899
  2655   000CA8  0A01               	xorlw	1	; case 201
  2656   000CAA  B4D8               	btfsc	status,2,c
  2657   000CAC  EFFE  F004         	goto	l5901
  2658   000CB0  0A03               	xorlw	3	; case 202
  2659   000CB2  B4D8               	btfsc	status,2,c
  2660   000CB4  EF18  F006         	goto	l6067
  2661   000CB8  0A01               	xorlw	1	; case 203
  2662   000CBA  B4D8               	btfsc	status,2,c
  2663   000CBC  EF7B  F005         	goto	l5961
  2664   000CC0  EF62  F006         	goto	l1164
  2665   000CC4                     l1164:
  2666   000CC4  0012               	return		;funcret
  2667   000CC6                     __end_of_ActionButtons:
  2668                           	callstack 0
  2669                           
  2670 ;; *************** function _UpDownTransfer *****************
  2671 ;; Defined at:
  2672 ;;		line 336 in file "Buttons.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;		None
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2686 ;;      Params:         0       0       0       0       0       0       0
  2687 ;;      Locals:         0       0       0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0
  2689 ;;      Totals:         0       0       0       0       0       0       0
  2690 ;;Total ram usage:        0 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 6
  2693 ;; This function calls:
  2694 ;;		_UpdateSetValue
  2695 ;; This function is called by:
  2696 ;;		_ActionButtons
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text3
  2701   002532                     __ptext3:
  2702                           	callstack 0
  2703   002532                     _UpDownTransfer:
  2704                           	callstack 22
  2705   002532                     
  2706                           ;Buttons.c: 337:     if( counter_direction_flg == 1 ) {
  2707   002532  043D               	decf	_counter_direction_flg^0,w,c
  2708   002534  A4D8               	btfss	status,2,c
  2709   002536  EF9F  F012         	goto	u4001
  2710   00253A  EFA1  F012         	goto	u4000
  2711   00253E                     u4001:
  2712   00253E  EFAB  F012         	goto	l5477
  2713   002542                     u4000:
  2714   002542                     
  2715                           ;Buttons.c: 338:         counter_direction_flg = 0;
  2716   002542  0E00               	movlw	0
  2717   002544  6E3D               	movwf	_counter_direction_flg^0,c
  2718   002546                     
  2719                           ;Buttons.c: 339:         counter_down_hour = counter_up_hour;
  2720   002546  C041  F047         	movff	_counter_up_hour,_counter_down_hour
  2721   00254A                     
  2722                           ;Buttons.c: 340:         counter_down_minute = counter_up_minute;
  2723   00254A  C040  F046         	movff	_counter_up_minute,_counter_down_minute
  2724   00254E                     
  2725                           ;Buttons.c: 341:         counter_down_second = counter_up_second;
  2726   00254E  C03F  F045         	movff	_counter_up_second,_counter_down_second
  2727                           
  2728                           ;Buttons.c: 342:     }
  2729   002552  EFB3  F012         	goto	l5485
  2730   002556                     l5477:
  2731                           
  2732                           ;Buttons.c: 344:         counter_direction_flg = 1;
  2733   002556  0E01               	movlw	1
  2734   002558  6E3D               	movwf	_counter_direction_flg^0,c
  2735   00255A                     
  2736                           ;Buttons.c: 345:         counter_up_hour = counter_down_hour;
  2737   00255A  C047  F041         	movff	_counter_down_hour,_counter_up_hour
  2738   00255E                     
  2739                           ;Buttons.c: 346:         counter_up_minute = counter_down_minute;
  2740   00255E  C046  F040         	movff	_counter_down_minute,_counter_up_minute
  2741   002562                     
  2742                           ;Buttons.c: 347:         counter_up_second = counter_down_second;
  2743   002562  C045  F03F         	movff	_counter_down_second,_counter_up_second
  2744   002566                     l5485:
  2745                           
  2746                           ;Buttons.c: 349:     UpdateSetValue();
  2747   002566  ECB2  F013         	call	_UpdateSetValue	;wreg free
  2748   00256A  0012               	return		;funcret
  2749   00256C                     __end_of_UpDownTransfer:
  2750                           	callstack 0
  2751                           
  2752 ;; *************** function _StopCounter *****************
  2753 ;; Defined at:
  2754 ;;		line 72 in file "Counter.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2768 ;;      Params:         0       0       0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0
  2771 ;;      Totals:         0       0       0       0       0       0       0
  2772 ;;Total ram usage:        0 bytes
  2773 ;; Hardware stack levels used: 1
  2774 ;; Hardware stack levels required when called: 5
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_ActionButtons
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text4
  2783   002798                     __ptext4:
  2784                           	callstack 0
  2785   002798                     _StopCounter:
  2786                           	callstack 23
  2787   002798                     
  2788                           ;Counter.c: 73:     counter_enable_flg = 0;
  2789   002798  0E00               	movlw	0
  2790   00279A  6E3E               	movwf	_counter_enable_flg^0,c
  2791   00279C  0012               	return		;funcret
  2792   00279E                     __end_of_StopCounter:
  2793                           	callstack 0
  2794                           
  2795 ;; *************** function _StartCounter *****************
  2796 ;; Defined at:
  2797 ;;		line 68 in file "Counter.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2811 ;;      Params:         0       0       0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used: 1
  2817 ;; Hardware stack levels required when called: 5
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_ActionButtons
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text5
  2826   00279E                     __ptext5:
  2827                           	callstack 0
  2828   00279E                     _StartCounter:
  2829                           	callstack 23
  2830   00279E                     
  2831                           ;Counter.c: 69:     counter_enable_flg = 1;
  2832   00279E  0E01               	movlw	1
  2833   0027A0  6E3E               	movwf	_counter_enable_flg^0,c
  2834   0027A2  0012               	return		;funcret
  2835   0027A4                     __end_of_StartCounter:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _IncValProcess *****************
  2839 ;; Defined at:
  2840 ;;		line 308 in file "Buttons.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2854 ;;      Params:         0       0       0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 6
  2861 ;; This function calls:
  2862 ;;		_UpdateSetValue
  2863 ;; This function is called by:
  2864 ;;		_ActionButtons
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text6
  2869   00256C                     __ptext6:
  2870                           	callstack 0
  2871   00256C                     _IncValProcess:
  2872                           	callstack 22
  2873   00256C                     
  2874                           ;Buttons.c: 309:     counter_down_second ++;
  2875   00256C  2A45               	incf	_counter_down_second^0,f,c
  2876   00256E                     
  2877                           ;Buttons.c: 310:     if( counter_down_second == 60 ){
  2878   00256E  0E3C               	movlw	60
  2879   002570  1845               	xorwf	_counter_down_second^0,w,c
  2880   002572  A4D8               	btfss	status,2,c
  2881   002574  EFBE  F012         	goto	u4011
  2882   002578  EFC0  F012         	goto	u4010
  2883   00257C                     u4011:
  2884   00257C  EFCF  F012         	goto	l5501
  2885   002580                     u4010:
  2886   002580                     
  2887                           ;Buttons.c: 311:         counter_down_second = 0;
  2888   002580  0E00               	movlw	0
  2889   002582  6E45               	movwf	_counter_down_second^0,c
  2890   002584                     
  2891                           ;Buttons.c: 312:         counter_down_minute ++;
  2892   002584  2A46               	incf	_counter_down_minute^0,f,c
  2893   002586                     
  2894                           ;Buttons.c: 313:         if(counter_down_minute == 60){
  2895   002586  0E3C               	movlw	60
  2896   002588  1846               	xorwf	_counter_down_minute^0,w,c
  2897   00258A  A4D8               	btfss	status,2,c
  2898   00258C  EFCA  F012         	goto	u4021
  2899   002590  EFCC  F012         	goto	u4020
  2900   002594                     u4021:
  2901   002594  EFCF  F012         	goto	l5501
  2902   002598                     u4020:
  2903   002598                     
  2904                           ;Buttons.c: 314:             counter_down_minute = 0;
  2905   002598  0E00               	movlw	0
  2906   00259A  6E46               	movwf	_counter_down_minute^0,c
  2907   00259C                     
  2908                           ;Buttons.c: 315:             counter_down_hour ++;
  2909   00259C  2A47               	incf	_counter_down_hour^0,f,c
  2910   00259E                     l5501:
  2911                           
  2912                           ;Buttons.c: 318:     UpdateSetValue();
  2913   00259E  ECB2  F013         	call	_UpdateSetValue	;wreg free
  2914   0025A2  0012               	return		;funcret
  2915   0025A4                     __end_of_IncValProcess:
  2916                           	callstack 0
  2917                           
  2918 ;; *************** function _Ds1307SecondSet *****************
  2919 ;; Defined at:
  2920 ;;		line 133 in file "DS1307.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  second_data     1    wreg     unsigned char 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  second_data     1   16[COMRAM] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2934 ;;      Params:         0       0       0       0       0       0       0
  2935 ;;      Locals:         1       0       0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0
  2937 ;;      Totals:         1       0       0       0       0       0       0
  2938 ;;Total ram usage:        1 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 8
  2941 ;; This function calls:
  2942 ;;		_I2cStart
  2943 ;;		_I2cStop
  2944 ;;		_I2cWrite
  2945 ;; This function is called by:
  2946 ;;		_ActionButtons
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text7
  2951   002676                     __ptext7:
  2952                           	callstack 0
  2953   002676                     _Ds1307SecondSet:
  2954                           	callstack 20
  2955                           
  2956                           ;incstack = 0
  2957                           ;Ds1307SecondSet@second_data stored from wreg
  2958   002676  6E6A               	movwf	Ds1307SecondSet@second_data^0,c
  2959   002678                     
  2960                           ;DS1307.c: 134:     I2cStart();
  2961   002678  ECA0  F013         	call	_I2cStart	;wreg free
  2962   00267C                     
  2963                           ;DS1307.c: 135:     I2cWrite( (0xD0) );
  2964   00267C  0ED0               	movlw	208
  2965   00267E  EC59  F013         	call	_I2cWrite
  2966   002682                     
  2967                           ;DS1307.c: 136:     I2cWrite( 0 );
  2968   002682  0E00               	movlw	0
  2969   002684  EC59  F013         	call	_I2cWrite
  2970   002688                     
  2971                           ;DS1307.c: 137:     I2cWrite( second_data );
  2972   002688  506A               	movf	Ds1307SecondSet@second_data^0,w,c
  2973   00268A  EC59  F013         	call	_I2cWrite
  2974   00268E                     
  2975                           ;DS1307.c: 138:     I2cStop();
  2976   00268E  EC97  F013         	call	_I2cStop	;wreg free
  2977   002692  0012               	return		;funcret
  2978   002694                     __end_of_Ds1307SecondSet:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function _Ds1307MinuteSet *****************
  2982 ;; Defined at:
  2983 ;;		line 125 in file "DS1307.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  minute_data     1    wreg     unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  minute_data     1   16[COMRAM] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2997 ;;      Params:         0       0       0       0       0       0       0
  2998 ;;      Locals:         1       0       0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0
  3000 ;;      Totals:         1       0       0       0       0       0       0
  3001 ;;Total ram usage:        1 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 8
  3004 ;; This function calls:
  3005 ;;		_I2cStart
  3006 ;;		_I2cStop
  3007 ;;		_I2cWrite
  3008 ;; This function is called by:
  3009 ;;		_ActionButtons
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text8
  3014   002694                     __ptext8:
  3015                           	callstack 0
  3016   002694                     _Ds1307MinuteSet:
  3017                           	callstack 20
  3018                           
  3019                           ;incstack = 0
  3020                           ;Ds1307MinuteSet@minute_data stored from wreg
  3021   002694  6E6A               	movwf	Ds1307MinuteSet@minute_data^0,c
  3022   002696                     
  3023                           ;DS1307.c: 126:     I2cStart();
  3024   002696  ECA0  F013         	call	_I2cStart	;wreg free
  3025   00269A                     
  3026                           ;DS1307.c: 127:     I2cWrite( (0xD0) );
  3027   00269A  0ED0               	movlw	208
  3028   00269C  EC59  F013         	call	_I2cWrite
  3029   0026A0                     
  3030                           ;DS1307.c: 128:     I2cWrite( 1 );
  3031   0026A0  0E01               	movlw	1
  3032   0026A2  EC59  F013         	call	_I2cWrite
  3033   0026A6                     
  3034                           ;DS1307.c: 129:     I2cWrite( minute_data );
  3035   0026A6  506A               	movf	Ds1307MinuteSet@minute_data^0,w,c
  3036   0026A8  EC59  F013         	call	_I2cWrite
  3037   0026AC                     
  3038                           ;DS1307.c: 130:     I2cStop();
  3039   0026AC  EC97  F013         	call	_I2cStop	;wreg free
  3040   0026B0  0012               	return		;funcret
  3041   0026B2                     __end_of_Ds1307MinuteSet:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function _Ds1307HourSet *****************
  3045 ;; Defined at:
  3046 ;;		line 104 in file "DS1307.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  hour_data       1    wreg     unsigned char 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  hour_data       1   17[COMRAM] unsigned char 
  3051 ;;  hour_temp       1   18[COMRAM] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3061 ;;      Params:         0       0       0       0       0       0       0
  3062 ;;      Locals:         2       0       0       0       0       0       0
  3063 ;;      Temps:          1       0       0       0       0       0       0
  3064 ;;      Totals:         3       0       0       0       0       0       0
  3065 ;;Total ram usage:        3 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; Hardware stack levels required when called: 8
  3068 ;; This function calls:
  3069 ;;		_I2cStart
  3070 ;;		_I2cStop
  3071 ;;		_I2cWrite
  3072 ;; This function is called by:
  3073 ;;		_ActionButtons
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text9
  3078   001E8E                     __ptext9:
  3079                           	callstack 0
  3080   001E8E                     _Ds1307HourSet:
  3081                           	callstack 20
  3082                           
  3083                           ;incstack = 0
  3084                           ;Ds1307HourSet@hour_data stored from wreg
  3085   001E8E  6E6B               	movwf	Ds1307HourSet@hour_data^0,c
  3086   001E90                     
  3087                           ;DS1307.c: 105:     unsigned char hour_temp = hour_data;
  3088   001E90  C06B  F06C         	movff	Ds1307HourSet@hour_data,Ds1307HourSet@hour_temp
  3089   001E94                     
  3090                           ;DS1307.c: 106:     if( rtc_clock_disp_type == 1 ) {
  3091   001E94  0451               	decf	_rtc_clock_disp_type^0,w,c
  3092   001E96  A4D8               	btfss	status,2,c
  3093   001E98  EF50  F00F         	goto	u3931
  3094   001E9C  EF52  F00F         	goto	u3930
  3095   001EA0                     u3931:
  3096   001EA0  EF7B  F00F         	goto	l5425
  3097   001EA4                     u3930:
  3098   001EA4                     
  3099                           ;DS1307.c: 107:         if( hour_temp > 0x12 ) hour_temp = hour_temp - 0x12;
  3100   001EA4  0E12               	movlw	18
  3101   001EA6  646C               	cpfsgt	Ds1307HourSet@hour_temp^0,c
  3102   001EA8  EF58  F00F         	goto	u3941
  3103   001EAC  EF5A  F00F         	goto	u3940
  3104   001EB0                     u3941:
  3105   001EB0  EF5D  F00F         	goto	l62
  3106   001EB4                     u3940:
  3107   001EB4  506C               	movf	Ds1307HourSet@hour_temp^0,w,c
  3108   001EB6  0FEE               	addlw	238
  3109   001EB8  6E6C               	movwf	Ds1307HourSet@hour_temp^0,c
  3110   001EBA                     l62:
  3111                           
  3112                           ;DS1307.c: 108:         if( hour_temp % 16 >= 10 ) hour_temp -= 6;
  3113   001EBA  C06C  F06A         	movff	Ds1307HourSet@hour_temp,??_Ds1307HourSet
  3114   001EBE  0E0F               	movlw	15
  3115   001EC0  166A               	andwf	??_Ds1307HourSet^0,f,c
  3116   001EC2  0E09               	movlw	9
  3117   001EC4  646A               	cpfsgt	??_Ds1307HourSet^0,c
  3118   001EC6  EF67  F00F         	goto	u3951
  3119   001ECA  EF69  F00F         	goto	u3950
  3120   001ECE                     u3951:
  3121   001ECE  EF6B  F00F         	goto	l63
  3122   001ED2                     u3950:
  3123   001ED2  0E06               	movlw	6
  3124   001ED4  5E6C               	subwf	Ds1307HourSet@hour_temp^0,f,c
  3125   001ED6                     l63:
  3126                           
  3127                           ;DS1307.c: 109:         hour_temp = hour_temp | 0x40;
  3128   001ED6  506C               	movf	Ds1307HourSet@hour_temp^0,w,c
  3129   001ED8  0940               	iorlw	64
  3130   001EDA  6E6C               	movwf	Ds1307HourSet@hour_temp^0,c
  3131                           
  3132                           ;DS1307.c: 110:         if( rtc_hour_ampm_flg == 1 ) hour_temp = hour_temp | 0x20;
  3133   001EDC  0450               	decf	_rtc_hour_ampm_flg^0,w,c
  3134   001EDE  A4D8               	btfss	status,2,c
  3135   001EE0  EF74  F00F         	goto	u3961
  3136   001EE4  EF76  F00F         	goto	u3960
  3137   001EE8                     u3961:
  3138   001EE8  EF9C  F00F         	goto	l5433
  3139   001EEC                     u3960:
  3140   001EEC  506C               	movf	Ds1307HourSet@hour_temp^0,w,c
  3141   001EEE  0920               	iorlw	32
  3142   001EF0  6E6C               	movwf	Ds1307HourSet@hour_temp^0,c
  3143   001EF2  EF9C  F00F         	goto	l5433
  3144   001EF6                     l5425:
  3145                           
  3146                           ;DS1307.c: 113:         if( rtc_hour_ampm_flg == 1 && hour_temp < 0x12 ) {
  3147   001EF6  0450               	decf	_rtc_hour_ampm_flg^0,w,c
  3148   001EF8  A4D8               	btfss	status,2,c
  3149   001EFA  EF81  F00F         	goto	u3971
  3150   001EFE  EF83  F00F         	goto	u3970
  3151   001F02                     u3971:
  3152   001F02  EF9C  F00F         	goto	l5433
  3153   001F06                     u3970:
  3154   001F06  0E12               	movlw	18
  3155   001F08  606C               	cpfslt	Ds1307HourSet@hour_temp^0,c
  3156   001F0A  EF89  F00F         	goto	u3981
  3157   001F0E  EF8B  F00F         	goto	u3980
  3158   001F12                     u3981:
  3159   001F12  EF9C  F00F         	goto	l5433
  3160   001F16                     u3980:
  3161   001F16                     
  3162                           ;DS1307.c: 114:             hour_temp = hour_temp + 0x12;
  3163   001F16  506C               	movf	Ds1307HourSet@hour_temp^0,w,c
  3164   001F18  0F12               	addlw	18
  3165   001F1A  6E6C               	movwf	Ds1307HourSet@hour_temp^0,c
  3166                           
  3167                           ;DS1307.c: 115:             if( hour_temp % 16 >= 10 ) hour_temp += 6;
  3168   001F1C  C06C  F06A         	movff	Ds1307HourSet@hour_temp,??_Ds1307HourSet
  3169   001F20  0E0F               	movlw	15
  3170   001F22  166A               	andwf	??_Ds1307HourSet^0,f,c
  3171   001F24  0E09               	movlw	9
  3172   001F26  646A               	cpfsgt	??_Ds1307HourSet^0,c
  3173   001F28  EF98  F00F         	goto	u3991
  3174   001F2C  EF9A  F00F         	goto	u3990
  3175   001F30                     u3991:
  3176   001F30  EF9C  F00F         	goto	l5433
  3177   001F34                     u3990:
  3178   001F34  0E06               	movlw	6
  3179   001F36  266C               	addwf	Ds1307HourSet@hour_temp^0,f,c
  3180   001F38                     l5433:
  3181                           
  3182                           ;DS1307.c: 118:     I2cStart();
  3183   001F38  ECA0  F013         	call	_I2cStart	;wreg free
  3184   001F3C                     
  3185                           ;DS1307.c: 119:     I2cWrite( (0xD0) );
  3186   001F3C  0ED0               	movlw	208
  3187   001F3E  EC59  F013         	call	_I2cWrite
  3188   001F42                     
  3189                           ;DS1307.c: 120:     I2cWrite( 2 );
  3190   001F42  0E02               	movlw	2
  3191   001F44  EC59  F013         	call	_I2cWrite
  3192   001F48                     
  3193                           ;DS1307.c: 121:     I2cWrite( hour_temp );
  3194   001F48  506C               	movf	Ds1307HourSet@hour_temp^0,w,c
  3195   001F4A  EC59  F013         	call	_I2cWrite
  3196   001F4E                     
  3197                           ;DS1307.c: 122:     I2cStop();
  3198   001F4E  EC97  F013         	call	_I2cStop	;wreg free
  3199   001F52  0012               	return		;funcret
  3200   001F54                     __end_of_Ds1307HourSet:
  3201                           	callstack 0
  3202                           
  3203 ;; *************** function _DecValProcess *****************
  3204 ;; Defined at:
  3205 ;;		line 321 in file "Buttons.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3219 ;;      Params:         0       0       0       0       0       0       0
  3220 ;;      Locals:         0       0       0       0       0       0       0
  3221 ;;      Temps:          2       0       0       0       0       0       0
  3222 ;;      Totals:         2       0       0       0       0       0       0
  3223 ;;Total ram usage:        2 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 6
  3226 ;; This function calls:
  3227 ;;		_UpdateSetValue
  3228 ;; This function is called by:
  3229 ;;		_ActionButtons
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text10
  3234   001DC6                     __ptext10:
  3235                           	callstack 0
  3236   001DC6                     _DecValProcess:
  3237                           	callstack 22
  3238   001DC6                     
  3239                           ;Buttons.c: 322:     counter_down_second --;
  3240   001DC6  0645               	decf	_counter_down_second^0,f,c
  3241   001DC8                     
  3242                           ;Buttons.c: 323:     if( counter_down_second < 0 && counter_down_hour + counter_down_min
      +                          ute) {
  3243   001DC8  BE45               	btfsc	_counter_down_second^0,7,c
  3244   001DCA  EFEB  F00E         	goto	u4030
  3245   001DCE  EFE9  F00E         	goto	u4031
  3246   001DD2                     u4031:
  3247   001DD2  EF27  F00F         	goto	l5527
  3248   001DD6                     u4030:
  3249   001DD6  5047               	movf	_counter_down_hour^0,w,c
  3250   001DD8  2446               	addwf	_counter_down_minute^0,w,c
  3251   001DDA  6E69               	movwf	??_DecValProcess^0,c
  3252   001DDC  6AE8               	clrf	wreg,c
  3253   001DDE  B0D8               	btfsc	status,0,c
  3254   001DE0  2AE8               	incf	wreg,f,c
  3255   001DE2  BE47               	btfsc	_counter_down_hour^0,7,c
  3256   001DE4  06E8               	decf	wreg,f,c
  3257   001DE6  BE46               	btfsc	_counter_down_minute^0,7,c
  3258   001DE8  06E8               	decf	wreg,f,c
  3259   001DEA  6E6A               	movwf	(??_DecValProcess+1)^0,c
  3260   001DEC  5069               	movf	??_DecValProcess^0,w,c
  3261   001DEE  106A               	iorwf	(??_DecValProcess+1)^0,w,c
  3262   001DF0  B4D8               	btfsc	status,2,c
  3263   001DF2  EFFD  F00E         	goto	u4041
  3264   001DF6  EFFF  F00E         	goto	u4040
  3265   001DFA                     u4041:
  3266   001DFA  EF27  F00F         	goto	l5527
  3267   001DFE                     u4040:
  3268   001DFE                     
  3269                           ;Buttons.c: 324:         counter_down_second = 59;
  3270   001DFE  0E3B               	movlw	59
  3271   001E00  6E45               	movwf	_counter_down_second^0,c
  3272   001E02                     
  3273                           ;Buttons.c: 325:         counter_down_minute --;
  3274   001E02  0646               	decf	_counter_down_minute^0,f,c
  3275   001E04                     
  3276                           ;Buttons.c: 326:         if( counter_down_minute < 0 && counter_down_hour ){
  3277   001E04  BE46               	btfsc	_counter_down_minute^0,7,c
  3278   001E06  EF09  F00F         	goto	u4050
  3279   001E0A  EF07  F00F         	goto	u4051
  3280   001E0E                     u4051:
  3281   001E0E  EF16  F00F         	goto	l5521
  3282   001E12                     u4050:
  3283   001E12  5047               	movf	_counter_down_hour^0,w,c
  3284   001E14  B4D8               	btfsc	status,2,c
  3285   001E16  EF0F  F00F         	goto	u4061
  3286   001E1A  EF11  F00F         	goto	u4060
  3287   001E1E                     u4061:
  3288   001E1E  EF16  F00F         	goto	l5521
  3289   001E22                     u4060:
  3290   001E22                     
  3291                           ;Buttons.c: 327:             counter_down_minute = 59;
  3292   001E22  0E3B               	movlw	59
  3293   001E24  6E46               	movwf	_counter_down_minute^0,c
  3294   001E26                     
  3295                           ;Buttons.c: 328:             counter_down_hour --;
  3296   001E26  0647               	decf	_counter_down_hour^0,f,c
  3297                           
  3298                           ;Buttons.c: 329:         }
  3299   001E28  EF27  F00F         	goto	l5527
  3300   001E2C                     l5521:
  3301   001E2C  BE46               	btfsc	_counter_down_minute^0,7,c
  3302   001E2E  EF1D  F00F         	goto	u4070
  3303   001E32  EF1B  F00F         	goto	u4071
  3304   001E36                     u4071:
  3305   001E36  EF27  F00F         	goto	l5527
  3306   001E3A                     u4070:
  3307   001E3A  5047               	movf	_counter_down_hour^0,w,c
  3308   001E3C  A4D8               	btfss	status,2,c
  3309   001E3E  EF23  F00F         	goto	u4081
  3310   001E42  EF25  F00F         	goto	u4080
  3311   001E46                     u4081:
  3312   001E46  EF27  F00F         	goto	l5527
  3313   001E4A                     u4080:
  3314   001E4A  0E00               	movlw	0
  3315   001E4C  6E46               	movwf	_counter_down_minute^0,c
  3316   001E4E                     l5527:
  3317                           
  3318                           ;Buttons.c: 332:     if( counter_down_second < 0 && !(counter_down_hour + counter_down_m
      +                          inute) ) counter_down_second = 0;
  3319   001E4E  BE45               	btfsc	_counter_down_second^0,7,c
  3320   001E50  EF2E  F00F         	goto	u4090
  3321   001E54  EF2C  F00F         	goto	u4091
  3322   001E58                     u4091:
  3323   001E58  EF44  F00F         	goto	l5533
  3324   001E5C                     u4090:
  3325   001E5C  5047               	movf	_counter_down_hour^0,w,c
  3326   001E5E  2446               	addwf	_counter_down_minute^0,w,c
  3327   001E60  6E69               	movwf	??_DecValProcess^0,c
  3328   001E62  6AE8               	clrf	wreg,c
  3329   001E64  B0D8               	btfsc	status,0,c
  3330   001E66  2AE8               	incf	wreg,f,c
  3331   001E68  BE47               	btfsc	_counter_down_hour^0,7,c
  3332   001E6A  06E8               	decf	wreg,f,c
  3333   001E6C  BE46               	btfsc	_counter_down_minute^0,7,c
  3334   001E6E  06E8               	decf	wreg,f,c
  3335   001E70  6E6A               	movwf	(??_DecValProcess+1)^0,c
  3336   001E72  5069               	movf	??_DecValProcess^0,w,c
  3337   001E74  106A               	iorwf	(??_DecValProcess+1)^0,w,c
  3338   001E76  A4D8               	btfss	status,2,c
  3339   001E78  EF40  F00F         	goto	u4101
  3340   001E7C  EF42  F00F         	goto	u4100
  3341   001E80                     u4101:
  3342   001E80  EF44  F00F         	goto	l5533
  3343   001E84                     u4100:
  3344   001E84  0E00               	movlw	0
  3345   001E86  6E45               	movwf	_counter_down_second^0,c
  3346   001E88                     l5533:
  3347                           
  3348                           ;Buttons.c: 333:     UpdateSetValue();
  3349   001E88  ECB2  F013         	call	_UpdateSetValue	;wreg free
  3350   001E8C  0012               	return		;funcret
  3351   001E8E                     __end_of_DecValProcess:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _UpdateSetValue *****************
  3355 ;; Defined at:
  3356 ;;		line 352 in file "Buttons.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		None
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3370 ;;      Params:         0       0       0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0
  3373 ;;      Totals:         0       0       0       0       0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 5
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_IncValProcess
  3381 ;;		_DecValProcess
  3382 ;;		_UpDownTransfer
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text11
  3387   002764                     __ptext11:
  3388                           	callstack 0
  3389   002764                     _UpdateSetValue:
  3390                           	callstack 22
  3391   002764                     
  3392                           ;Buttons.c: 353:     counter_down_set_hour = counter_down_hour;
  3393   002764  C047  F044         	movff	_counter_down_hour,_counter_down_set_hour
  3394                           
  3395                           ;Buttons.c: 354:     counter_down_set_minute = counter_down_minute;
  3396   002768  C046  F043         	movff	_counter_down_minute,_counter_down_set_minute
  3397                           
  3398                           ;Buttons.c: 355:     counter_down_set_second = counter_down_second;
  3399   00276C  C045  F042         	movff	_counter_down_second,_counter_down_set_second
  3400   002770  0012               	return		;funcret
  3401   002772                     __end_of_UpdateSetValue:
  3402                           	callstack 0
  3403                           
  3404 ;; *************** function _UpdateDisplay *****************
  3405 ;; Defined at:
  3406 ;;		line 76 in file "Display.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  update_datas    2    3[BANK0 ] PTR unsigned char 
  3409 ;;		 -> Ds1307HMSRead@ds1307_date_datas(3), 
  3410 ;;  start_positi    1    5[BANK0 ] unsigned char 
  3411 ;;  end_position    1    6[BANK0 ] unsigned char 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  i               1   19[COMRAM] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3423 ;;      Params:         0       4       0       0       0       0       0
  3424 ;;      Locals:         1       0       0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0
  3426 ;;      Totals:         1       4       0       0       0       0       0
  3427 ;;Total ram usage:        5 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 6
  3430 ;; This function calls:
  3431 ;;		_MarkDisplay
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text12
  3438   002474                     __ptext12:
  3439                           	callstack 0
  3440   002474                     _UpdateDisplay:
  3441                           	callstack 24
  3442   002474                     
  3443                           ;Display.c: 78:     for( unsigned char i = start_position - 1; i < end_position; i ++ ) 
      +                          {
  3444   002474  0100               	movlb	0	; () banked
  3445   002476  058F               	decf	UpdateDisplay@start_position& (0+255),w,b
  3446   002478  6E6D               	movwf	UpdateDisplay@i^0,c
  3447   00247A  EF50  F012         	goto	l6333
  3448   00247E                     l6329:
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;Display.c: 79:         display_datas[ i ] = MarkDisplay( update_datas[ i ] );
  3452   00247E  0E52               	movlw	low _display_datas
  3453   002480  246D               	addwf	UpdateDisplay@i^0,w,c
  3454   002482  6ED9               	movwf	fsr2l,c
  3455   002484  6ADA               	clrf	fsr2h,c
  3456   002486  0E00               	movlw	high _display_datas
  3457   002488  22DA               	addwfc	fsr2h,f,c
  3458   00248A  506D               	movf	UpdateDisplay@i^0,w,c
  3459   00248C  258D               	addwf	UpdateDisplay@update_datas& (0+255),w,b
  3460   00248E  6EE1               	movwf	fsr1l,c
  3461   002490  0E00               	movlw	0
  3462   002492  218E               	addwfc	(UpdateDisplay@update_datas+1)& (0+255),w,b
  3463   002494  6EE2               	movwf	fsr1h,c
  3464   002496  50E7               	movf	indf1,w,c
  3465   002498  EC19  F008         	call	_MarkDisplay
  3466   00249C  6EDF               	movwf	indf2,c
  3467   00249E                     
  3468                           ;Display.c: 80:     }
  3469   00249E  2A6D               	incf	UpdateDisplay@i^0,f,c
  3470   0024A0                     l6333:
  3471   0024A0  0100               	movlb	0	; () banked
  3472   0024A2  5190               	movf	UpdateDisplay@end_position& (0+255),w,b
  3473   0024A4  5C6D               	subwf	UpdateDisplay@i^0,w,c
  3474   0024A6  A0D8               	btfss	status,0,c
  3475   0024A8  EF58  F012         	goto	u4921
  3476   0024AC  EF5A  F012         	goto	u4920
  3477   0024B0                     u4921:
  3478   0024B0  EF3F  F012         	goto	l6329
  3479   0024B4                     u4920:
  3480   0024B4                     
  3481                           ; BSR set to: 0
  3482   0024B4  0012               	return		;funcret
  3483   0024B6                     __end_of_UpdateDisplay:
  3484                           	callstack 0
  3485                           
  3486 ;; *************** function _MarkDisplay *****************
  3487 ;; Defined at:
  3488 ;;		line 83 in file "Display.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  mark            1    wreg     unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  mark            1   17[COMRAM] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      unsigned char 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2, status,0
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3502 ;;      Params:         0       0       0       0       0       0       0
  3503 ;;      Locals:         1       0       0       0       0       0       0
  3504 ;;      Temps:          2       0       0       0       0       0       0
  3505 ;;      Totals:         3       0       0       0       0       0       0
  3506 ;;Total ram usage:        3 bytes
  3507 ;; Hardware stack levels used: 1
  3508 ;; Hardware stack levels required when called: 5
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_UpdateDisplay
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text13
  3517   001032                     __ptext13:
  3518                           	callstack 0
  3519   001032                     _MarkDisplay:
  3520                           	callstack 24
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;incstack = 0
  3524                           ;MarkDisplay@mark stored from wreg
  3525   001032  6E6B               	movwf	MarkDisplay@mark^0,c
  3526   001034                     
  3527                           ;Display.c: 86:     switch( mark ){
  3528   001034  EF79  F008         	goto	l5713
  3529   001038                     l5559:
  3530   001038  0EC0               	movlw	192
  3531   00103A  EF1E  F009         	goto	l915
  3532   00103E                     l5563:
  3533   00103E  0EF9               	movlw	249
  3534   001040  EF1E  F009         	goto	l915
  3535   001044                     l5567:
  3536   001044  0EA4               	movlw	164
  3537   001046  EF1E  F009         	goto	l915
  3538   00104A                     l5571:
  3539   00104A  0EB0               	movlw	176
  3540   00104C  EF1E  F009         	goto	l915
  3541   001050                     l5575:
  3542   001050  0E99               	movlw	153
  3543   001052  EF1E  F009         	goto	l915
  3544   001056                     l5579:
  3545   001056  0E92               	movlw	146
  3546   001058  EF1E  F009         	goto	l915
  3547   00105C                     l5583:
  3548   00105C  0E82               	movlw	130
  3549   00105E  EF1E  F009         	goto	l915
  3550   001062                     l5587:
  3551   001062  0EF8               	movlw	248
  3552   001064  EF1E  F009         	goto	l915
  3553   001068                     l5591:
  3554   001068  0E80               	movlw	128
  3555   00106A  EF1E  F009         	goto	l915
  3556   00106E                     l5595:
  3557   00106E  0E90               	movlw	144
  3558   001070  EF1E  F009         	goto	l915
  3559   001074                     l5599:
  3560   001074  0E88               	movlw	136
  3561   001076  EF1E  F009         	goto	l915
  3562   00107A                     l5603:
  3563   00107A  0EA0               	movlw	160
  3564   00107C  EF1E  F009         	goto	l915
  3565   001080                     l5611:
  3566   001080  0E83               	movlw	131
  3567   001082  EF1E  F009         	goto	l915
  3568   001086                     l5615:
  3569   001086  0EC6               	movlw	198
  3570   001088  EF1E  F009         	goto	l915
  3571   00108C                     l5619:
  3572   00108C  0EA7               	movlw	167
  3573   00108E  EF1E  F009         	goto	l915
  3574   001092                     l5627:
  3575   001092  0EA1               	movlw	161
  3576   001094  EF1E  F009         	goto	l915
  3577   001098                     l5631:
  3578   001098  0E86               	movlw	134
  3579   00109A  EF1E  F009         	goto	l915
  3580   00109E                     l5635:
  3581   00109E  0E84               	movlw	132
  3582   0010A0  EF1E  F009         	goto	l915
  3583   0010A4                     l5639:
  3584   0010A4  0E8E               	movlw	142
  3585   0010A6  EF1E  F009         	goto	l915
  3586   0010AA                     l5651:
  3587   0010AA  0E89               	movlw	137
  3588   0010AC  EF1E  F009         	goto	l915
  3589   0010B0                     l5655:
  3590   0010B0  0E8B               	movlw	139
  3591   0010B2  EF1E  F009         	goto	l915
  3592   0010B6                     l5663:
  3593   0010B6  0EF1               	movlw	241
  3594   0010B8  EF1E  F009         	goto	l915
  3595   0010BC                     l5667:
  3596   0010BC  0EC7               	movlw	199
  3597   0010BE  EF1E  F009         	goto	l915
  3598   0010C2                     l5671:
  3599   0010C2  0EAB               	movlw	171
  3600   0010C4  EF1E  F009         	goto	l915
  3601   0010C8                     l5679:
  3602   0010C8  0EA3               	movlw	163
  3603   0010CA  EF1E  F009         	goto	l915
  3604   0010CE                     l5683:
  3605   0010CE  0E8C               	movlw	140
  3606   0010D0  EF1E  F009         	goto	l915
  3607   0010D4                     l5687:
  3608   0010D4  0E98               	movlw	152
  3609   0010D6  EF1E  F009         	goto	l915
  3610   0010DA                     l5691:
  3611   0010DA  0EAF               	movlw	175
  3612   0010DC  EF1E  F009         	goto	l915
  3613   0010E0                     l5699:
  3614   0010E0  0E87               	movlw	135
  3615   0010E2  EF1E  F009         	goto	l915
  3616   0010E6                     l5703:
  3617   0010E6  0EC1               	movlw	193
  3618   0010E8  EF1E  F009         	goto	l915
  3619   0010EC                     l5707:
  3620   0010EC  0E91               	movlw	145
  3621   0010EE  EF1E  F009         	goto	l915
  3622   0010F2                     l5713:
  3623   0010F2  506B               	movf	MarkDisplay@mark^0,w,c
  3624   0010F4  6E69               	movwf	??_MarkDisplay^0,c
  3625   0010F6  6A6A               	clrf	(??_MarkDisplay+1)^0,c
  3626                           
  3627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3628                           ; Switch size 1, requested type "simple"
  3629                           ; Number of cases is 1, Range of values is 0 to 0
  3630                           ; switch strategies available:
  3631                           ; Name         Instructions Cycles
  3632                           ; simple_byte            4     3 (average)
  3633                           ;	Chosen strategy is simple_byte
  3634   0010F8  506A               	movf	(??_MarkDisplay+1)^0,w,c
  3635   0010FA  0A00               	xorlw	0	; case 0
  3636   0010FC  B4D8               	btfsc	status,2,c
  3637   0010FE  EF83  F008         	goto	l6829
  3638   001102  EF1E  F009         	goto	l915
  3639   001106                     l6829:
  3640                           
  3641                           ; Switch size 1, requested type "simple"
  3642                           ; Number of cases is 38, Range of values is 0 to 121
  3643                           ; switch strategies available:
  3644                           ; Name         Instructions Cycles
  3645                           ; simple_byte          115    58 (average)
  3646                           ;	Chosen strategy is simple_byte
  3647   001106  5069               	movf	??_MarkDisplay^0,w,c
  3648   001108  0A00               	xorlw	0	; case 0
  3649   00110A  B4D8               	btfsc	status,2,c
  3650   00110C  EF1C  F008         	goto	l5559
  3651   001110  0A01               	xorlw	1	; case 1
  3652   001112  B4D8               	btfsc	status,2,c
  3653   001114  EF1F  F008         	goto	l5563
  3654   001118  0A03               	xorlw	3	; case 2
  3655   00111A  B4D8               	btfsc	status,2,c
  3656   00111C  EF22  F008         	goto	l5567
  3657   001120  0A01               	xorlw	1	; case 3
  3658   001122  B4D8               	btfsc	status,2,c
  3659   001124  EF25  F008         	goto	l5571
  3660   001128  0A07               	xorlw	7	; case 4
  3661   00112A  B4D8               	btfsc	status,2,c
  3662   00112C  EF28  F008         	goto	l5575
  3663   001130  0A01               	xorlw	1	; case 5
  3664   001132  B4D8               	btfsc	status,2,c
  3665   001134  EF2B  F008         	goto	l5579
  3666   001138  0A03               	xorlw	3	; case 6
  3667   00113A  B4D8               	btfsc	status,2,c
  3668   00113C  EF2E  F008         	goto	l5583
  3669   001140  0A01               	xorlw	1	; case 7
  3670   001142  B4D8               	btfsc	status,2,c
  3671   001144  EF31  F008         	goto	l5587
  3672   001148  0A0F               	xorlw	15	; case 8
  3673   00114A  B4D8               	btfsc	status,2,c
  3674   00114C  EF34  F008         	goto	l5591
  3675   001150  0A01               	xorlw	1	; case 9
  3676   001152  B4D8               	btfsc	status,2,c
  3677   001154  EF37  F008         	goto	l5595
  3678   001158  0A48               	xorlw	72	; case 65
  3679   00115A  B4D8               	btfsc	status,2,c
  3680   00115C  EF3A  F008         	goto	l5599
  3681   001160  0A03               	xorlw	3	; case 66
  3682   001162  B4D8               	btfsc	status,2,c
  3683   001164  EF34  F008         	goto	l5591
  3684   001168  0A01               	xorlw	1	; case 67
  3685   00116A  B4D8               	btfsc	status,2,c
  3686   00116C  EF43  F008         	goto	l5615
  3687   001170  0A07               	xorlw	7	; case 68
  3688   001172  B4D8               	btfsc	status,2,c
  3689   001174  EF1C  F008         	goto	l5559
  3690   001178  0A01               	xorlw	1	; case 69
  3691   00117A  B4D8               	btfsc	status,2,c
  3692   00117C  EF4C  F008         	goto	l5631
  3693   001180  0A03               	xorlw	3	; case 70
  3694   001182  B4D8               	btfsc	status,2,c
  3695   001184  EF52  F008         	goto	l5639
  3696   001188  0A01               	xorlw	1	; case 71
  3697   00118A  B4D8               	btfsc	status,2,c
  3698   00118C  EF2E  F008         	goto	l5583
  3699   001190  0A0F               	xorlw	15	; case 72
  3700   001192  B4D8               	btfsc	status,2,c
  3701   001194  EF55  F008         	goto	l5651
  3702   001198  0A01               	xorlw	1	; case 73
  3703   00119A  B4D8               	btfsc	status,2,c
  3704   00119C  EF1F  F008         	goto	l5563
  3705   0011A0  0A03               	xorlw	3	; case 74
  3706   0011A2  B4D8               	btfsc	status,2,c
  3707   0011A4  EF5B  F008         	goto	l5663
  3708   0011A8  0A06               	xorlw	6	; case 76
  3709   0011AA  B4D8               	btfsc	status,2,c
  3710   0011AC  EF5E  F008         	goto	l5667
  3711   0011B0  0A03               	xorlw	3	; case 79
  3712   0011B2  B4D8               	btfsc	status,2,c
  3713   0011B4  EF1C  F008         	goto	l5559
  3714   0011B8  0A1F               	xorlw	31	; case 80
  3715   0011BA  B4D8               	btfsc	status,2,c
  3716   0011BC  EF67  F008         	goto	l5683
  3717   0011C0  0A03               	xorlw	3	; case 83
  3718   0011C2  B4D8               	btfsc	status,2,c
  3719   0011C4  EF2B  F008         	goto	l5579
  3720   0011C8  0A06               	xorlw	6	; case 85
  3721   0011CA  B4D8               	btfsc	status,2,c
  3722   0011CC  EF73  F008         	goto	l5703
  3723   0011D0  0A34               	xorlw	52	; case 97
  3724   0011D2  B4D8               	btfsc	status,2,c
  3725   0011D4  EF3D  F008         	goto	l5603
  3726   0011D8  0A03               	xorlw	3	; case 98
  3727   0011DA  B4D8               	btfsc	status,2,c
  3728   0011DC  EF40  F008         	goto	l5611
  3729   0011E0  0A01               	xorlw	1	; case 99
  3730   0011E2  B4D8               	btfsc	status,2,c
  3731   0011E4  EF46  F008         	goto	l5619
  3732   0011E8  0A07               	xorlw	7	; case 100
  3733   0011EA  B4D8               	btfsc	status,2,c
  3734   0011EC  EF49  F008         	goto	l5627
  3735   0011F0  0A01               	xorlw	1	; case 101
  3736   0011F2  B4D8               	btfsc	status,2,c
  3737   0011F4  EF4F  F008         	goto	l5635
  3738   0011F8  0A02               	xorlw	2	; case 103
  3739   0011FA  B4D8               	btfsc	status,2,c
  3740   0011FC  EF37  F008         	goto	l5595
  3741   001200  0A0F               	xorlw	15	; case 104
  3742   001202  B4D8               	btfsc	status,2,c
  3743   001204  EF58  F008         	goto	l5655
  3744   001208  0A06               	xorlw	6	; case 110
  3745   00120A  B4D8               	btfsc	status,2,c
  3746   00120C  EF61  F008         	goto	l5671
  3747   001210  0A01               	xorlw	1	; case 111
  3748   001212  B4D8               	btfsc	status,2,c
  3749   001214  EF64  F008         	goto	l5679
  3750   001218  0A1E               	xorlw	30	; case 113
  3751   00121A  B4D8               	btfsc	status,2,c
  3752   00121C  EF6A  F008         	goto	l5687
  3753   001220  0A03               	xorlw	3	; case 114
  3754   001222  B4D8               	btfsc	status,2,c
  3755   001224  EF6D  F008         	goto	l5691
  3756   001228  0A06               	xorlw	6	; case 116
  3757   00122A  B4D8               	btfsc	status,2,c
  3758   00122C  EF70  F008         	goto	l5699
  3759   001230  0A0D               	xorlw	13	; case 121
  3760   001232  B4D8               	btfsc	status,2,c
  3761   001234  EF76  F008         	goto	l5707
  3762   001238  EF1E  F009         	goto	l915
  3763   00123C                     l915:
  3764   00123C  0012               	return		;funcret
  3765   00123E                     __end_of_MarkDisplay:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function _ReadCounter *****************
  3769 ;; Defined at:
  3770 ;;		line 36 in file "Counter.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  read_buffer     2    4[BANK0 ] PTR char 
  3773 ;;		 -> display_datas(8), 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3785 ;;      Params:         0       2       0       0       0       0       0
  3786 ;;      Locals:         0       0       0       0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0
  3788 ;;      Totals:         0       2       0       0       0       0       0
  3789 ;;Total ram usage:        2 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 6
  3792 ;; This function calls:
  3793 ;;		___awdiv
  3794 ;;		___awmod
  3795 ;; This function is called by:
  3796 ;;		_main
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text14
  3801   00123E                     __ptext14:
  3802                           	callstack 0
  3803   00123E                     _ReadCounter:
  3804                           	callstack 24
  3805   00123E                     
  3806                           ;Counter.c: 38:     if( counter_direction_flg == 1 ) {
  3807   00123E  043D               	decf	_counter_direction_flg^0,w,c
  3808   001240  A4D8               	btfss	status,2,c
  3809   001242  EF25  F009         	goto	u4931
  3810   001246  EF27  F009         	goto	u4930
  3811   00124A                     u4931:
  3812   00124A  EF9E  F009         	goto	l6339
  3813   00124E                     u4930:
  3814   00124E                     
  3815                           ;Counter.c: 39:         read_buffer[ 0 + 1 ] = counter_up_hour % 10;
  3816   00124E  0100               	movlb	0	; () banked
  3817   001250  EE20 F001          	lfsr	2,1
  3818   001254  518E               	movf	ReadCounter@read_buffer& (0+255),w,b
  3819   001256  26D9               	addwf	fsr2l,f,c
  3820   001258  518F               	movf	(ReadCounter@read_buffer+1)& (0+255),w,b
  3821   00125A  22DA               	addwfc	fsr2h,f,c
  3822   00125C  5041               	movf	_counter_up_hour^0,w,c
  3823   00125E  6E69               	movwf	___awmod@dividend^0,c
  3824   001260  6A6A               	clrf	(___awmod@dividend+1)^0,c
  3825   001262  BE69               	btfsc	___awmod@dividend^0,7,c
  3826   001264  066A               	decf	(___awmod@dividend+1)^0,f,c
  3827   001266  0E00               	movlw	0
  3828   001268  6E6C               	movwf	(___awmod@divisor+1)^0,c
  3829   00126A  0E0A               	movlw	10
  3830   00126C  6E6B               	movwf	___awmod@divisor^0,c
  3831   00126E  ECCB  F010         	call	___awmod	;wreg free
  3832   001272  5069               	movf	?___awmod^0,w,c
  3833   001274  6EDF               	movwf	indf2,c
  3834                           
  3835                           ;Counter.c: 40:         read_buffer[ 0 ] = counter_up_hour / 10;
  3836   001276  5041               	movf	_counter_up_hour^0,w,c
  3837   001278  6E69               	movwf	___awdiv@dividend^0,c
  3838   00127A  6A6A               	clrf	(___awdiv@dividend+1)^0,c
  3839   00127C  BE69               	btfsc	___awdiv@dividend^0,7,c
  3840   00127E  066A               	decf	(___awdiv@dividend+1)^0,f,c
  3841   001280  0E00               	movlw	0
  3842   001282  6E6C               	movwf	(___awdiv@divisor+1)^0,c
  3843   001284  0E0A               	movlw	10
  3844   001286  6E6B               	movwf	___awdiv@divisor^0,c
  3845   001288  ECAA  F00F         	call	___awdiv	;wreg free
  3846   00128C  5069               	movf	?___awdiv^0,w,c
  3847   00128E  C08E  FFD9         	movff	ReadCounter@read_buffer,fsr2l
  3848   001292  C08F  FFDA         	movff	ReadCounter@read_buffer+1,fsr2h
  3849   001296  6EDF               	movwf	indf2,c
  3850                           
  3851                           ;Counter.c: 41:         read_buffer[ 2 + 1 ] = counter_up_minute % 10;
  3852   001298  0100               	movlb	0	; () banked
  3853   00129A  EE20 F003          	lfsr	2,3
  3854   00129E  518E               	movf	ReadCounter@read_buffer& (0+255),w,b
  3855   0012A0  26D9               	addwf	fsr2l,f,c
  3856   0012A2  518F               	movf	(ReadCounter@read_buffer+1)& (0+255),w,b
  3857   0012A4  22DA               	addwfc	fsr2h,f,c
  3858   0012A6  5040               	movf	_counter_up_minute^0,w,c
  3859   0012A8  6E69               	movwf	___awmod@dividend^0,c
  3860   0012AA  6A6A               	clrf	(___awmod@dividend+1)^0,c
  3861   0012AC  BE69               	btfsc	___awmod@dividend^0,7,c
  3862   0012AE  066A               	decf	(___awmod@dividend+1)^0,f,c
  3863   0012B0  0E00               	movlw	0
  3864   0012B2  6E6C               	movwf	(___awmod@divisor+1)^0,c
  3865   0012B4  0E0A               	movlw	10
  3866   0012B6  6E6B               	movwf	___awmod@divisor^0,c
  3867   0012B8  ECCB  F010         	call	___awmod	;wreg free
  3868   0012BC  5069               	movf	?___awmod^0,w,c
  3869   0012BE  6EDF               	movwf	indf2,c
  3870                           
  3871                           ;Counter.c: 42:         read_buffer[ 2 ] = counter_up_minute / 10;
  3872   0012C0  0100               	movlb	0	; () banked
  3873   0012C2  EE20 F002          	lfsr	2,2
  3874   0012C6  518E               	movf	ReadCounter@read_buffer& (0+255),w,b
  3875   0012C8  26D9               	addwf	fsr2l,f,c
  3876   0012CA  518F               	movf	(ReadCounter@read_buffer+1)& (0+255),w,b
  3877   0012CC  22DA               	addwfc	fsr2h,f,c
  3878   0012CE  5040               	movf	_counter_up_minute^0,w,c
  3879   0012D0  6E69               	movwf	___awdiv@dividend^0,c
  3880   0012D2  6A6A               	clrf	(___awdiv@dividend+1)^0,c
  3881   0012D4  BE69               	btfsc	___awdiv@dividend^0,7,c
  3882   0012D6  066A               	decf	(___awdiv@dividend+1)^0,f,c
  3883   0012D8  0E00               	movlw	0
  3884   0012DA  6E6C               	movwf	(___awdiv@divisor+1)^0,c
  3885   0012DC  0E0A               	movlw	10
  3886   0012DE  6E6B               	movwf	___awdiv@divisor^0,c
  3887   0012E0  ECAA  F00F         	call	___awdiv	;wreg free
  3888   0012E4  5069               	movf	?___awdiv^0,w,c
  3889   0012E6  6EDF               	movwf	indf2,c
  3890                           
  3891                           ;Counter.c: 43:         read_buffer[ 4 + 1 ] = counter_up_second % 10;
  3892   0012E8  0100               	movlb	0	; () banked
  3893   0012EA  EE20 F005          	lfsr	2,5
  3894   0012EE  518E               	movf	ReadCounter@read_buffer& (0+255),w,b
  3895   0012F0  26D9               	addwf	fsr2l,f,c
  3896   0012F2  518F               	movf	(ReadCounter@read_buffer+1)& (0+255),w,b
  3897   0012F4  22DA               	addwfc	fsr2h,f,c
  3898   0012F6  503F               	movf	_counter_up_second^0,w,c
  3899   0012F8  6E69               	movwf	___awmod@dividend^0,c
  3900   0012FA  6A6A               	clrf	(___awmod@dividend+1)^0,c
  3901   0012FC  BE69               	btfsc	___awmod@dividend^0,7,c
  3902   0012FE  066A               	decf	(___awmod@dividend+1)^0,f,c
  3903   001300  0E00               	movlw	0
  3904   001302  6E6C               	movwf	(___awmod@divisor+1)^0,c
  3905   001304  0E0A               	movlw	10
  3906   001306  6E6B               	movwf	___awmod@divisor^0,c
  3907   001308  ECCB  F010         	call	___awmod	;wreg free
  3908   00130C  5069               	movf	?___awmod^0,w,c
  3909   00130E  6EDF               	movwf	indf2,c
  3910                           
  3911                           ;Counter.c: 44:         read_buffer[ 4 ] = counter_up_second / 10;
  3912   001310  0100               	movlb	0	; () banked
  3913   001312  EE20 F004          	lfsr	2,4
  3914   001316  518E               	movf	ReadCounter@read_buffer& (0+255),w,b
  3915   001318  26D9               	addwf	fsr2l,f,c
  3916   00131A  518F               	movf	(ReadCounter@read_buffer+1)& (0+255),w,b
  3917   00131C  22DA               	addwfc	fsr2h,f,c
  3918   00131E  503F               	movf	_counter_up_second^0,w,c
  3919   001320  6E69               	movwf	___awdiv@dividend^0,c
  3920   001322  6A6A               	clrf	(___awdiv@dividend+1)^0,c
  3921   001324  BE69               	btfsc	___awdiv@dividend^0,7,c
  3922   001326  066A               	decf	(___awdiv@dividend+1)^0,f,c
  3923   001328  0E00               	movlw	0
  3924   00132A  6E6C               	movwf	(___awdiv@divisor+1)^0,c
  3925   00132C  0E0A               	movlw	10
  3926   00132E  6E6B               	movwf	___awdiv@divisor^0,c
  3927   001330  ECAA  F00F         	call	___awdiv	;wreg free
  3928   001334  5069               	movf	?___awdiv^0,w,c
  3929   001336  6EDF               	movwf	indf2,c
  3930                           
  3931                           ;Counter.c: 45:     }
  3932   001338  EF1B  F00A         	goto	l773
  3933   00133C                     l6339:
  3934   00133C  503D               	movf	_counter_direction_flg^0,w,c
  3935   00133E  A4D8               	btfss	status,2,c
  3936   001340  EFA4  F009         	goto	u4941
  3937   001344  EFA6  F009         	goto	u4940
  3938   001348                     u4941:
  3939   001348  EF1B  F00A         	goto	l773
  3940   00134C                     u4940:
  3941   00134C                     
  3942                           ;Counter.c: 48:         read_buffer[ 0 + 1 ] = counter_down_hour % 10;
  3943   00134C  0100               	movlb	0	; () banked
  3944   00134E  EE20 F001          	lfsr	2,1
  3945   001352  518E               	movf	ReadCounter@read_buffer& (0+255),w,b
  3946   001354  26D9               	addwf	fsr2l,f,c
  3947   001356  518F               	movf	(ReadCounter@read_buffer+1)& (0+255),w,b
  3948   001358  22DA               	addwfc	fsr2h,f,c
  3949   00135A  5047               	movf	_counter_down_hour^0,w,c
  3950   00135C  6E69               	movwf	___awmod@dividend^0,c
  3951   00135E  6A6A               	clrf	(___awmod@dividend+1)^0,c
  3952   001360  BE69               	btfsc	___awmod@dividend^0,7,c
  3953   001362  066A               	decf	(___awmod@dividend+1)^0,f,c
  3954   001364  0E00               	movlw	0
  3955   001366  6E6C               	movwf	(___awmod@divisor+1)^0,c
  3956   001368  0E0A               	movlw	10
  3957   00136A  6E6B               	movwf	___awmod@divisor^0,c
  3958   00136C  ECCB  F010         	call	___awmod	;wreg free
  3959   001370  5069               	movf	?___awmod^0,w,c
  3960   001372  6EDF               	movwf	indf2,c
  3961                           
  3962                           ;Counter.c: 49:         read_buffer[ 0 ] = counter_down_hour / 10;
  3963   001374  5047               	movf	_counter_down_hour^0,w,c
  3964   001376  6E69               	movwf	___awdiv@dividend^0,c
  3965   001378  6A6A               	clrf	(___awdiv@dividend+1)^0,c
  3966   00137A  BE69               	btfsc	___awdiv@dividend^0,7,c
  3967   00137C  066A               	decf	(___awdiv@dividend+1)^0,f,c
  3968   00137E  0E00               	movlw	0
  3969   001380  6E6C               	movwf	(___awdiv@divisor+1)^0,c
  3970   001382  0E0A               	movlw	10
  3971   001384  6E6B               	movwf	___awdiv@divisor^0,c
  3972   001386  ECAA  F00F         	call	___awdiv	;wreg free
  3973   00138A  5069               	movf	?___awdiv^0,w,c
  3974   00138C  C08E  FFD9         	movff	ReadCounter@read_buffer,fsr2l
  3975   001390  C08F  FFDA         	movff	ReadCounter@read_buffer+1,fsr2h
  3976   001394  6EDF               	movwf	indf2,c
  3977                           
  3978                           ;Counter.c: 50:         read_buffer[ 2 + 1 ] = counter_down_minute % 10;
  3979   001396  0100               	movlb	0	; () banked
  3980   001398  EE20 F003          	lfsr	2,3
  3981   00139C  518E               	movf	ReadCounter@read_buffer& (0+255),w,b
  3982   00139E  26D9               	addwf	fsr2l,f,c
  3983   0013A0  518F               	movf	(ReadCounter@read_buffer+1)& (0+255),w,b
  3984   0013A2  22DA               	addwfc	fsr2h,f,c
  3985   0013A4  5046               	movf	_counter_down_minute^0,w,c
  3986   0013A6  6E69               	movwf	___awmod@dividend^0,c
  3987   0013A8  6A6A               	clrf	(___awmod@dividend+1)^0,c
  3988   0013AA  BE69               	btfsc	___awmod@dividend^0,7,c
  3989   0013AC  066A               	decf	(___awmod@dividend+1)^0,f,c
  3990   0013AE  0E00               	movlw	0
  3991   0013B0  6E6C               	movwf	(___awmod@divisor+1)^0,c
  3992   0013B2  0E0A               	movlw	10
  3993   0013B4  6E6B               	movwf	___awmod@divisor^0,c
  3994   0013B6  ECCB  F010         	call	___awmod	;wreg free
  3995   0013BA  5069               	movf	?___awmod^0,w,c
  3996   0013BC  6EDF               	movwf	indf2,c
  3997                           
  3998                           ;Counter.c: 51:         read_buffer[ 2 ] = counter_down_minute / 10;
  3999   0013BE  0100               	movlb	0	; () banked
  4000   0013C0  EE20 F002          	lfsr	2,2
  4001   0013C4  518E               	movf	ReadCounter@read_buffer& (0+255),w,b
  4002   0013C6  26D9               	addwf	fsr2l,f,c
  4003   0013C8  518F               	movf	(ReadCounter@read_buffer+1)& (0+255),w,b
  4004   0013CA  22DA               	addwfc	fsr2h,f,c
  4005   0013CC  5046               	movf	_counter_down_minute^0,w,c
  4006   0013CE  6E69               	movwf	___awdiv@dividend^0,c
  4007   0013D0  6A6A               	clrf	(___awdiv@dividend+1)^0,c
  4008   0013D2  BE69               	btfsc	___awdiv@dividend^0,7,c
  4009   0013D4  066A               	decf	(___awdiv@dividend+1)^0,f,c
  4010   0013D6  0E00               	movlw	0
  4011   0013D8  6E6C               	movwf	(___awdiv@divisor+1)^0,c
  4012   0013DA  0E0A               	movlw	10
  4013   0013DC  6E6B               	movwf	___awdiv@divisor^0,c
  4014   0013DE  ECAA  F00F         	call	___awdiv	;wreg free
  4015   0013E2  5069               	movf	?___awdiv^0,w,c
  4016   0013E4  6EDF               	movwf	indf2,c
  4017                           
  4018                           ;Counter.c: 52:         read_buffer[ 4 + 1 ] = counter_down_second % 10;
  4019   0013E6  0100               	movlb	0	; () banked
  4020   0013E8  EE20 F005          	lfsr	2,5
  4021   0013EC  518E               	movf	ReadCounter@read_buffer& (0+255),w,b
  4022   0013EE  26D9               	addwf	fsr2l,f,c
  4023   0013F0  518F               	movf	(ReadCounter@read_buffer+1)& (0+255),w,b
  4024   0013F2  22DA               	addwfc	fsr2h,f,c
  4025   0013F4  5045               	movf	_counter_down_second^0,w,c
  4026   0013F6  6E69               	movwf	___awmod@dividend^0,c
  4027   0013F8  6A6A               	clrf	(___awmod@dividend+1)^0,c
  4028   0013FA  BE69               	btfsc	___awmod@dividend^0,7,c
  4029   0013FC  066A               	decf	(___awmod@dividend+1)^0,f,c
  4030   0013FE  0E00               	movlw	0
  4031   001400  6E6C               	movwf	(___awmod@divisor+1)^0,c
  4032   001402  0E0A               	movlw	10
  4033   001404  6E6B               	movwf	___awmod@divisor^0,c
  4034   001406  ECCB  F010         	call	___awmod	;wreg free
  4035   00140A  5069               	movf	?___awmod^0,w,c
  4036   00140C  6EDF               	movwf	indf2,c
  4037                           
  4038                           ;Counter.c: 53:         read_buffer[ 4 ] = counter_down_second / 10;
  4039   00140E  0100               	movlb	0	; () banked
  4040   001410  EE20 F004          	lfsr	2,4
  4041   001414  518E               	movf	ReadCounter@read_buffer& (0+255),w,b
  4042   001416  26D9               	addwf	fsr2l,f,c
  4043   001418  518F               	movf	(ReadCounter@read_buffer+1)& (0+255),w,b
  4044   00141A  22DA               	addwfc	fsr2h,f,c
  4045   00141C  5045               	movf	_counter_down_second^0,w,c
  4046   00141E  6E69               	movwf	___awdiv@dividend^0,c
  4047   001420  6A6A               	clrf	(___awdiv@dividend+1)^0,c
  4048   001422  BE69               	btfsc	___awdiv@dividend^0,7,c
  4049   001424  066A               	decf	(___awdiv@dividend+1)^0,f,c
  4050   001426  0E00               	movlw	0
  4051   001428  6E6C               	movwf	(___awdiv@divisor+1)^0,c
  4052   00142A  0E0A               	movlw	10
  4053   00142C  6E6B               	movwf	___awdiv@divisor^0,c
  4054   00142E  ECAA  F00F         	call	___awdiv	;wreg free
  4055   001432  5069               	movf	?___awdiv^0,w,c
  4056   001434  6EDF               	movwf	indf2,c
  4057   001436                     l773:
  4058   001436  0012               	return		;funcret
  4059   001438                     __end_of_ReadCounter:
  4060                           	callstack 0
  4061                           
  4062 ;; *************** function ___awmod *****************
  4063 ;; Defined at:
  4064 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  dividend        2   15[COMRAM] int 
  4067 ;;  divisor         2   17[COMRAM] int 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  sign            1   20[COMRAM] unsigned char 
  4070 ;;  counter         1   19[COMRAM] unsigned char 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  2   15[COMRAM] int 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4080 ;;      Params:         4       0       0       0       0       0       0
  4081 ;;      Locals:         2       0       0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0
  4083 ;;      Totals:         6       0       0       0       0       0       0
  4084 ;;Total ram usage:        6 bytes
  4085 ;; Hardware stack levels used: 1
  4086 ;; Hardware stack levels required when called: 5
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_ReadCounter
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text15
  4095   002196                     __ptext15:
  4096                           	callstack 0
  4097   002196                     ___awmod:
  4098                           	callstack 24
  4099   002196  0E00               	movlw	0
  4100   002198  6E6E               	movwf	___awmod@sign^0,c
  4101   00219A  BE6A               	btfsc	(___awmod@dividend+1)^0,7,c
  4102   00219C  EFD4  F010         	goto	u3270
  4103   0021A0  EFD2  F010         	goto	u3271
  4104   0021A4                     u3271:
  4105   0021A4  EFDA  F010         	goto	l4877
  4106   0021A8                     u3270:
  4107   0021A8  6C69               	negf	___awmod@dividend^0,c
  4108   0021AA  1E6A               	comf	(___awmod@dividend+1)^0,f,c
  4109   0021AC  B0D8               	btfsc	status,0,c
  4110   0021AE  2A6A               	incf	(___awmod@dividend+1)^0,f,c
  4111   0021B0  0E01               	movlw	1
  4112   0021B2  6E6E               	movwf	___awmod@sign^0,c
  4113   0021B4                     l4877:
  4114   0021B4  BE6C               	btfsc	(___awmod@divisor+1)^0,7,c
  4115   0021B6  EFE1  F010         	goto	u3280
  4116   0021BA  EFDF  F010         	goto	u3281
  4117   0021BE                     u3281:
  4118   0021BE  EFE5  F010         	goto	l4881
  4119   0021C2                     u3280:
  4120   0021C2  6C6B               	negf	___awmod@divisor^0,c
  4121   0021C4  1E6C               	comf	(___awmod@divisor+1)^0,f,c
  4122   0021C6  B0D8               	btfsc	status,0,c
  4123   0021C8  2A6C               	incf	(___awmod@divisor+1)^0,f,c
  4124   0021CA                     l4881:
  4125   0021CA  506B               	movf	___awmod@divisor^0,w,c
  4126   0021CC  106C               	iorwf	(___awmod@divisor+1)^0,w,c
  4127   0021CE  B4D8               	btfsc	status,2,c
  4128   0021D0  EFEC  F010         	goto	u3291
  4129   0021D4  EFEE  F010         	goto	u3290
  4130   0021D8                     u3291:
  4131   0021D8  EF12  F011         	goto	l4897
  4132   0021DC                     u3290:
  4133   0021DC  0E01               	movlw	1
  4134   0021DE  6E6D               	movwf	___awmod@counter^0,c
  4135   0021E0  EFF6  F010         	goto	l4887
  4136   0021E4                     l4885:
  4137   0021E4  90D8               	bcf	status,0,c
  4138   0021E6  366B               	rlcf	___awmod@divisor^0,f,c
  4139   0021E8  366C               	rlcf	(___awmod@divisor+1)^0,f,c
  4140   0021EA  2A6D               	incf	___awmod@counter^0,f,c
  4141   0021EC                     l4887:
  4142   0021EC  AE6C               	btfss	(___awmod@divisor+1)^0,7,c
  4143   0021EE  EFFB  F010         	goto	u3301
  4144   0021F2  EFFD  F010         	goto	u3300
  4145   0021F6                     u3301:
  4146   0021F6  EFF2  F010         	goto	l4885
  4147   0021FA                     u3300:
  4148   0021FA                     l4889:
  4149   0021FA  506B               	movf	___awmod@divisor^0,w,c
  4150   0021FC  5C69               	subwf	___awmod@dividend^0,w,c
  4151   0021FE  506C               	movf	(___awmod@divisor+1)^0,w,c
  4152   002200  586A               	subwfb	(___awmod@dividend+1)^0,w,c
  4153   002202  A0D8               	btfss	status,0,c
  4154   002204  EF06  F011         	goto	u3311
  4155   002208  EF08  F011         	goto	u3310
  4156   00220C                     u3311:
  4157   00220C  EF0C  F011         	goto	l4893
  4158   002210                     u3310:
  4159   002210  506B               	movf	___awmod@divisor^0,w,c
  4160   002212  5E69               	subwf	___awmod@dividend^0,f,c
  4161   002214  506C               	movf	(___awmod@divisor+1)^0,w,c
  4162   002216  5A6A               	subwfb	(___awmod@dividend+1)^0,f,c
  4163   002218                     l4893:
  4164   002218  90D8               	bcf	status,0,c
  4165   00221A  326C               	rrcf	(___awmod@divisor+1)^0,f,c
  4166   00221C  326B               	rrcf	___awmod@divisor^0,f,c
  4167   00221E  2E6D               	decfsz	___awmod@counter^0,f,c
  4168   002220  EFFD  F010         	goto	l4889
  4169   002224                     l4897:
  4170   002224  506E               	movf	___awmod@sign^0,w,c
  4171   002226  B4D8               	btfsc	status,2,c
  4172   002228  EF18  F011         	goto	u3321
  4173   00222C  EF1A  F011         	goto	u3320
  4174   002230                     u3321:
  4175   002230  EF1E  F011         	goto	l4901
  4176   002234                     u3320:
  4177   002234  6C69               	negf	___awmod@dividend^0,c
  4178   002236  1E6A               	comf	(___awmod@dividend+1)^0,f,c
  4179   002238  B0D8               	btfsc	status,0,c
  4180   00223A  2A6A               	incf	(___awmod@dividend+1)^0,f,c
  4181   00223C                     l4901:
  4182   00223C  C069  F069         	movff	___awmod@dividend,?___awmod
  4183   002240  C06A  F06A         	movff	___awmod@dividend+1,?___awmod+1
  4184   002244  0012               	return		;funcret
  4185   002246                     __end_of___awmod:
  4186                           	callstack 0
  4187                           
  4188 ;; *************** function ___awdiv *****************
  4189 ;; Defined at:
  4190 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  dividend        2   15[COMRAM] int 
  4193 ;;  divisor         2   17[COMRAM] int 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  quotient        2    2[BANK0 ] int 
  4196 ;;  sign            1    1[BANK0 ] unsigned char 
  4197 ;;  counter         1    0[BANK0 ] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  2   15[COMRAM] int 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4207 ;;      Params:         4       0       0       0       0       0       0
  4208 ;;      Locals:         0       4       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0
  4210 ;;      Totals:         4       4       0       0       0       0       0
  4211 ;;Total ram usage:        8 bytes
  4212 ;; Hardware stack levels used: 1
  4213 ;; Hardware stack levels required when called: 5
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_ReadCounter
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text16
  4222   001F54                     __ptext16:
  4223                           	callstack 0
  4224   001F54                     ___awdiv:
  4225                           	callstack 24
  4226   001F54  0E00               	movlw	0
  4227   001F56  0100               	movlb	0	; () banked
  4228   001F58  6F8B               	movwf	___awdiv@sign& (0+255),b
  4229   001F5A                     
  4230                           ; BSR set to: 0
  4231   001F5A  BE6C               	btfsc	(___awdiv@divisor+1)^0,7,c
  4232   001F5C  EFB4  F00F         	goto	u4560
  4233   001F60  EFB2  F00F         	goto	u4561
  4234   001F64                     u4561:
  4235   001F64  EFBA  F00F         	goto	l6105
  4236   001F68                     u4560:
  4237   001F68                     
  4238                           ; BSR set to: 0
  4239   001F68  6C6B               	negf	___awdiv@divisor^0,c
  4240   001F6A  1E6C               	comf	(___awdiv@divisor+1)^0,f,c
  4241   001F6C  B0D8               	btfsc	status,0,c
  4242   001F6E  2A6C               	incf	(___awdiv@divisor+1)^0,f,c
  4243   001F70                     
  4244                           ; BSR set to: 0
  4245   001F70  0E01               	movlw	1
  4246   001F72  6F8B               	movwf	___awdiv@sign& (0+255),b
  4247   001F74                     l6105:
  4248                           
  4249                           ; BSR set to: 0
  4250   001F74  BE6A               	btfsc	(___awdiv@dividend+1)^0,7,c
  4251   001F76  EFC1  F00F         	goto	u4570
  4252   001F7A  EFBF  F00F         	goto	u4571
  4253   001F7E                     u4571:
  4254   001F7E  EFC7  F00F         	goto	l6111
  4255   001F82                     u4570:
  4256   001F82                     
  4257                           ; BSR set to: 0
  4258   001F82  6C69               	negf	___awdiv@dividend^0,c
  4259   001F84  1E6A               	comf	(___awdiv@dividend+1)^0,f,c
  4260   001F86  B0D8               	btfsc	status,0,c
  4261   001F88  2A6A               	incf	(___awdiv@dividend+1)^0,f,c
  4262   001F8A                     
  4263                           ; BSR set to: 0
  4264   001F8A  0E01               	movlw	1
  4265   001F8C  1B8B               	xorwf	___awdiv@sign& (0+255),f,b
  4266   001F8E                     l6111:
  4267                           
  4268                           ; BSR set to: 0
  4269   001F8E  0E00               	movlw	0
  4270   001F90  6F8D               	movwf	(___awdiv@quotient+1)& (0+255),b
  4271   001F92  0E00               	movlw	0
  4272   001F94  6F8C               	movwf	___awdiv@quotient& (0+255),b
  4273   001F96                     
  4274                           ; BSR set to: 0
  4275   001F96  506B               	movf	___awdiv@divisor^0,w,c
  4276   001F98  106C               	iorwf	(___awdiv@divisor+1)^0,w,c
  4277   001F9A  B4D8               	btfsc	status,2,c
  4278   001F9C  EFD2  F00F         	goto	u4581
  4279   001FA0  EFD4  F00F         	goto	u4580
  4280   001FA4                     u4581:
  4281   001FA4  EFFC  F00F         	goto	l6133
  4282   001FA8                     u4580:
  4283   001FA8                     
  4284                           ; BSR set to: 0
  4285   001FA8  0E01               	movlw	1
  4286   001FAA  6F8A               	movwf	___awdiv@counter& (0+255),b
  4287   001FAC  EFDC  F00F         	goto	l6119
  4288   001FB0                     l6117:
  4289                           
  4290                           ; BSR set to: 0
  4291   001FB0  90D8               	bcf	status,0,c
  4292   001FB2  366B               	rlcf	___awdiv@divisor^0,f,c
  4293   001FB4  366C               	rlcf	(___awdiv@divisor+1)^0,f,c
  4294   001FB6  2B8A               	incf	___awdiv@counter& (0+255),f,b
  4295   001FB8                     l6119:
  4296                           
  4297                           ; BSR set to: 0
  4298   001FB8  AE6C               	btfss	(___awdiv@divisor+1)^0,7,c
  4299   001FBA  EFE1  F00F         	goto	u4591
  4300   001FBE  EFE3  F00F         	goto	u4590
  4301   001FC2                     u4591:
  4302   001FC2  EFD8  F00F         	goto	l6117
  4303   001FC6                     u4590:
  4304   001FC6                     l6121:
  4305                           
  4306                           ; BSR set to: 0
  4307   001FC6  90D8               	bcf	status,0,c
  4308   001FC8  378C               	rlcf	___awdiv@quotient& (0+255),f,b
  4309   001FCA  378D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4310   001FCC                     
  4311                           ; BSR set to: 0
  4312   001FCC  506B               	movf	___awdiv@divisor^0,w,c
  4313   001FCE  5C69               	subwf	___awdiv@dividend^0,w,c
  4314   001FD0  506C               	movf	(___awdiv@divisor+1)^0,w,c
  4315   001FD2  586A               	subwfb	(___awdiv@dividend+1)^0,w,c
  4316   001FD4  A0D8               	btfss	status,0,c
  4317   001FD6  EFEF  F00F         	goto	u4601
  4318   001FDA  EFF1  F00F         	goto	u4600
  4319   001FDE                     u4601:
  4320   001FDE  EFF6  F00F         	goto	l6129
  4321   001FE2                     u4600:
  4322   001FE2                     
  4323                           ; BSR set to: 0
  4324   001FE2  506B               	movf	___awdiv@divisor^0,w,c
  4325   001FE4  5E69               	subwf	___awdiv@dividend^0,f,c
  4326   001FE6  506C               	movf	(___awdiv@divisor+1)^0,w,c
  4327   001FE8  5A6A               	subwfb	(___awdiv@dividend+1)^0,f,c
  4328   001FEA                     
  4329                           ; BSR set to: 0
  4330   001FEA  818C               	bsf	___awdiv@quotient& (0+255),0,b
  4331   001FEC                     l6129:
  4332                           
  4333                           ; BSR set to: 0
  4334   001FEC  90D8               	bcf	status,0,c
  4335   001FEE  326C               	rrcf	(___awdiv@divisor+1)^0,f,c
  4336   001FF0  326B               	rrcf	___awdiv@divisor^0,f,c
  4337   001FF2                     
  4338                           ; BSR set to: 0
  4339   001FF2  2F8A               	decfsz	___awdiv@counter& (0+255),f,b
  4340   001FF4  EFE3  F00F         	goto	l6121
  4341   001FF8                     l6133:
  4342                           
  4343                           ; BSR set to: 0
  4344   001FF8  518B               	movf	___awdiv@sign& (0+255),w,b
  4345   001FFA  B4D8               	btfsc	status,2,c
  4346   001FFC  EF02  F010         	goto	u4611
  4347   002000  EF04  F010         	goto	u4610
  4348   002004                     u4611:
  4349   002004  EF08  F010         	goto	l6137
  4350   002008                     u4610:
  4351   002008                     
  4352                           ; BSR set to: 0
  4353   002008  6D8C               	negf	___awdiv@quotient& (0+255),b
  4354   00200A  1F8D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4355   00200C  B0D8               	btfsc	status,0,c
  4356   00200E  2B8D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4357   002010                     l6137:
  4358                           
  4359                           ; BSR set to: 0
  4360   002010  C08C  F069         	movff	___awdiv@quotient,?___awdiv
  4361   002014  C08D  F06A         	movff	___awdiv@quotient+1,?___awdiv+1
  4362   002018                     
  4363                           ; BSR set to: 0
  4364   002018  0012               	return		;funcret
  4365   00201A                     __end_of___awdiv:
  4366                           	callstack 0
  4367                           
  4368 ;; *************** function _LEDProcess *****************
  4369 ;; Defined at:
  4370 ;;		line 106 in file "Main.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;		None
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4384 ;;      Params:         0       0       0       0       0       0       0
  4385 ;;      Locals:         0       0       0       0       0       0       0
  4386 ;;      Temps:          2       0       0       0       0       0       0
  4387 ;;      Totals:         2       0       0       0       0       0       0
  4388 ;;Total ram usage:        2 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; Hardware stack levels required when called: 5
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_main
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text17
  4399   001B38                     __ptext17:
  4400                           	callstack 0
  4401   001B38                     _LEDProcess:
  4402                           	callstack 25
  4403   001B38                     
  4404                           ;Main.c: 107:     display_datas[ 7 ] &= 0x00;
  4405   001B38  0E00               	movlw	0
  4406   001B3A  6E59               	movwf	(_display_datas+7)^0,c
  4407                           
  4408                           ;Main.c: 108:     switch( SYSTEM_STATE_FLG ){
  4409   001B3C  EFD9  F00D         	goto	l3305
  4410   001B40                     l3279:
  4411                           
  4412                           ;Main.c: 111:             if( rtc_clock_disp_type == 0 ) display_datas[ 7 ] |= 0x01;
  4413   001B40  5051               	movf	_rtc_clock_disp_type^0,w,c
  4414   001B42  A4D8               	btfss	status,2,c
  4415   001B44  EFA6  F00D         	goto	u1371
  4416   001B48  EFA8  F00D         	goto	u1370
  4417   001B4C                     u1371:
  4418   001B4C  EFAB  F00D         	goto	l3283
  4419   001B50                     u1370:
  4420   001B50                     l3281:
  4421   001B50  8059               	bsf	(_display_datas+7)^0,0,c
  4422   001B52  EF08  F00E         	goto	l358
  4423   001B56                     l3283:
  4424   001B56  8259               	bsf	(_display_datas+7)^0,1,c
  4425   001B58  EF08  F00E         	goto	l358
  4426   001B5C                     l3287:
  4427                           
  4428                           ;Main.c: 115:             display_datas[ 7 ] |= 0x20;
  4429   001B5C  8A59               	bsf	(_display_datas+7)^0,5,c
  4430   001B5E                     
  4431                           ;Main.c: 116:             if( counter_skip_flg ) {
  4432   001B5E  503C               	movf	_counter_skip_flg^0,w,c
  4433   001B60  B4D8               	btfsc	status,2,c
  4434   001B62  EFB5  F00D         	goto	u1381
  4435   001B66  EFB7  F00D         	goto	u1380
  4436   001B6A                     u1381:
  4437   001B6A  EFFE  F00D         	goto	l3307
  4438   001B6E                     u1380:
  4439   001B6E                     
  4440                           ;Main.c: 117:                 led_blink_cnt ++;
  4441   001B6E  4A2D               	infsnz	_led_blink_cnt^0,f,c
  4442   001B70  2A2E               	incf	(_led_blink_cnt+1)^0,f,c
  4443   001B72                     
  4444                           ;Main.c: 118:                 if( led_blink_cnt < 40 / 2 ) display_datas[ 7 ] |= 0x04;
  4445   001B72  502E               	movf	(_led_blink_cnt+1)^0,w,c
  4446   001B74  E107               	bnz	u1391
  4447   001B76  0E14               	movlw	20
  4448   001B78  5C2D               	subwf	_led_blink_cnt^0,w,c
  4449   001B7A  B0D8               	btfsc	status,0,c
  4450   001B7C  EFC2  F00D         	goto	u1391
  4451   001B80  EFC4  F00D         	goto	u1390
  4452   001B84                     u1391:
  4453   001B84  EFC5  F00D         	goto	l3297
  4454   001B88                     u1390:
  4455   001B88  8459               	bsf	(_display_datas+7)^0,2,c
  4456   001B8A                     l3297:
  4457                           
  4458                           ;Main.c: 119:                 if( led_blink_cnt > 40 ) led_blink_cnt = 0;
  4459   001B8A  502E               	movf	(_led_blink_cnt+1)^0,w,c
  4460   001B8C  E109               	bnz	u1400
  4461   001B8E  0E29               	movlw	41
  4462   001B90  5C2D               	subwf	_led_blink_cnt^0,w,c
  4463   001B92  A0D8               	btfss	status,0,c
  4464   001B94  EFCE  F00D         	goto	u1401
  4465   001B98  EFD0  F00D         	goto	u1400
  4466   001B9C                     u1401:
  4467   001B9C  EFFE  F00D         	goto	l3307
  4468   001BA0                     u1400:
  4469   001BA0  0E00               	movlw	0
  4470   001BA2  6E2E               	movwf	(_led_blink_cnt+1)^0,c
  4471   001BA4  0E00               	movlw	0
  4472   001BA6  6E2D               	movwf	_led_blink_cnt^0,c
  4473   001BA8  EFFE  F00D         	goto	l3307
  4474   001BAC                     l3301:
  4475                           
  4476                           ;Main.c: 123:             display_datas[ 7 ] |= 0x10;
  4477   001BAC  8859               	bsf	(_display_datas+7)^0,4,c
  4478                           
  4479                           ;Main.c: 124:             break;
  4480   001BAE  EFFE  F00D         	goto	l3307
  4481   001BB2                     l3305:
  4482   001BB2  506F               	movf	_SYSTEM_STATE_FLG^0,w,c
  4483   001BB4  6E69               	movwf	??_LEDProcess^0,c
  4484   001BB6  6A6A               	clrf	(??_LEDProcess+1)^0,c
  4485                           
  4486                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4487                           ; Switch size 1, requested type "simple"
  4488                           ; Number of cases is 1, Range of values is 0 to 0
  4489                           ; switch strategies available:
  4490                           ; Name         Instructions Cycles
  4491                           ; simple_byte            4     3 (average)
  4492                           ;	Chosen strategy is simple_byte
  4493   001BB8  506A               	movf	(??_LEDProcess+1)^0,w,c
  4494   001BBA  0A00               	xorlw	0	; case 0
  4495   001BBC  B4D8               	btfsc	status,2,c
  4496   001BBE  EFE3  F00D         	goto	l6831
  4497   001BC2  EFFE  F00D         	goto	l3307
  4498   001BC6                     l6831:
  4499                           
  4500                           ; Switch size 1, requested type "simple"
  4501                           ; Number of cases is 6, Range of values is 100 to 203
  4502                           ; switch strategies available:
  4503                           ; Name         Instructions Cycles
  4504                           ; simple_byte           19    10 (average)
  4505                           ;	Chosen strategy is simple_byte
  4506   001BC6  5069               	movf	??_LEDProcess^0,w,c
  4507   001BC8  0A64               	xorlw	100	; case 100
  4508   001BCA  B4D8               	btfsc	status,2,c
  4509   001BCC  EFA0  F00D         	goto	l3279
  4510   001BD0  0A01               	xorlw	1	; case 101
  4511   001BD2  B4D8               	btfsc	status,2,c
  4512   001BD4  EFA0  F00D         	goto	l3279
  4513   001BD8  0AAD               	xorlw	173	; case 200
  4514   001BDA  B4D8               	btfsc	status,2,c
  4515   001BDC  EFAE  F00D         	goto	l3287
  4516   001BE0  0A01               	xorlw	1	; case 201
  4517   001BE2  B4D8               	btfsc	status,2,c
  4518   001BE4  EFD6  F00D         	goto	l3301
  4519   001BE8  0A03               	xorlw	3	; case 202
  4520   001BEA  B4D8               	btfsc	status,2,c
  4521   001BEC  EFFE  F00D         	goto	l3307
  4522   001BF0  0A01               	xorlw	1	; case 203
  4523   001BF2  B4D8               	btfsc	status,2,c
  4524   001BF4  EFFE  F00D         	goto	l3307
  4525   001BF8  EFFE  F00D         	goto	l3307
  4526   001BFC                     l3307:
  4527                           
  4528                           ;Main.c: 129:     if( counter_direction_flg == 1 ) { display_datas[ 7 ] |= 0x01; }
  4529   001BFC  043D               	decf	_counter_direction_flg^0,w,c
  4530   001BFE  A4D8               	btfss	status,2,c
  4531   001C00  EF04  F00E         	goto	u1411
  4532   001C04  EF06  F00E         	goto	u1410
  4533   001C08                     u1411:
  4534   001C08  EFAB  F00D         	goto	l3283
  4535   001C0C                     u1410:
  4536   001C0C  EFA8  F00D         	goto	l3281
  4537   001C10                     l358:
  4538   001C10  0012               	return		;funcret
  4539   001C12                     __end_of_LEDProcess:
  4540                           	callstack 0
  4541                           
  4542 ;; *************** function _Ds1307HMSRead *****************
  4543 ;; Defined at:
  4544 ;;		line 55 in file "DS1307.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  ds1307_date_    3    0[BANK0 ] unsigned char [3]
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  2   17[COMRAM] PTR unsigned char 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4558 ;;      Params:         2       0       0       0       0       0       0
  4559 ;;      Locals:         0       3       0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0
  4561 ;;      Totals:         2       3       0       0       0       0       0
  4562 ;;Total ram usage:        5 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 8
  4565 ;; This function calls:
  4566 ;;		_I2cRead
  4567 ;;		_I2cRestart
  4568 ;;		_I2cStart
  4569 ;;		_I2cStop
  4570 ;;		_I2cWrite
  4571 ;; This function is called by:
  4572 ;;		_main
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text18
  4577   0020DA                     __ptext18:
  4578                           	callstack 0
  4579   0020DA                     _Ds1307HMSRead:
  4580                           	callstack 22
  4581   0020DA                     
  4582                           ;DS1307.c: 57:     I2cStart();
  4583   0020DA  ECA0  F013         	call	_I2cStart	;wreg free
  4584   0020DE                     
  4585                           ;DS1307.c: 58:     I2cWrite( (0xD0) );
  4586   0020DE  0ED0               	movlw	208
  4587   0020E0  EC59  F013         	call	_I2cWrite
  4588   0020E4                     
  4589                           ;DS1307.c: 59:     I2cWrite( 0x00 );
  4590   0020E4  0E00               	movlw	0
  4591   0020E6  EC59  F013         	call	_I2cWrite
  4592                           
  4593                           ;DS1307.c: 60:     I2cRestart();
  4594   0020EA  EC7C  F013         	call	_I2cRestart	;wreg free
  4595   0020EE                     
  4596                           ;DS1307.c: 61:     I2cWrite( (0xD1) );
  4597   0020EE  0ED1               	movlw	209
  4598   0020F0  EC59  F013         	call	_I2cWrite
  4599   0020F4                     
  4600                           ;DS1307.c: 62:     unsigned char ds1307_date_datas[ 3 ] = {0};
  4601   0020F4  0E00               	movlw	0
  4602   0020F6  0100               	movlb	0	; () banked
  4603   0020F8  6F8A               	movwf	Ds1307HMSRead@ds1307_date_datas& (0+255),b
  4604   0020FA  0E00               	movlw	0
  4605   0020FC  6F8B               	movwf	(Ds1307HMSRead@ds1307_date_datas+1)& (0+255),b
  4606   0020FE  0E00               	movlw	0
  4607   002100  6F8C               	movwf	(Ds1307HMSRead@ds1307_date_datas+2)& (0+255),b
  4608   002102                     
  4609                           ; BSR set to: 0
  4610                           ;DS1307.c: 63:     real_rtc_data[0] = I2cRead( 0 );
  4611   002102  0E00               	movlw	0
  4612   002104  ECD2  F012         	call	_I2cRead
  4613   002108  6E09               	movwf	_real_rtc_data^0,c
  4614   00210A                     
  4615                           ;DS1307.c: 64:     real_rtc_data[1] = I2cRead( 0 );
  4616   00210A  0E00               	movlw	0
  4617   00210C  ECD2  F012         	call	_I2cRead
  4618   002110  6E0A               	movwf	(_real_rtc_data+1)^0,c
  4619   002112                     
  4620                           ;DS1307.c: 65:     real_rtc_data[2] = I2cRead( 1 );
  4621   002112  0E01               	movlw	1
  4622   002114  ECD2  F012         	call	_I2cRead
  4623   002118  6E0B               	movwf	(_real_rtc_data+2)^0,c
  4624   00211A                     
  4625                           ;DS1307.c: 66:     I2cStop();
  4626   00211A  EC97  F013         	call	_I2cStop	;wreg free
  4627   00211E                     
  4628                           ;DS1307.c: 67:     rtc_clock_disp_type = ( real_rtc_data[ 2 ] & 0x40 ) ? 1 : 0;
  4629   00211E  BC0B               	btfsc	(_real_rtc_data+2)^0,6,c
  4630   002120  EF94  F010         	goto	u4621
  4631   002124  EF97  F010         	goto	u4620
  4632   002128                     u4621:
  4633   002128  0E01               	movlw	1
  4634   00212A  EF98  F010         	goto	u4630
  4635   00212E                     u4620:
  4636   00212E  0E00               	movlw	0
  4637   002130                     u4630:
  4638   002130  6E51               	movwf	_rtc_clock_disp_type^0,c
  4639   002132                     
  4640                           ;DS1307.c: 68:     if( rtc_clock_disp_type == 0 ) real_rtc_data[ 2 ] = real_rtc_data[ 2 
      +                          ] & 0x3f;
  4641   002132  5051               	movf	_rtc_clock_disp_type^0,w,c
  4642   002134  A4D8               	btfss	status,2,c
  4643   002136  EF9F  F010         	goto	u4641
  4644   00213A  EFA1  F010         	goto	u4640
  4645   00213E                     u4641:
  4646   00213E  EFA6  F010         	goto	l6165
  4647   002142                     u4640:
  4648   002142  500B               	movf	(_real_rtc_data+2)^0,w,c
  4649   002144  0B3F               	andlw	63
  4650   002146  6E0B               	movwf	(_real_rtc_data+2)^0,c
  4651   002148  EFB3  F010         	goto	l6169
  4652   00214C                     l6165:
  4653   00214C  BA0B               	btfsc	(_real_rtc_data+2)^0,5,c
  4654   00214E  EFAB  F010         	goto	u4651
  4655   002152  EFAE  F010         	goto	u4650
  4656   002156                     u4651:
  4657   002156  0E01               	movlw	1
  4658   002158  EFAF  F010         	goto	u4660
  4659   00215C                     u4650:
  4660   00215C  0E00               	movlw	0
  4661   00215E                     u4660:
  4662   00215E  6E50               	movwf	_rtc_hour_ampm_flg^0,c
  4663   002160  500B               	movf	(_real_rtc_data+2)^0,w,c
  4664   002162  0B1F               	andlw	31
  4665   002164  6E0B               	movwf	(_real_rtc_data+2)^0,c
  4666   002166                     l6169:
  4667                           
  4668                           ;DS1307.c: 70:     ds1307_date_datas[ 0 ] = real_rtc_data[ 2 ] >> 4; ds1307_date_datas[ 
      +                          1 ] = real_rtc_data[ 2 ] % 16;
  4669   002166  380B               	swapf	(_real_rtc_data+2)^0,w,c
  4670   002168  0B0F               	andlw	15
  4671   00216A  0100               	movlb	0	; () banked
  4672   00216C  6F8A               	movwf	Ds1307HMSRead@ds1307_date_datas& (0+255),b
  4673   00216E                     
  4674                           ; BSR set to: 0
  4675   00216E  500B               	movf	(_real_rtc_data+2)^0,w,c
  4676   002170  0B0F               	andlw	15
  4677   002172  6F8B               	movwf	(Ds1307HMSRead@ds1307_date_datas+1)& (0+255),b
  4678   002174                     
  4679                           ; BSR set to: 0
  4680                           ;DS1307.c: 71:     ds1307_date_datas[ 2 ] = real_rtc_data[ 1 ] >> 4; ds1307_date_datas[ 
      +                          3 ] = real_rtc_data[ 1 ] % 16;
  4681   002174  380A               	swapf	(_real_rtc_data+1)^0,w,c
  4682   002176  0B0F               	andlw	15
  4683   002178  6F8C               	movwf	(Ds1307HMSRead@ds1307_date_datas+2)& (0+255),b
  4684   00217A                     
  4685                           ; BSR set to: 0
  4686   00217A  500A               	movf	(_real_rtc_data+1)^0,w,c
  4687   00217C  0B0F               	andlw	15
  4688   00217E  6F8D               	movwf	(Ds1307HMSRead@ds1307_date_datas+3)& (0+255),b
  4689   002180                     
  4690                           ; BSR set to: 0
  4691                           ;DS1307.c: 72:     ds1307_date_datas[ 4 ] = real_rtc_data[ 0 ] >> 4; ds1307_date_datas[ 
      +                          5 ] = real_rtc_data[ 0 ] % 16;
  4692   002180  3809               	swapf	_real_rtc_data^0,w,c
  4693   002182  0B0F               	andlw	15
  4694   002184  6F8E               	movwf	(Ds1307HMSRead@ds1307_date_datas+4)& (0+255),b
  4695   002186                     
  4696                           ; BSR set to: 0
  4697   002186  5009               	movf	_real_rtc_data^0,w,c
  4698   002188  0B0F               	andlw	15
  4699   00218A  6F8F               	movwf	(Ds1307HMSRead@ds1307_date_datas+5)& (0+255),b
  4700   00218C                     
  4701                           ; BSR set to: 0
  4702                           ;DS1307.c: 73:     return ds1307_date_datas;
  4703   00218C  0E8A               	movlw	low Ds1307HMSRead@ds1307_date_datas
  4704   00218E  6E6B               	movwf	?_Ds1307HMSRead^0,c
  4705   002190  0E00               	movlw	high Ds1307HMSRead@ds1307_date_datas
  4706   002192  6E6C               	movwf	(?_Ds1307HMSRead+1)^0,c
  4707   002194                     
  4708                           ; BSR set to: 0
  4709   002194  0012               	return		;funcret
  4710   002196                     __end_of_Ds1307HMSRead:
  4711                           	callstack 0
  4712                           
  4713 ;; *************** function _I2cRestart *****************
  4714 ;; Defined at:
  4715 ;;		line 32 in file "I2C.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		None
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4729 ;;      Params:         0       0       0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0       0       0
  4732 ;;      Totals:         0       0       0       0       0       0       0
  4733 ;;Total ram usage:        0 bytes
  4734 ;; Hardware stack levels used: 1
  4735 ;; Hardware stack levels required when called: 5
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_Ds1307HMSRead
  4740 ;;		_Ds1307Read
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text19
  4745   0026F8                     __ptext19:
  4746                           	callstack 0
  4747   0026F8                     _I2cRestart:
  4748                           	callstack 24
  4749   0026F8                     
  4750                           ;I2C.c: 33:     SSPCON2bits.RSEN = 1;
  4751   0026F8  82C5               	bsf	197,1,c	;volatile
  4752   0026FA                     l140:
  4753   0026FA  B2C5               	btfsc	197,1,c	;volatile
  4754   0026FC  EF82  F013         	goto	u4111
  4755   002700  EF84  F013         	goto	u4110
  4756   002704                     u4111:
  4757   002704  EF7D  F013         	goto	l140
  4758   002708                     u4110:
  4759   002708  0012               	return		;funcret
  4760   00270A                     __end_of_I2cRestart:
  4761                           	callstack 0
  4762                           
  4763 ;; *************** function _I2cRead *****************
  4764 ;; Defined at:
  4765 ;;		line 51 in file "I2C.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  ack             1    wreg     unsigned char 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  ack             1   15[COMRAM] unsigned char 
  4770 ;;  receive         1   16[COMRAM] unsigned char 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      unsigned char 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, cstack
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4780 ;;      Params:         0       0       0       0       0       0       0
  4781 ;;      Locals:         2       0       0       0       0       0       0
  4782 ;;      Temps:          0       0       0       0       0       0       0
  4783 ;;      Totals:         2       0       0       0       0       0       0
  4784 ;;Total ram usage:        2 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; Hardware stack levels required when called: 7
  4787 ;; This function calls:
  4788 ;;		_I2cWait
  4789 ;; This function is called by:
  4790 ;;		_Ds1307HMSRead
  4791 ;;		_Ds1307Read
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text20
  4796   0025A4                     __ptext20:
  4797                           	callstack 0
  4798   0025A4                     _I2cRead:
  4799                           	callstack 22
  4800                           
  4801                           ;incstack = 0
  4802                           ;I2cRead@ack stored from wreg
  4803   0025A4  6E69               	movwf	I2cRead@ack^0,c
  4804   0025A6                     
  4805                           ;I2C.c: 53:     SSPCON2bits.RCEN = 1;
  4806   0025A6  86C5               	bsf	197,3,c	;volatile
  4807   0025A8                     l159:
  4808   0025A8  A0C7               	btfss	199,0,c	;volatile
  4809   0025AA  EFD9  F012         	goto	u4121
  4810   0025AE  EFDB  F012         	goto	u4120
  4811   0025B2                     u4121:
  4812   0025B2  EFD4  F012         	goto	l159
  4813   0025B6                     u4120:
  4814   0025B6                     
  4815                           ;I2C.c: 55:     receive = SSPBUF;
  4816   0025B6  CFC9 F06A          	movff	4041,I2cRead@receive	;volatile
  4817   0025BA                     
  4818                           ;I2C.c: 56:     I2cWait();
  4819   0025BA  EC2A  F013         	call	_I2cWait	;wreg free
  4820   0025BE                     
  4821                           ;I2C.c: 57:     SSPCON2bits.ACKDT = ack;
  4822   0025BE  B069               	btfsc	I2cRead@ack^0,0,c
  4823   0025C0  D002               	bra	u4135
  4824   0025C2  9AC5               	bcf	197,5,c	;volatile
  4825   0025C4  D001               	bra	u4136
  4826   0025C6                     u4135:
  4827   0025C6  8AC5               	bsf	197,5,c	;volatile
  4828   0025C8                     u4136:
  4829   0025C8                     
  4830                           ;I2C.c: 58:     SSPCON2bits.ACKEN=1;
  4831   0025C8  88C5               	bsf	197,4,c	;volatile
  4832   0025CA                     l162:
  4833   0025CA  B8C5               	btfsc	197,4,c	;volatile
  4834   0025CC  EFEA  F012         	goto	u4141
  4835   0025D0  EFEC  F012         	goto	u4140
  4836   0025D4                     u4141:
  4837   0025D4  EFE5  F012         	goto	l162
  4838   0025D8                     u4140:
  4839   0025D8                     
  4840                           ;I2C.c: 60:     return receive;
  4841   0025D8  506A               	movf	I2cRead@receive^0,w,c
  4842   0025DA  0012               	return		;funcret
  4843   0025DC                     __end_of_I2cRead:
  4844                           	callstack 0
  4845                           
  4846 ;; *************** function _DeviceInit *****************
  4847 ;; Defined at:
  4848 ;;		line 72 in file "Main.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4862 ;;      Params:         0       0       0       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0
  4865 ;;      Totals:         0       0       0       0       0       0       0
  4866 ;;Total ram usage:        0 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; Hardware stack levels required when called: 10
  4869 ;; This function calls:
  4870 ;;		_Ds1307Init
  4871 ;;		_EnableAllInterrupts
  4872 ;;		_InitValue
  4873 ;;		_Open1USART
  4874 ;;		_OpenButtons
  4875 ;;		_OpenCounter
  4876 ;;		_OpenDisplay
  4877 ;;		_OpenTimer0
  4878 ;;		_OscillatorInit
  4879 ;;		_Puts1USART
  4880 ;;		_StartTimer0
  4881 ;;		_WriteTimer0
  4882 ;; This function is called by:
  4883 ;;		_main
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text21
  4888   002328                     __ptext21:
  4889                           	callstack 0
  4890   002328                     _DeviceInit:
  4891                           	callstack 20
  4892   002328                     
  4893                           ;Main.c: 74:     OscillatorInit();
  4894   002328  ECB9  F013         	call	_OscillatorInit	;wreg free
  4895   00232C                     
  4896                           ;Main.c: 76:     ADCON0 = 0x00; ADCON1 = 0x0F;
  4897   00232C  0E00               	movlw	0
  4898   00232E  6EC2               	movwf	194,c	;volatile
  4899   002330  0E0F               	movlw	15
  4900   002332  6EC1               	movwf	193,c	;volatile
  4901                           
  4902                           ;Main.c: 77:     EnableAllInterrupts();
  4903   002334  ECD4  F013         	call	_EnableAllInterrupts	;wreg free
  4904   002338                     
  4905                           ;Main.c: 80:     SYSTEM_STATE_FLG = 201;
  4906   002338  0EC9               	movlw	201
  4907   00233A  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  4908   00233C                     
  4909                           ;Main.c: 82:     OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110010 );
  4910   00233C  0E92               	movlw	146
  4911   00233E  ECEE  F012         	call	_OpenTimer0
  4912   002342                     
  4913                           ;Main.c: 83:     WriteTimer0( 65285 ); StartTimer0();
  4914   002342  0EFF               	movlw	255
  4915   002344  6E6A               	movwf	(WriteTimer0@timer0+1)^0,c
  4916   002346  0E05               	movlw	5
  4917   002348  6E69               	movwf	WriteTimer0@timer0^0,c
  4918   00234A  EC85  F013         	call	_WriteTimer0	;wreg free
  4919   00234E  ECD2  F013         	call	_StartTimer0	;wreg free
  4920   002352                     
  4921                           ;Main.c: 85:     OpenCounter();
  4922   002352  ECF3  F011         	call	_OpenCounter	;wreg free
  4923   002356                     
  4924                           ;Main.c: 86:     OpenDisplay();
  4925   002356  EC5D  F011         	call	_OpenDisplay	;wreg free
  4926   00235A                     
  4927                           ;Main.c: 87:     OpenButtons();
  4928   00235A  EC23  F011         	call	_OpenButtons	;wreg free
  4929   00235E                     
  4930                           ;Main.c: 88:     Ds1307Init();
  4931   00235E  ECC0  F013         	call	_Ds1307Init	;wreg free
  4932   002362                     
  4933                           ;Main.c: 93:     InitValue();
  4934   002362  EC5B  F012         	call	_InitValue	;wreg free
  4935   002366                     
  4936                           ;Main.c: 95:     Open1USART( 0b01111111 &
  4937   002366  0E00               	movlw	0
  4938   002368  6E6A               	movwf	(Open1USART@spbrg+1)^0,c
  4939   00236A  0E67               	movlw	103
  4940   00236C  6E69               	movwf	Open1USART@spbrg^0,c
  4941   00236E  0E3C               	movlw	60
  4942   002370  EC0D  F010         	call	_Open1USART
  4943   002374                     
  4944                           ;Main.c: 101:     Puts1USART( "This is Ethernet protocol test firmware!\r\n" );
  4945   002374  0E01               	movlw	low STR_1
  4946   002376  6E6A               	movwf	Puts1USART@data^0,c
  4947   002378  0E06               	movlw	high STR_1
  4948   00237A  6E6B               	movwf	(Puts1USART@data+1)^0,c
  4949   00237C  EC17  F012         	call	_Puts1USART	;wreg free
  4950   002380                     
  4951                           ;Main.c: 103:     set_mode_release_cnt = 0;
  4952   002380  0E00               	movlw	0
  4953   002382  6E30               	movwf	(_set_mode_release_cnt+1)^0,c
  4954   002384  0E00               	movlw	0
  4955   002386  6E2F               	movwf	_set_mode_release_cnt^0,c
  4956   002388  0012               	return		;funcret
  4957   00238A                     __end_of_DeviceInit:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _WriteTimer0 *****************
  4961 ;; Defined at:
  4962 ;;		line 37 in file "Timers.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  timer0          2   15[COMRAM] unsigned int 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  timer           2   17[COMRAM] struct Timers
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		None
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4976 ;;      Params:         2       0       0       0       0       0       0
  4977 ;;      Locals:         2       0       0       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0       0       0
  4979 ;;      Totals:         4       0       0       0       0       0       0
  4980 ;;Total ram usage:        4 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; Hardware stack levels required when called: 5
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_DeviceInit
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text22
  4991   00270A                     __ptext22:
  4992                           	callstack 0
  4993   00270A                     _WriteTimer0:
  4994                           	callstack 24
  4995   00270A                     
  4996                           ;Timers.c: 37: void WriteTimer0(unsigned int timer0);Timers.c: 38: {;Timers.c: 39:     u
      +                          nion Timers timer;;Timers.c: 41:     timer.lt = timer0;
  4997   00270A  C069  F06B         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4998   00270E  C06A  F06C         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4999                           
  5000                           ;Timers.c: 43:     TMR0H = timer.bt[1];
  5001   002712  C06C  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5002                           
  5003                           ;Timers.c: 44:     TMR0L = timer.bt[0];
  5004   002716  C06B  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5005   00271A  0012               	return		;funcret
  5006   00271C                     __end_of_WriteTimer0:
  5007                           	callstack 0
  5008                           
  5009 ;; *************** function _StartTimer0 *****************
  5010 ;; Defined at:
  5011 ;;		line 47 in file "Timers.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;		None
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		None
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5025 ;;      Params:         0       0       0       0       0       0       0
  5026 ;;      Locals:         0       0       0       0       0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0       0
  5028 ;;      Totals:         0       0       0       0       0       0       0
  5029 ;;Total ram usage:        0 bytes
  5030 ;; Hardware stack levels used: 1
  5031 ;; Hardware stack levels required when called: 5
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_DeviceInit
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text23
  5040   0027A4                     __ptext23:
  5041                           	callstack 0
  5042   0027A4                     _StartTimer0:
  5043                           	callstack 24
  5044   0027A4                     
  5045                           ;Timers.c: 48:     T0CONbits.TMR0ON = 1;
  5046   0027A4  8ED5               	bsf	213,7,c	;volatile
  5047   0027A6  0012               	return		;funcret
  5048   0027A8                     __end_of_StartTimer0:
  5049                           	callstack 0
  5050                           
  5051 ;; *************** function _Puts1USART *****************
  5052 ;; Defined at:
  5053 ;;		line 105 in file "Uart.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  data            2   16[COMRAM] PTR unsigned char 
  5056 ;;		 -> STR_1(43), 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;		None
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5068 ;;      Params:         2       0       0       0       0       0       0
  5069 ;;      Locals:         0       0       0       0       0       0       0
  5070 ;;      Temps:          0       0       0       0       0       0       0
  5071 ;;      Totals:         2       0       0       0       0       0       0
  5072 ;;Total ram usage:        2 bytes
  5073 ;; Hardware stack levels used: 1
  5074 ;; Hardware stack levels required when called: 6
  5075 ;; This function calls:
  5076 ;;		_Busy1USART
  5077 ;;		_Write1USART
  5078 ;; This function is called by:
  5079 ;;		_DeviceInit
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text24
  5084   00242E                     __ptext24:
  5085                           	callstack 0
  5086   00242E                     _Puts1USART:
  5087                           	callstack 23
  5088   00242E                     l1328:
  5089   00242E                     l4441:
  5090   00242E  EC66  F013         	call	_Busy1USART	;wreg free
  5091   002432  0900               	iorlw	0
  5092   002434  A4D8               	btfss	status,2,c
  5093   002436  EF1F  F012         	goto	u2801
  5094   00243A  EF21  F012         	goto	u2800
  5095   00243E                     u2801:
  5096   00243E  EF17  F012         	goto	l4441
  5097   002442                     u2800:
  5098   002442                     
  5099                           ;Uart.c: 109:             Write1USART(*data);
  5100   002442  C06A  FFF6         	movff	Puts1USART@data,tblptrl
  5101   002446  C06B  FFF7         	movff	Puts1USART@data+1,tblptrh
  5102   00244A                     	if	0	;tblptru may be non-zero
  5103   00244A                     	endif
  5104   00244A                     	if	0	;tblptru may be non-zero
  5105   00244A                     	endif
  5106   00244A  0008               	tblrd		*
  5107   00244C  50F5               	movf	tablat,w,c
  5108   00244E  EC03  F013         	call	_Write1USART
  5109   002452                     
  5110                           ;Uart.c: 110:     } while( *data++ );
  5111   002452  C06A  FFF6         	movff	Puts1USART@data,tblptrl
  5112   002456  C06B  FFF7         	movff	Puts1USART@data+1,tblptrh
  5113   00245A  4A6A               	infsnz	Puts1USART@data^0,f,c
  5114   00245C  2A6B               	incf	(Puts1USART@data+1)^0,f,c
  5115   00245E                     	if	0	;tblptru may be non-zero
  5116   00245E                     	endif
  5117   00245E                     	if	0	;tblptru may be non-zero
  5118   00245E                     	endif
  5119   00245E  0008               	tblrd		*
  5120   002460  50F5               	movf	tablat,w,c
  5121   002462  0900               	iorlw	0
  5122   002464  A4D8               	btfss	status,2,c
  5123   002466  EF37  F012         	goto	u2811
  5124   00246A  EF39  F012         	goto	u2810
  5125   00246E                     u2811:
  5126   00246E  EF17  F012         	goto	l1328
  5127   002472                     u2810:
  5128   002472  0012               	return		;funcret
  5129   002474                     __end_of_Puts1USART:
  5130                           	callstack 0
  5131                           
  5132 ;; *************** function _Write1USART *****************
  5133 ;; Defined at:
  5134 ;;		line 79 in file "Uart.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;  data            1    wreg     unsigned char 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  data            1   15[COMRAM] unsigned char 
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  1    wreg      void 
  5141 ;; Registers used:
  5142 ;;		wreg
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5148 ;;      Params:         0       0       0       0       0       0       0
  5149 ;;      Locals:         1       0       0       0       0       0       0
  5150 ;;      Temps:          0       0       0       0       0       0       0
  5151 ;;      Totals:         1       0       0       0       0       0       0
  5152 ;;Total ram usage:        1 bytes
  5153 ;; Hardware stack levels used: 1
  5154 ;; Hardware stack levels required when called: 5
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_Puts1USART
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text25
  5163   002606                     __ptext25:
  5164                           	callstack 0
  5165   002606                     _Write1USART:
  5166                           	callstack 23
  5167                           
  5168                           ;incstack = 0
  5169                           ;Write1USART@data stored from wreg
  5170   002606  6E69               	movwf	Write1USART@data^0,c
  5171   002608                     
  5172                           ;Uart.c: 80:     if(TXSTA1bits.TX9)
  5173   002608  ACAC               	btfss	172,6,c	;volatile
  5174   00260A  EF09  F013         	goto	u321
  5175   00260E  EF0B  F013         	goto	u320
  5176   002612                     u321:
  5177   002612  EF14  F013         	goto	l2325
  5178   002616                     u320:
  5179   002616                     
  5180                           ;Uart.c: 81:     {;Uart.c: 82:         TXSTA1bits.TX9D = 0;
  5181   002616  90AC               	bcf	172,0,c	;volatile
  5182                           
  5183                           ;Uart.c: 83:         if(USART1_Status.TX_NINE)
  5184   002618  A231               	btfss	_USART1_Status^0,1,c	;volatile
  5185   00261A  EF11  F013         	goto	u331
  5186   00261E  EF13  F013         	goto	u330
  5187   002622                     u331:
  5188   002622  EF14  F013         	goto	l2325
  5189   002626                     u330:
  5190   002626                     
  5191                           ;Uart.c: 84:             TXSTA1bits.TX9D = 1;
  5192   002626  80AC               	bsf	172,0,c	;volatile
  5193   002628                     l2325:
  5194                           
  5195                           ;Uart.c: 87:     TXREG1 = data;
  5196   002628  C069  FFAD         	movff	Write1USART@data,4013	;volatile
  5197   00262C  0012               	return		;funcret
  5198   00262E                     __end_of_Write1USART:
  5199                           	callstack 0
  5200                           
  5201 ;; *************** function _Busy1USART *****************
  5202 ;; Defined at:
  5203 ;;		line 49 in file "Uart.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      unsigned char 
  5210 ;; Registers used:
  5211 ;;		wreg
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5217 ;;      Params:         0       0       0       0       0       0       0
  5218 ;;      Locals:         0       0       0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0
  5220 ;;      Totals:         0       0       0       0       0       0       0
  5221 ;;Total ram usage:        0 bytes
  5222 ;; Hardware stack levels used: 1
  5223 ;; Hardware stack levels required when called: 5
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_Puts1USART
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text26
  5232   0026CC                     __ptext26:
  5233                           	callstack 0
  5234   0026CC                     _Busy1USART:
  5235                           	callstack 23
  5236   0026CC                     
  5237                           ;Uart.c: 51:     if(!TXSTA1bits.TRMT)
  5238   0026CC  B2AC               	btfsc	172,1,c	;volatile
  5239   0026CE  EF6B  F013         	goto	u311
  5240   0026D2  EF6D  F013         	goto	u310
  5241   0026D6                     u311:
  5242   0026D6  EF70  F013         	goto	l2315
  5243   0026DA                     u310:
  5244   0026DA                     
  5245                           ;Uart.c: 52:         return 1;
  5246   0026DA  0E01               	movlw	1
  5247   0026DC  EF71  F013         	goto	l1304
  5248   0026E0                     l2315:
  5249                           
  5250                           ;Uart.c: 53:     return 0;
  5251   0026E0  0E00               	movlw	0
  5252   0026E2                     l1304:
  5253   0026E2  0012               	return		;funcret
  5254   0026E4                     __end_of_Busy1USART:
  5255                           	callstack 0
  5256                           
  5257 ;; *************** function _OscillatorInit *****************
  5258 ;; Defined at:
  5259 ;;		line 11 in file "Config.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		None
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5273 ;;      Params:         0       0       0       0       0       0       0
  5274 ;;      Locals:         0       0       0       0       0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0
  5276 ;;      Totals:         0       0       0       0       0       0       0
  5277 ;;Total ram usage:        0 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; Hardware stack levels required when called: 5
  5280 ;; This function calls:
  5281 ;;		Nothing
  5282 ;; This function is called by:
  5283 ;;		_DeviceInit
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text27
  5288   002772                     __ptext27:
  5289                           	callstack 0
  5290   002772                     _OscillatorInit:
  5291                           	callstack 24
  5292   002772                     
  5293                           ;Config.c: 12:     OSCCONbits.SCS0 = 1;
  5294   002772  80D3               	bsf	211,0,c	;volatile
  5295                           
  5296                           ;Config.c: 13:     OSCCONbits.SCS1 = 1;
  5297   002774  82D3               	bsf	211,1,c	;volatile
  5298                           
  5299                           ;Config.c: 14:     OSCCONbits.IRCF0 = 1;
  5300   002776  88D3               	bsf	211,4,c	;volatile
  5301                           
  5302                           ;Config.c: 15:     OSCCONbits.IRCF1 = 1;
  5303   002778  8AD3               	bsf	211,5,c	;volatile
  5304                           
  5305                           ;Config.c: 16:     OSCCONbits.IRCF2 = 1;
  5306   00277A  8CD3               	bsf	211,6,c	;volatile
  5307                           
  5308                           ;Config.c: 17:     OSCTUNEbits.PLLEN = 1;
  5309   00277C  8C9B               	bsf	155,6,c	;volatile
  5310   00277E  0012               	return		;funcret
  5311   002780                     __end_of_OscillatorInit:
  5312                           	callstack 0
  5313                           
  5314 ;; *************** function _OpenTimer0 *****************
  5315 ;; Defined at:
  5316 ;;		line 13 in file "Timers.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  config          1    wreg     unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  config          1   15[COMRAM] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5330 ;;      Params:         0       0       0       0       0       0       0
  5331 ;;      Locals:         1       0       0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0
  5333 ;;      Totals:         1       0       0       0       0       0       0
  5334 ;;Total ram usage:        1 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 5
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_DeviceInit
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text28
  5345   0025DC                     __ptext28:
  5346                           	callstack 0
  5347   0025DC                     _OpenTimer0:
  5348                           	callstack 24
  5349                           
  5350                           ;incstack = 0
  5351                           ;OpenTimer0@config stored from wreg
  5352   0025DC  6E69               	movwf	OpenTimer0@config^0,c
  5353   0025DE                     
  5354                           ;Timers.c: 13: void OpenTimer0(unsigned char config);Timers.c: 14: {;Timers.c: 15:     T
      +                          0CON = (0x7f & config);
  5355   0025DE  5069               	movf	OpenTimer0@config^0,w,c
  5356   0025E0  0B7F               	andlw	127
  5357   0025E2  6ED5               	movwf	213,c	;volatile
  5358   0025E4                     
  5359                           ;Timers.c: 16:     TMR0H = 0;
  5360   0025E4  0E00               	movlw	0
  5361   0025E6  6ED7               	movwf	215,c	;volatile
  5362   0025E8                     
  5363                           ;Timers.c: 17:     TMR0L = 0;
  5364   0025E8  0E00               	movlw	0
  5365   0025EA  6ED6               	movwf	214,c	;volatile
  5366   0025EC                     
  5367                           ;Timers.c: 18:     INTCONbits.TMR0IF = 0;
  5368   0025EC  94F2               	bcf	242,2,c	;volatile
  5369   0025EE                     
  5370                           ;Timers.c: 20:     if(config&0x80)
  5371   0025EE  AE69               	btfss	OpenTimer0@config^0,7,c
  5372   0025F0  EFFC  F012         	goto	u381
  5373   0025F4  EFFE  F012         	goto	u380
  5374   0025F8                     u381:
  5375   0025F8  EF01  F013         	goto	l459
  5376   0025FC                     u380:
  5377   0025FC                     
  5378                           ;Timers.c: 21:         INTCONbits.TMR0IE = 1;
  5379   0025FC  8AF2               	bsf	242,5,c	;volatile
  5380   0025FE  EF02  F013         	goto	l461
  5381   002602                     l459:
  5382                           
  5383                           ;Timers.c: 23:         INTCONbits.TMR0IE = 0;
  5384   002602  9AF2               	bcf	242,5,c	;volatile
  5385   002604                     l461:
  5386   002604  0012               	return		;funcret
  5387   002606                     __end_of_OpenTimer0:
  5388                           	callstack 0
  5389                           
  5390 ;; *************** function _OpenDisplay *****************
  5391 ;; Defined at:
  5392 ;;		line 9 in file "Display.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;		None
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  i               1   15[COMRAM] unsigned char 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  1    wreg      void 
  5399 ;; Registers used:
  5400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5406 ;;      Params:         0       0       0       0       0       0       0
  5407 ;;      Locals:         1       0       0       0       0       0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0
  5409 ;;      Totals:         1       0       0       0       0       0       0
  5410 ;;Total ram usage:        1 bytes
  5411 ;; Hardware stack levels used: 1
  5412 ;; Hardware stack levels required when called: 6
  5413 ;; This function calls:
  5414 ;;		_M74HC595Init
  5415 ;; This function is called by:
  5416 ;;		_DeviceInit
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text29
  5421   0022BA                     __ptext29:
  5422                           	callstack 0
  5423   0022BA                     _OpenDisplay:
  5424                           	callstack 23
  5425   0022BA                     
  5426                           ;Display.c: 12:     TRISCbits.TRISC2 = 0;
  5427   0022BA  9494               	bcf	148,2,c	;volatile
  5428                           
  5429                           ;Display.c: 13:     TRISCbits.TRISC1 = 0;
  5430   0022BC  9294               	bcf	148,1,c	;volatile
  5431                           
  5432                           ;Display.c: 14:     TRISCbits.TRISC0 = 0;
  5433   0022BE  9094               	bcf	148,0,c	;volatile
  5434                           
  5435                           ;Display.c: 15:     TRISCbits.TRISC5 = 0;
  5436   0022C0  9A94               	bcf	148,5,c	;volatile
  5437                           
  5438                           ;Display.c: 16:     TRISBbits.TRISB1 = 0;
  5439   0022C2  9293               	bcf	147,1,c	;volatile
  5440                           
  5441                           ;Display.c: 17:     TRISBbits.TRISB5 = 0;
  5442   0022C4  9A93               	bcf	147,5,c	;volatile
  5443                           
  5444                           ;Display.c: 18:     TRISDbits.TRISD7 = 0;
  5445   0022C6  9E95               	bcf	149,7,c	;volatile
  5446                           
  5447                           ;Display.c: 19:     TRISBbits.TRISB0 = 0;
  5448   0022C8  9093               	bcf	147,0,c	;volatile
  5449                           
  5450                           ;Display.c: 21:     LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATCbits.LATC5 = 
      +                          LATBbits.LATB1 = LATBbits.LATB5 = LATDbits.LATD7 = LATBbits.LATB0 = 1;
  5451   0022CA  808A               	bsf	138,0,c	;volatile
  5452   0022CC  8E8C               	bsf	140,7,c	;volatile
  5453   0022CE  8A8A               	bsf	138,5,c	;volatile
  5454   0022D0  828A               	bsf	138,1,c	;volatile
  5455   0022D2  8A8B               	bsf	139,5,c	;volatile
  5456   0022D4  808B               	bsf	139,0,c	;volatile
  5457   0022D6  828B               	bsf	139,1,c	;volatile
  5458   0022D8  848B               	bsf	139,2,c	;volatile
  5459   0022DA                     
  5460                           ;Display.c: 23:     M74HC595Init();
  5461   0022DA  EC8E  F013         	call	_M74HC595Init	;wreg free
  5462   0022DE                     
  5463                           ;Display.c: 26:     for( unsigned char i = 0; i < 7 + 1; i++ ){
  5464   0022DE  0E00               	movlw	0
  5465   0022E0  6E69               	movwf	OpenDisplay@i^0,c
  5466   0022E2                     l2385:
  5467                           
  5468                           ;Display.c: 27:         blink_pos[ i ] = 0;
  5469   0022E2  0E01               	movlw	low _blink_pos
  5470   0022E4  2469               	addwf	OpenDisplay@i^0,w,c
  5471   0022E6  6ED9               	movwf	fsr2l,c
  5472   0022E8  6ADA               	clrf	fsr2h,c
  5473   0022EA  0E00               	movlw	high _blink_pos
  5474   0022EC  22DA               	addwfc	fsr2h,f,c
  5475   0022EE  6ADF               	clrf	indf2,c
  5476                           
  5477                           ;Display.c: 28:         display_datas[ i ] = 0xff;
  5478   0022F0  0E52               	movlw	low _display_datas
  5479   0022F2  2469               	addwf	OpenDisplay@i^0,w,c
  5480   0022F4  6ED9               	movwf	fsr2l,c
  5481   0022F6  6ADA               	clrf	fsr2h,c
  5482   0022F8  0E00               	movlw	high _display_datas
  5483   0022FA  22DA               	addwfc	fsr2h,f,c
  5484   0022FC  0EFF               	movlw	255
  5485   0022FE  6EDF               	movwf	indf2,c
  5486   002300                     
  5487                           ;Display.c: 29:     }
  5488   002300  2A69               	incf	OpenDisplay@i^0,f,c
  5489   002302  0E07               	movlw	7
  5490   002304  6469               	cpfsgt	OpenDisplay@i^0,c
  5491   002306  EF87  F011         	goto	u391
  5492   00230A  EF89  F011         	goto	u390
  5493   00230E                     u391:
  5494   00230E  EF71  F011         	goto	l2385
  5495   002312                     u390:
  5496   002312                     
  5497                           ;Display.c: 31:     display_cnt = 0; blink_cnt = 0; blink_enable_flg = 0;
  5498   002312  0E00               	movlw	0
  5499   002314  6E37               	movwf	_display_cnt^0,c
  5500   002316  0E00               	movlw	0
  5501   002318  6E36               	movwf	_blink_cnt^0,c
  5502   00231A  0E00               	movlw	0
  5503   00231C  6E38               	movwf	_blink_enable_flg^0,c
  5504                           
  5505                           ;Display.c: 32:     BLINK_TIME = 300;
  5506   00231E  0E01               	movlw	1
  5507   002320  6E2C               	movwf	(_BLINK_TIME+1)^0,c
  5508   002322  0E2C               	movlw	44
  5509   002324  6E2B               	movwf	_BLINK_TIME^0,c
  5510   002326  0012               	return		;funcret
  5511   002328                     __end_of_OpenDisplay:
  5512                           	callstack 0
  5513                           
  5514 ;; *************** function _M74HC595Init *****************
  5515 ;; Defined at:
  5516 ;;		line 11 in file "M74HC595.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;		None
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;		None
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		None
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5530 ;;      Params:         0       0       0       0       0       0       0
  5531 ;;      Locals:         0       0       0       0       0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0
  5533 ;;      Totals:         0       0       0       0       0       0       0
  5534 ;;Total ram usage:        0 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; Hardware stack levels required when called: 5
  5537 ;; This function calls:
  5538 ;;		Nothing
  5539 ;; This function is called by:
  5540 ;;		_OpenDisplay
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text30
  5545   00271C                     __ptext30:
  5546                           	callstack 0
  5547   00271C                     _M74HC595Init:
  5548                           	callstack 23
  5549   00271C                     
  5550                           ;M74HC595.c: 14:     TRISAbits.TRISA0 = 0;
  5551   00271C  9092               	bcf	146,0,c	;volatile
  5552                           
  5553                           ;M74HC595.c: 15:     TRISAbits.TRISA1 = 0;
  5554   00271E  9292               	bcf	146,1,c	;volatile
  5555                           
  5556                           ;M74HC595.c: 16:     TRISAbits.TRISA3 = 0;
  5557   002720  9692               	bcf	146,3,c	;volatile
  5558                           
  5559                           ;M74HC595.c: 17:     TRISAbits.TRISA5 = 0;
  5560   002722  9A92               	bcf	146,5,c	;volatile
  5561                           
  5562                           ;M74HC595.c: 19:     PORTAbits.RA0 = 0;
  5563   002724  9080               	bcf	128,0,c	;volatile
  5564                           
  5565                           ;M74HC595.c: 20:     PORTAbits.RA1 = 0;
  5566   002726  9280               	bcf	128,1,c	;volatile
  5567                           
  5568                           ;M74HC595.c: 21:     PORTAbits.RA3 = 0;
  5569   002728  9680               	bcf	128,3,c	;volatile
  5570                           
  5571                           ;M74HC595.c: 22:     PORTAbits.RA5 = 0;
  5572   00272A  9A80               	bcf	128,5,c	;volatile
  5573   00272C  0012               	return		;funcret
  5574   00272E                     __end_of_M74HC595Init:
  5575                           	callstack 0
  5576                           
  5577 ;; *************** function _OpenCounter *****************
  5578 ;; Defined at:
  5579 ;;		line 6 in file "Counter.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;		None
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5593 ;;      Params:         0       0       0       0       0       0       0
  5594 ;;      Locals:         0       0       0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0       0       0
  5596 ;;      Totals:         0       0       0       0       0       0       0
  5597 ;;Total ram usage:        0 bytes
  5598 ;; Hardware stack levels used: 1
  5599 ;; Hardware stack levels required when called: 5
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_DeviceInit
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text31
  5608   0023E6                     __ptext31:
  5609                           	callstack 0
  5610   0023E6                     _OpenCounter:
  5611                           	callstack 24
  5612   0023E6                     
  5613                           ;Counter.c: 8:     counter_down_hour = 0;
  5614   0023E6  0E00               	movlw	0
  5615   0023E8  6E47               	movwf	_counter_down_hour^0,c
  5616                           
  5617                           ;Counter.c: 9:     counter_down_minute = 0;
  5618   0023EA  0E00               	movlw	0
  5619   0023EC  6E46               	movwf	_counter_down_minute^0,c
  5620                           
  5621                           ;Counter.c: 10:     counter_down_second = 0;
  5622   0023EE  0E00               	movlw	0
  5623   0023F0  6E45               	movwf	_counter_down_second^0,c
  5624                           
  5625                           ;Counter.c: 12:     counter_down_set_hour = 0;
  5626   0023F2  0E00               	movlw	0
  5627   0023F4  6E44               	movwf	_counter_down_set_hour^0,c
  5628                           
  5629                           ;Counter.c: 13:     counter_down_set_minute = 0;
  5630   0023F6  0E00               	movlw	0
  5631   0023F8  6E43               	movwf	_counter_down_set_minute^0,c
  5632                           
  5633                           ;Counter.c: 14:     counter_down_set_second = 0;
  5634   0023FA  0E00               	movlw	0
  5635   0023FC  6E42               	movwf	_counter_down_set_second^0,c
  5636                           
  5637                           ;Counter.c: 16:     counter_up_hour = 0;
  5638   0023FE  0E00               	movlw	0
  5639   002400  6E41               	movwf	_counter_up_hour^0,c
  5640                           
  5641                           ;Counter.c: 17:     counter_up_minute = 0;
  5642   002402  0E00               	movlw	0
  5643   002404  6E40               	movwf	_counter_up_minute^0,c
  5644                           
  5645                           ;Counter.c: 18:     counter_up_second = 0;
  5646   002406  0E00               	movlw	0
  5647   002408  6E3F               	movwf	_counter_up_second^0,c
  5648                           
  5649                           ;Counter.c: 20:     counter_enable_flg = 0;
  5650   00240A  0E00               	movlw	0
  5651   00240C  6E3E               	movwf	_counter_enable_flg^0,c
  5652                           
  5653                           ;Counter.c: 21:     counter_skip_flg = 0;
  5654   00240E  0E00               	movlw	0
  5655   002410  6E3C               	movwf	_counter_skip_flg^0,c
  5656                           
  5657                           ;Counter.c: 22:     counter_direction_flg = 1;
  5658   002412  0E01               	movlw	1
  5659   002414  6E3D               	movwf	_counter_direction_flg^0,c
  5660                           
  5661                           ;Counter.c: 23:     counter_seting_flg = 0;
  5662   002416  0E00               	movlw	0
  5663   002418  6E3B               	movwf	_counter_seting_flg^0,c
  5664                           
  5665                           ;Counter.c: 24:     counter_down_comp_flg = 0;
  5666   00241A  0E00               	movlw	0
  5667   00241C  6E3A               	movwf	_counter_down_comp_flg^0,c
  5668                           
  5669                           ;Counter.c: 26:     counter_down_comp_cnt = 0;
  5670   00241E  0E00               	movlw	0
  5671   002420  6E39               	movwf	_counter_down_comp_cnt^0,c
  5672   002422                     
  5673                           ;Counter.c: 28:     TRISBbits.TRISB2 = 1;
  5674   002422  8493               	bsf	147,2,c	;volatile
  5675   002424                     
  5676                           ;Counter.c: 29:     INTCON3bits.INT2IP = 0;
  5677   002424  9EF0               	bcf	240,7,c	;volatile
  5678   002426                     
  5679                           ;Counter.c: 30:     INTCON3bits.INT2IF = 0;
  5680   002426  92F0               	bcf	240,1,c	;volatile
  5681   002428                     
  5682                           ;Counter.c: 31:     INTCON3bits.INT2IE = 1;
  5683   002428  88F0               	bsf	240,4,c	;volatile
  5684   00242A                     
  5685                           ;Counter.c: 32:     INTCON2bits.INTEDG2 = 1;
  5686   00242A  88F1               	bsf	241,4,c	;volatile
  5687   00242C  0012               	return		;funcret
  5688   00242E                     __end_of_OpenCounter:
  5689                           	callstack 0
  5690                           
  5691 ;; *************** function _OpenButtons *****************
  5692 ;; Defined at:
  5693 ;;		line 10 in file "Buttons.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;		None
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;		None
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      void 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5707 ;;      Params:         0       0       0       0       0       0       0
  5708 ;;      Locals:         0       0       0       0       0       0       0
  5709 ;;      Temps:          0       0       0       0       0       0       0
  5710 ;;      Totals:         0       0       0       0       0       0       0
  5711 ;;Total ram usage:        0 bytes
  5712 ;; Hardware stack levels used: 1
  5713 ;; Hardware stack levels required when called: 5
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_DeviceInit
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text32
  5722   002246                     __ptext32:
  5723                           	callstack 0
  5724   002246                     _OpenButtons:
  5725                           	callstack 24
  5726   002246                     
  5727                           ;Buttons.c: 12:     TRISAbits.TRISA7 = 1;
  5728   002246  8E92               	bsf	146,7,c	;volatile
  5729                           
  5730                           ;Buttons.c: 13:     TRISAbits.TRISA4 = 1;
  5731   002248  8892               	bsf	146,4,c	;volatile
  5732                           
  5733                           ;Buttons.c: 14:     TRISAbits.TRISA6 = 1;
  5734   00224A  8C92               	bsf	146,6,c	;volatile
  5735                           
  5736                           ;Buttons.c: 15:     TRISBbits.TRISB4 = 1;
  5737   00224C  8893               	bsf	147,4,c	;volatile
  5738                           
  5739                           ;Buttons.c: 16:     TRISDbits.TRISD6 = 1;
  5740   00224E  8C95               	bsf	149,6,c	;volatile
  5741   002250                     
  5742                           ;Buttons.c: 18:     BTN_CLICK_STATE = 0; BTN_CLICK_EVENT = 0;
  5743   002250  0E00               	movlw	0
  5744   002252  6E35               	movwf	_BTN_CLICK_STATE^0,c
  5745   002254  0E00               	movlw	0
  5746   002256  6E34               	movwf	_BTN_CLICK_EVENT^0,c
  5747                           
  5748                           ;Buttons.c: 20:     hour_btn_pressed_cnt = 0; up_btn_pressed_cnt = 0; down_btn_pressed_c
      +                          nt = 0; sel_btn_pressed_cnt = 0; reset_btn_pressed_cnt = 0;
  5749   002258  0E00               	movlw	0
  5750   00225A  6E2A               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  5751   00225C  0E00               	movlw	0
  5752   00225E  6E29               	movwf	_hour_btn_pressed_cnt^0,c
  5753   002260  0E00               	movlw	0
  5754   002262  6E28               	movwf	(_up_btn_pressed_cnt+1)^0,c
  5755   002264  0E00               	movlw	0
  5756   002266  6E27               	movwf	_up_btn_pressed_cnt^0,c
  5757   002268  0E00               	movlw	0
  5758   00226A  6E26               	movwf	(_down_btn_pressed_cnt+1)^0,c
  5759   00226C  0E00               	movlw	0
  5760   00226E  6E25               	movwf	_down_btn_pressed_cnt^0,c
  5761   002270  0E00               	movlw	0
  5762   002272  6E24               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  5763   002274  0E00               	movlw	0
  5764   002276  6E23               	movwf	_sel_btn_pressed_cnt^0,c
  5765   002278  0E00               	movlw	0
  5766   00227A  6E22               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  5767   00227C  0E00               	movlw	0
  5768   00227E  6E21               	movwf	_reset_btn_pressed_cnt^0,c
  5769                           
  5770                           ;Buttons.c: 21:     hour_btn_released_cnt = 0; up_btn_released_cnt = 0; down_btn_release
      +                          d_cnt = 0; sel_btn_released_cnt = 0; reset_btn_released_cnt = 0;
  5771   002280  0E00               	movlw	0
  5772   002282  6E20               	movwf	(_hour_btn_released_cnt+1)^0,c
  5773   002284  0E00               	movlw	0
  5774   002286  6E1F               	movwf	_hour_btn_released_cnt^0,c
  5775   002288  0E00               	movlw	0
  5776   00228A  6E1E               	movwf	(_up_btn_released_cnt+1)^0,c
  5777   00228C  0E00               	movlw	0
  5778   00228E  6E1D               	movwf	_up_btn_released_cnt^0,c
  5779   002290  0E00               	movlw	0
  5780   002292  6E1C               	movwf	(_down_btn_released_cnt+1)^0,c
  5781   002294  0E00               	movlw	0
  5782   002296  6E1B               	movwf	_down_btn_released_cnt^0,c
  5783   002298  0E00               	movlw	0
  5784   00229A  6E1A               	movwf	(_sel_btn_released_cnt+1)^0,c
  5785   00229C  0E00               	movlw	0
  5786   00229E  6E19               	movwf	_sel_btn_released_cnt^0,c
  5787   0022A0  0E00               	movlw	0
  5788   0022A2  6E18               	movwf	(_reset_btn_released_cnt+1)^0,c
  5789   0022A4  0E00               	movlw	0
  5790   0022A6  6E17               	movwf	_reset_btn_released_cnt^0,c
  5791                           
  5792                           ;Buttons.c: 22:     continue_pressed_cnt = 0;
  5793   0022A8  0E00               	movlw	0
  5794   0022AA  6E16               	movwf	(_continue_pressed_cnt+1)^0,c
  5795   0022AC  0E00               	movlw	0
  5796   0022AE  6E15               	movwf	_continue_pressed_cnt^0,c
  5797                           
  5798                           ;Buttons.c: 24:     btn_press_verify_flg = 0; btn_long_press_verify_flg = 0;
  5799   0022B0  0E00               	movlw	0
  5800   0022B2  6E33               	movwf	_btn_press_verify_flg^0,c
  5801   0022B4  0E00               	movlw	0
  5802   0022B6  6E32               	movwf	_btn_long_press_verify_flg^0,c
  5803   0022B8  0012               	return		;funcret
  5804   0022BA                     __end_of_OpenButtons:
  5805                           	callstack 0
  5806                           
  5807 ;; *************** function _Open1USART *****************
  5808 ;; Defined at:
  5809 ;;		line 4 in file "Uart.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  config          1    wreg     unsigned char 
  5812 ;;  spbrg           2   15[COMRAM] unsigned int 
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;  config          1   17[COMRAM] unsigned char 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  1    wreg      void 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5824 ;;      Params:         2       0       0       0       0       0       0
  5825 ;;      Locals:         1       0       0       0       0       0       0
  5826 ;;      Temps:          0       0       0       0       0       0       0
  5827 ;;      Totals:         3       0       0       0       0       0       0
  5828 ;;Total ram usage:        3 bytes
  5829 ;; Hardware stack levels used: 1
  5830 ;; Hardware stack levels required when called: 5
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_DeviceInit
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text33
  5839   00201A                     __ptext33:
  5840                           	callstack 0
  5841   00201A                     _Open1USART:
  5842                           	callstack 24
  5843                           
  5844                           ;incstack = 0
  5845                           ;Open1USART@config stored from wreg
  5846   00201A  6E6B               	movwf	Open1USART@config^0,c
  5847   00201C                     
  5848                           ;Uart.c: 5:     TXSTA1 = 0;
  5849   00201C  0E00               	movlw	0
  5850   00201E  6EAC               	movwf	172,c	;volatile
  5851                           
  5852                           ;Uart.c: 6:     RCSTA1 = 0;
  5853   002020  0E00               	movlw	0
  5854   002022  6EAB               	movwf	171,c	;volatile
  5855   002024                     
  5856                           ;Uart.c: 8:     if(config&0x01)
  5857   002024  A06B               	btfss	Open1USART@config^0,0,c
  5858   002026  EF17  F010         	goto	u2711
  5859   00202A  EF19  F010         	goto	u2710
  5860   00202E                     u2711:
  5861   00202E  EF1A  F010         	goto	l4413
  5862   002032                     u2710:
  5863   002032                     
  5864                           ;Uart.c: 9:         TXSTA1bits.SYNC = 1;
  5865   002032  88AC               	bsf	172,4,c	;volatile
  5866   002034                     l4413:
  5867                           
  5868                           ;Uart.c: 11:     if(config&0x02)
  5869   002034  A26B               	btfss	Open1USART@config^0,1,c
  5870   002036  EF1F  F010         	goto	u2721
  5871   00203A  EF21  F010         	goto	u2720
  5872   00203E                     u2721:
  5873   00203E  EF23  F010         	goto	l4417
  5874   002042                     u2720:
  5875   002042                     
  5876                           ;Uart.c: 12:     {;Uart.c: 13:         TXSTA1bits.TX9 = 1;
  5877   002042  8CAC               	bsf	172,6,c	;volatile
  5878                           
  5879                           ;Uart.c: 14:         RCSTA1bits.RX9 = 1;
  5880   002044  8CAB               	bsf	171,6,c	;volatile
  5881   002046                     l4417:
  5882                           
  5883                           ;Uart.c: 17:     if(config&0x04)
  5884   002046  A46B               	btfss	Open1USART@config^0,2,c
  5885   002048  EF28  F010         	goto	u2731
  5886   00204C  EF2A  F010         	goto	u2730
  5887   002050                     u2731:
  5888   002050  EF2B  F010         	goto	l4421
  5889   002054                     u2730:
  5890   002054                     
  5891                           ;Uart.c: 18:         TXSTA1bits.CSRC = 1;
  5892   002054  8EAC               	bsf	172,7,c	;volatile
  5893   002056                     l4421:
  5894                           
  5895                           ;Uart.c: 20:     if(config&0x08)
  5896   002056  A66B               	btfss	Open1USART@config^0,3,c
  5897   002058  EF30  F010         	goto	u2741
  5898   00205C  EF32  F010         	goto	u2740
  5899   002060                     u2741:
  5900   002060  EF35  F010         	goto	l1291
  5901   002064                     u2740:
  5902   002064                     
  5903                           ;Uart.c: 21:         RCSTA1bits.CREN = 1;
  5904   002064  88AB               	bsf	171,4,c	;volatile
  5905   002066  EF36  F010         	goto	l4425
  5906   00206A                     l1291:
  5907                           
  5908                           ;Uart.c: 23:         RCSTA1bits.SREN = 1;
  5909   00206A  8AAB               	bsf	171,5,c	;volatile
  5910   00206C                     l4425:
  5911                           
  5912                           ;Uart.c: 25:     if(config&0x10)
  5913   00206C  A86B               	btfss	Open1USART@config^0,4,c
  5914   00206E  EF3B  F010         	goto	u2751
  5915   002072  EF3D  F010         	goto	u2750
  5916   002076                     u2751:
  5917   002076  EF40  F010         	goto	l1293
  5918   00207A                     u2750:
  5919   00207A                     
  5920                           ;Uart.c: 26:         TXSTA1bits.BRGH = 1;
  5921   00207A  84AC               	bsf	172,2,c	;volatile
  5922   00207C  EF41  F010         	goto	l4429
  5923   002080                     l1293:
  5924                           
  5925                           ;Uart.c: 28:         TXSTA1bits.BRGH = 0;
  5926   002080  94AC               	bcf	172,2,c	;volatile
  5927   002082                     l4429:
  5928                           
  5929                           ;Uart.c: 30:     if(config&0x40)
  5930   002082  AC6B               	btfss	Open1USART@config^0,6,c
  5931   002084  EF46  F010         	goto	u2761
  5932   002088  EF48  F010         	goto	u2760
  5933   00208C                     u2761:
  5934   00208C  EF4B  F010         	goto	l1295
  5935   002090                     u2760:
  5936   002090                     
  5937                           ;Uart.c: 31:         PIE1bits.RC1IE = 1;
  5938   002090  8A9D               	bsf	157,5,c	;volatile
  5939   002092  EF4C  F010         	goto	l4433
  5940   002096                     l1295:
  5941                           
  5942                           ;Uart.c: 33:         PIE1bits.RC1IE = 0;
  5943   002096  9A9D               	bcf	157,5,c	;volatile
  5944   002098                     l4433:
  5945                           
  5946                           ;Uart.c: 35:     if(config&0x80)
  5947   002098  AE6B               	btfss	Open1USART@config^0,7,c
  5948   00209A  EF51  F010         	goto	u2771
  5949   00209E  EF53  F010         	goto	u2770
  5950   0020A2                     u2771:
  5951   0020A2  EF56  F010         	goto	l1297
  5952   0020A6                     u2770:
  5953   0020A6                     
  5954                           ;Uart.c: 36:         PIE1bits.TX1IE = 1;
  5955   0020A6  889D               	bsf	157,4,c	;volatile
  5956   0020A8  EF57  F010         	goto	l1298
  5957   0020AC                     l1297:
  5958                           
  5959                           ;Uart.c: 38:         PIE1bits.TX1IE = 0;
  5960   0020AC  989D               	bcf	157,4,c	;volatile
  5961   0020AE                     l1298:
  5962                           
  5963                           ;Uart.c: 40:     SPBRG1 = spbrg;
  5964   0020AE  C069  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  5965                           
  5966                           ;Uart.c: 42:     TXSTA1bits.TXEN = 1;
  5967   0020B2  8AAC               	bsf	172,5,c	;volatile
  5968                           
  5969                           ;Uart.c: 43:     RCSTA1bits.SPEN = 1;
  5970   0020B4  8EAB               	bsf	171,7,c	;volatile
  5971                           
  5972                           ;Uart.c: 44:     TRISCbits.TRISC6 = 0; TRISCbits.TRISC7 = 1;
  5973   0020B6  9C94               	bcf	148,6,c	;volatile
  5974   0020B8  8E94               	bsf	148,7,c	;volatile
  5975                           
  5976                           ;Uart.c: 45:     if(TXSTA1bits.SYNC && !TXSTA1bits.CSRC)
  5977   0020BA  A8AC               	btfss	172,4,c	;volatile
  5978   0020BC  EF62  F010         	goto	u2781
  5979   0020C0  EF64  F010         	goto	u2780
  5980   0020C4                     u2781:
  5981   0020C4  EF6C  F010         	goto	l1300
  5982   0020C8                     u2780:
  5983   0020C8  BEAC               	btfsc	172,7,c	;volatile
  5984   0020CA  EF69  F010         	goto	u2791
  5985   0020CE  EF6B  F010         	goto	u2790
  5986   0020D2                     u2791:
  5987   0020D2  EF6C  F010         	goto	l1300
  5988   0020D6                     u2790:
  5989   0020D6                     
  5990                           ;Uart.c: 46:         TRISCbits.TRISC6 = 1;
  5991   0020D6  8C94               	bsf	148,6,c	;volatile
  5992   0020D8                     l1300:
  5993   0020D8  0012               	return		;funcret
  5994   0020DA                     __end_of_Open1USART:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function _InitValue *****************
  5998 ;; Defined at:
  5999 ;;		line 146 in file "Main.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;		None
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;		None
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  1    wreg      void 
  6006 ;; Registers used:
  6007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6013 ;;      Params:         0       0       0       0       0       0       0
  6014 ;;      Locals:         0       0       0       0       0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0
  6016 ;;      Totals:         0       0       0       0       0       0       0
  6017 ;;Total ram usage:        0 bytes
  6018 ;; Hardware stack levels used: 1
  6019 ;; Hardware stack levels required when called: 9
  6020 ;; This function calls:
  6021 ;;		_Ds1307Write
  6022 ;; This function is called by:
  6023 ;;		_DeviceInit
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text34
  6028   0024B6                     __ptext34:
  6029                           	callstack 0
  6030   0024B6                     _InitValue:
  6031                           	callstack 20
  6032   0024B6                     
  6033                           ;Main.c: 147:     if( SYSTEM_STATE_FLG == 100 ){
  6034   0024B6  0E64               	movlw	100
  6035   0024B8  186F               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  6036   0024BA  A4D8               	btfss	status,2,c
  6037   0024BC  EF62  F012         	goto	u4151
  6038   0024C0  EF64  F012         	goto	u4150
  6039   0024C4                     u4151:
  6040   0024C4  EF6E  F012         	goto	l5553
  6041   0024C8                     u4150:
  6042   0024C8                     
  6043                           ;Main.c: 148:         blink_enable_flg = 1; Ds1307Write( rtc_default_values );
  6044   0024C8  0E01               	movlw	1
  6045   0024CA  6E38               	movwf	_blink_enable_flg^0,c
  6046   0024CC  0E80               	movlw	low _rtc_default_values
  6047   0024CE  6E6A               	movwf	Ds1307Write@write_datas^0,c
  6048   0024D0  0E00               	movlw	high _rtc_default_values
  6049   0024D2  6E6B               	movwf	(Ds1307Write@write_datas+1)^0,c
  6050   0024D4  EC6E  F00C         	call	_Ds1307Write	;wreg free
  6051                           
  6052                           ;Main.c: 149:     }
  6053   0024D8  EF7B  F012         	goto	l380
  6054   0024DC                     l5553:
  6055   0024DC  0EC9               	movlw	201
  6056   0024DE  186F               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  6057   0024E0  A4D8               	btfss	status,2,c
  6058   0024E2  EF75  F012         	goto	u4161
  6059   0024E6  EF77  F012         	goto	u4160
  6060   0024EA                     u4161:
  6061   0024EA  EF7B  F012         	goto	l380
  6062   0024EE                     u4160:
  6063   0024EE                     
  6064                           ;Main.c: 151:         counter_enable_flg = 0; counter_skip_flg = 0;
  6065   0024EE  0E00               	movlw	0
  6066   0024F0  6E3E               	movwf	_counter_enable_flg^0,c
  6067   0024F2  0E00               	movlw	0
  6068   0024F4  6E3C               	movwf	_counter_skip_flg^0,c
  6069   0024F6                     l380:
  6070   0024F6  0012               	return		;funcret
  6071   0024F8                     __end_of_InitValue:
  6072                           	callstack 0
  6073                           
  6074 ;; *************** function _Ds1307Write *****************
  6075 ;; Defined at:
  6076 ;;		line 76 in file "DS1307.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  write_datas     2   16[COMRAM] PTR unsigned char 
  6079 ;;		 -> rtc_default_values(10), 
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  hour_temp       1   19[COMRAM] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      void 
  6084 ;; Registers used:
  6085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6091 ;;      Params:         2       0       0       0       0       0       0
  6092 ;;      Locals:         1       0       0       0       0       0       0
  6093 ;;      Temps:          1       0       0       0       0       0       0
  6094 ;;      Totals:         4       0       0       0       0       0       0
  6095 ;;Total ram usage:        4 bytes
  6096 ;; Hardware stack levels used: 1
  6097 ;; Hardware stack levels required when called: 8
  6098 ;; This function calls:
  6099 ;;		_I2cStart
  6100 ;;		_I2cStop
  6101 ;;		_I2cWrite
  6102 ;; This function is called by:
  6103 ;;		_InitValue
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107                           	psect	text35
  6108   0018DC                     __ptext35:
  6109                           	callstack 0
  6110   0018DC                     _Ds1307Write:
  6111                           	callstack 20
  6112   0018DC                     
  6113                           ;DS1307.c: 78:     unsigned char hour_temp = write_datas[ 2 ];
  6114   0018DC  EE20 F002          	lfsr	2,2
  6115   0018E0  506A               	movf	Ds1307Write@write_datas^0,w,c
  6116   0018E2  26D9               	addwf	fsr2l,f,c
  6117   0018E4  506B               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6118   0018E6  22DA               	addwfc	fsr2h,f,c
  6119   0018E8  50DF               	movf	indf2,w,c
  6120   0018EA  6E6D               	movwf	Ds1307Write@hour_temp^0,c
  6121   0018EC                     
  6122                           ;DS1307.c: 79:     if( rtc_clock_disp_type == 1 ) {
  6123   0018EC  0451               	decf	_rtc_clock_disp_type^0,w,c
  6124   0018EE  A4D8               	btfss	status,2,c
  6125   0018F0  EF7C  F00C         	goto	u3861
  6126   0018F4  EF7E  F00C         	goto	u3860
  6127   0018F8                     u3861:
  6128   0018F8  EFA7  F00C         	goto	l5381
  6129   0018FC                     u3860:
  6130   0018FC                     
  6131                           ;DS1307.c: 80:         if( hour_temp > 0x12 ) hour_temp = hour_temp - 0x12;
  6132   0018FC  0E12               	movlw	18
  6133   0018FE  646D               	cpfsgt	Ds1307Write@hour_temp^0,c
  6134   001900  EF84  F00C         	goto	u3871
  6135   001904  EF86  F00C         	goto	u3870
  6136   001908                     u3871:
  6137   001908  EF89  F00C         	goto	l52
  6138   00190C                     u3870:
  6139   00190C  506D               	movf	Ds1307Write@hour_temp^0,w,c
  6140   00190E  0FEE               	addlw	238
  6141   001910  6E6D               	movwf	Ds1307Write@hour_temp^0,c
  6142   001912                     l52:
  6143                           
  6144                           ;DS1307.c: 81:         if( hour_temp % 16 >= 10 ) hour_temp -= 6;
  6145   001912  C06D  F06C         	movff	Ds1307Write@hour_temp,??_Ds1307Write
  6146   001916  0E0F               	movlw	15
  6147   001918  166C               	andwf	??_Ds1307Write^0,f,c
  6148   00191A  0E09               	movlw	9
  6149   00191C  646C               	cpfsgt	??_Ds1307Write^0,c
  6150   00191E  EF93  F00C         	goto	u3881
  6151   001922  EF95  F00C         	goto	u3880
  6152   001926                     u3881:
  6153   001926  EF97  F00C         	goto	l53
  6154   00192A                     u3880:
  6155   00192A  0E06               	movlw	6
  6156   00192C  5E6D               	subwf	Ds1307Write@hour_temp^0,f,c
  6157   00192E                     l53:
  6158                           
  6159                           ;DS1307.c: 82:         hour_temp = hour_temp | 0x40;
  6160   00192E  506D               	movf	Ds1307Write@hour_temp^0,w,c
  6161   001930  0940               	iorlw	64
  6162   001932  6E6D               	movwf	Ds1307Write@hour_temp^0,c
  6163                           
  6164                           ;DS1307.c: 83:         if( rtc_hour_ampm_flg == 1 ) hour_temp = hour_temp | 0x20;
  6165   001934  0450               	decf	_rtc_hour_ampm_flg^0,w,c
  6166   001936  A4D8               	btfss	status,2,c
  6167   001938  EFA0  F00C         	goto	u3891
  6168   00193C  EFA2  F00C         	goto	u3890
  6169   001940                     u3891:
  6170   001940  EFC8  F00C         	goto	l5389
  6171   001944                     u3890:
  6172   001944  506D               	movf	Ds1307Write@hour_temp^0,w,c
  6173   001946  0920               	iorlw	32
  6174   001948  6E6D               	movwf	Ds1307Write@hour_temp^0,c
  6175   00194A  EFC8  F00C         	goto	l5389
  6176   00194E                     l5381:
  6177                           
  6178                           ;DS1307.c: 86:         if( rtc_hour_ampm_flg == 1 && hour_temp < 0x12 ) hour_temp = hour
      +                          _temp + 0x12;
  6179   00194E  0450               	decf	_rtc_hour_ampm_flg^0,w,c
  6180   001950  A4D8               	btfss	status,2,c
  6181   001952  EFAD  F00C         	goto	u3901
  6182   001956  EFAF  F00C         	goto	u3900
  6183   00195A                     u3901:
  6184   00195A  EFBA  F00C         	goto	l56
  6185   00195E                     u3900:
  6186   00195E  0E12               	movlw	18
  6187   001960  606D               	cpfslt	Ds1307Write@hour_temp^0,c
  6188   001962  EFB5  F00C         	goto	u3911
  6189   001966  EFB7  F00C         	goto	u3910
  6190   00196A                     u3911:
  6191   00196A  EFBA  F00C         	goto	l56
  6192   00196E                     u3910:
  6193   00196E  506D               	movf	Ds1307Write@hour_temp^0,w,c
  6194   001970  0F12               	addlw	18
  6195   001972  6E6D               	movwf	Ds1307Write@hour_temp^0,c
  6196   001974                     l56:
  6197                           
  6198                           ;DS1307.c: 87:         if( hour_temp % 16 >= 10 ) hour_temp += 6;
  6199   001974  C06D  F06C         	movff	Ds1307Write@hour_temp,??_Ds1307Write
  6200   001978  0E0F               	movlw	15
  6201   00197A  166C               	andwf	??_Ds1307Write^0,f,c
  6202   00197C  0E09               	movlw	9
  6203   00197E  646C               	cpfsgt	??_Ds1307Write^0,c
  6204   001980  EFC4  F00C         	goto	u3921
  6205   001984  EFC6  F00C         	goto	u3920
  6206   001988                     u3921:
  6207   001988  EFC8  F00C         	goto	l5389
  6208   00198C                     u3920:
  6209   00198C  0E06               	movlw	6
  6210   00198E  266D               	addwf	Ds1307Write@hour_temp^0,f,c
  6211   001990                     l5389:
  6212                           
  6213                           ;DS1307.c: 89:     write_datas[ 2 ] = hour_temp;
  6214   001990  EE20 F002          	lfsr	2,2
  6215   001994  506A               	movf	Ds1307Write@write_datas^0,w,c
  6216   001996  26D9               	addwf	fsr2l,f,c
  6217   001998  506B               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6218   00199A  22DA               	addwfc	fsr2h,f,c
  6219   00199C  C06D  FFDF         	movff	Ds1307Write@hour_temp,indf2
  6220   0019A0                     
  6221                           ;DS1307.c: 90:     I2cStart();
  6222   0019A0  ECA0  F013         	call	_I2cStart	;wreg free
  6223   0019A4                     
  6224                           ;DS1307.c: 91:     I2cWrite( (0xD0) );
  6225   0019A4  0ED0               	movlw	208
  6226   0019A6  EC59  F013         	call	_I2cWrite
  6227   0019AA                     
  6228                           ;DS1307.c: 92:     I2cWrite( 0x00 );
  6229   0019AA  0E00               	movlw	0
  6230   0019AC  EC59  F013         	call	_I2cWrite
  6231   0019B0                     
  6232                           ;DS1307.c: 93:     I2cWrite( write_datas[ 0 ] );
  6233   0019B0  C06A  FFD9         	movff	Ds1307Write@write_datas,fsr2l
  6234   0019B4  C06B  FFDA         	movff	Ds1307Write@write_datas+1,fsr2h
  6235   0019B8  50DF               	movf	indf2,w,c
  6236   0019BA  EC59  F013         	call	_I2cWrite
  6237   0019BE                     
  6238                           ;DS1307.c: 94:     I2cWrite( write_datas[ 1 ] );
  6239   0019BE  EE20 F001          	lfsr	2,1
  6240   0019C2  506A               	movf	Ds1307Write@write_datas^0,w,c
  6241   0019C4  26D9               	addwf	fsr2l,f,c
  6242   0019C6  506B               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6243   0019C8  22DA               	addwfc	fsr2h,f,c
  6244   0019CA  50DF               	movf	indf2,w,c
  6245   0019CC  EC59  F013         	call	_I2cWrite
  6246   0019D0                     
  6247                           ;DS1307.c: 95:     I2cWrite( write_datas[ 2 ] );
  6248   0019D0  EE20 F002          	lfsr	2,2
  6249   0019D4  506A               	movf	Ds1307Write@write_datas^0,w,c
  6250   0019D6  26D9               	addwf	fsr2l,f,c
  6251   0019D8  506B               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6252   0019DA  22DA               	addwfc	fsr2h,f,c
  6253   0019DC  50DF               	movf	indf2,w,c
  6254   0019DE  EC59  F013         	call	_I2cWrite
  6255   0019E2                     
  6256                           ;DS1307.c: 96:     I2cWrite( write_datas[ 3 ] );
  6257   0019E2  EE20 F003          	lfsr	2,3
  6258   0019E6  506A               	movf	Ds1307Write@write_datas^0,w,c
  6259   0019E8  26D9               	addwf	fsr2l,f,c
  6260   0019EA  506B               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6261   0019EC  22DA               	addwfc	fsr2h,f,c
  6262   0019EE  50DF               	movf	indf2,w,c
  6263   0019F0  EC59  F013         	call	_I2cWrite
  6264   0019F4                     
  6265                           ;DS1307.c: 97:     I2cWrite( write_datas[ 4 ] );
  6266   0019F4  EE20 F004          	lfsr	2,4
  6267   0019F8  506A               	movf	Ds1307Write@write_datas^0,w,c
  6268   0019FA  26D9               	addwf	fsr2l,f,c
  6269   0019FC  506B               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6270   0019FE  22DA               	addwfc	fsr2h,f,c
  6271   001A00  50DF               	movf	indf2,w,c
  6272   001A02  EC59  F013         	call	_I2cWrite
  6273   001A06                     
  6274                           ;DS1307.c: 98:     I2cWrite( write_datas[ 5 ] );
  6275   001A06  EE20 F005          	lfsr	2,5
  6276   001A0A  506A               	movf	Ds1307Write@write_datas^0,w,c
  6277   001A0C  26D9               	addwf	fsr2l,f,c
  6278   001A0E  506B               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6279   001A10  22DA               	addwfc	fsr2h,f,c
  6280   001A12  50DF               	movf	indf2,w,c
  6281   001A14  EC59  F013         	call	_I2cWrite
  6282   001A18                     
  6283                           ;DS1307.c: 99:     I2cWrite( write_datas[ 6 ] );
  6284   001A18  EE20 F006          	lfsr	2,6
  6285   001A1C  506A               	movf	Ds1307Write@write_datas^0,w,c
  6286   001A1E  26D9               	addwf	fsr2l,f,c
  6287   001A20  506B               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6288   001A22  22DA               	addwfc	fsr2h,f,c
  6289   001A24  50DF               	movf	indf2,w,c
  6290   001A26  EC59  F013         	call	_I2cWrite
  6291   001A2A                     
  6292                           ;DS1307.c: 100:     I2cWrite( 0x90 );
  6293   001A2A  0E90               	movlw	144
  6294   001A2C  EC59  F013         	call	_I2cWrite
  6295                           
  6296                           ;DS1307.c: 101:     I2cStop();
  6297   001A30  EC97  F013         	call	_I2cStop	;wreg free
  6298   001A34  0012               	return		;funcret
  6299   001A36                     __end_of_Ds1307Write:
  6300                           	callstack 0
  6301                           
  6302 ;; *************** function _I2cWrite *****************
  6303 ;; Defined at:
  6304 ;;		line 45 in file "I2C.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;  data            1    wreg     unsigned char 
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;  data            1   15[COMRAM] unsigned char 
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      void 
  6311 ;; Registers used:
  6312 ;;		wreg, cstack
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6318 ;;      Params:         0       0       0       0       0       0       0
  6319 ;;      Locals:         1       0       0       0       0       0       0
  6320 ;;      Temps:          0       0       0       0       0       0       0
  6321 ;;      Totals:         1       0       0       0       0       0       0
  6322 ;;Total ram usage:        1 bytes
  6323 ;; Hardware stack levels used: 1
  6324 ;; Hardware stack levels required when called: 7
  6325 ;; This function calls:
  6326 ;;		_I2cWait
  6327 ;; This function is called by:
  6328 ;;		_Ds1307HMSRead
  6329 ;;		_Ds1307Write
  6330 ;;		_Ds1307HourSet
  6331 ;;		_Ds1307MinuteSet
  6332 ;;		_Ds1307SecondSet
  6333 ;;		_Ds1307Read
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           	psect	text36
  6338   0026B2                     __ptext36:
  6339                           	callstack 0
  6340   0026B2                     _I2cWrite:
  6341                           	callstack 20
  6342                           
  6343                           ;incstack = 0
  6344                           ;I2cWrite@data stored from wreg
  6345   0026B2  6E69               	movwf	I2cWrite@data^0,c
  6346   0026B4                     
  6347                           ;I2C.c: 46:     SSPBUF = data;
  6348   0026B4  C069  FFC9         	movff	I2cWrite@data,4041	;volatile
  6349   0026B8                     l153:
  6350   0026B8  B0C7               	btfsc	199,0,c	;volatile
  6351   0026BA  EF61  F013         	goto	u3851
  6352   0026BE  EF63  F013         	goto	u3850
  6353   0026C2                     u3851:
  6354   0026C2  EF5C  F013         	goto	l153
  6355   0026C6                     u3850:
  6356   0026C6                     
  6357                           ;I2C.c: 48:     I2cWait();
  6358   0026C6  EC2A  F013         	call	_I2cWait	;wreg free
  6359   0026CA  0012               	return		;funcret
  6360   0026CC                     __end_of_I2cWrite:
  6361                           	callstack 0
  6362                           
  6363 ;; *************** function _I2cWait *****************
  6364 ;; Defined at:
  6365 ;;		line 37 in file "I2C.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;		None
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;		None
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      void 
  6372 ;; Registers used:
  6373 ;;		cstack
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6379 ;;      Params:         0       0       0       0       0       0       0
  6380 ;;      Locals:         0       0       0       0       0       0       0
  6381 ;;      Temps:          0       0       0       0       0       0       0
  6382 ;;      Totals:         0       0       0       0       0       0       0
  6383 ;;Total ram usage:        0 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; Hardware stack levels required when called: 6
  6386 ;; This function calls:
  6387 ;;		_I2cStop
  6388 ;; This function is called by:
  6389 ;;		_I2cWrite
  6390 ;;		_I2cRead
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text37
  6395   002654                     __ptext37:
  6396                           	callstack 0
  6397   002654                     _I2cWait:
  6398                           	callstack 20
  6399   002654                     l146:
  6400                           
  6401                           ;I2C.c: 38:  while(SSPSTATbits.R_NOT_W == 1)
  6402   002654  B4C7               	btfsc	199,2,c	;volatile
  6403   002656  EF2F  F013         	goto	u3821
  6404   00265A  EF31  F013         	goto	u3820
  6405   00265E                     u3821:
  6406   00265E  EF2A  F013         	goto	l146
  6407   002662                     u3820:
  6408   002662                     
  6409                           ;I2C.c: 40:  if(SSPCON2bits.ACKSTAT == 1) {
  6410   002662  ACC5               	btfss	197,6,c	;volatile
  6411   002664  EF36  F013         	goto	u3831
  6412   002668  EF38  F013         	goto	u3830
  6413   00266C                     u3831:
  6414   00266C  EF3A  F013         	goto	l150
  6415   002670                     u3830:
  6416   002670                     
  6417                           ;I2C.c: 41:   I2cStop();
  6418   002670  EC97  F013         	call	_I2cStop	;wreg free
  6419   002674                     l150:
  6420   002674  0012               	return		;funcret
  6421   002676                     __end_of_I2cWait:
  6422                           	callstack 0
  6423                           
  6424 ;; *************** function _I2cStop *****************
  6425 ;; Defined at:
  6426 ;;		line 27 in file "I2C.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;		None
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;		None
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  1    wreg      void 
  6433 ;; Registers used:
  6434 ;;		None
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6440 ;;      Params:         0       0       0       0       0       0       0
  6441 ;;      Locals:         0       0       0       0       0       0       0
  6442 ;;      Temps:          0       0       0       0       0       0       0
  6443 ;;      Totals:         0       0       0       0       0       0       0
  6444 ;;Total ram usage:        0 bytes
  6445 ;; Hardware stack levels used: 1
  6446 ;; Hardware stack levels required when called: 5
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_Ds1307HMSRead
  6451 ;;		_Ds1307Write
  6452 ;;		_Ds1307HourSet
  6453 ;;		_Ds1307MinuteSet
  6454 ;;		_Ds1307SecondSet
  6455 ;;		_I2cWait
  6456 ;;		_Ds1307Read
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text38
  6461   00272E                     __ptext38:
  6462                           	callstack 0
  6463   00272E                     _I2cStop:
  6464                           	callstack 20
  6465   00272E                     
  6466                           ;I2C.c: 28:     SSPCON2bits.PEN = 1;
  6467   00272E  84C5               	bsf	197,2,c	;volatile
  6468   002730                     l134:
  6469   002730  B4C5               	btfsc	197,2,c	;volatile
  6470   002732  EF9D  F013         	goto	u3811
  6471   002736  EF9F  F013         	goto	u3810
  6472   00273A                     u3811:
  6473   00273A  EF98  F013         	goto	l134
  6474   00273E                     u3810:
  6475   00273E  0012               	return		;funcret
  6476   002740                     __end_of_I2cStop:
  6477                           	callstack 0
  6478                           
  6479 ;; *************** function _I2cStart *****************
  6480 ;; Defined at:
  6481 ;;		line 22 in file "I2C.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;		None
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;		None
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  1    wreg      void 
  6488 ;; Registers used:
  6489 ;;		None
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6495 ;;      Params:         0       0       0       0       0       0       0
  6496 ;;      Locals:         0       0       0       0       0       0       0
  6497 ;;      Temps:          0       0       0       0       0       0       0
  6498 ;;      Totals:         0       0       0       0       0       0       0
  6499 ;;Total ram usage:        0 bytes
  6500 ;; Hardware stack levels used: 1
  6501 ;; Hardware stack levels required when called: 5
  6502 ;; This function calls:
  6503 ;;		Nothing
  6504 ;; This function is called by:
  6505 ;;		_Ds1307HMSRead
  6506 ;;		_Ds1307Write
  6507 ;;		_Ds1307HourSet
  6508 ;;		_Ds1307MinuteSet
  6509 ;;		_Ds1307SecondSet
  6510 ;;		_Ds1307Read
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text39
  6515   002740                     __ptext39:
  6516                           	callstack 0
  6517   002740                     _I2cStart:
  6518                           	callstack 22
  6519   002740                     
  6520                           ;I2C.c: 23:     SSPCON2bits.SEN = 1;
  6521   002740  80C5               	bsf	197,0,c	;volatile
  6522   002742                     l128:
  6523   002742  B0C5               	btfsc	197,0,c	;volatile
  6524   002744  EFA6  F013         	goto	u3841
  6525   002748  EFA8  F013         	goto	u3840
  6526   00274C                     u3841:
  6527   00274C  EFA1  F013         	goto	l128
  6528   002750                     u3840:
  6529   002750  0012               	return		;funcret
  6530   002752                     __end_of_I2cStart:
  6531                           	callstack 0
  6532                           
  6533 ;; *************** function _EnableAllInterrupts *****************
  6534 ;; Defined at:
  6535 ;;		line 62 in file "Interrupts.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;		None
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;		None
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      void 
  6542 ;; Registers used:
  6543 ;;		None
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6549 ;;      Params:         0       0       0       0       0       0       0
  6550 ;;      Locals:         0       0       0       0       0       0       0
  6551 ;;      Temps:          0       0       0       0       0       0       0
  6552 ;;      Totals:         0       0       0       0       0       0       0
  6553 ;;Total ram usage:        0 bytes
  6554 ;; Hardware stack levels used: 1
  6555 ;; Hardware stack levels required when called: 5
  6556 ;; This function calls:
  6557 ;;		Nothing
  6558 ;; This function is called by:
  6559 ;;		_DeviceInit
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text40
  6564   0027A8                     __ptext40:
  6565                           	callstack 0
  6566   0027A8                     _EnableAllInterrupts:
  6567                           	callstack 24
  6568   0027A8                     
  6569                           ;Interrupts.c: 63:     (INTCONbits.GIE = 1);
  6570   0027A8  8EF2               	bsf	242,7,c	;volatile
  6571   0027AA  0012               	return		;funcret
  6572   0027AC                     __end_of_EnableAllInterrupts:
  6573                           	callstack 0
  6574                           
  6575 ;; *************** function _Ds1307Init *****************
  6576 ;; Defined at:
  6577 ;;		line 11 in file "DS1307.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;		None
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6591 ;;      Params:         0       0       0       0       0       0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0
  6594 ;;      Totals:         0       0       0       0       0       0       0
  6595 ;;Total ram usage:        0 bytes
  6596 ;; Hardware stack levels used: 1
  6597 ;; Hardware stack levels required when called: 6
  6598 ;; This function calls:
  6599 ;;		_I2cInit
  6600 ;; This function is called by:
  6601 ;;		_DeviceInit
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text41
  6606   002780                     __ptext41:
  6607                           	callstack 0
  6608   002780                     _Ds1307Init:
  6609                           	callstack 23
  6610   002780                     
  6611                           ;DS1307.c: 15:     rtc_clock_disp_type = 1;
  6612   002780  0E01               	movlw	1
  6613   002782  6E51               	movwf	_rtc_clock_disp_type^0,c
  6614                           
  6615                           ;DS1307.c: 16:     rtc_hour_ampm_flg = 1;
  6616   002784  0E01               	movlw	1
  6617   002786  6E50               	movwf	_rtc_hour_ampm_flg^0,c
  6618   002788                     
  6619                           ;DS1307.c: 17:     I2cInit();
  6620   002788  EC72  F013         	call	_I2cInit	;wreg free
  6621   00278C  0012               	return		;funcret
  6622   00278E                     __end_of_Ds1307Init:
  6623                           	callstack 0
  6624                           
  6625 ;; *************** function _I2cInit *****************
  6626 ;; Defined at:
  6627 ;;		line 10 in file "I2C.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;		None
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;		None
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  1    wreg      void 
  6634 ;; Registers used:
  6635 ;;		wreg, status,2
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6641 ;;      Params:         0       0       0       0       0       0       0
  6642 ;;      Locals:         0       0       0       0       0       0       0
  6643 ;;      Temps:          0       0       0       0       0       0       0
  6644 ;;      Totals:         0       0       0       0       0       0       0
  6645 ;;Total ram usage:        0 bytes
  6646 ;; Hardware stack levels used: 1
  6647 ;; Hardware stack levels required when called: 5
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_Ds1307Init
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655                           	psect	text42
  6656   0026E4                     __ptext42:
  6657                           	callstack 0
  6658   0026E4                     _I2cInit:
  6659                           	callstack 23
  6660   0026E4                     
  6661                           ;I2C.c: 12:     SSPSTATbits.SMP = 1;
  6662   0026E4  8EC7               	bsf	199,7,c	;volatile
  6663                           
  6664                           ;I2C.c: 13:     SSPSTATbits.CKE = 0;
  6665   0026E6  9CC7               	bcf	199,6,c	;volatile
  6666                           
  6667                           ;I2C.c: 15:     SSPCON1bits.SSPEN = 1;
  6668   0026E8  8AC6               	bsf	198,5,c	;volatile
  6669   0026EA                     
  6670                           ;I2C.c: 16:     SSPCON1bits.SSPM = 0b1000;
  6671   0026EA  50C6               	movf	198,w,c	;volatile
  6672   0026EC  0BF0               	andlw	-16
  6673   0026EE  0908               	iorlw	8
  6674   0026F0  6EC6               	movwf	198,c	;volatile
  6675                           
  6676                           ;I2C.c: 18:     SSPADD = 99;
  6677   0026F2  0E63               	movlw	99
  6678   0026F4  6EC8               	movwf	200,c	;volatile
  6679   0026F6  0012               	return		;funcret
  6680   0026F8                     __end_of_I2cInit:
  6681                           	callstack 0
  6682                           
  6683 ;; *************** function _BlinkDisable *****************
  6684 ;; Defined at:
  6685 ;;		line 118 in file "Display.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;		None
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  i               1   15[COMRAM] unsigned char 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      void 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6699 ;;      Params:         0       0       0       0       0       0       0
  6700 ;;      Locals:         1       0       0       0       0       0       0
  6701 ;;      Temps:          0       0       0       0       0       0       0
  6702 ;;      Totals:         1       0       0       0       0       0       0
  6703 ;;Total ram usage:        1 bytes
  6704 ;; Hardware stack levels used: 1
  6705 ;; Hardware stack levels required when called: 5
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_main
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text43
  6714   00262E                     __ptext43:
  6715                           	callstack 0
  6716   00262E                     _BlinkDisable:
  6717                           	callstack 25
  6718   00262E                     
  6719                           ;Display.c: 119:     for( unsigned char i = 0; i < 7; i ++ ){
  6720   00262E  0E00               	movlw	0
  6721   002630  6E69               	movwf	BlinkDisable@i^0,c
  6722   002632                     l3323:
  6723                           
  6724                           ;Display.c: 120:         blink_pos[ i ] = 0;
  6725   002632  0E01               	movlw	low _blink_pos
  6726   002634  2469               	addwf	BlinkDisable@i^0,w,c
  6727   002636  6ED9               	movwf	fsr2l,c
  6728   002638  6ADA               	clrf	fsr2h,c
  6729   00263A  0E00               	movlw	high _blink_pos
  6730   00263C  22DA               	addwfc	fsr2h,f,c
  6731   00263E  6ADF               	clrf	indf2,c
  6732   002640                     
  6733                           ;Display.c: 121:     }
  6734   002640  2A69               	incf	BlinkDisable@i^0,f,c
  6735   002642  0E06               	movlw	6
  6736   002644  6469               	cpfsgt	BlinkDisable@i^0,c
  6737   002646  EF27  F013         	goto	u1421
  6738   00264A  EF29  F013         	goto	u1420
  6739   00264E                     u1421:
  6740   00264E  EF19  F013         	goto	l3323
  6741   002652                     u1420:
  6742   002652  0012               	return		;funcret
  6743   002654                     __end_of_BlinkDisable:
  6744                           	callstack 0
  6745                           
  6746 ;; *************** function _low_isr *****************
  6747 ;; Defined at:
  6748 ;;		line 52 in file "Interrupts.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6762 ;;      Params:         0       0       0       0       0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0
  6764 ;;      Temps:          3       0       0       0       0       0       0
  6765 ;;      Totals:         3       0       0       0       0       0       0
  6766 ;;Total ram usage:        3 bytes
  6767 ;; Hardware stack levels used: 1
  6768 ;; Hardware stack levels required when called: 4
  6769 ;; This function calls:
  6770 ;;		_ScanCounter
  6771 ;; This function is called by:
  6772 ;;		Interrupt level 1
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	intcodelo
  6777   000018                     __pintcodelo:
  6778                           	callstack 0
  6779   000018                     _low_isr:
  6780                           	callstack 20
  6781                           
  6782                           ;incstack = 0
  6783   000018  8070               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6784   00001A  CFD8 F066          	movff	status,??_low_isr
  6785   00001E  CFE8 F067          	movff	wreg,??_low_isr+1
  6786   000022  CFE0 F068          	movff	bsr,??_low_isr+2
  6787   000026                     
  6788                           ;Interrupts.c: 54:     if( INTCON3bits.INT2IE && INTCON3bits.INT2IF ) {
  6789   000026  A8F0               	btfss	240,4,c	;volatile
  6790   000028  EF18  F000         	goto	i1u223_21
  6791   00002C  EF1A  F000         	goto	i1u223_20
  6792   000030                     i1u223_21:
  6793   000030  EF24  F000         	goto	i1l676
  6794   000034                     i1u223_20:
  6795   000034  A2F0               	btfss	240,1,c	;volatile
  6796   000036  EF1F  F000         	goto	i1u224_21
  6797   00003A  EF21  F000         	goto	i1u224_20
  6798   00003E                     i1u224_21:
  6799   00003E  EF24  F000         	goto	i1l676
  6800   000042                     i1u224_20:
  6801   000042                     
  6802                           ;Interrupts.c: 55:         INTCON3bits.INT2IF = 0;
  6803   000042  92F0               	bcf	240,1,c	;volatile
  6804   000044                     
  6805                           ;Interrupts.c: 57:         ScanCounter();
  6806   000044  EC09  F00E         	call	_ScanCounter	;wreg free
  6807   000048                     i1l676:
  6808   000048  C068  FFE0         	movff	??_low_isr+2,bsr
  6809   00004C  C067  FFE8         	movff	??_low_isr+1,wreg
  6810   000050  C066  FFD8         	movff	??_low_isr,status
  6811   000054  9070               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6812   000056  0010               	retfie	
  6813   000058                     __end_of_low_isr:
  6814                           	callstack 0
  6815                           
  6816 ;; *************** function _ScanCounter *****************
  6817 ;; Defined at:
  6818 ;;		line 76 in file "Counter.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;		None
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  1    wreg      void 
  6825 ;; Registers used:
  6826 ;;		wreg, status,2, status,0
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6832 ;;      Params:         0       0       0       0       0       0       0
  6833 ;;      Locals:         0       0       0       0       0       0       0
  6834 ;;      Temps:          0       0       0       0       0       0       0
  6835 ;;      Totals:         0       0       0       0       0       0       0
  6836 ;;Total ram usage:        0 bytes
  6837 ;; Hardware stack levels used: 1
  6838 ;; Hardware stack levels required when called: 3
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_low_isr
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text45
  6847   001C12                     __ptext45:
  6848                           	callstack 0
  6849   001C12                     _ScanCounter:
  6850                           	callstack 20
  6851   001C12                     
  6852                           ;Counter.c: 77:     if(!counter_enable_flg) return;
  6853   001C12  503E               	movf	_counter_enable_flg^0,w,c
  6854   001C14  A4D8               	btfss	status,2,c
  6855   001C16  EF0F  F00E         	goto	i1u167_21
  6856   001C1A  EF11  F00E         	goto	i1u167_20
  6857   001C1E                     i1u167_21:
  6858   001C1E  EF13  F00E         	goto	i1l3495
  6859   001C22                     i1u167_20:
  6860   001C22  EF75  F00E         	goto	i1l789
  6861   001C26                     i1l3495:
  6862                           
  6863                           ;Counter.c: 78:     if( counter_direction_flg == 1 ){
  6864   001C26  043D               	decf	_counter_direction_flg^0,w,c
  6865   001C28  A4D8               	btfss	status,2,c
  6866   001C2A  EF19  F00E         	goto	i1u168_21
  6867   001C2E  EF1B  F00E         	goto	i1u168_20
  6868   001C32                     i1u168_21:
  6869   001C32  EF36  F00E         	goto	i1l3511
  6870   001C36                     i1u168_20:
  6871   001C36                     
  6872                           ;Counter.c: 79:         counter_up_second ++;
  6873   001C36  2A3F               	incf	_counter_up_second^0,f,c
  6874   001C38                     
  6875                           ;Counter.c: 80:         if( counter_up_second == 60 ){
  6876   001C38  0E3C               	movlw	60
  6877   001C3A  183F               	xorwf	_counter_up_second^0,w,c
  6878   001C3C  A4D8               	btfss	status,2,c
  6879   001C3E  EF23  F00E         	goto	i1u169_21
  6880   001C42  EF25  F00E         	goto	i1u169_20
  6881   001C46                     i1u169_21:
  6882   001C46  EF75  F00E         	goto	i1l789
  6883   001C4A                     i1u169_20:
  6884   001C4A                     
  6885                           ;Counter.c: 81:             counter_up_second = 0;
  6886   001C4A  0E00               	movlw	0
  6887   001C4C  6E3F               	movwf	_counter_up_second^0,c
  6888   001C4E                     
  6889                           ;Counter.c: 82:             counter_up_minute ++;
  6890   001C4E  2A40               	incf	_counter_up_minute^0,f,c
  6891   001C50                     
  6892                           ;Counter.c: 83:             if(counter_up_minute == 60){
  6893   001C50  0E3C               	movlw	60
  6894   001C52  1840               	xorwf	_counter_up_minute^0,w,c
  6895   001C54  A4D8               	btfss	status,2,c
  6896   001C56  EF2F  F00E         	goto	i1u170_21
  6897   001C5A  EF31  F00E         	goto	i1u170_20
  6898   001C5E                     i1u170_21:
  6899   001C5E  EF75  F00E         	goto	i1l789
  6900   001C62                     i1u170_20:
  6901   001C62                     
  6902                           ;Counter.c: 84:                 counter_up_minute = 0;
  6903   001C62  0E00               	movlw	0
  6904   001C64  6E40               	movwf	_counter_up_minute^0,c
  6905   001C66                     
  6906                           ;Counter.c: 85:                 counter_up_hour ++;
  6907   001C66  2A41               	incf	_counter_up_hour^0,f,c
  6908   001C68  EF75  F00E         	goto	i1l789
  6909   001C6C                     i1l3511:
  6910   001C6C  503D               	movf	_counter_direction_flg^0,w,c
  6911   001C6E  A4D8               	btfss	status,2,c
  6912   001C70  EF3C  F00E         	goto	i1u171_21
  6913   001C74  EF3E  F00E         	goto	i1u171_20
  6914   001C78                     i1u171_21:
  6915   001C78  EF75  F00E         	goto	i1l789
  6916   001C7C                     i1u171_20:
  6917   001C7C                     
  6918                           ;Counter.c: 90:         if( counter_down_hour == 0 && counter_down_minute == 0 && counte
      +                          r_down_second == 0 ) {
  6919   001C7C  5047               	movf	_counter_down_hour^0,w,c
  6920   001C7E  A4D8               	btfss	status,2,c
  6921   001C80  EF44  F00E         	goto	i1u172_21
  6922   001C84  EF46  F00E         	goto	i1u172_20
  6923   001C88                     i1u172_21:
  6924   001C88  EF5E  F00E         	goto	i1l3523
  6925   001C8C                     i1u172_20:
  6926   001C8C  5046               	movf	_counter_down_minute^0,w,c
  6927   001C8E  A4D8               	btfss	status,2,c
  6928   001C90  EF4C  F00E         	goto	i1u173_21
  6929   001C94  EF4E  F00E         	goto	i1u173_20
  6930   001C98                     i1u173_21:
  6931   001C98  EF5E  F00E         	goto	i1l3523
  6932   001C9C                     i1u173_20:
  6933   001C9C  5045               	movf	_counter_down_second^0,w,c
  6934   001C9E  A4D8               	btfss	status,2,c
  6935   001CA0  EF54  F00E         	goto	i1u174_21
  6936   001CA4  EF56  F00E         	goto	i1u174_20
  6937   001CA8                     i1u174_21:
  6938   001CA8  EF5E  F00E         	goto	i1l3523
  6939   001CAC                     i1u174_20:
  6940   001CAC                     
  6941                           ;Counter.c: 91:             counter_enable_flg = 0;
  6942   001CAC  0E00               	movlw	0
  6943   001CAE  6E3E               	movwf	_counter_enable_flg^0,c
  6944                           
  6945                           ;Counter.c: 92:             counter_down_comp_flg = 1; counter_down_comp_cnt = 0;
  6946   001CB0  0E01               	movlw	1
  6947   001CB2  6E3A               	movwf	_counter_down_comp_flg^0,c
  6948   001CB4  0E00               	movlw	0
  6949   001CB6  6E39               	movwf	_counter_down_comp_cnt^0,c
  6950   001CB8  EF75  F00E         	goto	i1l789
  6951   001CBC                     i1l3523:
  6952                           
  6953                           ;Counter.c: 95:         counter_down_comp_flg = 0;
  6954   001CBC  0E00               	movlw	0
  6955   001CBE  6E3A               	movwf	_counter_down_comp_flg^0,c
  6956   001CC0                     
  6957                           ;Counter.c: 96:         counter_down_second --;
  6958   001CC0  0645               	decf	_counter_down_second^0,f,c
  6959   001CC2                     
  6960                           ;Counter.c: 97:         if( counter_down_second < 0 ) {
  6961   001CC2  BE45               	btfsc	_counter_down_second^0,7,c
  6962   001CC4  EF68  F00E         	goto	i1u175_20
  6963   001CC8  EF66  F00E         	goto	i1u175_21
  6964   001CCC                     i1u175_21:
  6965   001CCC  EF75  F00E         	goto	i1l789
  6966   001CD0                     i1u175_20:
  6967   001CD0                     
  6968                           ;Counter.c: 98:             counter_down_second = 59;
  6969   001CD0  0E3B               	movlw	59
  6970   001CD2  6E45               	movwf	_counter_down_second^0,c
  6971   001CD4                     
  6972                           ;Counter.c: 99:             counter_down_minute --;
  6973   001CD4  0646               	decf	_counter_down_minute^0,f,c
  6974   001CD6                     
  6975                           ;Counter.c: 100:             if( counter_down_minute < 0 ){
  6976   001CD6  BE46               	btfsc	_counter_down_minute^0,7,c
  6977   001CD8  EF72  F00E         	goto	i1u176_20
  6978   001CDC  EF70  F00E         	goto	i1u176_21
  6979   001CE0                     i1u176_21:
  6980   001CE0  EF75  F00E         	goto	i1l789
  6981   001CE4                     i1u176_20:
  6982   001CE4                     
  6983                           ;Counter.c: 101:                 counter_down_minute = 59;
  6984   001CE4  0E3B               	movlw	59
  6985   001CE6  6E46               	movwf	_counter_down_minute^0,c
  6986   001CE8                     
  6987                           ;Counter.c: 102:                 counter_down_hour --;
  6988   001CE8  0647               	decf	_counter_down_hour^0,f,c
  6989   001CEA                     i1l789:
  6990   001CEA  0012               	return		;funcret
  6991   001CEC                     __end_of_ScanCounter:
  6992                           	callstack 0
  6993                           
  6994 ;; *************** function _high_isr *****************
  6995 ;; Defined at:
  6996 ;;		line 20 in file "Interrupts.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;		None
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;		None
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      void 
  7003 ;; Registers used:
  7004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7010 ;;      Params:         0       0       0       0       0       0       0
  7011 ;;      Locals:         0       0       0       0       0       0       0
  7012 ;;      Temps:          4       0       0       0       0       0       0
  7013 ;;      Totals:         4       0       0       0       0       0       0
  7014 ;;Total ram usage:        4 bytes
  7015 ;; Hardware stack levels used: 1
  7016 ;; Hardware stack levels required when called: 2
  7017 ;; This function calls:
  7018 ;;		_ScanButtons
  7019 ;;		_ScanDisplay
  7020 ;;		i2_ScanCounter
  7021 ;;		i2_WriteTimer0
  7022 ;; This function is called by:
  7023 ;;		Interrupt level 2
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	intcode
  7028   000008                     __pintcode:
  7029                           	callstack 0
  7030   000008                     _high_isr:
  7031                           	callstack 20
  7032                           
  7033                           ;incstack = 0
  7034   000008  8270               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7035   00000A  ED1B  F00D         	call	int_func,f	;refresh shadow registers
  7036                           
  7037                           	psect	intcode_body
  7038   001A36                     __pintcode_body:
  7039                           	callstack 20
  7040   001A36                     int_func:
  7041                           	callstack 20
  7042   001A36  0006               	pop		; remove dummy address from shadow register refresh
  7043   001A38  CFD9 F064          	movff	fsr2l,??_high_isr+2
  7044   001A3C  CFDA F065          	movff	fsr2h,??_high_isr+3
  7045   001A40                     
  7046                           ;Interrupts.c: 22:     if( INTCONbits.TMR0IE && INTCONbits.TMR0IF ) {
  7047   001A40  AAF2               	btfss	242,5,c	;volatile
  7048   001A42  EF25  F00D         	goto	i2u376_41
  7049   001A46  EF27  F00D         	goto	i2u376_40
  7050   001A4A                     i2u376_41:
  7051   001A4A  EF85  F00D         	goto	i2l657
  7052   001A4E                     i2u376_40:
  7053   001A4E  A4F2               	btfss	242,2,c	;volatile
  7054   001A50  EF2C  F00D         	goto	i2u377_41
  7055   001A54  EF2E  F00D         	goto	i2u377_40
  7056   001A58                     i2u377_41:
  7057   001A58  EF85  F00D         	goto	i2l657
  7058   001A5C                     i2u377_40:
  7059   001A5C                     
  7060                           ;Interrupts.c: 23:         INTCONbits.TMR0IF = 0;
  7061   001A5C  94F2               	bcf	242,2,c	;volatile
  7062                           
  7063                           ;Interrupts.c: 25:         switch( display_cnt ){
  7064   001A5E  EF41  F00D         	goto	i2l5271
  7065   001A62                     i2l5253:
  7066   001A62  0EFF               	movlw	255
  7067   001A64  6E5B               	movwf	(i2WriteTimer0@timer0+1)^0,c
  7068   001A66  0E05               	movlw	5
  7069   001A68  6E5A               	movwf	i2WriteTimer0@timer0^0,c
  7070   001A6A  ECA9  F013         	call	i2_WriteTimer0	;wreg free
  7071   001A6E  EF6E  F00D         	goto	i2l5273
  7072   001A72                     i2l5267:
  7073   001A72  0EFA               	movlw	250
  7074   001A74  6E5B               	movwf	(i2WriteTimer0@timer0+1)^0,c
  7075   001A76  0E55               	movlw	85
  7076   001A78  6E5A               	movwf	i2WriteTimer0@timer0^0,c
  7077   001A7A  ECA9  F013         	call	i2_WriteTimer0	;wreg free
  7078   001A7E  EF6E  F00D         	goto	i2l5273
  7079   001A82                     i2l5271:
  7080   001A82  5037               	movf	_display_cnt^0,w,c
  7081   001A84  6E62               	movwf	??_high_isr^0,c
  7082   001A86  6A63               	clrf	(??_high_isr+1)^0,c
  7083                           
  7084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7085                           ; Switch size 1, requested type "simple"
  7086                           ; Number of cases is 1, Range of values is 0 to 0
  7087                           ; switch strategies available:
  7088                           ; Name         Instructions Cycles
  7089                           ; simple_byte            4     3 (average)
  7090                           ;	Chosen strategy is simple_byte
  7091   001A88  5063               	movf	(??_high_isr+1)^0,w,c
  7092   001A8A  0A00               	xorlw	0	; case 0
  7093   001A8C  B4D8               	btfsc	status,2,c
  7094   001A8E  EF4B  F00D         	goto	i2l6833
  7095   001A92  EF6E  F00D         	goto	i2l5273
  7096   001A96                     i2l6833:
  7097                           
  7098                           ; Switch size 1, requested type "simple"
  7099                           ; Number of cases is 8, Range of values is 0 to 7
  7100                           ; switch strategies available:
  7101                           ; Name         Instructions Cycles
  7102                           ; simple_byte           25    13 (average)
  7103                           ;	Chosen strategy is simple_byte
  7104   001A96  5062               	movf	??_high_isr^0,w,c
  7105   001A98  0A00               	xorlw	0	; case 0
  7106   001A9A  B4D8               	btfsc	status,2,c
  7107   001A9C  EF31  F00D         	goto	i2l5253
  7108   001AA0  0A01               	xorlw	1	; case 1
  7109   001AA2  B4D8               	btfsc	status,2,c
  7110   001AA4  EF31  F00D         	goto	i2l5253
  7111   001AA8  0A03               	xorlw	3	; case 2
  7112   001AAA  B4D8               	btfsc	status,2,c
  7113   001AAC  EF31  F00D         	goto	i2l5253
  7114   001AB0  0A01               	xorlw	1	; case 3
  7115   001AB2  B4D8               	btfsc	status,2,c
  7116   001AB4  EF31  F00D         	goto	i2l5253
  7117   001AB8  0A07               	xorlw	7	; case 4
  7118   001ABA  B4D8               	btfsc	status,2,c
  7119   001ABC  EF31  F00D         	goto	i2l5253
  7120   001AC0  0A01               	xorlw	1	; case 5
  7121   001AC2  B4D8               	btfsc	status,2,c
  7122   001AC4  EF31  F00D         	goto	i2l5253
  7123   001AC8  0A03               	xorlw	3	; case 6
  7124   001ACA  B4D8               	btfsc	status,2,c
  7125   001ACC  EF31  F00D         	goto	i2l5253
  7126   001AD0  0A01               	xorlw	1	; case 7
  7127   001AD2  B4D8               	btfsc	status,2,c
  7128   001AD4  EF39  F00D         	goto	i2l5267
  7129   001AD8  EF6E  F00D         	goto	i2l5273
  7130   001ADC                     i2l5273:
  7131                           
  7132                           ;Interrupts.c: 35:         ScanDisplay();
  7133   001ADC  ECF6  F00A         	call	_ScanDisplay	;wreg free
  7134   001AE0                     
  7135                           ;Interrupts.c: 36:         ScanButtons();
  7136   001AE0  ECB5  F00B         	call	_ScanButtons	;wreg free
  7137   001AE4                     
  7138                           ;Interrupts.c: 37:         cnt ++;
  7139   001AE4  4A13               	infsnz	_cnt^0,f,c
  7140   001AE6  2A14               	incf	(_cnt+1)^0,f,c
  7141   001AE8                     
  7142                           ;Interrupts.c: 38:         if( cnt == 100 ){
  7143   001AE8  0E64               	movlw	100
  7144   001AEA  1813               	xorwf	_cnt^0,w,c
  7145   001AEC  1014               	iorwf	(_cnt+1)^0,w,c
  7146   001AEE  A4D8               	btfss	status,2,c
  7147   001AF0  EF7C  F00D         	goto	i2u378_41
  7148   001AF4  EF7E  F00D         	goto	i2u378_40
  7149   001AF8                     i2u378_41:
  7150   001AF8  EF96  F00D         	goto	i2l669
  7151   001AFC                     i2u378_40:
  7152   001AFC                     
  7153                           ;Interrupts.c: 39:             SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE = 1; cnt = 0;
  7154   001AFC  804E               	bsf	_SYSTEM_ACTION_FLG^0,0,c	;volatile
  7155   001AFE  0E00               	movlw	0
  7156   001B00  6E14               	movwf	(_cnt+1)^0,c
  7157   001B02  0E00               	movlw	0
  7158   001B04  6E13               	movwf	_cnt^0,c
  7159   001B06  EF96  F00D         	goto	i2l669
  7160   001B0A                     i2l657:
  7161                           
  7162                           ;Interrupts.c: 43:     if( INTCON3bits.INT2IE && INTCON3bits.INT2IF ) {
  7163   001B0A  A8F0               	btfss	240,4,c	;volatile
  7164   001B0C  EF8A  F00D         	goto	i2u379_41
  7165   001B10  EF8C  F00D         	goto	i2u379_40
  7166   001B14                     i2u379_41:
  7167   001B14  EF96  F00D         	goto	i2l669
  7168   001B18                     i2u379_40:
  7169   001B18  A2F0               	btfss	240,1,c	;volatile
  7170   001B1A  EF91  F00D         	goto	i2u380_41
  7171   001B1E  EF93  F00D         	goto	i2u380_40
  7172   001B22                     i2u380_41:
  7173   001B22  EF96  F00D         	goto	i2l669
  7174   001B26                     i2u380_40:
  7175   001B26                     
  7176                           ;Interrupts.c: 44:         INTCON3bits.INT2IF = 0;
  7177   001B26  92F0               	bcf	240,1,c	;volatile
  7178   001B28                     
  7179                           ;Interrupts.c: 45:         ScanCounter();
  7180   001B28  EC76  F00E         	call	i2_ScanCounter	;wreg free
  7181   001B2C                     i2l669:
  7182   001B2C  C065  FFDA         	movff	??_high_isr+3,fsr2h
  7183   001B30  C064  FFD9         	movff	??_high_isr+2,fsr2l
  7184   001B34  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7185   001B36  0011               	retfie		f
  7186   001B38                     __end_of_high_isr:
  7187                           	callstack 0
  7188                           
  7189 ;; *************** function i2_WriteTimer0 *****************
  7190 ;; Defined at:
  7191 ;;		line 37 in file "Timers.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;  timer0          2    0[COMRAM] unsigned int 
  7194 ;; Auto vars:     Size  Location     Type
  7195 ;;  timer           2    2[COMRAM] struct Timers
  7196 ;; Return value:  Size  Location     Type
  7197 ;;                  1    wreg      void 
  7198 ;; Registers used:
  7199 ;;		None
  7200 ;; Tracked objects:
  7201 ;;		On entry : 0/0
  7202 ;;		On exit  : 0/0
  7203 ;;		Unchanged: 0/0
  7204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7205 ;;      Params:         2       0       0       0       0       0       0
  7206 ;;      Locals:         2       0       0       0       0       0       0
  7207 ;;      Temps:          0       0       0       0       0       0       0
  7208 ;;      Totals:         4       0       0       0       0       0       0
  7209 ;;Total ram usage:        4 bytes
  7210 ;; Hardware stack levels used: 1
  7211 ;; This function calls:
  7212 ;;		Nothing
  7213 ;; This function is called by:
  7214 ;;		_high_isr
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text47
  7219   002752                     __ptext47:
  7220                           	callstack 0
  7221   002752                     i2_WriteTimer0:
  7222                           	callstack 21
  7223   002752                     
  7224                           ;Timers.c: 37: void WriteTimer0(unsigned int timer0);Timers.c: 38: {;Timers.c: 39:     u
      +                          nion Timers timer;;Timers.c: 41:     timer.lt = timer0;
  7225   002752  C05A  F05C         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  7226   002756  C05B  F05D         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  7227                           
  7228                           ;Timers.c: 43:     TMR0H = timer.bt[1];
  7229   00275A  C05D  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  7230                           
  7231                           ;Timers.c: 44:     TMR0L = timer.bt[0];
  7232   00275E  C05C  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  7233   002762  0012               	return		;funcret
  7234   002764                     __end_ofi2_WriteTimer0:
  7235                           	callstack 0
  7236                           
  7237 ;; *************** function i2_ScanCounter *****************
  7238 ;; Defined at:
  7239 ;;		line 76 in file "Counter.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;		None
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;		None
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1    wreg      void 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7253 ;;      Params:         0       0       0       0       0       0       0
  7254 ;;      Locals:         0       0       0       0       0       0       0
  7255 ;;      Temps:          0       0       0       0       0       0       0
  7256 ;;      Totals:         0       0       0       0       0       0       0
  7257 ;;Total ram usage:        0 bytes
  7258 ;; Hardware stack levels used: 1
  7259 ;; This function calls:
  7260 ;;		Nothing
  7261 ;; This function is called by:
  7262 ;;		_high_isr
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           	psect	text48
  7267   001CEC                     __ptext48:
  7268                           	callstack 0
  7269   001CEC                     i2_ScanCounter:
  7270                           	callstack 21
  7271   001CEC                     
  7272                           ;Counter.c: 77:     if(!counter_enable_flg) return;
  7273   001CEC  503E               	movf	_counter_enable_flg^0,w,c
  7274   001CEE  A4D8               	btfss	status,2,c
  7275   001CF0  EF7C  F00E         	goto	i2u182_41
  7276   001CF4  EF7E  F00E         	goto	i2u182_40
  7277   001CF8                     i2u182_41:
  7278   001CF8  EF80  F00E         	goto	i2l3569
  7279   001CFC                     i2u182_40:
  7280   001CFC  EFE2  F00E         	goto	i2l789
  7281   001D00                     i2l3569:
  7282                           
  7283                           ;Counter.c: 78:     if( counter_direction_flg == 1 ){
  7284   001D00  043D               	decf	_counter_direction_flg^0,w,c
  7285   001D02  A4D8               	btfss	status,2,c
  7286   001D04  EF86  F00E         	goto	i2u183_41
  7287   001D08  EF88  F00E         	goto	i2u183_40
  7288   001D0C                     i2u183_41:
  7289   001D0C  EFA3  F00E         	goto	i2l3585
  7290   001D10                     i2u183_40:
  7291   001D10                     
  7292                           ;Counter.c: 79:         counter_up_second ++;
  7293   001D10  2A3F               	incf	_counter_up_second^0,f,c
  7294   001D12                     
  7295                           ;Counter.c: 80:         if( counter_up_second == 60 ){
  7296   001D12  0E3C               	movlw	60
  7297   001D14  183F               	xorwf	_counter_up_second^0,w,c
  7298   001D16  A4D8               	btfss	status,2,c
  7299   001D18  EF90  F00E         	goto	i2u184_41
  7300   001D1C  EF92  F00E         	goto	i2u184_40
  7301   001D20                     i2u184_41:
  7302   001D20  EFE2  F00E         	goto	i2l789
  7303   001D24                     i2u184_40:
  7304   001D24                     
  7305                           ;Counter.c: 81:             counter_up_second = 0;
  7306   001D24  0E00               	movlw	0
  7307   001D26  6E3F               	movwf	_counter_up_second^0,c
  7308   001D28                     
  7309                           ;Counter.c: 82:             counter_up_minute ++;
  7310   001D28  2A40               	incf	_counter_up_minute^0,f,c
  7311   001D2A                     
  7312                           ;Counter.c: 83:             if(counter_up_minute == 60){
  7313   001D2A  0E3C               	movlw	60
  7314   001D2C  1840               	xorwf	_counter_up_minute^0,w,c
  7315   001D2E  A4D8               	btfss	status,2,c
  7316   001D30  EF9C  F00E         	goto	i2u185_41
  7317   001D34  EF9E  F00E         	goto	i2u185_40
  7318   001D38                     i2u185_41:
  7319   001D38  EFE2  F00E         	goto	i2l789
  7320   001D3C                     i2u185_40:
  7321   001D3C                     
  7322                           ;Counter.c: 84:                 counter_up_minute = 0;
  7323   001D3C  0E00               	movlw	0
  7324   001D3E  6E40               	movwf	_counter_up_minute^0,c
  7325   001D40                     
  7326                           ;Counter.c: 85:                 counter_up_hour ++;
  7327   001D40  2A41               	incf	_counter_up_hour^0,f,c
  7328   001D42  EFE2  F00E         	goto	i2l789
  7329   001D46                     i2l3585:
  7330   001D46  503D               	movf	_counter_direction_flg^0,w,c
  7331   001D48  A4D8               	btfss	status,2,c
  7332   001D4A  EFA9  F00E         	goto	i2u186_41
  7333   001D4E  EFAB  F00E         	goto	i2u186_40
  7334   001D52                     i2u186_41:
  7335   001D52  EFE2  F00E         	goto	i2l789
  7336   001D56                     i2u186_40:
  7337   001D56                     
  7338                           ;Counter.c: 90:         if( counter_down_hour == 0 && counter_down_minute == 0 && counte
      +                          r_down_second == 0 ) {
  7339   001D56  5047               	movf	_counter_down_hour^0,w,c
  7340   001D58  A4D8               	btfss	status,2,c
  7341   001D5A  EFB1  F00E         	goto	i2u187_41
  7342   001D5E  EFB3  F00E         	goto	i2u187_40
  7343   001D62                     i2u187_41:
  7344   001D62  EFCB  F00E         	goto	i2l3597
  7345   001D66                     i2u187_40:
  7346   001D66  5046               	movf	_counter_down_minute^0,w,c
  7347   001D68  A4D8               	btfss	status,2,c
  7348   001D6A  EFB9  F00E         	goto	i2u188_41
  7349   001D6E  EFBB  F00E         	goto	i2u188_40
  7350   001D72                     i2u188_41:
  7351   001D72  EFCB  F00E         	goto	i2l3597
  7352   001D76                     i2u188_40:
  7353   001D76  5045               	movf	_counter_down_second^0,w,c
  7354   001D78  A4D8               	btfss	status,2,c
  7355   001D7A  EFC1  F00E         	goto	i2u189_41
  7356   001D7E  EFC3  F00E         	goto	i2u189_40
  7357   001D82                     i2u189_41:
  7358   001D82  EFCB  F00E         	goto	i2l3597
  7359   001D86                     i2u189_40:
  7360   001D86                     
  7361                           ;Counter.c: 91:             counter_enable_flg = 0;
  7362   001D86  0E00               	movlw	0
  7363   001D88  6E3E               	movwf	_counter_enable_flg^0,c
  7364                           
  7365                           ;Counter.c: 92:             counter_down_comp_flg = 1; counter_down_comp_cnt = 0;
  7366   001D8A  0E01               	movlw	1
  7367   001D8C  6E3A               	movwf	_counter_down_comp_flg^0,c
  7368   001D8E  0E00               	movlw	0
  7369   001D90  6E39               	movwf	_counter_down_comp_cnt^0,c
  7370   001D92  EFE2  F00E         	goto	i2l789
  7371   001D96                     i2l3597:
  7372                           
  7373                           ;Counter.c: 95:         counter_down_comp_flg = 0;
  7374   001D96  0E00               	movlw	0
  7375   001D98  6E3A               	movwf	_counter_down_comp_flg^0,c
  7376   001D9A                     
  7377                           ;Counter.c: 96:         counter_down_second --;
  7378   001D9A  0645               	decf	_counter_down_second^0,f,c
  7379   001D9C                     
  7380                           ;Counter.c: 97:         if( counter_down_second < 0 ) {
  7381   001D9C  BE45               	btfsc	_counter_down_second^0,7,c
  7382   001D9E  EFD5  F00E         	goto	i2u190_40
  7383   001DA2  EFD3  F00E         	goto	i2u190_41
  7384   001DA6                     i2u190_41:
  7385   001DA6  EFE2  F00E         	goto	i2l789
  7386   001DAA                     i2u190_40:
  7387   001DAA                     
  7388                           ;Counter.c: 98:             counter_down_second = 59;
  7389   001DAA  0E3B               	movlw	59
  7390   001DAC  6E45               	movwf	_counter_down_second^0,c
  7391   001DAE                     
  7392                           ;Counter.c: 99:             counter_down_minute --;
  7393   001DAE  0646               	decf	_counter_down_minute^0,f,c
  7394   001DB0                     
  7395                           ;Counter.c: 100:             if( counter_down_minute < 0 ){
  7396   001DB0  BE46               	btfsc	_counter_down_minute^0,7,c
  7397   001DB2  EFDF  F00E         	goto	i2u191_40
  7398   001DB6  EFDD  F00E         	goto	i2u191_41
  7399   001DBA                     i2u191_41:
  7400   001DBA  EFE2  F00E         	goto	i2l789
  7401   001DBE                     i2u191_40:
  7402   001DBE                     
  7403                           ;Counter.c: 101:                 counter_down_minute = 59;
  7404   001DBE  0E3B               	movlw	59
  7405   001DC0  6E46               	movwf	_counter_down_minute^0,c
  7406   001DC2                     
  7407                           ;Counter.c: 102:                 counter_down_hour --;
  7408   001DC2  0647               	decf	_counter_down_hour^0,f,c
  7409   001DC4                     i2l789:
  7410   001DC4  0012               	return		;funcret
  7411   001DC6                     __end_ofi2_ScanCounter:
  7412                           	callstack 0
  7413                           
  7414 ;; *************** function _ScanDisplay *****************
  7415 ;; Defined at:
  7416 ;;		line 35 in file "Display.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;		None
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      void 
  7423 ;; Registers used:
  7424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7430 ;;      Params:         0       0       0       0       0       0       0
  7431 ;;      Locals:         0       0       0       0       0       0       0
  7432 ;;      Temps:          4       0       0       0       0       0       0
  7433 ;;      Totals:         4       0       0       0       0       0       0
  7434 ;;Total ram usage:        4 bytes
  7435 ;; Hardware stack levels used: 1
  7436 ;; Hardware stack levels required when called: 1
  7437 ;; This function calls:
  7438 ;;		_M74HC595Write
  7439 ;; This function is called by:
  7440 ;;		_high_isr
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text49
  7445   0015EC                     __ptext49:
  7446                           	callstack 0
  7447   0015EC                     _ScanDisplay:
  7448                           	callstack 20
  7449   0015EC  908A               	bcf	138,0,c	;volatile
  7450   0015EE  9E8C               	bcf	140,7,c	;volatile
  7451                           
  7452                           ;Display.c: 52:     LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATCbits.LATC5 = 
      +                          LATBbits.LATB1 = LATBbits.LATB5 = LATDbits.LATD7 = LATBbits.LATB0 = 0;
  7453   0015F0  9A8A               	bcf	138,5,c	;volatile
  7454   0015F2  928A               	bcf	138,1,c	;volatile
  7455   0015F4  9A8B               	bcf	139,5,c	;volatile
  7456   0015F6  908B               	bcf	139,0,c	;volatile
  7457   0015F8  928B               	bcf	139,1,c	;volatile
  7458   0015FA  948B               	bcf	139,2,c	;volatile
  7459   0015FC                     
  7460                           ;Display.c: 53:     display_cnt ++;
  7461   0015FC  2A37               	incf	_display_cnt^0,f,c
  7462   0015FE                     
  7463                           ;Display.c: 54:     if( blink_pos[ display_cnt - 1 ] && blink_cnt < BLINK_TIME / 2 ) ret
      +                          urn;
  7464   0015FE  0E00               	movlw	low (_blink_pos+65535)
  7465   001600  2437               	addwf	_display_cnt^0,w,c
  7466   001602  6ED9               	movwf	fsr2l,c
  7467   001604  6ADA               	clrf	fsr2h,c
  7468   001606  0E00               	movlw	high (_blink_pos+65535)
  7469   001608  22DA               	addwfc	fsr2h,f,c
  7470   00160A  50DF               	movf	indf2,w,c
  7471   00160C  B4D8               	btfsc	status,2,c
  7472   00160E  EF0B  F00B         	goto	i2u146_41
  7473   001612  EF0D  F00B         	goto	i2u146_40
  7474   001616                     i2u146_41:
  7475   001616  EF55  F00B         	goto	i2l3393
  7476   00161A                     i2u146_40:
  7477   00161A  90D8               	bcf	status,0,c
  7478   00161C  302C               	rrcf	(_BLINK_TIME+1)^0,w,c
  7479   00161E  6E5F               	movwf	(??_ScanDisplay+1)^0,c
  7480   001620  302B               	rrcf	_BLINK_TIME^0,w,c
  7481   001622  6E5E               	movwf	??_ScanDisplay^0,c
  7482   001624  5036               	movf	_blink_cnt^0,w,c
  7483   001626  6E60               	movwf	(??_ScanDisplay+2)^0,c
  7484   001628  6A61               	clrf	(??_ScanDisplay+3)^0,c
  7485   00162A  505E               	movf	??_ScanDisplay^0,w,c
  7486   00162C  5C60               	subwf	(??_ScanDisplay+2)^0,w,c
  7487   00162E  505F               	movf	(??_ScanDisplay+1)^0,w,c
  7488   001630  5861               	subwfb	(??_ScanDisplay+3)^0,w,c
  7489   001632  B0D8               	btfsc	status,0,c
  7490   001634  EF1E  F00B         	goto	i2u147_41
  7491   001638  EF20  F00B         	goto	i2u147_40
  7492   00163C                     i2u147_41:
  7493   00163C  EF55  F00B         	goto	i2l3393
  7494   001640                     i2u147_40:
  7495   001640  EFB4  F00B         	goto	i2l891
  7496   001644                     i2l3355:
  7497   001644  5052               	movf	_display_datas^0,w,c
  7498   001646  ECC5  F011         	call	_M74HC595Write
  7499   00164A  848B               	bsf	139,2,c	;volatile
  7500   00164C  EF82  F00B         	goto	i2l3395
  7501   001650                     i2l3359:
  7502   001650  5053               	movf	(_display_datas+1)^0,w,c
  7503   001652  ECC5  F011         	call	_M74HC595Write
  7504   001656  828B               	bsf	139,1,c	;volatile
  7505   001658  EF82  F00B         	goto	i2l3395
  7506   00165C                     i2l3363:
  7507   00165C  5054               	movf	(_display_datas+2)^0,w,c
  7508   00165E  ECC5  F011         	call	_M74HC595Write
  7509   001662  808B               	bsf	139,0,c	;volatile
  7510   001664  EF82  F00B         	goto	i2l3395
  7511   001668                     i2l3367:
  7512   001668  5055               	movf	(_display_datas+3)^0,w,c
  7513   00166A  ECC5  F011         	call	_M74HC595Write
  7514   00166E  8A8B               	bsf	139,5,c	;volatile
  7515   001670  EF82  F00B         	goto	i2l3395
  7516   001674                     i2l3371:
  7517   001674  5056               	movf	(_display_datas+4)^0,w,c
  7518   001676  ECC5  F011         	call	_M74HC595Write
  7519   00167A  828A               	bsf	138,1,c	;volatile
  7520   00167C  EF82  F00B         	goto	i2l3395
  7521   001680                     i2l3375:
  7522   001680  5057               	movf	(_display_datas+5)^0,w,c
  7523   001682  ECC5  F011         	call	_M74HC595Write
  7524   001686  8A8A               	bsf	138,5,c	;volatile
  7525   001688  EF82  F00B         	goto	i2l3395
  7526   00168C                     i2l3379:
  7527   00168C  0E00               	movlw	0
  7528   00168E  ECC5  F011         	call	_M74HC595Write
  7529   001692  8E8C               	bsf	140,7,c	;volatile
  7530   001694  EF82  F00B         	goto	i2l3395
  7531   001698                     i2l3383:
  7532   001698  5059               	movf	(_display_datas+7)^0,w,c
  7533   00169A  ECC5  F011         	call	_M74HC595Write
  7534   00169E  808A               	bsf	138,0,c	;volatile
  7535   0016A0  0E00               	movlw	0
  7536   0016A2  6E37               	movwf	_display_cnt^0,c
  7537   0016A4  2A36               	incf	_blink_cnt^0,f,c
  7538   0016A6  EF82  F00B         	goto	i2l3395
  7539   0016AA                     i2l3393:
  7540   0016AA  5037               	movf	_display_cnt^0,w,c
  7541   0016AC  6E5E               	movwf	??_ScanDisplay^0,c
  7542   0016AE  6A5F               	clrf	(??_ScanDisplay+1)^0,c
  7543                           
  7544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7545                           ; Switch size 1, requested type "simple"
  7546                           ; Number of cases is 1, Range of values is 0 to 0
  7547                           ; switch strategies available:
  7548                           ; Name         Instructions Cycles
  7549                           ; simple_byte            4     3 (average)
  7550                           ;	Chosen strategy is simple_byte
  7551   0016B0  505F               	movf	(??_ScanDisplay+1)^0,w,c
  7552   0016B2  0A00               	xorlw	0	; case 0
  7553   0016B4  B4D8               	btfsc	status,2,c
  7554   0016B6  EF5F  F00B         	goto	i2l6835
  7555   0016BA  EF82  F00B         	goto	i2l3395
  7556   0016BE                     i2l6835:
  7557                           
  7558                           ; Switch size 1, requested type "simple"
  7559                           ; Number of cases is 8, Range of values is 1 to 8
  7560                           ; switch strategies available:
  7561                           ; Name         Instructions Cycles
  7562                           ; simple_byte           25    13 (average)
  7563                           ;	Chosen strategy is simple_byte
  7564   0016BE  505E               	movf	??_ScanDisplay^0,w,c
  7565   0016C0  0A01               	xorlw	1	; case 1
  7566   0016C2  B4D8               	btfsc	status,2,c
  7567   0016C4  EF22  F00B         	goto	i2l3355
  7568   0016C8  0A03               	xorlw	3	; case 2
  7569   0016CA  B4D8               	btfsc	status,2,c
  7570   0016CC  EF28  F00B         	goto	i2l3359
  7571   0016D0  0A01               	xorlw	1	; case 3
  7572   0016D2  B4D8               	btfsc	status,2,c
  7573   0016D4  EF2E  F00B         	goto	i2l3363
  7574   0016D8  0A07               	xorlw	7	; case 4
  7575   0016DA  B4D8               	btfsc	status,2,c
  7576   0016DC  EF34  F00B         	goto	i2l3367
  7577   0016E0  0A01               	xorlw	1	; case 5
  7578   0016E2  B4D8               	btfsc	status,2,c
  7579   0016E4  EF3A  F00B         	goto	i2l3371
  7580   0016E8  0A03               	xorlw	3	; case 6
  7581   0016EA  B4D8               	btfsc	status,2,c
  7582   0016EC  EF40  F00B         	goto	i2l3375
  7583   0016F0  0A01               	xorlw	1	; case 7
  7584   0016F2  B4D8               	btfsc	status,2,c
  7585   0016F4  EF46  F00B         	goto	i2l3379
  7586   0016F8  0A0F               	xorlw	15	; case 8
  7587   0016FA  B4D8               	btfsc	status,2,c
  7588   0016FC  EF4C  F00B         	goto	i2l3383
  7589   001700  EF82  F00B         	goto	i2l3395
  7590   001704                     i2l3395:
  7591                           
  7592                           ;Display.c: 66:     if( blink_cnt == BLINK_TIME ) {
  7593   001704  5036               	movf	_blink_cnt^0,w,c
  7594   001706  6E5E               	movwf	??_ScanDisplay^0,c
  7595   001708  6A5F               	clrf	(??_ScanDisplay+1)^0,c
  7596   00170A  502B               	movf	_BLINK_TIME^0,w,c
  7597   00170C  185E               	xorwf	??_ScanDisplay^0,w,c
  7598   00170E  E107               	bnz	i2u148_41
  7599   001710  502C               	movf	(_BLINK_TIME+1)^0,w,c
  7600   001712  185F               	xorwf	(??_ScanDisplay+1)^0,w,c
  7601   001714  A4D8               	btfss	status,2,c
  7602   001716  EF8F  F00B         	goto	i2u148_41
  7603   00171A  EF91  F00B         	goto	i2u148_40
  7604   00171E                     i2u148_41:
  7605   00171E  EFB4  F00B         	goto	i2l891
  7606   001722                     i2u148_40:
  7607   001722                     
  7608                           ;Display.c: 67:         blink_cnt = 0;
  7609   001722  0E00               	movlw	0
  7610   001724  6E36               	movwf	_blink_cnt^0,c
  7611                           
  7612                           ;Display.c: 68:         if( counter_down_comp_flg ) counter_down_comp_cnt ++;
  7613   001726  503A               	movf	_counter_down_comp_flg^0,w,c
  7614   001728  B4D8               	btfsc	status,2,c
  7615   00172A  EF99  F00B         	goto	i2u149_41
  7616   00172E  EF9B  F00B         	goto	i2u149_40
  7617   001732                     i2u149_41:
  7618   001732  EF9C  F00B         	goto	i2l3401
  7619   001736                     i2u149_40:
  7620   001736  2A39               	incf	_counter_down_comp_cnt^0,f,c
  7621   001738                     i2l3401:
  7622                           
  7623                           ;Display.c: 69:         if( counter_down_comp_cnt > 5 && counter_down_comp_flg ) {
  7624   001738  0E05               	movlw	5
  7625   00173A  6439               	cpfsgt	_counter_down_comp_cnt^0,c
  7626   00173C  EFA2  F00B         	goto	i2u150_41
  7627   001740  EFA4  F00B         	goto	i2u150_40
  7628   001744                     i2u150_41:
  7629   001744  EFB4  F00B         	goto	i2l891
  7630   001748                     i2u150_40:
  7631   001748  503A               	movf	_counter_down_comp_flg^0,w,c
  7632   00174A  B4D8               	btfsc	status,2,c
  7633   00174C  EFAA  F00B         	goto	i2u151_41
  7634   001750  EFAC  F00B         	goto	i2u151_40
  7635   001754                     i2u151_41:
  7636   001754  EFB4  F00B         	goto	i2l891
  7637   001758                     i2u151_40:
  7638   001758                     
  7639                           ;Display.c: 70:             counter_down_comp_flg = 0; blink_enable_flg = 0; counter_dow
      +                          n_comp_cnt = 5;
  7640   001758  0E00               	movlw	0
  7641   00175A  6E3A               	movwf	_counter_down_comp_flg^0,c
  7642   00175C  0E00               	movlw	0
  7643   00175E  6E38               	movwf	_blink_enable_flg^0,c
  7644   001760  0E05               	movlw	5
  7645   001762  6E39               	movwf	_counter_down_comp_cnt^0,c
  7646                           
  7647                           ;Display.c: 71:             SYSTEM_STATE_FLG = 203;
  7648   001764  0ECB               	movlw	203
  7649   001766  6E6F               	movwf	_SYSTEM_STATE_FLG^0,c
  7650   001768                     i2l891:
  7651   001768  0012               	return		;funcret
  7652   00176A                     __end_of_ScanDisplay:
  7653                           	callstack 0
  7654                           
  7655 ;; *************** function _M74HC595Write *****************
  7656 ;; Defined at:
  7657 ;;		line 31 in file "M74HC595.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  data            1    wreg     unsigned char 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  data            1    1[COMRAM] unsigned char 
  7662 ;;  i               1    3[COMRAM] unsigned char 
  7663 ;;  temp            1    2[COMRAM] unsigned char 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg, status,2, status,0
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7673 ;;      Params:         0       0       0       0       0       0       0
  7674 ;;      Locals:         3       0       0       0       0       0       0
  7675 ;;      Temps:          1       0       0       0       0       0       0
  7676 ;;      Totals:         4       0       0       0       0       0       0
  7677 ;;Total ram usage:        4 bytes
  7678 ;; Hardware stack levels used: 1
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_ScanDisplay
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text50
  7687   00238A                     __ptext50:
  7688                           	callstack 0
  7689   00238A                     _M74HC595Write:
  7690                           	callstack 20
  7691                           
  7692                           ;incstack = 0
  7693                           ;M74HC595Write@data stored from wreg
  7694   00238A  6E5B               	movwf	M74HC595Write@data^0,c
  7695   00238C                     
  7696                           ;M74HC595.c: 34:     unsigned char temp = data;
  7697   00238C  C05B  F05C         	movff	M74HC595Write@data,M74HC595Write@temp
  7698   002390                     
  7699                           ;M74HC595.c: 35:     PORTAbits.RA0 = 0;
  7700   002390  9080               	bcf	128,0,c	;volatile
  7701   002392                     
  7702                           ;M74HC595.c: 36:     for( unsigned char i = 0; i < 8; i++ ){
  7703   002392  0E00               	movlw	0
  7704   002394  6E5D               	movwf	M74HC595Write@i^0,c
  7705   002396                     i2l2457:
  7706                           
  7707                           ;M74HC595.c: 37:         PORTAbits.RA0 = (temp & 0x80) ? 1 : 0; _delay((unsigned long)((
      +                          1)*(32000000UL/4000000.0)));
  7708   002396  BE5C               	btfsc	M74HC595Write@temp^0,7,c
  7709   002398  EFD0  F011         	goto	i2u53_41
  7710   00239C  EFD4  F011         	goto	i2u53_40
  7711   0023A0                     i2u53_41:
  7712   0023A0  6A5A               	clrf	??_M74HC595Write^0,c
  7713   0023A2  2A5A               	incf	??_M74HC595Write^0,f,c
  7714   0023A4  EFD5  F011         	goto	i2u54_48
  7715   0023A8                     i2u53_40:
  7716   0023A8  6A5A               	clrf	??_M74HC595Write^0,c
  7717   0023AA                     i2u54_48:
  7718   0023AA  5080               	movf	128,w,c	;volatile
  7719   0023AC  185A               	xorwf	??_M74HC595Write^0,w,c
  7720   0023AE  0BFE               	andlw	-2
  7721   0023B0  185A               	xorwf	??_M74HC595Write^0,w,c
  7722   0023B2  6E80               	movwf	128,c	;volatile
  7723   0023B4  D000               	nop2		;2 cycle nop
  7724   0023B6  D000               	nop2		;2 cycle nop
  7725   0023B8  D000               	nop2		;2 cycle nop
  7726   0023BA  D000               	nop2		;2 cycle nop
  7727   0023BC                     
  7728                           ;M74HC595.c: 38:         PORTAbits.RA1 = 1; __nop(); PORTAbits.RA1 = 0; __nop();
  7729   0023BC  8280               	bsf	128,1,c	;volatile
  7730   0023BE  F000               	nop	
  7731   0023C0  9280               	bcf	128,1,c	;volatile
  7732   0023C2  F000               	nop	
  7733                           
  7734                           ;M74HC595.c: 39:         temp = (unsigned char) ( temp << 1 );
  7735   0023C4  505C               	movf	M74HC595Write@temp^0,w,c
  7736   0023C6  245C               	addwf	M74HC595Write@temp^0,w,c
  7737   0023C8  6E5C               	movwf	M74HC595Write@temp^0,c
  7738   0023CA                     
  7739                           ;M74HC595.c: 40:     }
  7740   0023CA  2A5D               	incf	M74HC595Write@i^0,f,c
  7741   0023CC  0E07               	movlw	7
  7742   0023CE  645D               	cpfsgt	M74HC595Write@i^0,c
  7743   0023D0  EFEC  F011         	goto	i2u55_41
  7744   0023D4  EFEE  F011         	goto	i2u55_40
  7745   0023D8                     i2u55_41:
  7746   0023D8  EFCB  F011         	goto	i2l2457
  7747   0023DC                     i2u55_40:
  7748   0023DC                     
  7749                           ;M74HC595.c: 41:     PORTAbits.RA3 = 1; __nop(); PORTAbits.RA3 = 0; __nop();
  7750   0023DC  8680               	bsf	128,3,c	;volatile
  7751   0023DE  F000               	nop	
  7752   0023E0  9680               	bcf	128,3,c	;volatile
  7753   0023E2  F000               	nop	
  7754   0023E4  0012               	return		;funcret
  7755   0023E6                     __end_of_M74HC595Write:
  7756                           	callstack 0
  7757                           
  7758 ;; *************** function _ScanButtons *****************
  7759 ;; Defined at:
  7760 ;;		line 27 in file "Buttons.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;		None
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;		None
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  1    wreg      void 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7774 ;;      Params:         0       0       0       0       0       0       0
  7775 ;;      Locals:         0       0       0       0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0
  7777 ;;      Totals:         0       0       0       0       0       0       0
  7778 ;;Total ram usage:        0 bytes
  7779 ;; Hardware stack levels used: 1
  7780 ;; This function calls:
  7781 ;;		Nothing
  7782 ;; This function is called by:
  7783 ;;		_high_isr
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text51
  7788   00176A                     __ptext51:
  7789                           	callstack 0
  7790   00176A                     _ScanButtons:
  7791                           	callstack 21
  7792   00176A                     
  7793                           ;Buttons.c: 29:     if( PORTAbits.RA7 == 0 ) { hour_btn_released_cnt = 0; hour_btn_press
      +                          ed_cnt ++; BTN_CLICK_EVENT = 1; }
  7794   00176A  BE80               	btfsc	128,7,c	;volatile
  7795   00176C  EFBA  F00B         	goto	i2u152_41
  7796   001770  EFBC  F00B         	goto	i2u152_40
  7797   001774                     i2u152_41:
  7798   001774  EFC4  F00B         	goto	i2l3419
  7799   001778                     i2u152_40:
  7800   001778  0E00               	movlw	0
  7801   00177A  6E20               	movwf	(_hour_btn_released_cnt+1)^0,c
  7802   00177C  0E00               	movlw	0
  7803   00177E  6E1F               	movwf	_hour_btn_released_cnt^0,c
  7804   001780  4A29               	infsnz	_hour_btn_pressed_cnt^0,f,c
  7805   001782  2A2A               	incf	(_hour_btn_pressed_cnt+1)^0,f,c
  7806   001784  0E01               	movlw	1
  7807   001786  6E34               	movwf	_BTN_CLICK_EVENT^0,c
  7808   001788                     i2l3419:
  7809                           
  7810                           ;Buttons.c: 30:     if( PORTAbits.RA7 == 1 && BTN_CLICK_EVENT == 1 ){ hour_btn_pressed_c
      +                          nt = 0; hour_btn_released_cnt ++; }
  7811   001788  AE80               	btfss	128,7,c	;volatile
  7812   00178A  EFC9  F00B         	goto	i2u153_41
  7813   00178E  EFCB  F00B         	goto	i2u153_40
  7814   001792                     i2u153_41:
  7815   001792  EFD9  F00B         	goto	i2l3427
  7816   001796                     i2u153_40:
  7817   001796  0434               	decf	_BTN_CLICK_EVENT^0,w,c
  7818   001798  A4D8               	btfss	status,2,c
  7819   00179A  EFD1  F00B         	goto	i2u154_41
  7820   00179E  EFD3  F00B         	goto	i2u154_40
  7821   0017A2                     i2u154_41:
  7822   0017A2  EFD9  F00B         	goto	i2l3427
  7823   0017A6                     i2u154_40:
  7824   0017A6  0E00               	movlw	0
  7825   0017A8  6E2A               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  7826   0017AA  0E00               	movlw	0
  7827   0017AC  6E29               	movwf	_hour_btn_pressed_cnt^0,c
  7828   0017AE  4A1F               	infsnz	_hour_btn_released_cnt^0,f,c
  7829   0017B0  2A20               	incf	(_hour_btn_released_cnt+1)^0,f,c
  7830   0017B2                     i2l3427:
  7831                           
  7832                           ;Buttons.c: 32:     if( PORTAbits.RA4 == 0 ) { up_btn_released_cnt = 0; up_btn_pressed_c
      +                          nt ++; BTN_CLICK_EVENT = 2; }
  7833   0017B2  B880               	btfsc	128,4,c	;volatile
  7834   0017B4  EFDE  F00B         	goto	i2u155_41
  7835   0017B8  EFE0  F00B         	goto	i2u155_40
  7836   0017BC                     i2u155_41:
  7837   0017BC  EFE8  F00B         	goto	i2l3435
  7838   0017C0                     i2u155_40:
  7839   0017C0  0E00               	movlw	0
  7840   0017C2  6E1E               	movwf	(_up_btn_released_cnt+1)^0,c
  7841   0017C4  0E00               	movlw	0
  7842   0017C6  6E1D               	movwf	_up_btn_released_cnt^0,c
  7843   0017C8  4A27               	infsnz	_up_btn_pressed_cnt^0,f,c
  7844   0017CA  2A28               	incf	(_up_btn_pressed_cnt+1)^0,f,c
  7845   0017CC  0E02               	movlw	2
  7846   0017CE  6E34               	movwf	_BTN_CLICK_EVENT^0,c
  7847   0017D0                     i2l3435:
  7848                           
  7849                           ;Buttons.c: 33:     if( PORTAbits.RA4 == 1 && BTN_CLICK_EVENT == 2 ){ up_btn_pressed_cnt
      +                           = 0; up_btn_released_cnt ++; }
  7850   0017D0  A880               	btfss	128,4,c	;volatile
  7851   0017D2  EFED  F00B         	goto	i2u156_41
  7852   0017D6  EFEF  F00B         	goto	i2u156_40
  7853   0017DA                     i2u156_41:
  7854   0017DA  EFFE  F00B         	goto	i2l3443
  7855   0017DE                     i2u156_40:
  7856   0017DE  0E02               	movlw	2
  7857   0017E0  1834               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7858   0017E2  A4D8               	btfss	status,2,c
  7859   0017E4  EFF6  F00B         	goto	i2u157_41
  7860   0017E8  EFF8  F00B         	goto	i2u157_40
  7861   0017EC                     i2u157_41:
  7862   0017EC  EFFE  F00B         	goto	i2l3443
  7863   0017F0                     i2u157_40:
  7864   0017F0  0E00               	movlw	0
  7865   0017F2  6E28               	movwf	(_up_btn_pressed_cnt+1)^0,c
  7866   0017F4  0E00               	movlw	0
  7867   0017F6  6E27               	movwf	_up_btn_pressed_cnt^0,c
  7868   0017F8  4A1D               	infsnz	_up_btn_released_cnt^0,f,c
  7869   0017FA  2A1E               	incf	(_up_btn_released_cnt+1)^0,f,c
  7870   0017FC                     i2l3443:
  7871                           
  7872                           ;Buttons.c: 35:     if( PORTAbits.RA6 == 0 ) { down_btn_released_cnt = 0; down_btn_press
      +                          ed_cnt ++; BTN_CLICK_EVENT = 3; }
  7873   0017FC  BC80               	btfsc	128,6,c	;volatile
  7874   0017FE  EF03  F00C         	goto	i2u158_41
  7875   001802  EF05  F00C         	goto	i2u158_40
  7876   001806                     i2u158_41:
  7877   001806  EF0D  F00C         	goto	i2l3451
  7878   00180A                     i2u158_40:
  7879   00180A  0E00               	movlw	0
  7880   00180C  6E1C               	movwf	(_down_btn_released_cnt+1)^0,c
  7881   00180E  0E00               	movlw	0
  7882   001810  6E1B               	movwf	_down_btn_released_cnt^0,c
  7883   001812  4A25               	infsnz	_down_btn_pressed_cnt^0,f,c
  7884   001814  2A26               	incf	(_down_btn_pressed_cnt+1)^0,f,c
  7885   001816  0E03               	movlw	3
  7886   001818  6E34               	movwf	_BTN_CLICK_EVENT^0,c
  7887   00181A                     i2l3451:
  7888                           
  7889                           ;Buttons.c: 36:     if( PORTAbits.RA6 == 1 && BTN_CLICK_EVENT == 3 ){ down_btn_pressed_c
      +                          nt = 0; down_btn_released_cnt ++; }
  7890   00181A  AC80               	btfss	128,6,c	;volatile
  7891   00181C  EF12  F00C         	goto	i2u159_41
  7892   001820  EF14  F00C         	goto	i2u159_40
  7893   001824                     i2u159_41:
  7894   001824  EF23  F00C         	goto	i2l3459
  7895   001828                     i2u159_40:
  7896   001828  0E03               	movlw	3
  7897   00182A  1834               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7898   00182C  A4D8               	btfss	status,2,c
  7899   00182E  EF1B  F00C         	goto	i2u160_41
  7900   001832  EF1D  F00C         	goto	i2u160_40
  7901   001836                     i2u160_41:
  7902   001836  EF23  F00C         	goto	i2l3459
  7903   00183A                     i2u160_40:
  7904   00183A  0E00               	movlw	0
  7905   00183C  6E26               	movwf	(_down_btn_pressed_cnt+1)^0,c
  7906   00183E  0E00               	movlw	0
  7907   001840  6E25               	movwf	_down_btn_pressed_cnt^0,c
  7908   001842  4A1B               	infsnz	_down_btn_released_cnt^0,f,c
  7909   001844  2A1C               	incf	(_down_btn_released_cnt+1)^0,f,c
  7910   001846                     i2l3459:
  7911                           
  7912                           ;Buttons.c: 38:     if( PORTBbits.RB4 == 0 ) { sel_btn_released_cnt = 0; sel_btn_pressed
      +                          _cnt ++; BTN_CLICK_EVENT = 4; }
  7913   001846  B881               	btfsc	129,4,c	;volatile
  7914   001848  EF28  F00C         	goto	i2u161_41
  7915   00184C  EF2A  F00C         	goto	i2u161_40
  7916   001850                     i2u161_41:
  7917   001850  EF32  F00C         	goto	i2l3467
  7918   001854                     i2u161_40:
  7919   001854  0E00               	movlw	0
  7920   001856  6E1A               	movwf	(_sel_btn_released_cnt+1)^0,c
  7921   001858  0E00               	movlw	0
  7922   00185A  6E19               	movwf	_sel_btn_released_cnt^0,c
  7923   00185C  4A23               	infsnz	_sel_btn_pressed_cnt^0,f,c
  7924   00185E  2A24               	incf	(_sel_btn_pressed_cnt+1)^0,f,c
  7925   001860  0E04               	movlw	4
  7926   001862  6E34               	movwf	_BTN_CLICK_EVENT^0,c
  7927   001864                     i2l3467:
  7928                           
  7929                           ;Buttons.c: 39:     if( PORTBbits.RB4 == 1 && BTN_CLICK_EVENT == 4 ){ sel_btn_pressed_cn
      +                          t = 0; sel_btn_released_cnt ++; }
  7930   001864  A881               	btfss	129,4,c	;volatile
  7931   001866  EF37  F00C         	goto	i2u162_41
  7932   00186A  EF39  F00C         	goto	i2u162_40
  7933   00186E                     i2u162_41:
  7934   00186E  EF48  F00C         	goto	i2l3475
  7935   001872                     i2u162_40:
  7936   001872  0E04               	movlw	4
  7937   001874  1834               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7938   001876  A4D8               	btfss	status,2,c
  7939   001878  EF40  F00C         	goto	i2u163_41
  7940   00187C  EF42  F00C         	goto	i2u163_40
  7941   001880                     i2u163_41:
  7942   001880  EF48  F00C         	goto	i2l3475
  7943   001884                     i2u163_40:
  7944   001884  0E00               	movlw	0
  7945   001886  6E24               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  7946   001888  0E00               	movlw	0
  7947   00188A  6E23               	movwf	_sel_btn_pressed_cnt^0,c
  7948   00188C  4A19               	infsnz	_sel_btn_released_cnt^0,f,c
  7949   00188E  2A1A               	incf	(_sel_btn_released_cnt+1)^0,f,c
  7950   001890                     i2l3475:
  7951                           
  7952                           ;Buttons.c: 41:     if( PORTDbits.RD6 == 0 ) { reset_btn_released_cnt = 0; reset_btn_pre
      +                          ssed_cnt ++; BTN_CLICK_EVENT = 5; }
  7953   001890  BC83               	btfsc	131,6,c	;volatile
  7954   001892  EF4D  F00C         	goto	i2u164_41
  7955   001896  EF4F  F00C         	goto	i2u164_40
  7956   00189A                     i2u164_41:
  7957   00189A  EF57  F00C         	goto	i2l3483
  7958   00189E                     i2u164_40:
  7959   00189E  0E00               	movlw	0
  7960   0018A0  6E18               	movwf	(_reset_btn_released_cnt+1)^0,c
  7961   0018A2  0E00               	movlw	0
  7962   0018A4  6E17               	movwf	_reset_btn_released_cnt^0,c
  7963   0018A6  4A21               	infsnz	_reset_btn_pressed_cnt^0,f,c
  7964   0018A8  2A22               	incf	(_reset_btn_pressed_cnt+1)^0,f,c
  7965   0018AA  0E05               	movlw	5
  7966   0018AC  6E34               	movwf	_BTN_CLICK_EVENT^0,c
  7967   0018AE                     i2l3483:
  7968                           
  7969                           ;Buttons.c: 42:     if( PORTDbits.RD6 == 1 && BTN_CLICK_EVENT == 5 ){ reset_btn_pressed_
      +                          cnt = 0; reset_btn_released_cnt ++; }
  7970   0018AE  AC83               	btfss	131,6,c	;volatile
  7971   0018B0  EF5C  F00C         	goto	i2u165_41
  7972   0018B4  EF5E  F00C         	goto	i2u165_40
  7973   0018B8                     i2u165_41:
  7974   0018B8  EF6D  F00C         	goto	i2l1112
  7975   0018BC                     i2u165_40:
  7976   0018BC  0E05               	movlw	5
  7977   0018BE  1834               	xorwf	_BTN_CLICK_EVENT^0,w,c
  7978   0018C0  A4D8               	btfss	status,2,c
  7979   0018C2  EF65  F00C         	goto	i2u166_41
  7980   0018C6  EF67  F00C         	goto	i2u166_40
  7981   0018CA                     i2u166_41:
  7982   0018CA  EF6D  F00C         	goto	i2l1112
  7983   0018CE                     i2u166_40:
  7984   0018CE  0E00               	movlw	0
  7985   0018D0  6E22               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  7986   0018D2  0E00               	movlw	0
  7987   0018D4  6E21               	movwf	_reset_btn_pressed_cnt^0,c
  7988   0018D6  4A17               	infsnz	_reset_btn_released_cnt^0,f,c
  7989   0018D8  2A18               	incf	(_reset_btn_released_cnt+1)^0,f,c
  7990   0018DA                     i2l1112:
  7991   0018DA  0012               	return		;funcret
  7992   0018DC                     __end_of_ScanButtons:
  7993                           	callstack 0
  7994                           
  7995                           	psect	rparam
  7996   000000                     
  7997                           	psect	temp
  7998   000070                     btemp:
  7999                           	callstack 0
  8000   000070                     	ds	1
  8001   000000                     int$flags	set	btemp
  8002   000000                     wtemp8	set	btemp+1
  8003   000000                     ttemp5	set	btemp+1
  8004   000000                     ttemp6	set	btemp+4
  8005   000000                     ttemp7	set	btemp+8
  8006                           
  8007                           	psect	config
  8008                           
  8009                           ; Padding undefined space
  8010   300000                     	org	3145728
  8011   300000  FF                 	db	255
  8012                           
  8013                           ;Config register CONFIG1H @ 0x300001
  8014                           ;	Oscillator Selection bits
  8015                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  8016                           ;	Fail-Safe Clock Monitor Enable bit
  8017                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8018                           ;	Internal/External Oscillator Switchover bit
  8019                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8020   300001                     	org	3145729
  8021   300001  08                 	db	8
  8022                           
  8023                           ;Config register CONFIG2L @ 0x300002
  8024                           ;	Power-up Timer Enable bit
  8025                           ;	PWRT = OFF, PWRT disabled
  8026                           ;	Brown-out Reset Enable bits
  8027                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8028                           ;	Brown Out Reset Voltage bits
  8029                           ;	BORV = 3, Minimum setting
  8030   300002                     	org	3145730
  8031   300002  1F                 	db	31
  8032                           
  8033                           ;Config register CONFIG2H @ 0x300003
  8034                           ;	Watchdog Timer Enable bit
  8035                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8036                           ;	Watchdog Timer Postscale Select bits
  8037                           ;	WDTPS = 32768, 1:32768
  8038   300003                     	org	3145731
  8039   300003  1E                 	db	30
  8040                           
  8041                           ; Padding undefined space
  8042   300004                     	org	3145732
  8043   300004  FF                 	db	255
  8044                           
  8045                           ;Config register CONFIG3H @ 0x300005
  8046                           ;	CCP2 MUX bit
  8047                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8048                           ;	PORTB A/D Enable bit
  8049                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8050                           ;	Low-Power Timer1 Oscillator Enable bit
  8051                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8052                           ;	MCLR Pin Enable bit
  8053                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  8054   300005                     	org	3145733
  8055   300005  01                 	db	1
  8056                           
  8057                           ;Config register CONFIG4L @ 0x300006
  8058                           ;	Stack Full/Underflow Reset Enable bit
  8059                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8060                           ;	Single-Supply ICSP Enable bit
  8061                           ;	LVP = OFF, Single-Supply ICSP disabled
  8062                           ;	Extended Instruction Set Enable bit
  8063                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8064                           ;	Background Debugger Enable bit
  8065                           ;	DEBUG = 0x1, unprogrammed default
  8066   300006                     	org	3145734
  8067   300006  80                 	db	128
  8068                           
  8069                           ; Padding undefined space
  8070   300007                     	org	3145735
  8071   300007  FF                 	db	255
  8072                           
  8073                           ;Config register CONFIG5L @ 0x300008
  8074                           ;	Code Protection bit
  8075                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8076                           ;	Code Protection bit
  8077                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8078                           ;	Code Protection bit
  8079                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8080                           ;	Code Protection bit
  8081                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8082   300008                     	org	3145736
  8083   300008  0F                 	db	15
  8084                           
  8085                           ;Config register CONFIG5H @ 0x300009
  8086                           ;	Boot Block Code Protection bit
  8087                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8088                           ;	Data EEPROM Code Protection bit
  8089                           ;	CPD = OFF, Data EEPROM not code-protected
  8090   300009                     	org	3145737
  8091   300009  C0                 	db	192
  8092                           
  8093                           ;Config register CONFIG6L @ 0x30000A
  8094                           ;	Write Protection bit
  8095                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8096                           ;	Write Protection bit
  8097                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8098                           ;	Write Protection bit
  8099                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8100                           ;	Write Protection bit
  8101                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8102   30000A                     	org	3145738
  8103   30000A  0F                 	db	15
  8104                           
  8105                           ;Config register CONFIG6H @ 0x30000B
  8106                           ;	Configuration Register Write Protection bit
  8107                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8108                           ;	Boot Block Write Protection bit
  8109                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8110                           ;	Data EEPROM Write Protection bit
  8111                           ;	WRTD = OFF, Data EEPROM not write-protected
  8112   30000B                     	org	3145739
  8113   30000B  E0                 	db	224
  8114                           
  8115                           ;Config register CONFIG7L @ 0x30000C
  8116                           ;	Table Read Protection bit
  8117                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8118                           ;	Table Read Protection bit
  8119                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8120                           ;	Table Read Protection bit
  8121                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8122                           ;	Table Read Protection bit
  8123                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8124   30000C                     	org	3145740
  8125   30000C  0F                 	db	15
  8126                           
  8127                           ;Config register CONFIG7H @ 0x30000D
  8128                           ;	Boot Block Table Read Protection bit
  8129                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8130   30000D                     	org	3145741
  8131   30000D  40                 	db	64
  8132                           tosu	equ	0xFFF
  8133                           tosh	equ	0xFFE
  8134                           tosl	equ	0xFFD
  8135                           stkptr	equ	0xFFC
  8136                           pclatu	equ	0xFFB
  8137                           pclath	equ	0xFFA
  8138                           pcl	equ	0xFF9
  8139                           tblptru	equ	0xFF8
  8140                           tblptrh	equ	0xFF7
  8141                           tblptrl	equ	0xFF6
  8142                           tablat	equ	0xFF5
  8143                           prodh	equ	0xFF4
  8144                           prodl	equ	0xFF3
  8145                           indf0	equ	0xFEF
  8146                           postinc0	equ	0xFEE
  8147                           postdec0	equ	0xFED
  8148                           preinc0	equ	0xFEC
  8149                           plusw0	equ	0xFEB
  8150                           fsr0h	equ	0xFEA
  8151                           fsr0l	equ	0xFE9
  8152                           wreg	equ	0xFE8
  8153                           indf1	equ	0xFE7
  8154                           postinc1	equ	0xFE6
  8155                           postdec1	equ	0xFE5
  8156                           preinc1	equ	0xFE4
  8157                           plusw1	equ	0xFE3
  8158                           fsr1h	equ	0xFE2
  8159                           fsr1l	equ	0xFE1
  8160                           bsr	equ	0xFE0
  8161                           indf2	equ	0xFDF
  8162                           postinc2	equ	0xFDE
  8163                           postdec2	equ	0xFDD
  8164                           preinc2	equ	0xFDC
  8165                           plusw2	equ	0xFDB
  8166                           fsr2h	equ	0xFDA
  8167                           fsr2l	equ	0xFD9
  8168                           status	equ	0xFD8

Data Sizes:
    Strings     43
    Constant    0
    Data        10
    BSS         89
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     21     111
    BANK0           128      9      19
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Puts1USART@data	PTR unsigned char  size(2) Largest target is 43
		 -> STR_1(CODE[43]), 

    UpdateDisplay@update_datas	PTR unsigned char  size(2) Largest target is 3
		 -> Ds1307HMSRead@ds1307_date_datas(BANK0[3]), 

    ReadCounter@read_buffer	PTR char  size(2) Largest target is 8
		 -> display_datas(COMRAM[8]), 

    Ds1307Write@write_datas	PTR unsigned char  size(2) Largest target is 10
		 -> rtc_default_values(BANK0[10]), 

    sp__Ds1307HMSRead	PTR unsigned char  size(2) Largest target is 3
		 -> Ds1307HMSRead@ds1307_date_datas(BANK0[3]), 

    sp__Ds1307Read	PTR unsigned char  size(2) Largest target is 6
		 -> Ds1307Read@ds1307_date_datas(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _VerifyButtons->_ActionButtons
    _ActionButtons->_Ds1307HourSet
    _Ds1307SecondSet->_I2cWrite
    _Ds1307MinuteSet->_I2cWrite
    _Ds1307HourSet->_I2cWrite
    _UpdateDisplay->_Ds1307HMSRead
    _ReadCounter->___awmod
    _Ds1307HMSRead->_I2cRead
    _Puts1USART->_Write1USART
    _InitValue->_Ds1307Write
    _Ds1307Write->_I2cWrite

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_ScanDisplay
    _ScanDisplay->_M74HC595Write

Critical Paths under _main in BANK0

    _main->_UpdateDisplay
    _VerifyButtons->_ActionButtons
    _UpdateDisplay->_Ds1307HMSRead
    _ReadCounter->___awdiv

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6876
                                              7 BANK0      2     2      0
                       _BlinkDisable
                         _DeviceInit
                      _Ds1307HMSRead
                         _LEDProcess
                        _ReadCounter
                      _UpdateDisplay
                      _VerifyButtons
 ---------------------------------------------------------------------------------
 (1) _VerifyButtons                                        2     2      0    1107
                                              1 BANK0      2     2      0
                      _ActionButtons
 ---------------------------------------------------------------------------------
 (2) _ActionButtons                                        3     3      0    1107
                                             19 COMRAM     2     2      0
                                              0 BANK0      1     1      0
                      _DecValProcess
                      _Ds1307HourSet
                    _Ds1307MinuteSet
                    _Ds1307SecondSet
                      _IncValProcess
                       _StartCounter
                        _StopCounter
                     _UpDownTransfer
 ---------------------------------------------------------------------------------
 (3) _UpDownTransfer                                       0     0      0       0
                     _UpdateSetValue
 ---------------------------------------------------------------------------------
 (3) _StopCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartCounter                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _IncValProcess                                        0     0      0       0
                     _UpdateSetValue
 ---------------------------------------------------------------------------------
 (3) _Ds1307SecondSet                                      1     1      0      62
                                             16 COMRAM     1     1      0
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (3) _Ds1307MinuteSet                                      1     1      0      62
                                             16 COMRAM     1     1      0
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (3) _Ds1307HourSet                                        3     3      0     362
                                             16 COMRAM     3     3      0
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (3) _DecValProcess                                        2     2      0       0
                                             15 COMRAM     2     2      0
                     _UpdateSetValue
 ---------------------------------------------------------------------------------
 (4) _UpdateSetValue                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateDisplay                                        5     1      4     484
                                             19 COMRAM     1     1      0
                                              3 BANK0      4     0      4
                      _Ds1307HMSRead (ARG)
                        _MarkDisplay
 ---------------------------------------------------------------------------------
 (2) _MarkDisplay                                          3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ReadCounter                                          2     0      2    3195
                                              4 BANK0      2     0      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1208
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1525
                                             15 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _LEDProcess                                           2     2      0       0
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Ds1307HMSRead                                        5     3      2     324
                                             17 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _I2cRead
                         _I2cRestart
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (2) _I2cRestart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2cRead                                              2     2      0      68
                                             15 COMRAM     2     2      0
                            _I2cWait
 ---------------------------------------------------------------------------------
 (1) _DeviceInit                                           0     0      0    1721
                         _Ds1307Init
                _EnableAllInterrupts
                          _InitValue
                         _Open1USART
                        _OpenButtons
                        _OpenCounter
                        _OpenDisplay
                         _OpenTimer0
                     _OscillatorInit
                         _Puts1USART
                        _StartTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     544
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _StartTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Puts1USART                                           2     0      2     135
                                             16 COMRAM     2     0      2
                         _Busy1USART
                        _Write1USART
 ---------------------------------------------------------------------------------
 (3) _Write1USART                                          1     1      0      15
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Busy1USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OscillatorInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenDisplay                                          1     1      0      60
                                             15 COMRAM     1     1      0
                       _M74HC595Init
 ---------------------------------------------------------------------------------
 (3) _M74HC595Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenButtons                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     252
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitValue                                            0     0      0     700
                        _Ds1307Write
 ---------------------------------------------------------------------------------
 (3) _Ds1307Write                                          4     2      2     700
                                             16 COMRAM     4     2      2
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (4) _I2cWrite                                             1     1      0      31
                                             15 COMRAM     1     1      0
                            _I2cWait
 ---------------------------------------------------------------------------------
 (5) _I2cWait                                              0     0      0       0
                            _I2cStop
 ---------------------------------------------------------------------------------
 (6) _I2cStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EnableAllInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ds1307Init                                           0     0      0       0
                            _I2cInit
 ---------------------------------------------------------------------------------
 (3) _I2cInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BlinkDisable                                         1     1      0      45
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                              3     3      0       0
                                             12 COMRAM     3     3      0
                        _ScanCounter
 ---------------------------------------------------------------------------------
 (8) _ScanCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_isr                                             4     4      0     351
                                              8 COMRAM     4     4      0
                        _ScanButtons
                        _ScanDisplay
                      i2_ScanCounter
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (10) i2_WriteTimer0                                       4     2      2     276
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) i2_ScanCounter                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ScanDisplay                                         4     4      0      75
                                              4 COMRAM     4     4      0
                      _M74HC595Write
 ---------------------------------------------------------------------------------
 (11) _M74HC595Write                                       4     4      0      75
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (10) _ScanButtons                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlinkDisable
   _DeviceInit
     _Ds1307Init
       _I2cInit
     _EnableAllInterrupts
     _InitValue
       _Ds1307Write
         _I2cStart
         _I2cStop
         _I2cWrite
           _I2cWait
             _I2cStop
     _Open1USART
     _OpenButtons
     _OpenCounter
     _OpenDisplay
       _M74HC595Init
     _OpenTimer0
     _OscillatorInit
     _Puts1USART
       _Busy1USART
       _Write1USART
     _StartTimer0
     _WriteTimer0
   _Ds1307HMSRead
     _I2cRead
       _I2cWait
     _I2cRestart
     _I2cStart
     _I2cStop
     _I2cWrite
   _LEDProcess
   _ReadCounter
     ___awdiv
     ___awmod
   _UpdateDisplay
     _Ds1307HMSRead (ARG)
     _MarkDisplay (ARG)
   _VerifyButtons
     _ActionButtons
       _DecValProcess
         _UpdateSetValue
       _Ds1307HourSet
         _I2cStart
         _I2cStop
         _I2cWrite
       _Ds1307MinuteSet
         _I2cStart
         _I2cStop
         _I2cWrite
       _Ds1307SecondSet
         _I2cStart
         _I2cStop
         _I2cWrite
       _IncValProcess
         _UpdateSetValue
       _StartCounter
       _StopCounter
       _UpDownTransfer
         _UpdateSetValue

 _low_isr (ROOT)
   _ScanCounter

 _high_isr (ROOT)
   _ScanButtons
   _ScanDisplay
     _M74HC595Write
   i2_ScanCounter
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      9      13       5       14.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     15      6F       1       88.1%
BITBIGSFRhhhll      18      0       0      17        0.0%
BITBIGSFRlhllhh      D      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRllllh       6      0       0      30        0.0%
BITBIGSFRlllh        5      0       0      29        0.0%
BITBIGSFRllh         5      0       0      28        0.0%
BITBIGSFRlhllhl      4      0       0      25        0.0%
BITBIGSFRlhhhh       2      0       0      19        0.0%
BITBIGSFRlhlh        2      0       0      21        0.0%
BITBIGSFRlhllhl      1      0       0      24        0.0%
BITBIGSFRlhllhl      1      0       0      23        0.0%
BITBIGSFRlhllhl      1      0       0      26        0.0%
BITBIGSFRlhhl        1      0       0      20        0.0%
BITBIGSFRlhlll       1      0       0      27        0.0%
BITBIGSFRhl          1      0       0      18        0.0%
BITBIGSFRlllll       1      0       0      31        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      32        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Dec 01 09:43:32 2023

                             l7 277E                 ??_UpdateDisplay 006D                     _SSPSTATbits 0FC7  
                            l28 278C                              l52 1912                              l53 192E  
                            l62 1EBA                              l63 1ED6                              l71 26B0  
                            l56 1974                              l48 2194                              l58 1A34  
                            l74 2692                              l68 1F52                 ?_UpDownTransfer 005A  
                  ___awdiv@sign 008B                              bsr 0FE0       UpdateDisplay@end_position 0090  
                   ?_LEDProcess 005A                             l131 2750                             l140 26FA  
                           l125 26F6                             l134 2730                             l150 2674  
                           l143 2708                             l128 2742                             l137 273E  
                           l153 26B8                             l161 25B6                             l146 2654  
                           l162 25CA                             l148 2662                             l156 26CA  
                           l164 25D8                             l165 25DA                             l350 2388  
                           l326 1494                             l159 25A8                             l343 159C  
                           l408 272C                             l380 24F6                             l461 2604  
                           l470 27A6                             l358 1C10                             l459 2602  
                           l467 271A                             l910 24B4                             l915 123C  
                           l773 1436                             l782 27A2                             l679 27AA  
                           l767 242C                             l785 279C                             l964 2652  
                           l887 2326                             u310 26DA                             u311 26D6  
                           u320 2616                             u321 2612                             u330 2626  
                           u331 2622                             u380 25FC                             u381 25F8  
                           u390 2312                             u391 230E            __end_of_BlinkDisable 2654  
                   ?_Ds1307Init 005A                             _cnt 0013                    ___awmod@sign 006E  
                ?_M74HC595Write 005A                             wreg 0FE8                      _TXSTA1bits 0FAC  
              ??_UpdateSetValue 0069                   ??_MarkDisplay 0069                 __end_of_I2cInit 26F8  
               __end_of_I2cRead 25DC                 __end_of_I2cWait 2676                 __end_of_I2cStop 2740  
              _SYSTEM_STATE_FLG 006F                            l1121 0D32                            l1300 20D8  
                          l1140 0EDA                            l1133 0E38                            l1150 0FB6  
                          l1126 0D96                            l1118 0CF4                            l1143 0F18  
                          l1304 26E2                            l1136 0E76                            l1152 1030  
                          l1161 0686                            l1129 0DD4                            l1162 06B8  
                          l1163 06B4                            l1147 0F78                            l1316 262C  
                          l1164 0CC4                            l1333 2472                            l1261 2770  
                          l1253 1E8C                            l1245 25A2                            l1165 06C6  
                          l1238 0C24                            l2311 26DA                            l1183 0832  
                          l1328 242E                            l2137 26E4                            l2321 2616  
                          l1258 256A                            l1186 087C                            l2139 26EA  
                          l2331 2788                            l1291 206A                            l1099 22B8  
                          l2235 271C                            l2315 26E0                            l2323 2626  
                          l1179 07CA                            l1293 2080                            l2309 26CC  
                          l2325 2628                            l3301 1BAC                            l1189 08C6  
                          l1295 2096                            l2351 25E8                            l2327 2772  
                          l2319 2608                            l2329 2780                            l2345 27A8  
                          l1297 20AC                            l2353 25EC                            l2361 27A4  
                          l3305 1BB2                            l1298 20AE                            l3323 2632  
                          l2371 2428                            l2363 23E6                            l2355 25EE  
                          l2347 25DE                            l3307 1BFC                            l3325 2640  
                          l3317 262E                            l2373 242A                            l2365 2422  
                          l2357 25FC                            l2349 25E4                            l3327 2642  
                          l2367 2424                            l2391 2312                            l2375 22BA  
                          l2393 2246                            l2369 2426                            l2385 22E2  
                          l2377 22DA                            l3281 1B50                            l1681 2018  
                          l6001 0B88                            l4411 2032                            l2395 2250  
                          l2387 2300                            l2379 22DE                            l3291 1B6E  
                          l3283 1B56                            l6011 0BAA                            l6003 0B9E  
                          l4421 2056                            l4413 2034                            l2389 2302  
                          l3293 1B72                            l3277 1B38                            l6101 1F68  
                          l6021 0BCC                            l6013 0BC0                            l1694 2244  
                          l4431 2090                            l4423 2064                            l4415 2042  
                          l4407 201C                            l3295 1B88                            l3287 1B5C  
                          l3279 1B40                            l6111 1F8E                            l6103 1F70  
                          l5401 19D0                            l4433 2098                            l4425 206C  
                          l4417 2046                            l4409 2024                            l4441 242E  
                          l6201 2356                            l3297 1B8A                            l3289 1B5E  
                          l6121 1FC6                            l6113 1F96                            l6105 1F74  
                          l6009 0BA6                            l5411 1A2A                            l5403 19E2  
                          l4435 20A6                            l4427 207A                            l4419 2054  
                          l4443 2442                            l6211 2374                            l6203 235A  
                          l3299 1BA0                            l6131 1FF2                            l6123 1FCC  
                          l6115 1FA8                            l6107 1F82                            l6051 0BF4  
                          l6035 0BE0                            l6027 0BD4                            l6019 0BC8  
                          l5405 19F4                            l4437 20C8                            l4429 2082  
                          l4445 2452                            l6213 2380                            l6205 235E  
                          l6141 20DA                            l6125 1FE2                            l6117 1FB0  
                          l6133 1FF8                            l6109 1F8A                            l5421 1ED2  
                          l5413 1E90                            l5501 259E                            l6061 0C18  
                          l6029 0BD8                            l6301 0F74                            l6221 0CF0  
                          l5407 1A06                            l4439 20D6                            l6207 2362  
                          l6151 2102                            l6143 20DE                            l6135 2008  
                          l6127 1FEA                            l6119 1FB8                            l5511 1E02  
                          l5503 1DC6                            l5431 1F34                            l5423 1EEC  
                          l5415 1E94                            l6071 0C7A                            l6303 0F84  
                          l6223 0D00                            l6215 0CC6                            l5361 2740  
                          l5409 1A18                            l6209 2366                            l6161 2132  
                          l6153 210A                            l6145 20E4                            l6137 2010  
                          l6129 1FEC                            l5521 1E2C                            l5513 1E04  
                          l5505 1DC8                            l5441 1F4E                            l5433 1F38  
                          l5417 1EA4                            l5425 1EF6                            l6313 0FBE  
                          l6305 0F8C                            l6241 0D92                            l6233 0D3A  
                          l6225 0D08                            l6217 0CCA                            l6401 1464  
                          l5355 272E                            l5363 26B4                            l5371 18EC  
                          l4395 270A                            l6171 216E                            l6163 2142  
                          l6155 2112                            l6147 20EE                            l5611 1080  
                          l5603 107A                            l6331 249E                            l5531 1E84  
                          l5523 1E3A                            l5515 1E12                            l5507 1DD6  
                          l5435 1F3C                            l5427 1F06                            l5419 1EB4  
                          l5451 26AC                            l5443 2696                            l6067 0C30  
                          l6059 0C08                            l6315 0FD4                            l6307 0FA2  
                          l6243 0DA2                            l6235 0D50                            l6227 0D1E  
                          l6219 0CE0                            l6411 1496                            l6403 146C  
                          l5357 2654                            l5365 26C6                            l5373 18FC  
                          l5381 194E                            l5541 25BA                            l6181 218C  
                          l6173 2174                            l6165 214C                            l6157 211A  
                          l6149 20F4                            l4901 223C                            l6341 134C  
                          l6333 24A0                            l5533 1E88                            l5525 1E4A  
                          l5517 1E22                            l5509 1DFE                            l5437 1F42  
                          l5429 1F16                            l5445 269A                            l5461 268E  
                          l5453 2678                            l6309 0FB2                            l6261 0E34  
                          l6253 0DDC                            l6245 0DAA                            l6237 0D6C  
                          l6229 0D2E                            l6421 14B6                            l6413 149E  
                          l6405 147E                            l5359 2670                            l5391 19A0  
                          l5383 195E                            l5375 190C                            l5551 24CC  
                          l6191 2338                            l5543 25BE                            l5535 26F8  
                          l6175 217A                            l6167 2160                            l6159 211E  
                          l6335 123E                            l5703 10E6                            l5631 1098  
                          l5615 1086                            l6327 2474                            l5367 2764  
                          l5519 1E26                            l5527 1E4E                            l5439 1F48  
                          l5447 26A0                            l5455 267C                            l5463 279E  
                          l5471 2546                            l6263 0E44                            l6255 0DF2  
                          l6247 0DC0                            l6239 0D82                            l6319 0FEC  
                          l6431 14D2                            l6423 14BA                            l6415 14A6  
                          l6407 1482                            l5393 19A4                            l5385 196E  
                          l5377 192A                            l5369 18DC                            l5553 24DC  
                          l6193 233C                            l6185 2328                            l5545 25C8  
                          l5537 25A6                            l6177 2180                            l6169 2166  
                          l6097 1F54                            l6337 124E                            l5713 10F2  
                          l6329 247E                            l5529 1E5C                            l5449 26A6  
                          l5457 2682                            l5465 2798                            l5481 255E  
                          l5473 254A                            l5801 07F8                            l5721 063E  
                          l6281 0ED6                            l6273 0E7E                            l6265 0E4C  
                          l6257 0E0E                            l6249 0DD0                            l6441 14EA  
                          l6433 14D6                            l6425 14C2                            l6417 14AA  
                          l5395 19AA                            l5387 198C                            l5379 1944  
                          l5555 24EE                            l5547 24B6                            l6195 2342  
                          l6187 232C                            l5539 25A6                            l6179 2186  
                          l6099 1F5A                            l6339 133C                            l5707 10EC  
                          l5651 10AA                            l5635 109E                            l5627 1092  
                          l5619 108C                            l5571 104A                            l5563 103E  
                          l5459 2688                            l5491 2580                            l5483 2562  
                          l5475 254E                            l5467 2532                            l5811 0842  
                          l5803 080E                            l5731 068E                            l5723 0652  
                          l6283 0EE6                            l6275 0E94                            l6267 0E62  
                          l6259 0E24                            l6443 14EE                            l6435 14DA  
                          l6427 14C6                            l6419 14B2                            l5397 19B0  
                          l5389 1990                            l5549 24C8                            l6197 234E  
                          l6189 2330                            l5557 1034                            l5493 2584  
                          l5485 2566                            l5469 2542                            l5477 2556  
                          l5901 09FC                            l5821 0854                            l5813 0846  
                          l5805 0812                            l5741 06CA                            l5733 069E  
                          l5725 0662                            l6293 0F20                            l6285 0EEE  
                          l6277 0EB0                            l6269 0E72                            l6461 1588  
                          l6445 14F2                            l6437 14E2                            l6429 14CA  
                          l6453 14FA                            l5399 19BE                            l6199 2352  
                          l4871 219A                            l5671 10C2                            l5663 10B6  
                          l5655 10B0                            l5639 10A4                            l5591 1068  
                          l5583 105C                            l5575 1050                            l5567 1044  
                          l5559 1038                            l5495 2586                            l5487 256C  
                          l5479 255A                            l5911 0A28                            l5903 0A08  
                          l5831 088C                            l5823 0858                            l5815 084A  
                          l5807 0816                            l5751 070A                            l5743 06CE  
                          l5735 06B0                            l5727 0672                            l5719 062E  
                          l6295 0F36                            l6287 0F04                            l6279 0EC6  
                          l6455 1546                            l6439 14E6                            l4881 21CA  
                          l4873 21A8                            l5497 2598                            l5489 256E  
                          l5913 0A2C                            l5905 0A18                            l5841 08A6  
                          l5833 0890                            l5825 085C                            l5809 082E  
                          l5761 074A                            l5753 070E                            l5745 06E6  
                          l5737 06BC                            l5729 0682                            l6297 0F4E  
                          l6289 0F14                            l6465 159C                            l6393 1438  
                          l4891 2210                            l4883 21DC                            l4875 21B0  
                          l5691 10DA                            l5683 10CE                            l5667 10BC  
                          l5595 106E                            l5587 1062                            l5579 1056  
                          l5499 259C                            l5923 0A3C                            l5915 0A30  
                          l5907 0A1C                            l5851 08DE                            l5843 08AA  
                          l5835 0894                            l5827 0860                            l5763 074E  
                          l5755 071E                            l5771 077A                            l5747 06EA  
                          l6299 0F64                            l6811 157A                            l6459 1564  
                          l6395 143C                            l4893 2218                            l4885 21E4  
                          l4877 21B4                            l4869 2196                            l6821 0AC8  
                          l5941 0A84                            l5925 0A4C                            l5917 0A34  
                          l5909 0A20                            l5861 094A                            l5845 08C2  
                          l5837 089E                            l5829 0878                            l5781 07A6  
                          l5773 077E                            l5765 075E                            l5749 06FA  
                          l5757 072A                            l6813 15C2                            l6469 15AC  
                          l6397 1440                            l6831 1BC6                            l4895 221E  
                          l4887 21EC                            l4879 21C2                            l5687 10D4  
                          l5679 10C8                            l5599 1074                            l6823 0B56  
                          l5935 0A7C                            l5927 0A5C                            l5871 096E  
                          l5863 095A                            l5855 08E8                            l5847 08D6  
                          l5839 08A2                            l5791 07DE                            l5783 07AA  
                          l5775 0784                            l5767 076E                            l5759 073A  
                          l6815 1002                            l6399 1450                            l4889 21FA  
                          l4897 2224                            l6825 0C44                            l5961 0AF6  
                          l5929 0A6C                            l5873 0972                            l5865 095E  
                          l5857 0932                            l6817 08FC                            l5849 08DA  
                          l5793 07E2                            l5785 07AE                            l5777 078C  
                          l5769 0776                            l6809 1510                            l4899 2234  
                          l5699 10E0                            l6827 0C8E                            l5971 0B0A  
                          l5947 0A98                            l6819 09DE                            l5891 09C2  
                          l5883 0992                            l5875 0976                            l5867 0962  
                          l5795 07E8                            l5787 07C6                            l5779 0790  
                          l6829 1106                            l5981 0B26                            l5949 0AA0  
                          l5869 096A                            l5789 07DA                            l5983 0B2E  
                          l5967 0B02                            l5959 0AB4                            l5879 097E  
                          l5799 07F4                            l5985 0B32                            l5977 0B12  
                          l5969 0B06                            l5889 09BE                            l5987 0B36  
                          l5899 09CA                            l5989 0B3A                            l5997 0B42  
                          l5999 0B84                            STR_1 0601                            u1400 1BA0  
                          u1401 1B9C                            u1410 1C0C                            u1411 1C08  
                          u1420 2652                            u1421 264E                            u4000 2542  
                          u4001 253E                            u1370 1B50                            u4010 2580  
                          u1371 1B4C                            u4011 257C                            u1380 1B6E  
                          u3300 21FA                            u4100 1E84                            u4020 2598  
                          u1381 1B6A                            u3301 21F6                            u4101 1E80  
                          u4021 2594                            u4110 2708                            u1390 1B88  
                          u3310 2210                            u4030 1DD6                            u4111 2704  
                          u1391 1B84                            u3311 220C                            u4031 1DD2  
                          u4120 25B6                            u3320 2234                            u4040 1DFE  
                          u4200 0682                            u4121 25B2                            u3321 2230  
                          u4041 1DFA                            u4201 067E                            u4050 1E12  
                          u4210 069E                            u5010 1450                            u4051 1E0E  
                          u4211 069A                            u5011 144C                            u4140 25D8  
                          u4060 1E22                            u4300 076E                            u4220 06B0  
                          u5020 147E                            u4141 25D4                            u4061 1E1E  
                          u4301 076A                            u4221 06AC                            u5021 147A  
                          u4150 24C8                            u2710 2032                            u3270 21A8  
                          u4070 1E3A                            u4310 07A6                            u4230 06E6  
                          u5030 1490                            u4151 24C4                            u2711 202E  
                          u4135 25C6                            u3271 21A4                            u4071 1E36  
                          u4311 07A2                            u4231 06E2                            u5031 148C  
                          _PIE1 0F9D                            u4160 24EE                            u2720 2042  
                          u2800 2442                            u4136 25C8                            u3280 21C2  
                          u4080 1E4A                            u4400 08D6                            u4320 07C6  
                          u4240 06FA                            u5040 1598                            u4161 24EA  
                          u2721 203E                            u2801 243E                            u3281 21BE  
                          u4081 1E46                            u4401 08D2                            u4321 07C2  
                          u4241 06F6                            u5041 1594                            u2730 2054  
                          u2810 2472                            u3290 21DC                            u4090 1E5C  
                          u4410 0946                            u4330 07DA                            u4250 070A  
                          u4170 063E                            u2731 2050                            u2811 246E  
                          u3291 21D8                            u4091 1E58                            u4411 0942  
                          u4331 07D6                            u4251 0706                            u4171 063A  
                          u2740 2064                            u4500 0AB0                            u4420 095A  
                          u4340 080E                            u4260 071E                            u4180 0662  
                          u2741 2060                            u4501 0AAC                            u4421 0956  
                          u4341 080A                            u4261 071A                            u4181 065E  
                          u2750 207A                            u4510 0B9E                            u4430 098E  
                          u4350 082E                            u4270 073A                            u4190 0672  
                          u2751 2076                            u4511 0B9A                            u4431 098A  
                          u4351 082A                            u4271 0736                            u4191 066E  
                          u2760 2090                            u4600 1FE2                            u4520 0BC0  
                          u4440 09B6                            u4360 0842                            u4280 074A  
                          u2761 208C                            u4601 1FDE                            u4521 0BBC  
                          u4441 09B0                            u4361 083E                            u4281 0746  
                          u3810 273E                            u2770 20A6                            u4610 2008  
                          u4530 0BF0                            u4450 09B8                            u4370 0878  
                          u4290 075E                            u3811 273A                            u2771 20A2  
                          u4611 2004                            u4531 0BEC                            u4371 0874  
                          u4291 075A                            u3820 2662                            u3900 195E  
                          u2780 20C8                            u4620 212E                            u4540 0C04  
                          u4460 0A18                            u4380 088C                            u4700 0D2E  
                          u3821 265E                            u3901 195A                            u2781 20C4  
                          u4621 2128                            u4541 0C00                            u4461 0A14  
                          u4381 0888                            u4701 0D2A                            u3830 2670  
                          u3910 196E                            u2790 20D6                            u4630 2130  
                          u4550 0C18                            u4470 0A4C                            u4390 08C2  
                          u4710 0D50                            u3831 266C                            u3911 196A  
                          u2791 20D2                            u4551 0C14                            u4471 0A48  
                          u4391 08BE                            u4711 0D4C                            u3840 2750  
                          u3920 198C                            u4640 2142                            u4560 1F68  
                          u4480 0A6C                            u4800 0E72                            u4720 0D82  
                          u3841 274C                            u3921 1988                            u4641 213E  
                          u4561 1F64                            u4481 0A68                            u4801 0E6E  
                          u4721 0D7E                            u3850 26C6                            u4650 215C  
                          u4570 1F82                            u3930 1EA4                            u4490 0A94  
                          u4810 0E94                            u4730 0D92                            u3851 26C2  
                          u4651 2156                            u4571 1F7E                            u3931 1EA0  
                          u4491 0A90                            u4811 0E90                            u4731 0D8E  
                          u3860 18FC                            u4660 215E                            u4580 1FA8  
                          u3940 1EB4                            u4900 0FB2                            u4820 0EC6  
                          u4740 0DC0                            u3861 18F8                            u4581 1FA4  
                          u3941 1EB0                            u4901 0FAE                            u4821 0EC2  
                          u4741 0DBC                            u3870 190C                            u4590 1FC6  
                          u3950 1ED2                            u4910 0FD4                            u4830 0ED6  
                          u4750 0DD0                            u4670 0CE0                            u3871 1908  
                          u4591 1FC2                            u3951 1ECE                            u4911 0FD0  
                          u4831 0ED2                            u4751 0DCC                            u4671 0CDC  
                          u3880 192A                            u4920 24B4                            u3960 1EEC  
                          u4840 0F04                            u4760 0DF2                            u4680 0CF0  
                          u3881 1926                            u4921 24B0                            u3961 1EE8  
                          u4841 0F00                            u4761 0DEE                            u4681 0CEC  
                          u3890 1944                            u4930 124E                            u3970 1F06  
                          u4850 0F14                            u4770 0E24                            u4690 0D1E  
                          u3891 1940                            u4931 124A                            u3971 1F02  
                          u4851 0F10                            u4771 0E20                            u4691 0D1A  
                          u4940 134C                            u3980 1F16                            u4860 0F36  
                          u4780 0E34                            u4941 1348                            u3981 1F12  
                          u4861 0F32                            u4781 0E30                            u3990 1F34  
                          u4870 0F64                            u4790 0E62                            u3991 1F30  
                          u4871 0F60                            u4791 0E5E                            u4880 0F74  
                          u4881 0F70                            u4890 0FA2                            u4891 0F9E  
                          _TMR2 0FCC                            _main 1438                    ?_Ds1307Write 006A  
                          fsr2h 0FDA                            indf1 0FE7                            indf2 0FDF  
                          fsr1l 0FE1                            fsr2l 0FD9                            btemp 0070  
                          start 0058                   ??_ReadCounter 006F                    ___param_bank 0000  
              __end_of_I2cStart 2752                __end_of_I2cWrite 26CC                      _DeviceInit 2328  
               ??i2_ScanCounter 005A                           ?_main 005A                   ??_ScanDisplay 005E  
               __end_of___awdiv 201A                           _EEADR 0FA9                 __end_of___awmod 2246  
                         _T0CON 0FD5                 ___awdiv@divisor 006B                           _T1CON 0FCD  
                         _T2CON 0FCA                           _T3CON 0FB1                   ??_ScanCounter 0066  
                         i2l412 23DC                           i2l413 23E4                           i1l676 0048  
                         i2l467 2762                           i1l789 1CEA                           i2l657 1B0A  
                         i2l669 1B2C                           i2l891 1768                 ___awdiv@counter 008A  
                         i2l789 1DC4                   ??_ScanButtons 005A            _continue_pressed_cnt 0015  
                         _TMR0H 0FD7                           _TMR1H 0FCF                           _TMR0L 0FD6  
                         _TMR1L 0FCE                           _TMR3H 0FB3                           _TMR3L 0FB2  
            _rtc_default_values 0080                      _Busy1USART 26CC                   _Ds1307HMSRead 20DA  
               __end_of_low_isr 0058                           tablat 0FF5             __end_of_MarkDisplay 123E  
                         ttemp5 0071                           ttemp6 0074                           ttemp7 0078  
                         status 0FD8                           wtemp8 0071      Ds1307SecondSet@second_data 006A  
                 _DecValProcess 1DC6                 __initialization 24F8                   _Ds1307HourSet 1E8E  
                  __end_of_main 15EC             _up_btn_released_cnt 001D                   ??_OpenDisplay 0069  
                 ??_OpenCounter 0069                      _Open1USART 201A                   ??_OpenButtons 0069  
   UpdateDisplay@start_position 008F                          ??_main 0091             __end_of_ReadCounter 1438  
                 i2_WriteTimer0 2752                       ??_I2cInit 0069                       ??_I2cRead 0069  
               ??_M74HC595Write 005A                       ??_I2cWait 0069                  _OscillatorInit 2772  
                 __activetblptr 0002                       ??_I2cStop 0069                  ?_Ds1307HMSRead 006B  
           __end_of_ScanDisplay 176A                          _ADCON0 0FC2                          _ADCON1 0FC1  
        Ds1307Write@write_datas 006A                          _EEDATA 0FA8             __end_of_ScanCounter 1CEC  
                        _EECON2 0FA7                ___awdiv@dividend 0069             __end_of_ScanButtons 18DC  
                        i1l3501 1C4A                          i1l3503 1C4E                          i1l3511 1C6C  
                        i2l1112 18DA                          i1l3513 1C7C                          i1l3505 1C50  
                        i1l3531 1CD4                          i1l3515 1C8C                          i1l3523 1CBC  
                        i1l3507 1C62                          i1l3533 1CD6                          i1l3525 1CC0  
                        i1l3517 1C9C                          i1l3509 1C66                          i1l3535 1CE4  
                        i1l3527 1CC2                          i1l3519 1CAC                          i1l3537 1CE8  
                        i1l3529 1CD0                          i1l3491 1C12                          i1l3495 1C26  
                        i1l3497 1C36                          i1l3499 1C38                          i2l3401 1738  
                    _OpenTimer0 25DC                          i2l3411 176A                          i2l2451 2392  
                        i2l3403 1748                          i2l3421 1796                          i2l3413 1778  
                        i2l2461 23BC                          i2l3405 1758                          i2l3431 17C8  
                        i2l3423 17A6                          i2l3415 1780                          i2l2471 23CC  
                        i2l2463 23BE                          i2l2447 238C                          i2l3351 161A  
                        i1l3991 0044                          i2l3441 17F8                          i2l3433 17CC  
                        i2l3425 17AE                          i2l3417 1784                          i2l2465 23C0  
                        i2l2457 2396                          i2l2449 2390                          i2l3361 1656  
                        i2l3345 15EC                          i2l3601 1D9C                          i2l5105 2752  
                        i1l3985 0026                          i2l3451 181A                          i2l3443 17FC  
                        i2l3435 17D0                          i2l3427 17B2                          i2l3419 1788  
                        i2l2467 23C2                          i2l2459 23B4                          i2l3371 1674  
                        i2l3363 165C                          i2l3355 1644                          i2l3347 15FC  
                        i2l3611 1DC2                          i2l3603 1DAA                          i1l3987 0034  
                        i2l3461 1854                          i2l3453 1828                          i2l3445 180A  
                        i2l3437 17DE                          i2l3429 17C0                          i2l2469 23CA  
                        i2l3381 1692                          i2l3373 167A                          i2l3365 1662  
                        i2l3357 164A                          i2l3349 15FE                          i2l3605 1DAE  
                        i1l3989 0042                          i2l3471 1884                          i2l3463 185C  
                        i2l3455 183A                          i2l3447 1812                          i2l3439 17F0  
                        i2l3383 1698                          i2l3375 1680                          i2l3367 1668  
                        i2l3359 1650                          i2l3607 1DB0                          i2l3481 18AA  
                        i2l3473 188C                          i2l3465 1860                          i2l3457 1842  
                        i2l3449 1816                          i2l3385 169E                          i2l3377 1686  
                        i2l3369 166E                          i2l3393 16AA                          i2l3609 1DBE  
                        i2l3483 18AE                          i2l3475 1890                          i2l3467 1864  
                        i2l3459 1846                          i2l3387 16A0                          i2l3379 168C  
                        i2l3395 1704                          i2l3571 1D10                          i2l5251 1A5C  
                        i2l3485 18BC                          i2l3477 189E                          i2l3469 1872  
                        i2l3397 1722                          i2l3389 16A4                          i2l3581 1D3C  
                        i2l3573 1D12                          i2l3565 1CEC                          i2l5253 1A62  
                        i2l3487 18CE                          i2l3479 18A6                          i2l3399 1736  
                        i2l3591 1D76                          i2l3583 1D40                          i2l3575 1D24  
                        i2l5271 1A82                          i2l5247 1A40                          i2l3489 18D6  
                        i2l3593 1D86                          i2l3577 1D28                          i2l3585 1D46  
                        i2l3569 1D00                          i2l5281 1AFC                          i2l5273 1ADC  
                        i2l5249 1A4E                          i2l3587 1D56                          i2l3579 1D2A  
                        i2l5291 1B28                          i2l5283 1AFE                          i2l5275 1AE0  
                        i2l5267 1A72                          i2l3589 1D66                          i2l3597 1D96  
                        i2l5277 1AE4                          i2l3599 1D9A                          i2l5287 1B18  
                        i2l5279 1AE8                          i2l5289 1B26                          i2l6833 1A96  
                        i2l6835 16BE                          _RCREG1 0FAE                          _RCSTA1 0FAB  
                        _SPBRG1 0FAF               _temp_system_state 004A                          _SSPADD 0FC8  
                        _SSPBUF 0FC9                          _TXREG1 0FAD                          _TXSTA1 0FAC  
          _sel_btn_released_cnt 0019          _counter_hour_set_value 004D                  ?_DecValProcess 005A  
                ?_Ds1307HourSet 005A                __end_of_high_isr 1B38                       ??___awdiv 006D  
                     ??___awmod 006D                     ?_DeviceInit 005A                OpenTimer0@config 0069  
        __end_of_OscillatorInit 2780                          clear_0 251E                ___awdiv@quotient 008C  
               ___awmod@divisor 006B                      _Puts1USART 242E                          isa$std 0001  
                ?i2_WriteTimer0 005A                 ___awmod@counter 006D             _rtc_clock_disp_mode 0049  
           _rtc_clock_disp_type 0051             __end_of_OpenDisplay 2328                    __mediumconst 0000  
                     ??_low_isr 0066                          tblptrh 0FF7                          tblptrl 0FF6  
                        tblptru 0FF8             __end_of_OpenCounter 242E            _hour_btn_pressed_cnt 0029  
                   ?_Busy1USART 005A                     _MarkDisplay 1032             __end_of_OpenButtons 22BA  
          Ds1307Write@hour_temp 006D               M74HC595Write@data 005B               M74HC595Write@temp 005C  
                  ??_I2cRestart 0069                       ?_I2cStart 005A                       ?_I2cWrite 005A  
           _EnableAllInterrupts 27A8                      __accesstop 0080         __end_of__initialization 2524  
                 ___rparam_used 0001                    _BlinkDisable 262E                ??_UpDownTransfer 0069  
                __pcstackCOMRAM 005A                     _ReadCounter 123E                    __pidataBANK0 278E  
                 ??_StartTimer0 0069            ?_EnableAllInterrupts 005A                 ?_OscillatorInit 005A  
                   ?_Open1USART 0069                    ??_LEDProcess 0069              __end_of_I2cRestart 270A  
             __end_of_InitValue 24F8                     _ScanDisplay 15EC                    ??_Ds1307Init 0069  
                   _ScanCounter 1C12           _hour_btn_released_cnt 001F                     _ScanButtons 176A  
               ??_Ds1307HMSRead 006D                   ??_StopCounter 0069           _counter_down_comp_flg 003A  
         _counter_down_comp_cnt 0039         _counter_down_set_minute 0043         _counter_down_set_second 0042  
         __end_of_IncValProcess 25A4       _btn_long_press_verify_flg 0032                   BlinkDisable@i 0069  
             ??_Ds1307MinuteSet 006A               ??_Ds1307SecondSet 006A                      ??_I2cStart 0069  
                   ?_OpenTimer0 005A                      ??_I2cWrite 0069                   ??_Write1USART 0069  
                    __pnvCOMRAM 006F                 ??_DecValProcess 0069                 ??_Ds1307HourSet 006A  
         _counter_down_set_hour 0044              __end_of_LEDProcess 1C12              __end_of_Ds1307Init 278E  
         __end_of_VerifyButtons 1032                  I2cRead@receive 006A                 ??i2_WriteTimer0 005C  
         ??_EnableAllInterrupts 0069                WriteTimer0@timer 006B           __end_of_UpdateDisplay 24B6  
                 ??_WriteTimer0 006B                     _OpenDisplay 22BA                     ?_Puts1USART 006A  
                   _OpenCounter 23E6                     _OpenButtons 2246                         _I2cInit 26E4  
                       _I2cRead 25A4                         _I2cWait 2654                         _I2cStop 272E  
              Open1USART@config 006B             __end_of_StartTimer0 27A8              _counter_enable_flg 003E  
                 _ActionButtons 062E                         i2u53_40 23A8                         i2u53_41 23A0  
                       i2u55_40 23DC                         i2u54_48 23AA                         i2u55_41 23D8  
                       _SSPCON1 0FC6                _counter_skip_flg 003C                       ?_high_isr 005A  
                       _SSPSTAT 0FC7             __end_of_StopCounter 279E             i2WriteTimer0@timer0 005A  
            Ds1307HMSRead@F2604 0010                         __Hparam 0000                         __Lparam 0000  
           __end_of_Write1USART 262E                  M74HC595Write@i 005D                         ___awdiv 1F54  
                       ___awmod 2196                    __psmallconst 0600            _btn_press_verify_flg 0033  
                       __pcinit 24F8                         __ramtop 0600                         __ptext0 1438  
                       __ptext1 0CC6                         __ptext2 062E                         __ptext3 2532  
                       __ptext4 2798                         __ptext5 279E                         __ptext6 256C  
                       __ptext7 2676                         __ptext8 2694                         __ptext9 1E8E  
                     _T0CONbits 0FD5                       _T1CONbits 0FCD                       _T2CONbits 0FCA  
         __end_ofi2_ScanCounter 1DC6                         _int_cnt 004F                  ?_ActionButtons 005A  
                     _T3CONbits 0FB1                ___awmod@dividend 0069                   _real_rtc_data 0009  
           __end_of_WriteTimer0 271C                         _low_isr 0018               _rtc_hour_ampm_flg 0050  
                    ??_high_isr 0062                  __pintcode_body 1A36            end_of_initialization 2524  
                 __Lmediumconst 0000                         int_func 1A36                      I2cRead@ack 0069  
                       postdec1 0FE5                  Puts1USART@data 006A                         postinc0 0FEE  
                  ??_DeviceInit 006E                   ?_StartCounter 005A                     _StartTimer0 27A4  
                     _PORTAbits 0F80                       _PORTBbits 0F81                       _PORTDbits 0F83  
            _counter_seting_flg 003B           __end_of_M74HC595Write 23E6      Ds1307MinuteSet@minute_data 006A  
                     _TRISAbits 0F92                       _TRISBbits 0F93                       _TRISCbits 0F94  
                   _StopCounter 2798                       _TRISDbits 0F95                    ??_Busy1USART 0069  
                  ?_MarkDisplay 005A          _reset_btn_released_cnt 0017                   ?_M74HC595Init 005A  
            __end_of_DeviceInit 238A           _counter_min_set_value 004C                     _Write1USART 2606  
                  OpenDisplay@i 0069                ??_OscillatorInit 0069                    ?_ReadCounter 008E  
                ??_StartCounter 0069              __end_of_Busy1USART 26E4                    ??_Open1USART 006B  
                   _WriteTimer0 270A                 ??_ActionButtons 006D                    ?_ScanDisplay 005A  
               _Ds1307MinuteSet 2694                 _Ds1307SecondSet 2676                    ?_ScanCounter 005A  
                  ?_ScanButtons 005A             start_initialization 24F8            _down_btn_pressed_cnt 0025  
                     _InitValue 24B6                  ??_M74HC595Init 0069                    ??_OpenTimer0 0069  
                 ??_Ds1307Write 006C       UpdateDisplay@update_datas 008D              __end_of_Open1USART 20DA  
         _counter_sec_set_value 004B                 _BTN_CLICK_EVENT 0034                 _BTN_CLICK_STATE 0035  
                   __pdataBANK0 0080                    ?_OpenDisplay 005A                    ??_Puts1USART 006C  
                  ?_OpenCounter 005A                    ?_OpenButtons 005A                        ?_I2cInit 005A  
            __end_of_OpenTimer0 2606                        ?_I2cRead 005A                        ?_I2cWait 005A  
                      ?_I2cStop 005A                     __pbssCOMRAM 0001                 MarkDisplay@mark 006B  
                 __pcstackBANK0 008A                      ?_InitValue 005A           __end_of_Ds1307HMSRead 2196  
            _rtc_clock_set_mode 0048                  _UpdateSetValue 2764              _up_btn_pressed_cnt 0027  
            __end_of_Puts1USART 2474           __end_of_DecValProcess 1E8E     __end_of_EnableAllInterrupts 27AC  
         __end_of_Ds1307HourSet 1F54                       __pintcode 0008             __end_of_Ds1307Write 1A36  
                     _blink_cnt 0036                       _blink_pos 0001         __end_of_Ds1307MinuteSet 26B2  
       __end_of_Ds1307SecondSet 2694                        ?___awdiv 0069                        ?___awmod 0069  
                   __pintcodelo 0018                 Open1USART@spbrg 0069             _sel_btn_pressed_cnt 0023  
         __end_ofi2_WriteTimer0 2764                 _counter_up_hour 0041                     __smallconst 0600  
             WriteTimer0@timer0 0069              i2WriteTimer0@timer 005C                        ?_low_isr 005A  
             _counter_down_hour 0047                 Write1USART@data 0069            __end_of_StartCounter 27A4  
                      _I2cStart 2740          __end_of_UpdateSetValue 2772                        _I2cWrite 26B2  
                      _LATBbits 0F8A                        _LATCbits 0F8B                        _LATDbits 0F8C  
                      _PIE1bits 0F9D                        _PIE2bits 0FA0            _set_mode_release_cnt 002F  
                      i1u223_20 0034                        i1u223_21 0030                        i1u224_20 0042  
                      i1u224_21 003E                        i1u170_20 1C62                        i1u170_21 1C5E  
                      i1u171_20 1C7C                        i1u171_21 1C78                        i1u172_20 1C8C  
                      i1u172_21 1C88                        i1u173_20 1C9C                        i1u173_21 1C98  
                      i1u174_20 1CAC                        i1u174_21 1CA8                        i1u175_20 1CD0  
                      i1u167_20 1C22                        i1u175_21 1CCC                        i1u167_21 1C1E  
                      i1u176_20 1CE4                        i1u168_20 1C36                        i1u176_21 1CE0  
                      i1u168_21 1C32                        i1u169_20 1C4A                        i1u169_21 1C46  
                      i2u150_40 1748                        i2u150_41 1744                        i2u151_40 1758  
                      i2u151_41 1754                        i2u160_40 183A                        i2u152_40 1778  
                      i2u160_41 1836                        i2u152_41 1774                        i2u161_40 1854  
                      i2u153_40 1796                        i2u161_41 1850                        i2u153_41 1792  
                      i2u162_40 1872                        i2u154_40 17A6                        i2u146_40 161A  
                      i2u162_41 186E                        i2u154_41 17A2                        i2u146_41 1616  
                      i2u163_40 1884                        i2u155_40 17C0                        i2u147_40 1640  
                      i2u163_41 1880                        i2u155_41 17BC                        i2u147_41 163C  
                      i2u164_40 189E                        i2u156_40 17DE                        i2u148_40 1722  
                      i2u164_41 189A                        i2u156_41 17DA                        i2u148_41 171E  
                      i2u165_40 18BC                        i2u157_40 17F0                        i2u149_40 1736  
                      i2u165_41 18B8                        i2u157_41 17EC                        i2u149_41 1732  
                      i2u166_40 18CE                        i2u158_40 180A                        i2u190_40 1DAA  
                      i2u182_40 1CFC                        i2u166_41 18CA                        i2u158_41 1806  
                      i2u190_41 1DA6                        i2u182_41 1CF8                        i2u159_40 1828  
                      i2u191_40 1DBE                        i2u183_40 1D10                        i2u159_41 1824  
                      i2u191_41 1DBA                        i2u183_41 1D0C                        i2u184_40 1D24  
                      i2u184_41 1D20                        i2u185_40 1D3C                        i2u185_41 1D38  
                      _PIR1bits 0F9E                        i2u186_40 1D56                        i2u186_41 1D52  
                      i2u187_40 1D66                        i2u187_41 1D62                        _PIR2bits 0FA1  
                      i2u188_40 1D76                        i2u380_40 1B26                        i2u188_41 1D72  
                      i2u380_41 1B22                        i2u189_40 1D86                        i2u189_41 1D82  
                      i2u376_40 1A4E                        i2u376_41 1A4A                        i2u377_40 1A5C  
                      i2u377_41 1A58                        i2u378_40 1AFC                        i2u378_41 1AF8  
                      i2u379_40 1B18                        i2u379_41 1B14                        _RCONbits 0FD0  
                  ?_StartTimer0 005A                     _display_cnt 0037            __end_of_M74HC595Init 272E  
             _counter_up_minute 0040               _counter_up_second 003F                    ?_StopCounter 005A  
                   ??_InitValue 006E                     _INTCON2bits 0FF1                     _INTCON3bits 0FF0  
                     copy_data0 250C                   _IncValProcess 256C                 ?_UpdateSetValue 005A  
                  ?_Write1USART 005A                     _Ds1307Write 18DC                      _EECON1bits 0FA6  
                 ?_BlinkDisable 005A          ReadCounter@read_buffer 008E                        __Hrparam 0000  
                      __Lrparam 0000                   _VerifyButtons 0CC6                ?_Ds1307MinuteSet 005A  
                UpdateDisplay@i 006D                ?_Ds1307SecondSet 005A                      _BLINK_TIME 002B  
                  ?_WriteTimer0 0069                   _UpdateDisplay 2474             _counter_down_minute 0046  
           _counter_down_second 0045                        __ptext10 1DC6                        __ptext11 2764  
                      __ptext20 25A4                        __ptext12 2474                        __ptext21 2328  
                      __ptext13 1032                        __ptext30 271C                        __ptext22 270A  
                      __ptext14 123E                        __ptext31 23E6                        __ptext23 27A4  
                      __ptext15 2196                        __ptext40 27A8                        __ptext32 2246  
                      __ptext24 242E                        __ptext16 1F54                        __ptext41 2780  
                      __ptext33 201A                        __ptext25 2606                        __ptext17 1B38  
                      __ptext50 238A                        __ptext42 26E4                        __ptext34 24B6  
                      __ptext26 26CC                        __ptext18 20DA                        __ptext51 176A  
                      __ptext43 262E                        __ptext35 18DC                        __ptext27 2772  
                      __ptext19 26F8                        __ptext36 26B2                        __ptext28 25DC  
                      __ptext45 1C12                        __ptext37 2654                        __ptext29 22BA  
                      __ptext38 272E                        __ptext47 2752                        __ptext39 2740  
                      __ptext48 1CEC                        __ptext49 15EC                  ?_IncValProcess 005A  
         _reset_btn_pressed_cnt 0021                        _high_isr 0008          Ds1307HourSet@hour_data 006B  
                    _I2cRestart 26F8          Ds1307HourSet@hour_temp 006C                  ??_BlinkDisable 0069  
                ?_VerifyButtons 005A                        isa$xinst 0000                        int$flags 0070  
                ?_UpdateDisplay 008D               _SYSTEM_ACTION_FLG 004E                  _UpDownTransfer 2532  
                 _USART1_Status 0031                      _LEDProcess 1B38                      _Ds1307Init 2780  
              _blink_enable_flg 0038                     _OSCTUNEbits 0F9B           __end_of_ActionButtons 0CC6  
                    _INTCONbits 0FF2                   i2_ScanCounter 1CEC                        intlevel1 0000  
                      intlevel2 0000  Ds1307HMSRead@ds1307_date_datas 008A                      _RCSTA1bits 0FAB  
                    _OSCCONbits 0FD3          __end_of_UpDownTransfer 256C                    _StartCounter 279E  
         _down_btn_released_cnt 001B                  ?i2_ScanCounter 005A                   _led_blink_cnt 002D  
               ??_IncValProcess 0069                   _M74HC595Write 238A                     _SSPCON1bits 0FC6  
                   _SSPCON2bits 0FC5                    I2cWrite@data 0069                     ?_I2cRestart 005A  
                 _display_datas 0052                    _M74HC595Init 271C           _counter_direction_flg 003D  
             ActionButtons@temp 008A                 ??_VerifyButtons 008B  
