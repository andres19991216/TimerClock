

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Dec 05 15:44:43 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 23/03/2023 GMT
    79                           ; 
    80                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F4520 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	idataCOMRAM
   114   00298C                     __pidataCOMRAM:
   115                           	callstack 0
   116                           
   117                           ;initializer for _S7_Mode
   118   00298C  03                 	db	3
   119                           
   120                           ;initializer for _S6_Mode
   121   00298D  03                 	db	3
   122                           
   123                           ;initializer for _S5_Mode
   124   00298E  03                 	db	3
   125                           
   126                           ;initializer for _S4_Mode
   127   00298F  03                 	db	3
   128                           
   129                           ;initializer for _S3_Mode
   130   002990  03                 	db	3
   131                           
   132                           ;initializer for _S2_Mode
   133   002991  03                 	db	3
   134                           
   135                           ;initializer for _S1_Mode
   136   002992  03                 	db	3
   137                           
   138                           ;initializer for _S0_Mode
   139   002993  03                 	db	3
   140                           
   141                           	psect	idataBANK0
   142   00289C                     __pidataBANK0:
   143                           	callstack 0
   144                           
   145                           ;initializer for OpenS5500@F2852
   146   00289C  0A                 	db	10
   147   00289D  0A                 	db	10
   148   00289E  0F                 	db	15
   149   00289F  01                 	db	1
   150                           
   151                           ;initializer for OpenS5500@F2850
   152   0028A0  FF                 	db	255
   153   0028A1  FF                 	db	255
   154   0028A2  FF                 	db	255
   155   0028A3  00                 	db	0
   156                           
   157                           ;initializer for OpenS5500@F2848
   158   0028A4  0A                 	db	10
   159   0028A5  0A                 	db	10
   160   0028A6  0F                 	db	15
   161   0028A7  DF                 	db	223
   162                           
   163                           ;initializer for OpenW5500@F2679
   164   0028A8  0A                 	db	10
   165   0028A9  0A                 	db	10
   166   0028AA  0F                 	db	15
   167   0028AB  01                 	db	1
   168                           
   169                           ;initializer for OpenW5500@F2677
   170   0028AC  FF                 	db	255
   171   0028AD  FF                 	db	255
   172   0028AE  FF                 	db	255
   173   0028AF  00                 	db	0
   174                           
   175                           ;initializer for OpenW5500@F2675
   176   0028B0  0A                 	db	10
   177   0028B1  0A                 	db	10
   178   0028B2  0F                 	db	15
   179   0028B3  DF                 	db	223
   180                           
   181                           	psect	idataBANK1
   182   0028CC                     __pidataBANK1:
   183                           	callstack 0
   184                           
   185                           ;initializer for OpenS5500@F2846
   186   0028CC  F4                 	db	244
   187   0028CD  6B                 	db	107
   188   0028CE  8C                 	db	140
   189   0028CF  CE                 	db	206
   190   0028D0  67                 	db	103
   191   0028D1  4B                 	db	75
   192                           
   193                           ;initializer for OpenW5500@F2673
   194   0028D2  F4                 	db	244
   195   0028D3  6B                 	db	107
   196   0028D4  8C                 	db	140
   197   0028D5  CE                 	db	206
   198   0028D6  67                 	db	103
   199   0028D7  4B                 	db	75
   200                           
   201                           ;initializer for _rtc_default_values
   202   0028D8  10                 	db	16
   203   0028D9  12                 	db	18
   204   0028DA  09                 	db	9
   205   0028DB  05                 	db	5
   206   0028DC  30                 	db	48
   207   0028DD  11                 	db	17
   208   0028DE  23                 	db	35
   209   0028DF  00                 	db	0
   210   0028E0  00                 	db	0
   211   0028E1  00                 	db	0
   212   000000                     _EECON2	set	4007
   213   000000                     _EEDATA	set	4008
   214   000000                     _EEADR	set	4009
   215   000000                     _TXREG1	set	4013
   216   000000                     _RCREG1	set	4014
   217   000000                     _SPBRG1	set	4015
   218   000000                     _INTCON2bits	set	4081
   219   000000                     _TMR3L	set	4018
   220   000000                     _TMR3H	set	4019
   221   000000                     _TMR1L	set	4046
   222   000000                     _TMR1H	set	4047
   223   000000                     _TMR0L	set	4054
   224   000000                     _TMR0H	set	4055
   225                           
   226                           	psect	nvCOMRAM
   227   00006E                     __pnvCOMRAM:
   228                           	callstack 0
   229   00006E                     _SYSTEM_STATE_FLG:
   230                           	callstack 0
   231   00006E                     	ds	1
   232   000000                     _SSPCON1	set	4038
   233   000000                     _SSPSTAT	set	4039
   234   000000                     _PIE1	set	3997
   235   000000                     _RCSTA1bits	set	4011
   236   000000                     _TXSTA1bits	set	4012
   237   000000                     _T3CONbits	set	4017
   238   000000                     _T2CONbits	set	4042
   239   000000                     _T1CONbits	set	4045
   240   000000                     _T0CONbits	set	4053
   241   000000                     _PORTDbits	set	3971
   242   000000                     _PORTBbits	set	3969
   243   000000                     _LATBbits	set	3978
   244   000000                     _LATCbits	set	3979
   245   000000                     _PORTAbits	set	3968
   246   000000                     _TRISAbits	set	3986
   247   000000                     _OSCTUNEbits	set	3995
   248   000000                     _OSCCONbits	set	4051
   249   000000                     _T0CON	set	4053
   250   000000                     _PIE1bits	set	3997
   251   000000                     _PIR1bits	set	3998
   252   000000                     _ADCON1	set	4033
   253   000000                     _ADCON0	set	4034
   254   000000                     _SSPCON2bits	set	4037
   255   000000                     _SSPCON1bits	set	4038
   256   000000                     _SSPSTATbits	set	4039
   257   000000                     _TMR2	set	4044
   258   000000                     _T2CON	set	4042
   259   000000                     _T1CON	set	4045
   260   000000                     _SSPBUF	set	4041
   261   000000                     _SSPADD	set	4040
   262   000000                     _TRISDbits	set	3989
   263   000000                     _TRISCbits	set	3988
   264   000000                     _TRISBbits	set	3987
   265   000000                     _INTCON3bits	set	4080
   266   000000                     _INTCONbits	set	4082
   267   000000                     _RCONbits	set	4048
   268   000000                     _PIE2bits	set	4000
   269   000000                     _PIR2bits	set	4001
   270   000000                     _T3CON	set	4017
   271   000000                     _EECON1bits	set	4006
   272   000000                     _RCSTA1	set	4011
   273   000000                     _TXSTA1	set	4012
   274   000000                     _LATDbits	set	3980
   275                           
   276                           	psect	smallconst
   277   000600                     __psmallconst:
   278                           	callstack 0
   279   000600  00                 	db	0
   280   000601                     STR_1:
   281   000601  54                 	db	84	;'T'
   282   000602  68                 	db	104	;'h'
   283   000603  69                 	db	105	;'i'
   284   000604  73                 	db	115	;'s'
   285   000605  20                 	db	32
   286   000606  69                 	db	105	;'i'
   287   000607  73                 	db	115	;'s'
   288   000608  20                 	db	32
   289   000609  45                 	db	69	;'E'
   290   00060A  74                 	db	116	;'t'
   291   00060B  68                 	db	104	;'h'
   292   00060C  65                 	db	101	;'e'
   293   00060D  72                 	db	114	;'r'
   294   00060E  6E                 	db	110	;'n'
   295   00060F  65                 	db	101	;'e'
   296   000610  74                 	db	116	;'t'
   297   000611  20                 	db	32
   298   000612  70                 	db	112	;'p'
   299   000613  72                 	db	114	;'r'
   300   000614  6F                 	db	111	;'o'
   301   000615  74                 	db	116	;'t'
   302   000616  6F                 	db	111	;'o'
   303   000617  63                 	db	99	;'c'
   304   000618  6F                 	db	111	;'o'
   305   000619  6C                 	db	108	;'l'
   306   00061A  20                 	db	32
   307   00061B  74                 	db	116	;'t'
   308   00061C  65                 	db	101	;'e'
   309   00061D  73                 	db	115	;'s'
   310   00061E  74                 	db	116	;'t'
   311   00061F  20                 	db	32
   312   000620  66                 	db	102	;'f'
   313   000621  69                 	db	105	;'i'
   314   000622  72                 	db	114	;'r'
   315   000623  6D                 	db	109	;'m'
   316   000624  77                 	db	119	;'w'
   317   000625  61                 	db	97	;'a'
   318   000626  72                 	db	114	;'r'
   319   000627  65                 	db	101	;'e'
   320   000628  21                 	db	33
   321   000629  0D                 	db	13
   322   00062A  0A                 	db	10
   323   00062B  00                 	db	0
   324   00062C  57                 	db	87	;'W'
   325   00062D  35                 	db	53	;'5'
   326   00062E  35                 	db	53	;'5'
   327   00062F  30                 	db	48	;'0'
   328   000630  30                 	db	48	;'0'
   329   000631  20                 	db	32
   330   000632  49                 	db	73	;'I'
   331   000633  6E                 	db	110	;'n'
   332   000634  69                 	db	105	;'i'
   333   000635  74                 	db	116	;'t'
   334   000636  20                 	db	32
   335   000637  43                 	db	67	;'C'
   336   000638  6F                 	db	111	;'o'
   337   000639  6D                 	db	109	;'m'
   338   00063A  70                 	db	112	;'p'
   339   00063B  6C                 	db	108	;'l'
   340   00063C  65                 	db	101	;'e'
   341   00063D  74                 	db	116	;'t'
   342   00063E  65                 	db	101	;'e'
   343   00063F  21                 	db	33
   344   000640  0A                 	db	10
   345   000641  00                 	db	0
   346   000642  57                 	db	87	;'W'
   347   000643  35                 	db	53	;'5'
   348   000644  35                 	db	53	;'5'
   349   000645  30                 	db	48	;'0'
   350   000646  30                 	db	48	;'0'
   351   000647  2D                 	db	45
   352   000648  3E                 	db	62	;'>'
   353   000649  25                 	db	37
   354   00064A  64                 	db	100	;'d'
   355   00064B  0A                 	db	10
   356   00064C  00                 	db	0
   357   00064D  00                 	db	0	; dummy byte at the end
   358   000000                     
   359                           ; #config settings
   360                           
   361                           	psect	cinit
   362   0022EA                     __pcinit:
   363                           	callstack 0
   364   0022EA                     start_initialization:
   365                           	callstack 0
   366   0022EA                     __initialization:
   367                           	callstack 0
   368                           
   369                           ; Initialize objects allocated to BANK1 (22 bytes)
   370                           ; load TBLPTR registers with __pidataBANK1
   371   0022EA  0ECC               	movlw	low __pidataBANK1
   372   0022EC  6EF6               	movwf	tblptrl,c
   373   0022EE  0E28               	movlw	high __pidataBANK1
   374   0022F0  6EF7               	movwf	tblptrh,c
   375   0022F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   376   0022F4  6EF8               	movwf	tblptru,c
   377   0022F6  EE01  F000         	lfsr	0,__pdataBANK1
   378   0022FA  EE10 F016          	lfsr	1,22
   379   0022FE                     copy_data0:
   380   0022FE  0009               	tblrd		*+
   381   002300  CFF5 FFEE          	movff	tablat,postinc0
   382   002304  50E5               	movf	postdec1,w,c
   383   002306  50E1               	movf	fsr1l,w,c
   384   002308  E1FA               	bnz	copy_data0
   385                           
   386                           ; Initialize objects allocated to BANK0 (24 bytes)
   387                           ; load TBLPTR registers with __pidataBANK0
   388   00230A  0E9C               	movlw	low __pidataBANK0
   389   00230C  6EF6               	movwf	tblptrl,c
   390   00230E  0E28               	movlw	high __pidataBANK0
   391   002310  6EF7               	movwf	tblptrh,c
   392   002312  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   393   002314  6EF8               	movwf	tblptru,c
   394   002316  EE00  F0E8         	lfsr	0,__pdataBANK0
   395   00231A  EE10 F018          	lfsr	1,24
   396   00231E                     copy_data1:
   397   00231E  0009               	tblrd		*+
   398   002320  CFF5 FFEE          	movff	tablat,postinc0
   399   002324  50E5               	movf	postdec1,w,c
   400   002326  50E1               	movf	fsr1l,w,c
   401   002328  E1FA               	bnz	copy_data1
   402                           
   403                           ; Initialize objects allocated to COMRAM (8 bytes)
   404                           ; load TBLPTR registers with __pidataCOMRAM
   405   00232A  0E8C               	movlw	low __pidataCOMRAM
   406   00232C  6EF6               	movwf	tblptrl,c
   407   00232E  0E29               	movlw	high __pidataCOMRAM
   408   002330  6EF7               	movwf	tblptrh,c
   409   002332  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   410   002334  6EF8               	movwf	tblptru,c
   411   002336  EE00  F066         	lfsr	0,__pdataCOMRAM
   412   00233A  EE10 F008          	lfsr	1,8
   413   00233E                     copy_data2:
   414   00233E  0009               	tblrd		*+
   415   002340  CFF5 FFEE          	movff	tablat,postinc0
   416   002344  50E5               	movf	postdec1,w,c
   417   002346  50E1               	movf	fsr1l,w,c
   418   002348  E1FA               	bnz	copy_data2
   419                           
   420                           ; Clear objects allocated to BANK1 (14 bytes)
   421   00234A  EE01  F025         	lfsr	0,__pbssBANK1
   422   00234E  0E0E               	movlw	14
   423   002350                     clear_0:
   424   002350  6AEE               	clrf	postinc0,c
   425   002352  06E8               	decf	wreg,f,c
   426   002354  E1FD               	bnz	clear_0
   427                           
   428                           ; Clear objects allocated to BANK0 (104 bytes)
   429   002356  EE00  F080         	lfsr	0,__pbssBANK0
   430   00235A  0E68               	movlw	104
   431   00235C                     clear_1:
   432   00235C  6AEE               	clrf	postinc0,c
   433   00235E  06E8               	decf	wreg,f,c
   434   002360  E1FD               	bnz	clear_1
   435                           
   436                           ; Clear objects allocated to COMRAM (77 bytes)
   437   002362  EE00  F001         	lfsr	0,__pbssCOMRAM
   438   002366  0E4D               	movlw	77
   439   002368                     clear_2:
   440   002368  6AEE               	clrf	postinc0,c
   441   00236A  06E8               	decf	wreg,f,c
   442   00236C  E1FD               	bnz	clear_2
   443   00236E                     end_of_initialization:
   444                           	callstack 0
   445   00236E                     __end_of__initialization:
   446                           	callstack 0
   447   00236E  906F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   448   002370  926F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   449   002372  0E00               	movlw	low (__Lmediumconst shr (0+16))
   450   002374  6EF8               	movwf	tblptru,c
   451   002376  0100               	movlb	0
   452   002378  EF6C  F009         	goto	_main	;jump to C main() function
   453                           
   454                           	psect	bssCOMRAM
   455   000001                     __pbssCOMRAM:
   456                           	callstack 0
   457   000001                     _real_rtc_data:
   458                           	callstack 0
   459   000001                     	ds	7
   460   000008                     _CONTINUE_PRESSED_TIME:
   461                           	callstack 0
   462   000008                     	ds	2
   463   00000A                     _continue_pressed_cnt:
   464                           	callstack 0
   465   00000A                     	ds	2
   466   00000C                     _reset_btn_pressed_cnt:
   467                           	callstack 0
   468   00000C                     	ds	2
   469   00000E                     _sel_btn_pressed_cnt:
   470                           	callstack 0
   471   00000E                     	ds	2
   472   000010                     _down_btn_pressed_cnt:
   473                           	callstack 0
   474   000010                     	ds	2
   475   000012                     _up_btn_pressed_cnt:
   476                           	callstack 0
   477   000012                     	ds	2
   478   000014                     _hour_btn_pressed_cnt:
   479                           	callstack 0
   480   000014                     	ds	2
   481   000016                     _BLINK_TIME:
   482                           	callstack 0
   483   000016                     	ds	2
   484   000018                     _led_blink_cnt:
   485                           	callstack 0
   486   000018                     	ds	2
   487   00001A                     _W5500_Interrupt:
   488                           	callstack 0
   489   00001A                     	ds	1
   490   00001B                     _S7_Data:
   491                           	callstack 0
   492   00001B                     	ds	1
   493   00001C                     _S6_Data:
   494                           	callstack 0
   495   00001C                     	ds	1
   496   00001D                     _S5_Data:
   497                           	callstack 0
   498   00001D                     	ds	1
   499   00001E                     _S4_Data:
   500                           	callstack 0
   501   00001E                     	ds	1
   502   00001F                     _S3_Data:
   503                           	callstack 0
   504   00001F                     	ds	1
   505   000020                     _S2_Data:
   506                           	callstack 0
   507   000020                     	ds	1
   508   000021                     _S1_Data:
   509                           	callstack 0
   510   000021                     	ds	1
   511   000022                     _S0_Data:
   512                           	callstack 0
   513   000022                     	ds	1
   514   000023                     _S7_State:
   515                           	callstack 0
   516   000023                     	ds	1
   517   000024                     _S6_State:
   518                           	callstack 0
   519   000024                     	ds	1
   520   000025                     _S5_State:
   521                           	callstack 0
   522   000025                     	ds	1
   523   000026                     _S4_State:
   524                           	callstack 0
   525   000026                     	ds	1
   526   000027                     _S3_State:
   527                           	callstack 0
   528   000027                     	ds	1
   529   000028                     _S2_State:
   530                           	callstack 0
   531   000028                     	ds	1
   532   000029                     _S1_State:
   533                           	callstack 0
   534   000029                     	ds	1
   535   00002A                     _S0_State:
   536                           	callstack 0
   537   00002A                     	ds	1
   538   00002B                     _USART1_Status:
   539                           	callstack 0
   540   00002B                     	ds	1
   541   00002C                     _btn_long_press_verify_flg:
   542                           	callstack 0
   543   00002C                     	ds	1
   544   00002D                     _btn_press_verify_flg:
   545                           	callstack 0
   546   00002D                     	ds	1
   547   00002E                     _BTN_CLICK_EVENT:
   548                           	callstack 0
   549   00002E                     	ds	1
   550   00002F                     _BTN_CLICK_STATE:
   551                           	callstack 0
   552   00002F                     	ds	1
   553   000030                     _blink_cnt:
   554                           	callstack 0
   555   000030                     	ds	1
   556   000031                     _display_cnt:
   557                           	callstack 0
   558   000031                     	ds	1
   559   000032                     _blink_enable_flg:
   560                           	callstack 0
   561   000032                     	ds	1
   562   000033                     _counter_down_comp_cnt:
   563                           	callstack 0
   564   000033                     	ds	1
   565   000034                     _counter_down_comp_flg:
   566                           	callstack 0
   567   000034                     	ds	1
   568   000035                     _counter_seting_flg:
   569                           	callstack 0
   570   000035                     	ds	1
   571   000036                     _counter_skip_flg:
   572                           	callstack 0
   573   000036                     	ds	1
   574   000037                     _counter_direction_flg:
   575                           	callstack 0
   576   000037                     	ds	1
   577   000038                     _counter_enable_flg:
   578                           	callstack 0
   579   000038                     	ds	1
   580   000039                     _counter_up_second:
   581                           	callstack 0
   582   000039                     	ds	1
   583   00003A                     _counter_up_minute:
   584                           	callstack 0
   585   00003A                     	ds	1
   586   00003B                     _counter_up_hour:
   587                           	callstack 0
   588   00003B                     	ds	1
   589   00003C                     _counter_down_set_second:
   590                           	callstack 0
   591   00003C                     	ds	1
   592   00003D                     _counter_down_set_minute:
   593                           	callstack 0
   594   00003D                     	ds	1
   595   00003E                     _counter_down_set_hour:
   596                           	callstack 0
   597   00003E                     	ds	1
   598   00003F                     _counter_down_second:
   599                           	callstack 0
   600   00003F                     	ds	1
   601   000040                     _counter_down_minute:
   602                           	callstack 0
   603   000040                     	ds	1
   604   000041                     _counter_down_hour:
   605                           	callstack 0
   606   000041                     	ds	1
   607   000042                     _rtc_clock_set_mode:
   608                           	callstack 0
   609   000042                     	ds	1
   610   000043                     _rtc_clock_disp_mode:
   611                           	callstack 0
   612   000043                     	ds	1
   613   000044                     _temp_system_state:
   614                           	callstack 0
   615   000044                     	ds	1
   616   000045                     _counter_sec_set_value:
   617                           	callstack 0
   618   000045                     	ds	1
   619   000046                     _counter_min_set_value:
   620                           	callstack 0
   621   000046                     	ds	1
   622   000047                     _counter_hour_set_value:
   623                           	callstack 0
   624   000047                     	ds	1
   625   000048                     _SYSTEM_ACTION_FLG:
   626                           	callstack 0
   627   000048                     	ds	1
   628   000049                     _int_cnt:
   629                           	callstack 0
   630   000049                     	ds	1
   631   00004A                     _rtc_hour_ampm_flg:
   632                           	callstack 0
   633   00004A                     	ds	1
   634   00004B                     _rtc_clock_disp_type:
   635                           	callstack 0
   636   00004B                     	ds	1
   637   00004C                     _long_pressed_cnt:
   638                           	callstack 0
   639   00004C                     	ds	2
   640                           
   641                           	psect	dataCOMRAM
   642   000066                     __pdataCOMRAM:
   643                           	callstack 0
   644   000066                     _S7_Mode:
   645                           	callstack 0
   646   000066                     	ds	1
   647   000067                     _S6_Mode:
   648                           	callstack 0
   649   000067                     	ds	1
   650   000068                     _S5_Mode:
   651                           	callstack 0
   652   000068                     	ds	1
   653   000069                     _S4_Mode:
   654                           	callstack 0
   655   000069                     	ds	1
   656   00006A                     _S3_Mode:
   657                           	callstack 0
   658   00006A                     	ds	1
   659   00006B                     _S2_Mode:
   660                           	callstack 0
   661   00006B                     	ds	1
   662   00006C                     _S1_Mode:
   663                           	callstack 0
   664   00006C                     	ds	1
   665   00006D                     _S0_Mode:
   666                           	callstack 0
   667   00006D                     	ds	1
   668                           
   669                           	psect	bssBANK0
   670   000080                     __pbssBANK0:
   671                           	callstack 0
   672   000080                     _blink_pos:
   673                           	callstack 0
   674   000080                     	ds	8
   675   000088                     _display_datas:
   676                           	callstack 0
   677   000088                     	ds	8
   678   000090                     _IP_Addr:
   679                           	callstack 0
   680   000090                     	ds	4
   681   000094                     _Gateway_IP:
   682                           	callstack 0
   683   000094                     	ds	4
   684   000098                     _UDP_DPORT:
   685                           	callstack 0
   686   000098                     	ds	2
   687   00009A                     _S7_DPort:
   688                           	callstack 0
   689   00009A                     	ds	2
   690   00009C                     _S6_DPort:
   691                           	callstack 0
   692   00009C                     	ds	2
   693   00009E                     _S5_DPort:
   694                           	callstack 0
   695   00009E                     	ds	2
   696   0000A0                     _S4_DPort:
   697                           	callstack 0
   698   0000A0                     	ds	2
   699   0000A2                     _S3_DPort:
   700                           	callstack 0
   701   0000A2                     	ds	2
   702   0000A4                     _S2_DPort:
   703                           	callstack 0
   704   0000A4                     	ds	2
   705   0000A6                     _S1_DPort:
   706                           	callstack 0
   707   0000A6                     	ds	2
   708   0000A8                     _S0_DPort:
   709                           	callstack 0
   710   0000A8                     	ds	2
   711   0000AA                     _S7_Port:
   712                           	callstack 0
   713   0000AA                     	ds	2
   714   0000AC                     _S6_Port:
   715                           	callstack 0
   716   0000AC                     	ds	2
   717   0000AE                     _S5_Port:
   718                           	callstack 0
   719   0000AE                     	ds	2
   720   0000B0                     _S4_Port:
   721                           	callstack 0
   722   0000B0                     	ds	2
   723   0000B2                     _S3_Port:
   724                           	callstack 0
   725   0000B2                     	ds	2
   726   0000B4                     _S2_Port:
   727                           	callstack 0
   728   0000B4                     	ds	2
   729   0000B6                     _S1_Port:
   730                           	callstack 0
   731   0000B6                     	ds	2
   732   0000B8                     _S0_Port:
   733                           	callstack 0
   734   0000B8                     	ds	2
   735   0000BA                     _cnt:
   736                           	callstack 0
   737   0000BA                     	ds	2
   738   0000BC                     _reset_btn_released_cnt:
   739                           	callstack 0
   740   0000BC                     	ds	2
   741   0000BE                     _sel_btn_released_cnt:
   742                           	callstack 0
   743   0000BE                     	ds	2
   744   0000C0                     _down_btn_released_cnt:
   745                           	callstack 0
   746   0000C0                     	ds	2
   747   0000C2                     _up_btn_released_cnt:
   748                           	callstack 0
   749   0000C2                     	ds	2
   750   0000C4                     _hour_btn_released_cnt:
   751                           	callstack 0
   752   0000C4                     	ds	2
   753   0000C6                     _set_mode_release_cnt:
   754                           	callstack 0
   755   0000C6                     	ds	2
   756   0000C8                     _S7_DIP:
   757                           	callstack 0
   758   0000C8                     	ds	4
   759   0000CC                     _S6_DIP:
   760                           	callstack 0
   761   0000CC                     	ds	4
   762   0000D0                     _S5_DIP:
   763                           	callstack 0
   764   0000D0                     	ds	4
   765   0000D4                     _S4_DIP:
   766                           	callstack 0
   767   0000D4                     	ds	4
   768   0000D8                     _S3_DIP:
   769                           	callstack 0
   770   0000D8                     	ds	4
   771   0000DC                     _S2_DIP:
   772                           	callstack 0
   773   0000DC                     	ds	4
   774   0000E0                     _S1_DIP:
   775                           	callstack 0
   776   0000E0                     	ds	4
   777   0000E4                     _S0_DIP:
   778                           	callstack 0
   779   0000E4                     	ds	4
   780                           
   781                           	psect	dataBANK0
   782   0000E8                     __pdataBANK0:
   783                           	callstack 0
   784   0000E8                     OpenS5500@F2852:
   785                           	callstack 0
   786   0000E8                     	ds	4
   787   0000EC                     OpenS5500@F2850:
   788                           	callstack 0
   789   0000EC                     	ds	4
   790   0000F0                     OpenS5500@F2848:
   791                           	callstack 0
   792   0000F0                     	ds	4
   793   0000F4                     OpenW5500@F2679:
   794                           	callstack 0
   795   0000F4                     	ds	4
   796   0000F8                     OpenW5500@F2677:
   797                           	callstack 0
   798   0000F8                     	ds	4
   799   0000FC                     OpenW5500@F2675:
   800                           	callstack 0
   801   0000FC                     	ds	4
   802                           
   803                           	psect	bssBANK1
   804   000125                     __pbssBANK1:
   805                           	callstack 0
   806   000125                     _Phy_Addr:
   807                           	callstack 0
   808   000125                     	ds	6
   809   00012B                     _UDP_DIPR:
   810                           	callstack 0
   811   00012B                     	ds	4
   812   00012F                     _Sub_Mask:
   813                           	callstack 0
   814   00012F                     	ds	4
   815                           
   816                           	psect	dataBANK1
   817   000100                     __pdataBANK1:
   818                           	callstack 0
   819   000100                     OpenS5500@F2846:
   820                           	callstack 0
   821   000100                     	ds	6
   822   000106                     OpenW5500@F2673:
   823                           	callstack 0
   824   000106                     	ds	6
   825   00010C                     _rtc_default_values:
   826                           	callstack 0
   827   00010C                     	ds	10
   828                           
   829                           	psect	cstackBANK1
   830   000116                     __pcstackBANK1:
   831                           	callstack 0
   832   000116                     ??_VerifyButtons:
   833   000116                     ?_ReadCounter:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x0
   837   000116                     	ds	2
   838   000118                     ReadCounter@counter_datas:
   839                           	callstack 0
   840                           
   841                           ; 6 bytes @ 0x2
   842   000118                     	ds	6
   843   00011E                     UpdateDisplay@update_datas:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x8
   847   00011E                     	ds	2
   848   000120                     UpdateDisplay@start_position:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0xA
   852   000120                     	ds	1
   853   000121                     UpdateDisplay@end_position:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0xB
   857   000121                     	ds	1
   858   000122                     UpdateDisplay@i:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0xC
   862   000122                     	ds	1
   863   000123                     ??_main:
   864                           
   865                           ; 1 bytes @ 0xD
   866   000123                     	ds	2
   867                           
   868                           	psect	cstackCOMRAM
   869   00004E                     __pcstackCOMRAM:
   870                           	callstack 0
   871   00004E                     ??_M74HC595Write:
   872   00004E                     ?___lwdiv:
   873                           	callstack 0
   874   00004E                     ___lwdiv@dividend:
   875                           	callstack 0
   876   00004E                     i2WriteTimer0@timer0:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x0
   880   00004E                     	ds	1
   881   00004F                     M74HC595Write@data:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x1
   885   00004F                     	ds	1
   886   000050                     M74HC595Write@temp:
   887                           	callstack 0
   888   000050                     ___lwdiv@divisor:
   889                           	callstack 0
   890   000050                     i2WriteTimer0@timer:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x2
   894   000050                     	ds	1
   895   000051                     M74HC595Write@i:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x3
   899   000051                     	ds	1
   900   000052                     ??_ScanDisplay:
   901   000052                     ___lwdiv@quotient:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x4
   905   000052                     	ds	2
   906   000054                     ___lwdiv@counter:
   907                           	callstack 0
   908                           
   909                           ; 1 bytes @ 0x6
   910   000054                     	ds	2
   911   000056                     ScanDisplay@temp:
   912                           	callstack 0
   913                           
   914                           ; 1 bytes @ 0x8
   915   000056                     	ds	1
   916   000057                     ??_high_isr:
   917                           
   918                           ; 1 bytes @ 0x9
   919   000057                     	ds	4
   920   00005B                     ??_low_isr:
   921                           
   922                           ; 1 bytes @ 0xD
   923   00005B                     	ds	3
   924   00005E                     ??_LEDProcess:
   925   00005E                     ??_MarkDisplay:
   926   00005E                     ??_DecValProcess:
   927   00005E                     ?___awdiv:
   928                           	callstack 0
   929   00005E                     ?___awmod:
   930                           	callstack 0
   931   00005E                     I2cWrite@data:
   932                           	callstack 0
   933   00005E                     I2cRead@ack:
   934                           	callstack 0
   935   00005E                     OpenTimer0@config:
   936                           	callstack 0
   937   00005E                     OpenDisplay@i:
   938                           	callstack 0
   939   00005E                     BlinkDisable@i:
   940                           	callstack 0
   941   00005E                     Write1USART@data:
   942                           	callstack 0
   943   00005E                     WriteTimer0@timer0:
   944                           	callstack 0
   945   00005E                     Open1USART@spbrg:
   946                           	callstack 0
   947   00005E                     ___awdiv@dividend:
   948                           	callstack 0
   949   00005E                     ___awmod@dividend:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x10
   953   00005E                     	ds	1
   954   00005F                     ??_Ds1307HourSet:
   955   00005F                     Ds1307MinuteSet@minute_data:
   956                           	callstack 0
   957   00005F                     Ds1307SecondSet@second_data:
   958                           	callstack 0
   959   00005F                     I2cRead@receive:
   960                           	callstack 0
   961   00005F                     Ds1307Write@write_datas:
   962                           	callstack 0
   963   00005F                     Puts1USART@data:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x11
   967   00005F                     	ds	1
   968   000060                     ?_Ds1307HMSRead:
   969                           	callstack 0
   970   000060                     Ds1307HourSet@hour_data:
   971                           	callstack 0
   972   000060                     MarkDisplay@mark:
   973                           	callstack 0
   974   000060                     Open1USART@config:
   975                           	callstack 0
   976   000060                     WriteTimer0@timer:
   977                           	callstack 0
   978   000060                     ___awdiv@divisor:
   979                           	callstack 0
   980   000060                     ___awmod@divisor:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x12
   984   000060                     	ds	1
   985   000061                     ??_Ds1307Write:
   986   000061                     Ds1307HourSet@hour_temp:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x13
   990   000061                     	ds	1
   991   000062                     ??_ActionButtons:
   992   000062                     Ds1307Write@hour_temp:
   993                           	callstack 0
   994   000062                     ___awdiv@counter:
   995                           	callstack 0
   996   000062                     ___awmod@counter:
   997                           	callstack 0
   998   000062                     Ds1307HMSRead@ds1307_date_datas:
   999                           	callstack 0
  1000                           
  1001                           ; 3 bytes @ 0x14
  1002   000062                     	ds	1
  1003   000063                     ___awdiv@sign:
  1004                           	callstack 0
  1005   000063                     ___awmod@sign:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x15
  1009   000063                     	ds	1
  1010   000064                     ActionButtons@temp:
  1011                           	callstack 0
  1012   000064                     ___awdiv@quotient:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x16
  1016   000064                     	ds	2
  1017   000066                     
  1018                           ; 1 bytes @ 0x18
  1019 ;;
  1020 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1021 ;;
  1022 ;; *************** function _main *****************
  1023 ;; Defined at:
  1024 ;;		line 24 in file "Main.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1038 ;;      Params:         0       0       0       0       0       0       0
  1039 ;;      Locals:         0       0       0       0       0       0       0
  1040 ;;      Temps:          0       0       2       0       0       0       0
  1041 ;;      Totals:         0       0       2       0       0       0       0
  1042 ;;Total ram usage:        2 bytes
  1043 ;; Hardware stack levels required when called: 11
  1044 ;; This function calls:
  1045 ;;		_BlinkDisable
  1046 ;;		_DeviceInit
  1047 ;;		_Ds1307HMSRead
  1048 ;;		_LEDProcess
  1049 ;;		_ReadCounter
  1050 ;;		_UpdateDisplay
  1051 ;;		_VerifyButtons
  1052 ;; This function is called by:
  1053 ;;		Startup code after reset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text0
  1058   0012D8                     __ptext0:
  1059                           	callstack 0
  1060   0012D8                     _main:
  1061                           	callstack 20
  1062   0012D8                     
  1063                           ;Main.c: 28:     DeviceInit();
  1064   0012D8  ECB9  F012         	call	_DeviceInit	;wreg free
  1065   0012DC                     l9504:
  1066                           
  1067                           ;Main.c: 31:     {;Main.c: 32:         VerifyButtons();
  1068   0012DC  ECAB  F006         	call	_VerifyButtons	;wreg free
  1069   0012E0                     
  1070                           ;Main.c: 34:         if( counter_down_comp_flg ) {
  1071   0012E0  5034               	movf	_counter_down_comp_flg^0,w,c
  1072   0012E2  B4D8               	btfsc	status,2,c
  1073   0012E4  EF76  F009         	goto	u7081
  1074   0012E8  EF78  F009         	goto	u7080
  1075   0012EC                     u7081:
  1076   0012EC  EF82  F009         	goto	l9510
  1077   0012F0                     u7080:
  1078   0012F0                     
  1079                           ;Main.c: 35:             BLINK_TIME = 200; blink_enable_flg = 5; counter_skip_flg = 0;
  1080   0012F0  0E00               	movlw	0
  1081   0012F2  6E17               	movwf	(_BLINK_TIME+1)^0,c
  1082   0012F4  0EC8               	movlw	200
  1083   0012F6  6E16               	movwf	_BLINK_TIME^0,c
  1084   0012F8  0E05               	movlw	5
  1085   0012FA  6E32               	movwf	_blink_enable_flg^0,c
  1086   0012FC  0E00               	movlw	0
  1087   0012FE  6E36               	movwf	_counter_skip_flg^0,c
  1088                           
  1089                           ;Main.c: 36:         }
  1090   001300  EF91  F009         	goto	l9516
  1091   001304                     l9510:
  1092                           
  1093                           ;Main.c: 38:             BLINK_TIME = 300;
  1094   001304  0E01               	movlw	1
  1095   001306  6E17               	movwf	(_BLINK_TIME+1)^0,c
  1096   001308  0E2C               	movlw	44
  1097   00130A  6E16               	movwf	_BLINK_TIME^0,c
  1098   00130C                     
  1099                           ;Main.c: 39:             if( SYSTEM_STATE_FLG == 203 ) blink_enable_flg = 0;
  1100   00130C  0ECB               	movlw	203
  1101   00130E  186E               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  1102   001310  A4D8               	btfss	status,2,c
  1103   001312  EF8D  F009         	goto	u7091
  1104   001316  EF8F  F009         	goto	u7090
  1105   00131A                     u7091:
  1106   00131A  EF91  F009         	goto	l9516
  1107   00131E                     u7090:
  1108   00131E  0E00               	movlw	0
  1109   001320  6E32               	movwf	_blink_enable_flg^0,c
  1110   001322                     l9516:
  1111                           
  1112                           ;Main.c: 42:         if( !SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE ) continue;
  1113   001322  B048               	btfsc	_SYSTEM_ACTION_FLG^0,0,c	;volatile
  1114   001324  EF96  F009         	goto	u7101
  1115   001328  EF98  F009         	goto	u7100
  1116   00132C                     u7101:
  1117   00132C  EF9A  F009         	goto	l329
  1118   001330                     u7100:
  1119   001330  EF6E  F009         	goto	l9504
  1120   001334                     l329:
  1121                           
  1122                           ;Main.c: 43:         SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE = 0;
  1123   001334  9048               	bcf	_SYSTEM_ACTION_FLG^0,0,c	;volatile
  1124   001336                     
  1125                           ;Main.c: 45:         LEDProcess();
  1126   001336  ECDA  F00D         	call	_LEDProcess	;wreg free
  1127                           
  1128                           ;Main.c: 47:         switch( blink_enable_flg ) {
  1129   00133A  EFD6  F009         	goto	l9564
  1130   00133E                     l9522:
  1131                           
  1132                           ; BSR set to: 1
  1133   00133E  ECFF  F013         	call	_BlinkDisable	;wreg free
  1134   001342  EF0D  F00A         	goto	l9572
  1135   001346                     l9524:
  1136                           
  1137                           ; BSR set to: 1
  1138   001346  ECFF  F013         	call	_BlinkDisable	;wreg free
  1139   00134A                     l9526:
  1140   00134A  0E01               	movlw	1
  1141   00134C  0100               	movlb	0	; () banked
  1142   00134E  6F86               	movwf	(_blink_pos+6)& (0+255),b
  1143   001350  EF0D  F00A         	goto	l9572
  1144   001354                     l9528:
  1145                           
  1146                           ; BSR set to: 1
  1147   001354  ECFF  F013         	call	_BlinkDisable	;wreg free
  1148   001358  0E01               	movlw	1
  1149   00135A  0100               	movlb	0	; () banked
  1150   00135C  6F80               	movwf	_blink_pos& (0+255),b
  1151   00135E                     
  1152                           ; BSR set to: 0
  1153   00135E  0E01               	movlw	1
  1154   001360  6F81               	movwf	(_blink_pos+1)& (0+255),b
  1155   001362  EF0D  F00A         	goto	l9572
  1156   001366                     l9534:
  1157                           
  1158                           ; BSR set to: 1
  1159   001366  ECFF  F013         	call	_BlinkDisable	;wreg free
  1160   00136A  0E01               	movlw	1
  1161   00136C  0100               	movlb	0	; () banked
  1162   00136E  6F82               	movwf	(_blink_pos+2)& (0+255),b
  1163   001370                     
  1164                           ; BSR set to: 0
  1165   001370  0E01               	movlw	1
  1166   001372  6F83               	movwf	(_blink_pos+3)& (0+255),b
  1167   001374  EF0D  F00A         	goto	l9572
  1168   001378                     l9540:
  1169                           
  1170                           ; BSR set to: 1
  1171   001378  ECFF  F013         	call	_BlinkDisable	;wreg free
  1172   00137C  0E01               	movlw	1
  1173   00137E  0100               	movlb	0	; () banked
  1174   001380  6F84               	movwf	(_blink_pos+4)& (0+255),b
  1175   001382                     
  1176                           ; BSR set to: 0
  1177   001382  0E01               	movlw	1
  1178   001384  6F85               	movwf	(_blink_pos+5)& (0+255),b
  1179   001386  EF0D  F00A         	goto	l9572
  1180   00138A                     l9546:
  1181                           
  1182                           ; BSR set to: 1
  1183   00138A  ECFF  F013         	call	_BlinkDisable	;wreg free
  1184   00138E  0E01               	movlw	1
  1185   001390  0100               	movlb	0	; () banked
  1186   001392  6F80               	movwf	_blink_pos& (0+255),b
  1187   001394                     
  1188                           ; BSR set to: 0
  1189   001394  0E01               	movlw	1
  1190   001396  6F81               	movwf	(_blink_pos+1)& (0+255),b
  1191   001398                     
  1192                           ; BSR set to: 0
  1193   001398  0E01               	movlw	1
  1194   00139A  6F82               	movwf	(_blink_pos+2)& (0+255),b
  1195   00139C                     
  1196                           ; BSR set to: 0
  1197   00139C  0E01               	movlw	1
  1198   00139E  6F83               	movwf	(_blink_pos+3)& (0+255),b
  1199   0013A0                     
  1200                           ; BSR set to: 0
  1201   0013A0  0E01               	movlw	1
  1202   0013A2  6F84               	movwf	(_blink_pos+4)& (0+255),b
  1203   0013A4                     
  1204                           ; BSR set to: 0
  1205   0013A4  0E01               	movlw	1
  1206   0013A6  6F85               	movwf	(_blink_pos+5)& (0+255),b
  1207   0013A8  EFA5  F009         	goto	l9526
  1208   0013AC                     l9564:
  1209   0013AC  5032               	movf	_blink_enable_flg^0,w,c
  1210   0013AE  0101               	movlb	1	; () banked
  1211   0013B0  6F23               	movwf	??_main& (0+255),b
  1212   0013B2  6B24               	clrf	(??_main+1)& (0+255),b
  1213                           
  1214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1215                           ; Switch size 1, requested type "simple"
  1216                           ; Number of cases is 1, Range of values is 0 to 0
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte            4     3 (average)
  1220                           ;	Chosen strategy is simple_byte
  1221   0013B4  5124               	movf	(??_main+1)& (0+255),w,b
  1222   0013B6  0A00               	xorlw	0	; case 0
  1223   0013B8  B4D8               	btfsc	status,2,c
  1224   0013BA  EFE1  F009         	goto	l9932
  1225   0013BE  EF0D  F00A         	goto	l9572
  1226   0013C2                     l9932:
  1227                           
  1228                           ; BSR set to: 1
  1229                           ; Switch size 1, requested type "simple"
  1230                           ; Number of cases is 6, Range of values is 0 to 5
  1231                           ; switch strategies available:
  1232                           ; Name         Instructions Cycles
  1233                           ; simple_byte           19    10 (average)
  1234                           ;	Chosen strategy is simple_byte
  1235   0013C2  5123               	movf	??_main& (0+255),w,b
  1236   0013C4  0A00               	xorlw	0	; case 0
  1237   0013C6  B4D8               	btfsc	status,2,c
  1238   0013C8  EF9F  F009         	goto	l9522
  1239   0013CC  0A01               	xorlw	1	; case 1
  1240   0013CE  B4D8               	btfsc	status,2,c
  1241   0013D0  EFA3  F009         	goto	l9524
  1242   0013D4  0A03               	xorlw	3	; case 2
  1243   0013D6  B4D8               	btfsc	status,2,c
  1244   0013D8  EFAA  F009         	goto	l9528
  1245   0013DC  0A01               	xorlw	1	; case 3
  1246   0013DE  B4D8               	btfsc	status,2,c
  1247   0013E0  EFB3  F009         	goto	l9534
  1248   0013E4  0A07               	xorlw	7	; case 4
  1249   0013E6  B4D8               	btfsc	status,2,c
  1250   0013E8  EFBC  F009         	goto	l9540
  1251   0013EC  0A01               	xorlw	1	; case 5
  1252   0013EE  B4D8               	btfsc	status,2,c
  1253   0013F0  EFC5  F009         	goto	l9546
  1254   0013F4  EF0D  F00A         	goto	l9572
  1255   0013F8                     l9566:
  1256                           
  1257                           ; BSR set to: 1
  1258   0013F8  EC2D  F00F         	call	_Ds1307HMSRead	;wreg free
  1259   0013FC  C060  F11E         	movff	?_Ds1307HMSRead,UpdateDisplay@update_datas
  1260   001400  C061  F11F         	movff	?_Ds1307HMSRead+1,UpdateDisplay@update_datas+1
  1261   001404  0E01               	movlw	1
  1262   001406  0101               	movlb	1	; () banked
  1263   001408  6F20               	movwf	UpdateDisplay@start_position& (0+255),b
  1264   00140A  0E06               	movlw	6
  1265   00140C  6F21               	movwf	UpdateDisplay@end_position& (0+255),b
  1266   00140E  EC60  F013         	call	_UpdateDisplay	;wreg free
  1267   001412  0E00               	movlw	0
  1268   001414  6E32               	movwf	_blink_enable_flg^0,c
  1269   001416  EF1F  F00A         	goto	l9574
  1270   00141A                     l9572:
  1271   00141A  506E               	movf	_SYSTEM_STATE_FLG^0,w,c
  1272   00141C  0101               	movlb	1	; () banked
  1273   00141E  6F23               	movwf	??_main& (0+255),b
  1274   001420  6B24               	clrf	(??_main+1)& (0+255),b
  1275                           
  1276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1277                           ; Switch size 1, requested type "simple"
  1278                           ; Number of cases is 1, Range of values is 0 to 0
  1279                           ; switch strategies available:
  1280                           ; Name         Instructions Cycles
  1281                           ; simple_byte            4     3 (average)
  1282                           ;	Chosen strategy is simple_byte
  1283   001422  5124               	movf	(??_main+1)& (0+255),w,b
  1284   001424  0A00               	xorlw	0	; case 0
  1285   001426  B4D8               	btfsc	status,2,c
  1286   001428  EF18  F00A         	goto	l9934
  1287   00142C  EF1F  F00A         	goto	l9574
  1288   001430                     l9934:
  1289                           
  1290                           ; BSR set to: 1
  1291                           ; Switch size 1, requested type "simple"
  1292                           ; Number of cases is 1, Range of values is 100 to 100
  1293                           ; switch strategies available:
  1294                           ; Name         Instructions Cycles
  1295                           ; simple_byte            4     3 (average)
  1296                           ;	Chosen strategy is simple_byte
  1297   001430  5123               	movf	??_main& (0+255),w,b
  1298   001432  0A64               	xorlw	100	; case 100
  1299   001434  B4D8               	btfsc	status,2,c
  1300   001436  EFFC  F009         	goto	l9566
  1301   00143A  EF1F  F00A         	goto	l9574
  1302   00143E                     l9574:
  1303                           
  1304                           ;Main.c: 62:         if( counter_skip_flg ) continue;
  1305   00143E  5036               	movf	_counter_skip_flg^0,w,c
  1306   001440  B4D8               	btfsc	status,2,c
  1307   001442  EF25  F00A         	goto	u7111
  1308   001446  EF27  F00A         	goto	u7110
  1309   00144A                     u7111:
  1310   00144A  EF38  F00A         	goto	l9582
  1311   00144E                     u7110:
  1312   00144E  EF6E  F009         	goto	l9504
  1313   001452                     l346:
  1314   001452                     l9578:
  1315                           
  1316                           ; BSR set to: 1
  1317   001452  EC1B  F00B         	call	_ReadCounter	;wreg free
  1318   001456  C116  F11E         	movff	?_ReadCounter,UpdateDisplay@update_datas
  1319   00145A  C117  F11F         	movff	?_ReadCounter+1,UpdateDisplay@update_datas+1
  1320   00145E  0E01               	movlw	1
  1321   001460  0101               	movlb	1	; () banked
  1322   001462  6F20               	movwf	UpdateDisplay@start_position& (0+255),b
  1323   001464  0E06               	movlw	6
  1324   001466  6F21               	movwf	UpdateDisplay@end_position& (0+255),b
  1325   001468  EC60  F013         	call	_UpdateDisplay	;wreg free
  1326   00146C  EF6E  F009         	goto	l9504
  1327   001470                     l9582:
  1328   001470  506E               	movf	_SYSTEM_STATE_FLG^0,w,c
  1329   001472  0101               	movlb	1	; () banked
  1330   001474  6F23               	movwf	??_main& (0+255),b
  1331   001476  6B24               	clrf	(??_main+1)& (0+255),b
  1332                           
  1333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1334                           ; Switch size 1, requested type "simple"
  1335                           ; Number of cases is 1, Range of values is 0 to 0
  1336                           ; switch strategies available:
  1337                           ; Name         Instructions Cycles
  1338                           ; simple_byte            4     3 (average)
  1339                           ;	Chosen strategy is simple_byte
  1340   001478  5124               	movf	(??_main+1)& (0+255),w,b
  1341   00147A  0A00               	xorlw	0	; case 0
  1342   00147C  B4D8               	btfsc	status,2,c
  1343   00147E  EF43  F00A         	goto	l9936
  1344   001482  EF6E  F009         	goto	l9504
  1345   001486                     l9936:
  1346                           
  1347                           ; BSR set to: 1
  1348                           ; Switch size 1, requested type "simple"
  1349                           ; Number of cases is 4, Range of values is 200 to 203
  1350                           ; switch strategies available:
  1351                           ; Name         Instructions Cycles
  1352                           ; simple_byte           13     7 (average)
  1353                           ;	Chosen strategy is simple_byte
  1354   001486  5123               	movf	??_main& (0+255),w,b
  1355   001488  0AC8               	xorlw	200	; case 200
  1356   00148A  B4D8               	btfsc	status,2,c
  1357   00148C  EF29  F00A         	goto	l346
  1358   001490  0A01               	xorlw	1	; case 201
  1359   001492  B4D8               	btfsc	status,2,c
  1360   001494  EF29  F00A         	goto	l9578
  1361   001498  0A03               	xorlw	3	; case 202
  1362   00149A  B4D8               	btfsc	status,2,c
  1363   00149C  EF29  F00A         	goto	l9578
  1364   0014A0  0A01               	xorlw	1	; case 203
  1365   0014A2  B4D8               	btfsc	status,2,c
  1366   0014A4  EF29  F00A         	goto	l9578
  1367   0014A8  EF6E  F009         	goto	l9504
  1368   0014AC  EF2C  F000         	goto	start
  1369   0014B0                     __end_of_main:
  1370                           	callstack 0
  1371                           
  1372 ;; *************** function _VerifyButtons *****************
  1373 ;; Defined at:
  1374 ;;		line 47 in file "Buttons.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1388 ;;      Params:         0       0       0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0
  1390 ;;      Temps:          0       0       2       0       0       0       0
  1391 ;;      Totals:         0       0       2       0       0       0       0
  1392 ;;Total ram usage:        2 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 10
  1395 ;; This function calls:
  1396 ;;		_ActionButtons
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text1
  1403   000D56                     __ptext1:
  1404                           	callstack 0
  1405   000D56                     _VerifyButtons:
  1406                           	callstack 20
  1407   000D56                     
  1408                           ;Buttons.c: 49:     switch( BTN_CLICK_EVENT ) {
  1409   000D56  EF43  F008         	goto	l9482
  1410   000D5A                     l9380:
  1411                           
  1412                           ; BSR set to: 1
  1413   000D5A  0EB1               	movlw	177
  1414   000D5C  5C14               	subwf	_hour_btn_pressed_cnt^0,w,c
  1415   000D5E  0E04               	movlw	4
  1416   000D60  5815               	subwfb	(_hour_btn_pressed_cnt+1)^0,w,c
  1417   000D62  A0D8               	btfss	status,0,c
  1418   000D64  EFB6  F006         	goto	u6811
  1419   000D68  EFB8  F006         	goto	u6810
  1420   000D6C                     u6811:
  1421   000D6C  EFCC  F006         	goto	l9388
  1422   000D70                     u6810:
  1423   000D70                     
  1424                           ; BSR set to: 1
  1425   000D70  502C               	movf	_btn_long_press_verify_flg^0,w,c
  1426   000D72  A4D8               	btfss	status,2,c
  1427   000D74  EFBE  F006         	goto	u6821
  1428   000D78  EFC0  F006         	goto	u6820
  1429   000D7C                     u6821:
  1430   000D7C  EFC2  F006         	goto	l1135
  1431   000D80                     u6820:
  1432   000D80                     
  1433                           ; BSR set to: 1
  1434   000D80  0E10               	movlw	16
  1435   000D82  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1436   000D84                     l1135:
  1437                           
  1438                           ; BSR set to: 1
  1439   000D84  0E01               	movlw	1
  1440   000D86  6E2C               	movwf	_btn_long_press_verify_flg^0,c
  1441   000D88  0E04               	movlw	4
  1442   000D8A  6E15               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  1443   000D8C  0EB0               	movlw	176
  1444   000D8E  6E14               	movwf	_hour_btn_pressed_cnt^0,c
  1445   000D90                     l9386:
  1446                           
  1447                           ; BSR set to: 1
  1448   000D90  EC27  F003         	call	_ActionButtons	;wreg free
  1449   000D94  EFE5  F006         	goto	l9396
  1450   000D98                     l9388:
  1451                           
  1452                           ; BSR set to: 1
  1453   000D98  5015               	movf	(_hour_btn_pressed_cnt+1)^0,w,c
  1454   000D9A  E109               	bnz	u6830
  1455   000D9C  0E33               	movlw	51
  1456   000D9E  5C14               	subwf	_hour_btn_pressed_cnt^0,w,c
  1457   000DA0  A0D8               	btfss	status,0,c
  1458   000DA2  EFD5  F006         	goto	u6831
  1459   000DA6  EFD7  F006         	goto	u6830
  1460   000DAA                     u6831:
  1461   000DAA  EFE5  F006         	goto	l9396
  1462   000DAE                     u6830:
  1463   000DAE                     
  1464                           ; BSR set to: 1
  1465   000DAE  502D               	movf	_btn_press_verify_flg^0,w,c
  1466   000DB0  A4D8               	btfss	status,2,c
  1467   000DB2  EFDD  F006         	goto	u6841
  1468   000DB6  EFDF  F006         	goto	u6840
  1469   000DBA                     u6841:
  1470   000DBA  EFE1  F006         	goto	l1138
  1471   000DBE                     u6840:
  1472   000DBE                     
  1473                           ; BSR set to: 1
  1474   000DBE  0E0B               	movlw	11
  1475   000DC0  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1476   000DC2                     l1138:
  1477                           
  1478                           ; BSR set to: 1
  1479   000DC2  0E01               	movlw	1
  1480   000DC4  6E2D               	movwf	_btn_press_verify_flg^0,c
  1481   000DC6  EFC8  F006         	goto	l9386
  1482   000DCA                     l9396:
  1483                           
  1484                           ;Buttons.c: 53:                 if( hour_btn_released_cnt > 5 ) {
  1485   000DCA  0100               	movlb	0	; () banked
  1486   000DCC  51C5               	movf	(_hour_btn_released_cnt+1)& (0+255),w,b
  1487   000DCE  E109               	bnz	u6850
  1488   000DD0  0E06               	movlw	6
  1489   000DD2  5DC4               	subwf	_hour_btn_released_cnt& (0+255),w,b
  1490   000DD4  A0D8               	btfss	status,0,c
  1491   000DD6  EFEF  F006         	goto	u6851
  1492   000DDA  EFF1  F006         	goto	u6850
  1493   000DDE                     u6851:
  1494   000DDE  EF65  F008         	goto	l1169
  1495   000DE2                     u6850:
  1496   000DE2                     
  1497                           ; BSR set to: 0
  1498                           ;Buttons.c: 54:                     hour_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn_
      +                          long_press_verify_flg = 0; btn_press_verify_flg = 0; BTN_CLICK_STATE = 0;
  1499   000DE2  0E00               	movlw	0
  1500   000DE4  6FC5               	movwf	(_hour_btn_released_cnt+1)& (0+255),b
  1501   000DE6  0E00               	movlw	0
  1502   000DE8  6FC4               	movwf	_hour_btn_released_cnt& (0+255),b
  1503   000DEA  0E00               	movlw	0
  1504   000DEC  6E2E               	movwf	_BTN_CLICK_EVENT^0,c
  1505   000DEE  0E00               	movlw	0
  1506   000DF0  6E2C               	movwf	_btn_long_press_verify_flg^0,c
  1507   000DF2  0E00               	movlw	0
  1508   000DF4  6E2D               	movwf	_btn_press_verify_flg^0,c
  1509   000DF6  0E00               	movlw	0
  1510   000DF8  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1511   000DFA  EF65  F008         	goto	l1169
  1512   000DFE                     l9400:
  1513                           
  1514                           ; BSR set to: 1
  1515   000DFE  0EB1               	movlw	177
  1516   000E00  5C12               	subwf	_up_btn_pressed_cnt^0,w,c
  1517   000E02  0E04               	movlw	4
  1518   000E04  5813               	subwfb	(_up_btn_pressed_cnt+1)^0,w,c
  1519   000E06  A0D8               	btfss	status,0,c
  1520   000E08  EF08  F007         	goto	u6861
  1521   000E0C  EF0A  F007         	goto	u6860
  1522   000E10                     u6861:
  1523   000E10  EF1E  F007         	goto	l9408
  1524   000E14                     u6860:
  1525   000E14                     
  1526                           ; BSR set to: 1
  1527   000E14  502C               	movf	_btn_long_press_verify_flg^0,w,c
  1528   000E16  A4D8               	btfss	status,2,c
  1529   000E18  EF10  F007         	goto	u6871
  1530   000E1C  EF12  F007         	goto	u6870
  1531   000E20                     u6871:
  1532   000E20  EF14  F007         	goto	l1143
  1533   000E24                     u6870:
  1534   000E24                     
  1535                           ; BSR set to: 1
  1536   000E24  0E11               	movlw	17
  1537   000E26  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1538   000E28                     l1143:
  1539                           
  1540                           ; BSR set to: 1
  1541   000E28  0E01               	movlw	1
  1542   000E2A  6E2C               	movwf	_btn_long_press_verify_flg^0,c
  1543   000E2C  0E04               	movlw	4
  1544   000E2E  6E13               	movwf	(_up_btn_pressed_cnt+1)^0,c
  1545   000E30  0EB0               	movlw	176
  1546   000E32  6E12               	movwf	_up_btn_pressed_cnt^0,c
  1547   000E34                     l9406:
  1548                           
  1549                           ; BSR set to: 1
  1550   000E34  EC27  F003         	call	_ActionButtons	;wreg free
  1551   000E38  EF37  F007         	goto	l9416
  1552   000E3C                     l9408:
  1553                           
  1554                           ; BSR set to: 1
  1555   000E3C  5013               	movf	(_up_btn_pressed_cnt+1)^0,w,c
  1556   000E3E  E109               	bnz	u6880
  1557   000E40  0E33               	movlw	51
  1558   000E42  5C12               	subwf	_up_btn_pressed_cnt^0,w,c
  1559   000E44  A0D8               	btfss	status,0,c
  1560   000E46  EF27  F007         	goto	u6881
  1561   000E4A  EF29  F007         	goto	u6880
  1562   000E4E                     u6881:
  1563   000E4E  EF37  F007         	goto	l9416
  1564   000E52                     u6880:
  1565   000E52                     
  1566                           ; BSR set to: 1
  1567   000E52  502D               	movf	_btn_press_verify_flg^0,w,c
  1568   000E54  A4D8               	btfss	status,2,c
  1569   000E56  EF2F  F007         	goto	u6891
  1570   000E5A  EF31  F007         	goto	u6890
  1571   000E5E                     u6891:
  1572   000E5E  EF33  F007         	goto	l1146
  1573   000E62                     u6890:
  1574   000E62                     
  1575                           ; BSR set to: 1
  1576   000E62  0E0C               	movlw	12
  1577   000E64  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1578   000E66                     l1146:
  1579                           
  1580                           ; BSR set to: 1
  1581   000E66  0E01               	movlw	1
  1582   000E68  6E2D               	movwf	_btn_press_verify_flg^0,c
  1583   000E6A  EF1A  F007         	goto	l9406
  1584   000E6E                     l9416:
  1585                           
  1586                           ;Buttons.c: 60:                 if( up_btn_released_cnt > 5 ) {
  1587   000E6E  0100               	movlb	0	; () banked
  1588   000E70  51C3               	movf	(_up_btn_released_cnt+1)& (0+255),w,b
  1589   000E72  E109               	bnz	u6900
  1590   000E74  0E06               	movlw	6
  1591   000E76  5DC2               	subwf	_up_btn_released_cnt& (0+255),w,b
  1592   000E78  A0D8               	btfss	status,0,c
  1593   000E7A  EF41  F007         	goto	u6901
  1594   000E7E  EF43  F007         	goto	u6900
  1595   000E82                     u6901:
  1596   000E82  EF65  F008         	goto	l1169
  1597   000E86                     u6900:
  1598   000E86                     
  1599                           ; BSR set to: 0
  1600                           ;Buttons.c: 61:                     up_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn_lo
      +                          ng_press_verify_flg = 0; btn_press_verify_flg = 0; BTN_CLICK_STATE = 0;
  1601   000E86  0E00               	movlw	0
  1602   000E88  6FC3               	movwf	(_up_btn_released_cnt+1)& (0+255),b
  1603   000E8A  0E00               	movlw	0
  1604   000E8C  6FC2               	movwf	_up_btn_released_cnt& (0+255),b
  1605   000E8E  0E00               	movlw	0
  1606   000E90  6E2E               	movwf	_BTN_CLICK_EVENT^0,c
  1607   000E92  0E00               	movlw	0
  1608   000E94  6E2C               	movwf	_btn_long_press_verify_flg^0,c
  1609   000E96  0E00               	movlw	0
  1610   000E98  6E2D               	movwf	_btn_press_verify_flg^0,c
  1611   000E9A  0E00               	movlw	0
  1612   000E9C  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1613   000E9E  EF65  F008         	goto	l1169
  1614   000EA2                     l9420:
  1615                           
  1616                           ; BSR set to: 1
  1617   000EA2  0EB1               	movlw	177
  1618   000EA4  5C10               	subwf	_down_btn_pressed_cnt^0,w,c
  1619   000EA6  0E04               	movlw	4
  1620   000EA8  5811               	subwfb	(_down_btn_pressed_cnt+1)^0,w,c
  1621   000EAA  A0D8               	btfss	status,0,c
  1622   000EAC  EF5A  F007         	goto	u6911
  1623   000EB0  EF5C  F007         	goto	u6910
  1624   000EB4                     u6911:
  1625   000EB4  EF70  F007         	goto	l9428
  1626   000EB8                     u6910:
  1627   000EB8                     
  1628                           ; BSR set to: 1
  1629   000EB8  502C               	movf	_btn_long_press_verify_flg^0,w,c
  1630   000EBA  A4D8               	btfss	status,2,c
  1631   000EBC  EF62  F007         	goto	u6921
  1632   000EC0  EF64  F007         	goto	u6920
  1633   000EC4                     u6921:
  1634   000EC4  EF66  F007         	goto	l1150
  1635   000EC8                     u6920:
  1636   000EC8                     
  1637                           ; BSR set to: 1
  1638   000EC8  0E12               	movlw	18
  1639   000ECA  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1640   000ECC                     l1150:
  1641                           
  1642                           ; BSR set to: 1
  1643   000ECC  0E01               	movlw	1
  1644   000ECE  6E2C               	movwf	_btn_long_press_verify_flg^0,c
  1645   000ED0  0E04               	movlw	4
  1646   000ED2  6E11               	movwf	(_down_btn_pressed_cnt+1)^0,c
  1647   000ED4  0EB0               	movlw	176
  1648   000ED6  6E10               	movwf	_down_btn_pressed_cnt^0,c
  1649   000ED8                     l9426:
  1650                           
  1651                           ; BSR set to: 1
  1652   000ED8  EC27  F003         	call	_ActionButtons	;wreg free
  1653   000EDC  EF89  F007         	goto	l9436
  1654   000EE0                     l9428:
  1655                           
  1656                           ; BSR set to: 1
  1657   000EE0  5011               	movf	(_down_btn_pressed_cnt+1)^0,w,c
  1658   000EE2  E109               	bnz	u6930
  1659   000EE4  0E33               	movlw	51
  1660   000EE6  5C10               	subwf	_down_btn_pressed_cnt^0,w,c
  1661   000EE8  A0D8               	btfss	status,0,c
  1662   000EEA  EF79  F007         	goto	u6931
  1663   000EEE  EF7B  F007         	goto	u6930
  1664   000EF2                     u6931:
  1665   000EF2  EF89  F007         	goto	l9436
  1666   000EF6                     u6930:
  1667   000EF6                     
  1668                           ; BSR set to: 1
  1669   000EF6  502D               	movf	_btn_press_verify_flg^0,w,c
  1670   000EF8  A4D8               	btfss	status,2,c
  1671   000EFA  EF81  F007         	goto	u6941
  1672   000EFE  EF83  F007         	goto	u6940
  1673   000F02                     u6941:
  1674   000F02  EF85  F007         	goto	l1153
  1675   000F06                     u6940:
  1676   000F06                     
  1677                           ; BSR set to: 1
  1678   000F06  0E0D               	movlw	13
  1679   000F08  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1680   000F0A                     l1153:
  1681                           
  1682                           ; BSR set to: 1
  1683   000F0A  0E01               	movlw	1
  1684   000F0C  6E2D               	movwf	_btn_press_verify_flg^0,c
  1685   000F0E  EF6C  F007         	goto	l9426
  1686   000F12                     l9436:
  1687                           
  1688                           ;Buttons.c: 67:                 if( down_btn_released_cnt > 5 ) {
  1689   000F12  0100               	movlb	0	; () banked
  1690   000F14  51C1               	movf	(_down_btn_released_cnt+1)& (0+255),w,b
  1691   000F16  E109               	bnz	u6950
  1692   000F18  0E06               	movlw	6
  1693   000F1A  5DC0               	subwf	_down_btn_released_cnt& (0+255),w,b
  1694   000F1C  A0D8               	btfss	status,0,c
  1695   000F1E  EF93  F007         	goto	u6951
  1696   000F22  EF95  F007         	goto	u6950
  1697   000F26                     u6951:
  1698   000F26  EF65  F008         	goto	l1169
  1699   000F2A                     u6950:
  1700   000F2A                     
  1701                           ; BSR set to: 0
  1702                           ;Buttons.c: 68:                     down_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn_
      +                          long_press_verify_flg = 0; btn_press_verify_flg = 0; BTN_CLICK_STATE = 0;
  1703   000F2A  0E00               	movlw	0
  1704   000F2C  6FC1               	movwf	(_down_btn_released_cnt+1)& (0+255),b
  1705   000F2E  0E00               	movlw	0
  1706   000F30  6FC0               	movwf	_down_btn_released_cnt& (0+255),b
  1707   000F32  0E00               	movlw	0
  1708   000F34  6E2E               	movwf	_BTN_CLICK_EVENT^0,c
  1709   000F36  0E00               	movlw	0
  1710   000F38  6E2C               	movwf	_btn_long_press_verify_flg^0,c
  1711   000F3A  0E00               	movlw	0
  1712   000F3C  6E2D               	movwf	_btn_press_verify_flg^0,c
  1713   000F3E  0E00               	movlw	0
  1714   000F40  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1715   000F42  EF65  F008         	goto	l1169
  1716   000F46                     l9440:
  1717                           
  1718                           ; BSR set to: 1
  1719   000F46  0EB1               	movlw	177
  1720   000F48  5C0E               	subwf	_sel_btn_pressed_cnt^0,w,c
  1721   000F4A  0E04               	movlw	4
  1722   000F4C  580F               	subwfb	(_sel_btn_pressed_cnt+1)^0,w,c
  1723   000F4E  A0D8               	btfss	status,0,c
  1724   000F50  EFAC  F007         	goto	u6961
  1725   000F54  EFAE  F007         	goto	u6960
  1726   000F58                     u6961:
  1727   000F58  EFC2  F007         	goto	l9448
  1728   000F5C                     u6960:
  1729   000F5C                     
  1730                           ; BSR set to: 1
  1731   000F5C  502C               	movf	_btn_long_press_verify_flg^0,w,c
  1732   000F5E  A4D8               	btfss	status,2,c
  1733   000F60  EFB4  F007         	goto	u6971
  1734   000F64  EFB6  F007         	goto	u6970
  1735   000F68                     u6971:
  1736   000F68  EFB8  F007         	goto	l1157
  1737   000F6C                     u6970:
  1738   000F6C                     
  1739                           ; BSR set to: 1
  1740   000F6C  0E13               	movlw	19
  1741   000F6E  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1742   000F70                     l1157:
  1743                           
  1744                           ; BSR set to: 1
  1745   000F70  0E01               	movlw	1
  1746   000F72  6E2C               	movwf	_btn_long_press_verify_flg^0,c
  1747   000F74  0E04               	movlw	4
  1748   000F76  6E0F               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  1749   000F78  0EB0               	movlw	176
  1750   000F7A  6E0E               	movwf	_sel_btn_pressed_cnt^0,c
  1751   000F7C                     l9446:
  1752                           
  1753                           ; BSR set to: 1
  1754   000F7C  EC27  F003         	call	_ActionButtons	;wreg free
  1755   000F80  EFDB  F007         	goto	l9456
  1756   000F84                     l9448:
  1757                           
  1758                           ; BSR set to: 1
  1759   000F84  500F               	movf	(_sel_btn_pressed_cnt+1)^0,w,c
  1760   000F86  E109               	bnz	u6980
  1761   000F88  0E33               	movlw	51
  1762   000F8A  5C0E               	subwf	_sel_btn_pressed_cnt^0,w,c
  1763   000F8C  A0D8               	btfss	status,0,c
  1764   000F8E  EFCB  F007         	goto	u6981
  1765   000F92  EFCD  F007         	goto	u6980
  1766   000F96                     u6981:
  1767   000F96  EFDB  F007         	goto	l9456
  1768   000F9A                     u6980:
  1769   000F9A                     
  1770                           ; BSR set to: 1
  1771   000F9A  502D               	movf	_btn_press_verify_flg^0,w,c
  1772   000F9C  A4D8               	btfss	status,2,c
  1773   000F9E  EFD3  F007         	goto	u6991
  1774   000FA2  EFD5  F007         	goto	u6990
  1775   000FA6                     u6991:
  1776   000FA6  EFD7  F007         	goto	l1160
  1777   000FAA                     u6990:
  1778   000FAA                     
  1779                           ; BSR set to: 1
  1780   000FAA  0E0E               	movlw	14
  1781   000FAC  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1782   000FAE                     l1160:
  1783                           
  1784                           ; BSR set to: 1
  1785   000FAE  0E01               	movlw	1
  1786   000FB0  6E2D               	movwf	_btn_press_verify_flg^0,c
  1787   000FB2  EFBE  F007         	goto	l9446
  1788   000FB6                     l9456:
  1789                           
  1790                           ;Buttons.c: 74:                 if( sel_btn_released_cnt > 5 ) {
  1791   000FB6  0100               	movlb	0	; () banked
  1792   000FB8  51BF               	movf	(_sel_btn_released_cnt+1)& (0+255),w,b
  1793   000FBA  E109               	bnz	u7000
  1794   000FBC  0E06               	movlw	6
  1795   000FBE  5DBE               	subwf	_sel_btn_released_cnt& (0+255),w,b
  1796   000FC0  A0D8               	btfss	status,0,c
  1797   000FC2  EFE5  F007         	goto	u7001
  1798   000FC6  EFE7  F007         	goto	u7000
  1799   000FCA                     u7001:
  1800   000FCA  EF65  F008         	goto	l1169
  1801   000FCE                     u7000:
  1802   000FCE                     
  1803                           ; BSR set to: 0
  1804                           ;Buttons.c: 75:                     sel_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn_l
      +                          ong_press_verify_flg = 0; btn_press_verify_flg = 0;
  1805   000FCE  0E00               	movlw	0
  1806   000FD0  6FBF               	movwf	(_sel_btn_released_cnt+1)& (0+255),b
  1807   000FD2  0E00               	movlw	0
  1808   000FD4  6FBE               	movwf	_sel_btn_released_cnt& (0+255),b
  1809   000FD6  0E00               	movlw	0
  1810   000FD8  6E2E               	movwf	_BTN_CLICK_EVENT^0,c
  1811   000FDA  0E00               	movlw	0
  1812   000FDC  6E2C               	movwf	_btn_long_press_verify_flg^0,c
  1813   000FDE  0E00               	movlw	0
  1814   000FE0  6E2D               	movwf	_btn_press_verify_flg^0,c
  1815   000FE2  EF65  F008         	goto	l1169
  1816   000FE6                     l9460:
  1817                           
  1818                           ; BSR set to: 1
  1819   000FE6  0EB1               	movlw	177
  1820   000FE8  5C0C               	subwf	_reset_btn_pressed_cnt^0,w,c
  1821   000FEA  0E04               	movlw	4
  1822   000FEC  580D               	subwfb	(_reset_btn_pressed_cnt+1)^0,w,c
  1823   000FEE  A0D8               	btfss	status,0,c
  1824   000FF0  EFFC  F007         	goto	u7011
  1825   000FF4  EFFE  F007         	goto	u7010
  1826   000FF8                     u7011:
  1827   000FF8  EF12  F008         	goto	l9468
  1828   000FFC                     u7010:
  1829   000FFC                     
  1830                           ; BSR set to: 1
  1831   000FFC  502C               	movf	_btn_long_press_verify_flg^0,w,c
  1832   000FFE  A4D8               	btfss	status,2,c
  1833   001000  EF04  F008         	goto	u7021
  1834   001004  EF06  F008         	goto	u7020
  1835   001008                     u7021:
  1836   001008  EF08  F008         	goto	l1164
  1837   00100C                     u7020:
  1838   00100C                     
  1839                           ; BSR set to: 1
  1840   00100C  0E14               	movlw	20
  1841   00100E  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1842   001010                     l1164:
  1843                           
  1844                           ; BSR set to: 1
  1845   001010  0E01               	movlw	1
  1846   001012  6E2C               	movwf	_btn_long_press_verify_flg^0,c
  1847   001014  0E04               	movlw	4
  1848   001016  6E0D               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  1849   001018  0EB0               	movlw	176
  1850   00101A  6E0C               	movwf	_reset_btn_pressed_cnt^0,c
  1851   00101C                     l9466:
  1852                           
  1853                           ; BSR set to: 1
  1854   00101C  EC27  F003         	call	_ActionButtons	;wreg free
  1855   001020  EF2B  F008         	goto	l9476
  1856   001024                     l9468:
  1857                           
  1858                           ; BSR set to: 1
  1859   001024  500D               	movf	(_reset_btn_pressed_cnt+1)^0,w,c
  1860   001026  E109               	bnz	u7030
  1861   001028  0E33               	movlw	51
  1862   00102A  5C0C               	subwf	_reset_btn_pressed_cnt^0,w,c
  1863   00102C  A0D8               	btfss	status,0,c
  1864   00102E  EF1B  F008         	goto	u7031
  1865   001032  EF1D  F008         	goto	u7030
  1866   001036                     u7031:
  1867   001036  EF2B  F008         	goto	l9476
  1868   00103A                     u7030:
  1869   00103A                     
  1870                           ; BSR set to: 1
  1871   00103A  502D               	movf	_btn_press_verify_flg^0,w,c
  1872   00103C  A4D8               	btfss	status,2,c
  1873   00103E  EF23  F008         	goto	u7041
  1874   001042  EF25  F008         	goto	u7040
  1875   001046                     u7041:
  1876   001046  EF27  F008         	goto	l1167
  1877   00104A                     u7040:
  1878   00104A                     
  1879                           ; BSR set to: 1
  1880   00104A  0E0F               	movlw	15
  1881   00104C  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  1882   00104E                     l1167:
  1883                           
  1884                           ; BSR set to: 1
  1885   00104E  0E01               	movlw	1
  1886   001050  6E2D               	movwf	_btn_press_verify_flg^0,c
  1887   001052  EF0E  F008         	goto	l9466
  1888   001056                     l9476:
  1889                           
  1890                           ;Buttons.c: 81:                 if( reset_btn_released_cnt > 5 ) {
  1891   001056  0100               	movlb	0	; () banked
  1892   001058  51BD               	movf	(_reset_btn_released_cnt+1)& (0+255),w,b
  1893   00105A  E109               	bnz	u7050
  1894   00105C  0E06               	movlw	6
  1895   00105E  5DBC               	subwf	_reset_btn_released_cnt& (0+255),w,b
  1896   001060  A0D8               	btfss	status,0,c
  1897   001062  EF35  F008         	goto	u7051
  1898   001066  EF37  F008         	goto	u7050
  1899   00106A                     u7051:
  1900   00106A  EF65  F008         	goto	l1169
  1901   00106E                     u7050:
  1902   00106E                     
  1903                           ; BSR set to: 0
  1904                           ;Buttons.c: 82:                     reset_btn_released_cnt = 0; BTN_CLICK_EVENT = 0; btn
      +                          _long_press_verify_flg = 0; btn_press_verify_flg = 0;
  1905   00106E  0E00               	movlw	0
  1906   001070  6FBD               	movwf	(_reset_btn_released_cnt+1)& (0+255),b
  1907   001072  0E00               	movlw	0
  1908   001074  6FBC               	movwf	_reset_btn_released_cnt& (0+255),b
  1909   001076  0E00               	movlw	0
  1910   001078  6E2E               	movwf	_BTN_CLICK_EVENT^0,c
  1911   00107A  0E00               	movlw	0
  1912   00107C  6E2C               	movwf	_btn_long_press_verify_flg^0,c
  1913   00107E  0E00               	movlw	0
  1914   001080  6E2D               	movwf	_btn_press_verify_flg^0,c
  1915   001082  EF65  F008         	goto	l1169
  1916   001086                     l9482:
  1917   001086  502E               	movf	_BTN_CLICK_EVENT^0,w,c
  1918   001088  0101               	movlb	1	; () banked
  1919   00108A  6F16               	movwf	??_VerifyButtons& (0+255),b
  1920   00108C  6B17               	clrf	(??_VerifyButtons+1)& (0+255),b
  1921                           
  1922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1923                           ; Switch size 1, requested type "simple"
  1924                           ; Number of cases is 1, Range of values is 0 to 0
  1925                           ; switch strategies available:
  1926                           ; Name         Instructions Cycles
  1927                           ; simple_byte            4     3 (average)
  1928                           ;	Chosen strategy is simple_byte
  1929   00108E  5117               	movf	(??_VerifyButtons+1)& (0+255),w,b
  1930   001090  0A00               	xorlw	0	; case 0
  1931   001092  B4D8               	btfsc	status,2,c
  1932   001094  EF4E  F008         	goto	l9938
  1933   001098  EF65  F008         	goto	l1169
  1934   00109C                     l9938:
  1935                           
  1936                           ; BSR set to: 1
  1937                           ; Switch size 1, requested type "simple"
  1938                           ; Number of cases is 5, Range of values is 1 to 5
  1939                           ; switch strategies available:
  1940                           ; Name         Instructions Cycles
  1941                           ; simple_byte           16     9 (average)
  1942                           ;	Chosen strategy is simple_byte
  1943   00109C  5116               	movf	??_VerifyButtons& (0+255),w,b
  1944   00109E  0A01               	xorlw	1	; case 1
  1945   0010A0  B4D8               	btfsc	status,2,c
  1946   0010A2  EFAD  F006         	goto	l9380
  1947   0010A6  0A03               	xorlw	3	; case 2
  1948   0010A8  B4D8               	btfsc	status,2,c
  1949   0010AA  EFFF  F006         	goto	l9400
  1950   0010AE  0A01               	xorlw	1	; case 3
  1951   0010B0  B4D8               	btfsc	status,2,c
  1952   0010B2  EF51  F007         	goto	l9420
  1953   0010B6  0A07               	xorlw	7	; case 4
  1954   0010B8  B4D8               	btfsc	status,2,c
  1955   0010BA  EFA3  F007         	goto	l9440
  1956   0010BE  0A01               	xorlw	1	; case 5
  1957   0010C0  B4D8               	btfsc	status,2,c
  1958   0010C2  EFF3  F007         	goto	l9460
  1959   0010C6  EF65  F008         	goto	l1169
  1960   0010CA                     l1169:
  1961   0010CA  0012               	return		;funcret
  1962   0010CC                     __end_of_VerifyButtons:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _ActionButtons *****************
  1966 ;; Defined at:
  1967 ;;		line 88 in file "Buttons.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  temp            1   22[COMRAM] char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1981 ;;      Params:         0       0       0       0       0       0       0
  1982 ;;      Locals:         1       0       0       0       0       0       0
  1983 ;;      Temps:          2       0       0       0       0       0       0
  1984 ;;      Totals:         3       0       0       0       0       0       0
  1985 ;;Total ram usage:        3 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; Hardware stack levels required when called: 9
  1988 ;; This function calls:
  1989 ;;		_DecValProcess
  1990 ;;		_Ds1307HourSet
  1991 ;;		_Ds1307MinuteSet
  1992 ;;		_Ds1307SecondSet
  1993 ;;		_IncValProcess
  1994 ;;		_StartCounter
  1995 ;;		_StopCounter
  1996 ;;		_UpDownTransfer
  1997 ;; This function is called by:
  1998 ;;		_VerifyButtons
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text2
  2003   00064E                     __ptext2:
  2004                           	callstack 0
  2005   00064E                     _ActionButtons:
  2006                           	callstack 20
  2007   00064E                     
  2008                           ;Buttons.c: 90:     if( counter_down_comp_flg ) {
  2009   00064E  5034               	movf	_counter_down_comp_flg^0,w,c
  2010   000650  B4D8               	btfsc	status,2,c
  2011   000652  EF2D  F003         	goto	u4301
  2012   000656  EF2F  F003         	goto	u4300
  2013   00065A                     u4301:
  2014   00065A  EF85  F006         	goto	l6914
  2015   00065E                     u4300:
  2016   00065E                     
  2017                           ;Buttons.c: 91:         blink_enable_flg = 0; counter_down_comp_flg = 0; SYSTEM_STATE_FL
      +                          G = 203; BTN_CLICK_STATE = 0;
  2018   00065E  0E00               	movlw	0
  2019   000660  6E32               	movwf	_blink_enable_flg^0,c
  2020   000662  0E00               	movlw	0
  2021   000664  6E34               	movwf	_counter_down_comp_flg^0,c
  2022   000666  0ECB               	movlw	203
  2023   000668  6E6E               	movwf	_SYSTEM_STATE_FLG^0,c
  2024   00066A  0E00               	movlw	0
  2025   00066C  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  2026   00066E  EF85  F006         	goto	l6914
  2027   000672                     l6566:
  2028                           
  2029                           ;Buttons.c: 104:                     if( rtc_clock_disp_type == 0 ){
  2030   000672  504B               	movf	_rtc_clock_disp_type^0,w,c
  2031   000674  A4D8               	btfss	status,2,c
  2032   000676  EF3F  F003         	goto	u4311
  2033   00067A  EF41  F003         	goto	u4310
  2034   00067E                     u4311:
  2035   00067E  EF57  F003         	goto	l6574
  2036   000682                     u4310:
  2037   000682                     
  2038                           ;Buttons.c: 105:                         if( rtc_hour_ampm_flg == 0 && real_rtc_data[ 2 
      +                          ] == 0 ) real_rtc_data[ 2 ] = 0x12;
  2039   000682  504A               	movf	_rtc_hour_ampm_flg^0,w,c
  2040   000684  A4D8               	btfss	status,2,c
  2041   000686  EF47  F003         	goto	u4321
  2042   00068A  EF49  F003         	goto	u4320
  2043   00068E                     u4321:
  2044   00068E  EF53  F003         	goto	l1178
  2045   000692                     u4320:
  2046   000692  5003               	movf	(_real_rtc_data+2)^0,w,c
  2047   000694  A4D8               	btfss	status,2,c
  2048   000696  EF4F  F003         	goto	u4331
  2049   00069A  EF51  F003         	goto	u4330
  2050   00069E                     u4331:
  2051   00069E  EF53  F003         	goto	l1178
  2052   0006A2                     u4330:
  2053   0006A2  0E12               	movlw	18
  2054   0006A4  6E03               	movwf	(_real_rtc_data+2)^0,c
  2055   0006A6                     l1178:
  2056                           
  2057                           ;Buttons.c: 106:                         rtc_clock_disp_type = 1;
  2058   0006A6  0E01               	movlw	1
  2059   0006A8  6E4B               	movwf	_rtc_clock_disp_type^0,c
  2060                           
  2061                           ;Buttons.c: 107:                     }
  2062   0006AA  EF6C  F003         	goto	l1179
  2063   0006AE                     l6574:
  2064                           
  2065                           ;Buttons.c: 109:                         if( rtc_hour_ampm_flg == 0 && real_rtc_data[ 2 
      +                          ] == 0x12 ) real_rtc_data[ 2 ] = 0x00;
  2066   0006AE  504A               	movf	_rtc_hour_ampm_flg^0,w,c
  2067   0006B0  A4D8               	btfss	status,2,c
  2068   0006B2  EF5D  F003         	goto	u4341
  2069   0006B6  EF5F  F003         	goto	u4340
  2070   0006BA                     u4341:
  2071   0006BA  EF6A  F003         	goto	l1180
  2072   0006BE                     u4340:
  2073   0006BE  0E12               	movlw	18
  2074   0006C0  1803               	xorwf	(_real_rtc_data+2)^0,w,c
  2075   0006C2  A4D8               	btfss	status,2,c
  2076   0006C4  EF66  F003         	goto	u4351
  2077   0006C8  EF68  F003         	goto	u4350
  2078   0006CC                     u4351:
  2079   0006CC  EF6A  F003         	goto	l1180
  2080   0006D0                     u4350:
  2081   0006D0  0E00               	movlw	0
  2082   0006D2  6E03               	movwf	(_real_rtc_data+2)^0,c
  2083   0006D4                     l1180:
  2084                           
  2085                           ;Buttons.c: 110:                         rtc_clock_disp_type = 0;
  2086   0006D4  0E00               	movlw	0
  2087   0006D6  6E4B               	movwf	_rtc_clock_disp_type^0,c
  2088   0006D8                     l1179:
  2089                           
  2090                           ;Buttons.c: 112:                     BTN_CLICK_STATE = 0; Ds1307HourSet(real_rtc_data[ 2
      +                           ]);
  2091   0006D8  0E00               	movlw	0
  2092   0006DA  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  2093   0006DC  5003               	movf	(_real_rtc_data+2)^0,w,c
  2094   0006DE  ECF8  F00F         	call	_Ds1307HourSet
  2095   0006E2  EFAA  F006         	goto	l1181
  2096   0006E6                     l1182:
  2097                           
  2098                           ;Buttons.c: 115:                     temp = real_rtc_data[ 2 ]; temp ++;
  2099   0006E6  C003  F064         	movff	_real_rtc_data+2,ActionButtons@temp
  2100   0006EA  2A64               	incf	ActionButtons@temp^0,f,c
  2101   0006EC                     
  2102                           ;Buttons.c: 116:                     if( temp % 16 >= 10 ) temp += 6;
  2103   0006EC  C064  F062         	movff	ActionButtons@temp,??_ActionButtons
  2104   0006F0  6A63               	clrf	(??_ActionButtons+1)^0,c
  2105   0006F2  BE62               	btfsc	??_ActionButtons^0,7,c
  2106   0006F4  0663               	decf	(??_ActionButtons+1)^0,f,c
  2107   0006F6  0E0F               	movlw	15
  2108   0006F8  1662               	andwf	??_ActionButtons^0,f,c
  2109   0006FA  0E00               	movlw	0
  2110   0006FC  1663               	andwf	(??_ActionButtons+1)^0,f,c
  2111   0006FE  BE63               	btfsc	(??_ActionButtons+1)^0,7,c
  2112   000700  EF8B  F003         	goto	u4361
  2113   000704  5063               	movf	(??_ActionButtons+1)^0,w,c
  2114   000706  E109               	bnz	u4360
  2115   000708  0E0A               	movlw	10
  2116   00070A  5C62               	subwf	??_ActionButtons^0,w,c
  2117   00070C  A0D8               	btfss	status,0,c
  2118   00070E  EF8B  F003         	goto	u4361
  2119   000712  EF8D  F003         	goto	u4360
  2120   000716                     u4361:
  2121   000716  EF8F  F003         	goto	l6590
  2122   00071A                     u4360:
  2123   00071A  0E06               	movlw	6
  2124   00071C  2664               	addwf	ActionButtons@temp^0,f,c
  2125   00071E                     l6590:
  2126                           
  2127                           ;Buttons.c: 117:                     if( rtc_clock_disp_type == 0 ){
  2128   00071E  504B               	movf	_rtc_clock_disp_type^0,w,c
  2129   000720  A4D8               	btfss	status,2,c
  2130   000722  EF95  F003         	goto	u4371
  2131   000726  EF97  F003         	goto	u4370
  2132   00072A                     u4371:
  2133   00072A  EFB3  F003         	goto	l6600
  2134   00072E                     u4370:
  2135   00072E                     
  2136                           ;Buttons.c: 118:                         if( temp > 0x11 ) { rtc_hour_ampm_flg = 1; }
  2137   00072E  5064               	movf	ActionButtons@temp^0,w,c
  2138   000730  0A80               	xorlw	128
  2139   000732  0F6E               	addlw	-146
  2140   000734  A0D8               	btfss	status,0,c
  2141   000736  EF9F  F003         	goto	u4381
  2142   00073A  EFA1  F003         	goto	u4380
  2143   00073E                     u4381:
  2144   00073E  EFA3  F003         	goto	l6596
  2145   000742                     u4380:
  2146   000742  0E01               	movlw	1
  2147   000744  6E4A               	movwf	_rtc_hour_ampm_flg^0,c
  2148   000746                     l6596:
  2149                           
  2150                           ;Buttons.c: 119:                         if( temp > 0x23 ) { temp = 0; rtc_hour_ampm_flg
      +                           = 0; }
  2151   000746  5064               	movf	ActionButtons@temp^0,w,c
  2152   000748  0A80               	xorlw	128
  2153   00074A  0F5C               	addlw	-164
  2154   00074C  A0D8               	btfss	status,0,c
  2155   00074E  EFAB  F003         	goto	u4391
  2156   000752  EFAD  F003         	goto	u4390
  2157   000756                     u4391:
  2158   000756  EFDF  F003         	goto	l6614
  2159   00075A                     u4390:
  2160   00075A  0E00               	movlw	0
  2161   00075C  6E64               	movwf	ActionButtons@temp^0,c
  2162   00075E  0E00               	movlw	0
  2163   000760  6E4A               	movwf	_rtc_hour_ampm_flg^0,c
  2164   000762  EFDF  F003         	goto	l6614
  2165   000766                     l6600:
  2166   000766  044B               	decf	_rtc_clock_disp_type^0,w,c
  2167   000768  A4D8               	btfss	status,2,c
  2168   00076A  EFB9  F003         	goto	u4401
  2169   00076E  EFBB  F003         	goto	u4400
  2170   000772                     u4401:
  2171   000772  EFDF  F003         	goto	l6614
  2172   000776                     u4400:
  2173   000776                     
  2174                           ;Buttons.c: 122:                         if( temp > 0x12 ) temp = 1;
  2175   000776  5064               	movf	ActionButtons@temp^0,w,c
  2176   000778  0A80               	xorlw	128
  2177   00077A  0F6D               	addlw	-147
  2178   00077C  A0D8               	btfss	status,0,c
  2179   00077E  EFC3  F003         	goto	u4411
  2180   000782  EFC5  F003         	goto	u4410
  2181   000786                     u4411:
  2182   000786  EFC7  F003         	goto	l6606
  2183   00078A                     u4410:
  2184   00078A  0E01               	movlw	1
  2185   00078C  6E64               	movwf	ActionButtons@temp^0,c
  2186   00078E                     l6606:
  2187                           
  2188                           ;Buttons.c: 123:                         if( temp > 0x11 ) {
  2189   00078E  5064               	movf	ActionButtons@temp^0,w,c
  2190   000790  0A80               	xorlw	128
  2191   000792  0F6E               	addlw	-146
  2192   000794  A0D8               	btfss	status,0,c
  2193   000796  EFCF  F003         	goto	u4421
  2194   00079A  EFD1  F003         	goto	u4420
  2195   00079E                     u4421:
  2196   00079E  EFDF  F003         	goto	l6614
  2197   0007A2                     u4420:
  2198   0007A2                     
  2199                           ;Buttons.c: 124:                             if( rtc_hour_ampm_flg == 1 ) rtc_hour_ampm_
      +                          flg = 0;
  2200   0007A2  044A               	decf	_rtc_hour_ampm_flg^0,w,c
  2201   0007A4  A4D8               	btfss	status,2,c
  2202   0007A6  EFD7  F003         	goto	u4431
  2203   0007AA  EFD9  F003         	goto	u4430
  2204   0007AE                     u4431:
  2205   0007AE  EFDD  F003         	goto	l6612
  2206   0007B2                     u4430:
  2207   0007B2  0E00               	movlw	0
  2208   0007B4  6E4A               	movwf	_rtc_hour_ampm_flg^0,c
  2209   0007B6  EFDF  F003         	goto	l6614
  2210   0007BA                     l6612:
  2211   0007BA  0E01               	movlw	1
  2212   0007BC  6E4A               	movwf	_rtc_hour_ampm_flg^0,c
  2213   0007BE                     l6614:
  2214                           
  2215                           ;Buttons.c: 128:                     real_rtc_data[ 2 ] = temp;
  2216   0007BE  C064  F003         	movff	ActionButtons@temp,_real_rtc_data+2
  2217   0007C2                     
  2218                           ;Buttons.c: 129:                     Ds1307HourSet(real_rtc_data[ 2 ]);
  2219   0007C2  5003               	movf	(_real_rtc_data+2)^0,w,c
  2220   0007C4  ECF8  F00F         	call	_Ds1307HourSet
  2221   0007C8                     l6618:
  2222                           
  2223                           ;Buttons.c: 130:                     BTN_CLICK_STATE = 0;
  2224   0007C8  0E00               	movlw	0
  2225   0007CA  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  2226                           
  2227                           ;Buttons.c: 131:                     break;
  2228   0007CC  EFAA  F006         	goto	l1181
  2229   0007D0                     l6620:
  2230                           
  2231                           ;Buttons.c: 133:                     continue_pressed_cnt ++;
  2232   0007D0  4A0A               	infsnz	_continue_pressed_cnt^0,f,c
  2233   0007D2  2A0B               	incf	(_continue_pressed_cnt+1)^0,f,c
  2234   0007D4                     
  2235                           ;Buttons.c: 134:                     if( continue_pressed_cnt > CONTINUE_PRESSED_TIME ) 
      +                          {
  2236   0007D4  500A               	movf	_continue_pressed_cnt^0,w,c
  2237   0007D6  5C08               	subwf	_CONTINUE_PRESSED_TIME^0,w,c
  2238   0007D8  500B               	movf	(_continue_pressed_cnt+1)^0,w,c
  2239   0007DA  5809               	subwfb	(_CONTINUE_PRESSED_TIME+1)^0,w,c
  2240   0007DC  B0D8               	btfsc	status,0,c
  2241   0007DE  EFF3  F003         	goto	u4441
  2242   0007E2  EFF5  F003         	goto	u4440
  2243   0007E6                     u4441:
  2244   0007E6  EFAA  F006         	goto	l1181
  2245   0007EA                     u4440:
  2246   0007EA                     
  2247                           ;Buttons.c: 135:                         temp = real_rtc_data[ 1 ]; temp ++;
  2248   0007EA  C002  F064         	movff	_real_rtc_data+1,ActionButtons@temp
  2249   0007EE  2A64               	incf	ActionButtons@temp^0,f,c
  2250   0007F0                     
  2251                           ;Buttons.c: 136:                         if( temp % 16 >= 10 ) temp += 6;
  2252   0007F0  C064  F062         	movff	ActionButtons@temp,??_ActionButtons
  2253   0007F4  6A63               	clrf	(??_ActionButtons+1)^0,c
  2254   0007F6  BE62               	btfsc	??_ActionButtons^0,7,c
  2255   0007F8  0663               	decf	(??_ActionButtons+1)^0,f,c
  2256   0007FA  0E0F               	movlw	15
  2257   0007FC  1662               	andwf	??_ActionButtons^0,f,c
  2258   0007FE  0E00               	movlw	0
  2259   000800  1663               	andwf	(??_ActionButtons+1)^0,f,c
  2260   000802  BE63               	btfsc	(??_ActionButtons+1)^0,7,c
  2261   000804  EF0D  F004         	goto	u4451
  2262   000808  5063               	movf	(??_ActionButtons+1)^0,w,c
  2263   00080A  E109               	bnz	u4450
  2264   00080C  0E0A               	movlw	10
  2265   00080E  5C62               	subwf	??_ActionButtons^0,w,c
  2266   000810  A0D8               	btfss	status,0,c
  2267   000812  EF0D  F004         	goto	u4451
  2268   000816  EF0F  F004         	goto	u4450
  2269   00081A                     u4451:
  2270   00081A  EF11  F004         	goto	l1196
  2271   00081E                     u4450:
  2272   00081E  0E06               	movlw	6
  2273   000820  2664               	addwf	ActionButtons@temp^0,f,c
  2274   000822                     l1196:
  2275                           
  2276                           ;Buttons.c: 137:                         if( temp > 0x59 ) temp = 0;
  2277   000822  5064               	movf	ActionButtons@temp^0,w,c
  2278   000824  0A80               	xorlw	128
  2279   000826  0F26               	addlw	-218
  2280   000828  A0D8               	btfss	status,0,c
  2281   00082A  EF19  F004         	goto	u4461
  2282   00082E  EF1B  F004         	goto	u4460
  2283   000832                     u4461:
  2284   000832  EF1D  F004         	goto	l6634
  2285   000836                     u4460:
  2286   000836  0E00               	movlw	0
  2287   000838  6E64               	movwf	ActionButtons@temp^0,c
  2288   00083A                     l6634:
  2289                           
  2290                           ;Buttons.c: 138:                         real_rtc_data[ 1 ] = temp;
  2291   00083A  C064  F002         	movff	ActionButtons@temp,_real_rtc_data+1
  2292   00083E                     
  2293                           ;Buttons.c: 139:                         Ds1307MinuteSet(real_rtc_data[ 1 ]);
  2294   00083E  5002               	movf	(_real_rtc_data+1)^0,w,c
  2295   000840  EC32  F014         	call	_Ds1307MinuteSet
  2296   000844                     l6638:
  2297                           
  2298                           ;Buttons.c: 140:                         continue_pressed_cnt = 0;
  2299   000844  0E00               	movlw	0
  2300   000846  6E0B               	movwf	(_continue_pressed_cnt+1)^0,c
  2301   000848  0E00               	movlw	0
  2302   00084A  6E0A               	movwf	_continue_pressed_cnt^0,c
  2303   00084C  EFAA  F006         	goto	l1181
  2304   000850                     l6642:
  2305                           
  2306                           ;Buttons.c: 144:                     continue_pressed_cnt ++;
  2307   000850  4A0A               	infsnz	_continue_pressed_cnt^0,f,c
  2308   000852  2A0B               	incf	(_continue_pressed_cnt+1)^0,f,c
  2309   000854                     
  2310                           ;Buttons.c: 145:                     if( continue_pressed_cnt > CONTINUE_PRESSED_TIME ) 
      +                          {
  2311   000854  500A               	movf	_continue_pressed_cnt^0,w,c
  2312   000856  5C08               	subwf	_CONTINUE_PRESSED_TIME^0,w,c
  2313   000858  500B               	movf	(_continue_pressed_cnt+1)^0,w,c
  2314   00085A  5809               	subwfb	(_CONTINUE_PRESSED_TIME+1)^0,w,c
  2315   00085C  B0D8               	btfsc	status,0,c
  2316   00085E  EF33  F004         	goto	u4471
  2317   000862  EF35  F004         	goto	u4470
  2318   000866                     u4471:
  2319   000866  EFAA  F006         	goto	l1181
  2320   00086A                     u4470:
  2321   00086A                     
  2322                           ;Buttons.c: 146:                         temp = real_rtc_data[ 0 ]; temp ++;
  2323   00086A  C001  F064         	movff	_real_rtc_data,ActionButtons@temp
  2324   00086E  2A64               	incf	ActionButtons@temp^0,f,c
  2325   000870                     
  2326                           ;Buttons.c: 147:                         if( temp % 16 >= 10 ) temp += 6;
  2327   000870  C064  F062         	movff	ActionButtons@temp,??_ActionButtons
  2328   000874  6A63               	clrf	(??_ActionButtons+1)^0,c
  2329   000876  BE62               	btfsc	??_ActionButtons^0,7,c
  2330   000878  0663               	decf	(??_ActionButtons+1)^0,f,c
  2331   00087A  0E0F               	movlw	15
  2332   00087C  1662               	andwf	??_ActionButtons^0,f,c
  2333   00087E  0E00               	movlw	0
  2334   000880  1663               	andwf	(??_ActionButtons+1)^0,f,c
  2335   000882  BE63               	btfsc	(??_ActionButtons+1)^0,7,c
  2336   000884  EF4D  F004         	goto	u4481
  2337   000888  5063               	movf	(??_ActionButtons+1)^0,w,c
  2338   00088A  E109               	bnz	u4480
  2339   00088C  0E0A               	movlw	10
  2340   00088E  5C62               	subwf	??_ActionButtons^0,w,c
  2341   000890  A0D8               	btfss	status,0,c
  2342   000892  EF4D  F004         	goto	u4481
  2343   000896  EF4F  F004         	goto	u4480
  2344   00089A                     u4481:
  2345   00089A  EF51  F004         	goto	l1200
  2346   00089E                     u4480:
  2347   00089E  0E06               	movlw	6
  2348   0008A0  2664               	addwf	ActionButtons@temp^0,f,c
  2349   0008A2                     l1200:
  2350                           
  2351                           ;Buttons.c: 148:                         if( temp > 0x59 ) temp = 0;
  2352   0008A2  5064               	movf	ActionButtons@temp^0,w,c
  2353   0008A4  0A80               	xorlw	128
  2354   0008A6  0F26               	addlw	-218
  2355   0008A8  A0D8               	btfss	status,0,c
  2356   0008AA  EF59  F004         	goto	u4491
  2357   0008AE  EF5B  F004         	goto	u4490
  2358   0008B2                     u4491:
  2359   0008B2  EF5D  F004         	goto	l6656
  2360   0008B6                     u4490:
  2361   0008B6  0E00               	movlw	0
  2362   0008B8  6E64               	movwf	ActionButtons@temp^0,c
  2363   0008BA                     l6656:
  2364                           
  2365                           ;Buttons.c: 149:                         real_rtc_data[ 0 ] = temp;
  2366   0008BA  C064  F001         	movff	ActionButtons@temp,_real_rtc_data
  2367   0008BE                     
  2368                           ;Buttons.c: 150:                         Ds1307SecondSet(real_rtc_data[ 0 ]);
  2369   0008BE  5001               	movf	_real_rtc_data^0,w,c
  2370   0008C0  EC23  F014         	call	_Ds1307SecondSet
  2371   0008C4  EF22  F004         	goto	l6638
  2372   0008C8                     l6664:
  2373                           
  2374                           ;Buttons.c: 155:                     BTN_CLICK_STATE = 0;
  2375   0008C8  0E00               	movlw	0
  2376   0008CA  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  2377   0008CC                     
  2378                           ;Buttons.c: 156:                     temp = real_rtc_data[ 1 ]; temp ++;
  2379   0008CC  C002  F064         	movff	_real_rtc_data+1,ActionButtons@temp
  2380   0008D0  2A64               	incf	ActionButtons@temp^0,f,c
  2381   0008D2                     
  2382                           ;Buttons.c: 157:                     if( temp % 16 >= 10 ) temp += 6;
  2383   0008D2  C064  F062         	movff	ActionButtons@temp,??_ActionButtons
  2384   0008D6  6A63               	clrf	(??_ActionButtons+1)^0,c
  2385   0008D8  BE62               	btfsc	??_ActionButtons^0,7,c
  2386   0008DA  0663               	decf	(??_ActionButtons+1)^0,f,c
  2387   0008DC  0E0F               	movlw	15
  2388   0008DE  1662               	andwf	??_ActionButtons^0,f,c
  2389   0008E0  0E00               	movlw	0
  2390   0008E2  1663               	andwf	(??_ActionButtons+1)^0,f,c
  2391   0008E4  BE63               	btfsc	(??_ActionButtons+1)^0,7,c
  2392   0008E6  EF7E  F004         	goto	u4501
  2393   0008EA  5063               	movf	(??_ActionButtons+1)^0,w,c
  2394   0008EC  E109               	bnz	u4500
  2395   0008EE  0E0A               	movlw	10
  2396   0008F0  5C62               	subwf	??_ActionButtons^0,w,c
  2397   0008F2  A0D8               	btfss	status,0,c
  2398   0008F4  EF7E  F004         	goto	u4501
  2399   0008F8  EF80  F004         	goto	u4500
  2400   0008FC                     u4501:
  2401   0008FC  EF82  F004         	goto	l1203
  2402   000900                     u4500:
  2403   000900  0E06               	movlw	6
  2404   000902  2664               	addwf	ActionButtons@temp^0,f,c
  2405   000904                     l1203:
  2406                           
  2407                           ;Buttons.c: 158:                     if( temp > 0x59 ) temp = 0;
  2408   000904  5064               	movf	ActionButtons@temp^0,w,c
  2409   000906  0A80               	xorlw	128
  2410   000908  0F26               	addlw	-218
  2411   00090A  A0D8               	btfss	status,0,c
  2412   00090C  EF8A  F004         	goto	u4511
  2413   000910  EF8C  F004         	goto	u4510
  2414   000914                     u4511:
  2415   000914  EF8E  F004         	goto	l6676
  2416   000918                     u4510:
  2417   000918  0E00               	movlw	0
  2418   00091A  6E64               	movwf	ActionButtons@temp^0,c
  2419   00091C                     l6676:
  2420                           
  2421                           ;Buttons.c: 159:                     real_rtc_data[ 1 ] = temp;
  2422   00091C  C064  F002         	movff	ActionButtons@temp,_real_rtc_data+1
  2423   000920                     
  2424                           ;Buttons.c: 160:                     Ds1307MinuteSet(real_rtc_data[ 1 ]);
  2425   000920  5002               	movf	(_real_rtc_data+1)^0,w,c
  2426   000922  EC32  F014         	call	_Ds1307MinuteSet
  2427                           
  2428                           ;Buttons.c: 161:                     break;
  2429   000926  EFAA  F006         	goto	l1181
  2430   00092A                     l6680:
  2431                           
  2432                           ;Buttons.c: 163:                     BTN_CLICK_STATE = 0;
  2433   00092A  0E00               	movlw	0
  2434   00092C  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  2435   00092E                     
  2436                           ;Buttons.c: 164:                     temp = real_rtc_data[ 0 ]; temp ++;
  2437   00092E  C001  F064         	movff	_real_rtc_data,ActionButtons@temp
  2438   000932  2A64               	incf	ActionButtons@temp^0,f,c
  2439   000934                     
  2440                           ;Buttons.c: 165:                     if( temp % 16 >= 10 ) temp += 6;
  2441   000934  C064  F062         	movff	ActionButtons@temp,??_ActionButtons
  2442   000938  6A63               	clrf	(??_ActionButtons+1)^0,c
  2443   00093A  BE62               	btfsc	??_ActionButtons^0,7,c
  2444   00093C  0663               	decf	(??_ActionButtons+1)^0,f,c
  2445   00093E  0E0F               	movlw	15
  2446   000940  1662               	andwf	??_ActionButtons^0,f,c
  2447   000942  0E00               	movlw	0
  2448   000944  1663               	andwf	(??_ActionButtons+1)^0,f,c
  2449   000946  BE63               	btfsc	(??_ActionButtons+1)^0,7,c
  2450   000948  EFAF  F004         	goto	u4521
  2451   00094C  5063               	movf	(??_ActionButtons+1)^0,w,c
  2452   00094E  E109               	bnz	u4520
  2453   000950  0E0A               	movlw	10
  2454   000952  5C62               	subwf	??_ActionButtons^0,w,c
  2455   000954  A0D8               	btfss	status,0,c
  2456   000956  EFAF  F004         	goto	u4521
  2457   00095A  EFB1  F004         	goto	u4520
  2458   00095E                     u4521:
  2459   00095E  EFB3  F004         	goto	l1206
  2460   000962                     u4520:
  2461   000962  0E06               	movlw	6
  2462   000964  2664               	addwf	ActionButtons@temp^0,f,c
  2463   000966                     l1206:
  2464                           
  2465                           ;Buttons.c: 166:                     if( temp > 0x59 ) temp = 0;
  2466   000966  5064               	movf	ActionButtons@temp^0,w,c
  2467   000968  0A80               	xorlw	128
  2468   00096A  0F26               	addlw	-218
  2469   00096C  A0D8               	btfss	status,0,c
  2470   00096E  EFBB  F004         	goto	u4531
  2471   000972  EFBD  F004         	goto	u4530
  2472   000976                     u4531:
  2473   000976  EFBF  F004         	goto	l6692
  2474   00097A                     u4530:
  2475   00097A  0E00               	movlw	0
  2476   00097C  6E64               	movwf	ActionButtons@temp^0,c
  2477   00097E                     l6692:
  2478                           
  2479                           ;Buttons.c: 167:                     real_rtc_data[ 0 ] = temp;
  2480   00097E  C064  F001         	movff	ActionButtons@temp,_real_rtc_data
  2481   000982                     
  2482                           ;Buttons.c: 168:                     Ds1307SecondSet(real_rtc_data[ 0 ]);
  2483   000982  5001               	movf	_real_rtc_data^0,w,c
  2484   000984  EC23  F014         	call	_Ds1307SecondSet
  2485                           
  2486                           ;Buttons.c: 169:                     break;
  2487   000988  EFAA  F006         	goto	l1181
  2488   00098C                     l6698:
  2489   00098C  502F               	movf	_BTN_CLICK_STATE^0,w,c
  2490   00098E  6E62               	movwf	??_ActionButtons^0,c
  2491   000990  6A63               	clrf	(??_ActionButtons+1)^0,c
  2492                           
  2493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2494                           ; Switch size 1, requested type "simple"
  2495                           ; Number of cases is 1, Range of values is 0 to 0
  2496                           ; switch strategies available:
  2497                           ; Name         Instructions Cycles
  2498                           ; simple_byte            4     3 (average)
  2499                           ;	Chosen strategy is simple_byte
  2500   000992  5063               	movf	(??_ActionButtons+1)^0,w,c
  2501   000994  0A00               	xorlw	0	; case 0
  2502   000996  B4D8               	btfsc	status,2,c
  2503   000998  EFD0  F004         	goto	l9940
  2504   00099C  EFAA  F006         	goto	l1181
  2505   0009A0                     l9940:
  2506                           
  2507                           ; Switch size 1, requested type "simple"
  2508                           ; Number of cases is 6, Range of values is 11 to 18
  2509                           ; switch strategies available:
  2510                           ; Name         Instructions Cycles
  2511                           ; simple_byte           19    10 (average)
  2512                           ;	Chosen strategy is simple_byte
  2513   0009A0  5062               	movf	??_ActionButtons^0,w,c
  2514   0009A2  0A0B               	xorlw	11	; case 11
  2515   0009A4  B4D8               	btfsc	status,2,c
  2516   0009A6  EF73  F003         	goto	l1182
  2517   0009AA  0A07               	xorlw	7	; case 12
  2518   0009AC  B4D8               	btfsc	status,2,c
  2519   0009AE  EF64  F004         	goto	l6664
  2520   0009B2  0A01               	xorlw	1	; case 13
  2521   0009B4  B4D8               	btfsc	status,2,c
  2522   0009B6  EF95  F004         	goto	l6680
  2523   0009BA  0A03               	xorlw	3	; case 14
  2524   0009BC  B4D8               	btfsc	status,2,c
  2525   0009BE  EF39  F003         	goto	l6566
  2526   0009C2  0A1F               	xorlw	31	; case 17
  2527   0009C4  B4D8               	btfsc	status,2,c
  2528   0009C6  EFE8  F003         	goto	l6620
  2529   0009CA  0A03               	xorlw	3	; case 18
  2530   0009CC  B4D8               	btfsc	status,2,c
  2531   0009CE  EF28  F004         	goto	l6642
  2532   0009D2  EFAA  F006         	goto	l1181
  2533   0009D6                     l6700:
  2534                           
  2535                           ;Buttons.c: 180:                     BTN_CLICK_STATE = 0;
  2536   0009D6  0E00               	movlw	0
  2537   0009D8  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  2538                           
  2539                           ;Buttons.c: 181:                     if( counter_skip_flg ) return;
  2540   0009DA  5036               	movf	_counter_skip_flg^0,w,c
  2541   0009DC  B4D8               	btfsc	status,2,c
  2542   0009DE  EFF3  F004         	goto	u4541
  2543   0009E2  EFF5  F004         	goto	u4540
  2544   0009E6                     u4541:
  2545   0009E6  EFF7  F004         	goto	l6704
  2546   0009EA                     u4540:
  2547   0009EA  EFAA  F006         	goto	l1181
  2548   0009EE                     l6704:
  2549                           
  2550                           ;Buttons.c: 182:                     if( !counter_enable_flg ) { SYSTEM_STATE_FLG = 200;
      +                           StartCounter(); blink_enable_flg = 0; }
  2551   0009EE  5038               	movf	_counter_enable_flg^0,w,c
  2552   0009F0  A4D8               	btfss	status,2,c
  2553   0009F2  EFFD  F004         	goto	u4551
  2554   0009F6  EFFF  F004         	goto	u4550
  2555   0009FA                     u4551:
  2556   0009FA  EF07  F005         	goto	l6712
  2557   0009FE                     u4550:
  2558   0009FE  0EC8               	movlw	200
  2559   000A00  6E6E               	movwf	_SYSTEM_STATE_FLG^0,c
  2560   000A02  ECCD  F014         	call	_StartCounter	;wreg free
  2561   000A06                     l6710:
  2562   000A06  0E00               	movlw	0
  2563   000A08  6E32               	movwf	_blink_enable_flg^0,c
  2564   000A0A  EF0D  F005         	goto	l6718
  2565   000A0E                     l6712:
  2566   000A0E  0EC9               	movlw	201
  2567   000A10  6E6E               	movwf	_SYSTEM_STATE_FLG^0,c
  2568   000A12  ECCA  F014         	call	_StopCounter	;wreg free
  2569   000A16  EF03  F005         	goto	l6710
  2570   000A1A                     l6718:
  2571                           
  2572                           ;Buttons.c: 184:                     temp_system_state = SYSTEM_STATE_FLG;
  2573   000A1A  C06E  F044         	movff	_SYSTEM_STATE_FLG,_temp_system_state
  2574   000A1E  EFAA  F006         	goto	l1181
  2575   000A22                     l6722:
  2576                           
  2577                           ;Buttons.c: 187:                     if( !counter_enable_flg ) return;
  2578   000A22  5038               	movf	_counter_enable_flg^0,w,c
  2579   000A24  A4D8               	btfss	status,2,c
  2580   000A26  EF17  F005         	goto	u4561
  2581   000A2A  EF19  F005         	goto	u4560
  2582   000A2E                     u4561:
  2583   000A2E  EF1B  F005         	goto	l6726
  2584   000A32                     u4560:
  2585   000A32  EFAA  F006         	goto	l1181
  2586   000A36                     l6726:
  2587                           
  2588                           ;Buttons.c: 188:                     counter_skip_flg = 1 - counter_skip_flg;
  2589   000A36  0E01               	movlw	1
  2590   000A38  6E62               	movwf	??_ActionButtons^0,c
  2591   000A3A  0E00               	movlw	0
  2592   000A3C  6E63               	movwf	(??_ActionButtons+1)^0,c
  2593   000A3E  5036               	movf	_counter_skip_flg^0,w,c
  2594   000A40  5E62               	subwf	??_ActionButtons^0,f,c
  2595   000A42  0E00               	movlw	0
  2596   000A44  5A63               	subwfb	(??_ActionButtons+1)^0,f,c
  2597   000A46  5062               	movf	??_ActionButtons^0,w,c
  2598   000A48  1063               	iorwf	(??_ActionButtons+1)^0,w,c
  2599   000A4A  A4D8               	btfss	status,2,c
  2600   000A4C  EF2A  F005         	goto	u4571
  2601   000A50  EF2D  F005         	goto	u4570
  2602   000A54                     u4571:
  2603   000A54  0E01               	movlw	1
  2604   000A56  EF2E  F005         	goto	u4580
  2605   000A5A                     u4570:
  2606   000A5A  0E00               	movlw	0
  2607   000A5C                     u4580:
  2608   000A5C  6E36               	movwf	_counter_skip_flg^0,c
  2609   000A5E  EFE4  F003         	goto	l6618
  2610   000A62                     l6732:
  2611                           
  2612                           ;Buttons.c: 192:                     UpDownTransfer();
  2613   000A62  EC81  F013         	call	_UpDownTransfer	;wreg free
  2614   000A66                     
  2615                           ;Buttons.c: 193:                     counter_skip_flg = 0;
  2616   000A66  0E00               	movlw	0
  2617   000A68  6E36               	movwf	_counter_skip_flg^0,c
  2618   000A6A  EFE4  F003         	goto	l6618
  2619   000A6E                     l6742:
  2620   000A6E  502F               	movf	_BTN_CLICK_STATE^0,w,c
  2621   000A70  6E62               	movwf	??_ActionButtons^0,c
  2622   000A72  6A63               	clrf	(??_ActionButtons+1)^0,c
  2623                           
  2624                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2625                           ; Switch size 1, requested type "simple"
  2626                           ; Number of cases is 1, Range of values is 0 to 0
  2627                           ; switch strategies available:
  2628                           ; Name         Instructions Cycles
  2629                           ; simple_byte            4     3 (average)
  2630                           ;	Chosen strategy is simple_byte
  2631   000A74  5063               	movf	(??_ActionButtons+1)^0,w,c
  2632   000A76  0A00               	xorlw	0	; case 0
  2633   000A78  B4D8               	btfsc	status,2,c
  2634   000A7A  EF41  F005         	goto	l9942
  2635   000A7E  EFAA  F006         	goto	l1181
  2636   000A82                     l9942:
  2637                           
  2638                           ; Switch size 1, requested type "simple"
  2639                           ; Number of cases is 3, Range of values is 14 to 20
  2640                           ; switch strategies available:
  2641                           ; Name         Instructions Cycles
  2642                           ; simple_byte           10     6 (average)
  2643                           ;	Chosen strategy is simple_byte
  2644   000A82  5062               	movf	??_ActionButtons^0,w,c
  2645   000A84  0A0E               	xorlw	14	; case 14
  2646   000A86  B4D8               	btfsc	status,2,c
  2647   000A88  EFEB  F004         	goto	l6700
  2648   000A8C  0A01               	xorlw	1	; case 15
  2649   000A8E  B4D8               	btfsc	status,2,c
  2650   000A90  EF11  F005         	goto	l6722
  2651   000A94  0A1B               	xorlw	27	; case 20
  2652   000A96  B4D8               	btfsc	status,2,c
  2653   000A98  EF31  F005         	goto	l6732
  2654   000A9C  EFAA  F006         	goto	l1181
  2655   000AA0                     l6744:
  2656                           
  2657                           ;Buttons.c: 199:             counter_skip_flg = 0; blink_enable_flg = 0;
  2658   000AA0  0E00               	movlw	0
  2659   000AA2  6E36               	movwf	_counter_skip_flg^0,c
  2660   000AA4  0E00               	movlw	0
  2661   000AA6  6E32               	movwf	_blink_enable_flg^0,c
  2662                           
  2663                           ;Buttons.c: 200:             switch( BTN_CLICK_STATE ) {
  2664   000AA8  EFAC  F005         	goto	l6802
  2665   000AAC                     l6746:
  2666                           
  2667                           ;Buttons.c: 202:                     if( !counter_enable_flg ) { SYSTEM_STATE_FLG = 200;
      +                           StartCounter(); blink_enable_flg = 0; }
  2668   000AAC  5038               	movf	_counter_enable_flg^0,w,c
  2669   000AAE  A4D8               	btfss	status,2,c
  2670   000AB0  EF5C  F005         	goto	u4591
  2671   000AB4  EF5E  F005         	goto	u4590
  2672   000AB8                     u4591:
  2673   000AB8  EF66  F005         	goto	l6754
  2674   000ABC                     u4590:
  2675   000ABC  0EC8               	movlw	200
  2676   000ABE  6E6E               	movwf	_SYSTEM_STATE_FLG^0,c
  2677   000AC0  ECCD  F014         	call	_StartCounter	;wreg free
  2678   000AC4                     l6752:
  2679   000AC4  0E00               	movlw	0
  2680   000AC6  6E32               	movwf	_blink_enable_flg^0,c
  2681   000AC8  EF6C  F005         	goto	l6760
  2682   000ACC                     l6754:
  2683   000ACC  0EC9               	movlw	201
  2684   000ACE  6E6E               	movwf	_SYSTEM_STATE_FLG^0,c
  2685   000AD0  ECCA  F014         	call	_StopCounter	;wreg free
  2686   000AD4  EF62  F005         	goto	l6752
  2687   000AD8                     l6760:
  2688                           
  2689                           ;Buttons.c: 204:                     BTN_CLICK_STATE = 0; temp_system_state = SYSTEM_STA
      +                          TE_FLG;
  2690   000AD8  0E00               	movlw	0
  2691   000ADA  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  2692   000ADC  EF0D  F005         	goto	l6718
  2693   000AE0                     l6766:
  2694                           
  2695                           ;Buttons.c: 207:                     if( counter_direction_flg == 1 ){
  2696   000AE0  0437               	decf	_counter_direction_flg^0,w,c
  2697   000AE2  A4D8               	btfss	status,2,c
  2698   000AE4  EF76  F005         	goto	u4601
  2699   000AE8  EF78  F005         	goto	u4600
  2700   000AEC                     u4601:
  2701   000AEC  EF80  F005         	goto	l6770
  2702   000AF0                     u4600:
  2703   000AF0                     
  2704                           ;Buttons.c: 208:                         counter_up_hour = 0;
  2705   000AF0  0E00               	movlw	0
  2706   000AF2  6E3B               	movwf	_counter_up_hour^0,c
  2707                           
  2708                           ;Buttons.c: 209:                         counter_up_minute = 0;
  2709   000AF4  0E00               	movlw	0
  2710   000AF6  6E3A               	movwf	_counter_up_minute^0,c
  2711                           
  2712                           ;Buttons.c: 210:                         counter_up_second = 0;
  2713   000AF8  0E00               	movlw	0
  2714   000AFA  6E39               	movwf	_counter_up_second^0,c
  2715                           
  2716                           ;Buttons.c: 211:                     }
  2717   000AFC  EFE4  F003         	goto	l6618
  2718   000B00                     l6770:
  2719   000B00  5037               	movf	_counter_direction_flg^0,w,c
  2720   000B02  A4D8               	btfss	status,2,c
  2721   000B04  EF86  F005         	goto	u4611
  2722   000B08  EF88  F005         	goto	u4610
  2723   000B0C                     u4611:
  2724   000B0C  EFE4  F003         	goto	l6618
  2725   000B10                     u4610:
  2726   000B10                     l6772:
  2727                           
  2728                           ;Buttons.c: 213:                         counter_down_hour = counter_down_set_hour;
  2729   000B10  C03E  F041         	movff	_counter_down_set_hour,_counter_down_hour
  2730                           
  2731                           ;Buttons.c: 214:                         counter_down_minute = counter_down_set_minute;
  2732   000B14  C03D  F040         	movff	_counter_down_set_minute,_counter_down_minute
  2733                           
  2734                           ;Buttons.c: 215:                         counter_down_second = counter_down_set_second;
  2735   000B18  C03C  F03F         	movff	_counter_down_set_second,_counter_down_second
  2736   000B1C  EFE4  F003         	goto	l6618
  2737   000B20                     l6778:
  2738                           
  2739                           ;Buttons.c: 220:                     UpDownTransfer();
  2740   000B20  EC81  F013         	call	_UpDownTransfer	;wreg free
  2741   000B24  EFE4  F003         	goto	l6618
  2742   000B28                     l6784:
  2743                           
  2744                           ;Buttons.c: 224:                     if( counter_direction_flg == 1 ) { BTN_CLICK_STATE 
      +                          = 0; return; }
  2745   000B28  0437               	decf	_counter_direction_flg^0,w,c
  2746   000B2A  A4D8               	btfss	status,2,c
  2747   000B2C  EF9A  F005         	goto	u4621
  2748   000B30  EF9C  F005         	goto	u4620
  2749   000B34                     u4621:
  2750   000B34  EF9E  F005         	goto	l6790
  2751   000B38                     u4620:
  2752   000B38  EFE4  F003         	goto	l6618
  2753   000B3C                     l6790:
  2754                           
  2755                           ;Buttons.c: 225:                     SYSTEM_STATE_FLG = 202;
  2756   000B3C  0ECA               	movlw	202
  2757   000B3E  6E6E               	movwf	_SYSTEM_STATE_FLG^0,c
  2758                           
  2759                           ;Buttons.c: 226:                     break;
  2760   000B40  EFAA  F006         	goto	l1181
  2761   000B44                     l6792:
  2762                           
  2763                           ;Buttons.c: 228:                     if( counter_direction_flg == 1 ) { BTN_CLICK_STATE 
      +                          = 0; return; }
  2764   000B44  0437               	decf	_counter_direction_flg^0,w,c
  2765   000B46  A4D8               	btfss	status,2,c
  2766   000B48  EFA8  F005         	goto	u4631
  2767   000B4C  EFAA  F005         	goto	u4630
  2768   000B50                     u4631:
  2769   000B50  EF9E  F005         	goto	l6790
  2770   000B54                     u4630:
  2771   000B54  EFE4  F003         	goto	l6618
  2772   000B58                     l6802:
  2773   000B58  502F               	movf	_BTN_CLICK_STATE^0,w,c
  2774   000B5A  6E62               	movwf	??_ActionButtons^0,c
  2775   000B5C  6A63               	clrf	(??_ActionButtons+1)^0,c
  2776                           
  2777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2778                           ; Switch size 1, requested type "simple"
  2779                           ; Number of cases is 1, Range of values is 0 to 0
  2780                           ; switch strategies available:
  2781                           ; Name         Instructions Cycles
  2782                           ; simple_byte            4     3 (average)
  2783                           ;	Chosen strategy is simple_byte
  2784   000B5E  5063               	movf	(??_ActionButtons+1)^0,w,c
  2785   000B60  0A00               	xorlw	0	; case 0
  2786   000B62  B4D8               	btfsc	status,2,c
  2787   000B64  EFB6  F005         	goto	l9944
  2788   000B68  EFAA  F006         	goto	l1181
  2789   000B6C                     l9944:
  2790                           
  2791                           ; Switch size 1, requested type "simple"
  2792                           ; Number of cases is 5, Range of values is 12 to 20
  2793                           ; switch strategies available:
  2794                           ; Name         Instructions Cycles
  2795                           ; simple_byte           16     9 (average)
  2796                           ;	Chosen strategy is simple_byte
  2797   000B6C  5062               	movf	??_ActionButtons^0,w,c
  2798   000B6E  0A0C               	xorlw	12	; case 12
  2799   000B70  B4D8               	btfsc	status,2,c
  2800   000B72  EF94  F005         	goto	l6784
  2801   000B76  0A01               	xorlw	1	; case 13
  2802   000B78  B4D8               	btfsc	status,2,c
  2803   000B7A  EFA2  F005         	goto	l6792
  2804   000B7E  0A03               	xorlw	3	; case 14
  2805   000B80  B4D8               	btfsc	status,2,c
  2806   000B82  EF56  F005         	goto	l6746
  2807   000B86  0A01               	xorlw	1	; case 15
  2808   000B88  B4D8               	btfsc	status,2,c
  2809   000B8A  EF70  F005         	goto	l6766
  2810   000B8E  0A1B               	xorlw	27	; case 20
  2811   000B90  B4D8               	btfsc	status,2,c
  2812   000B92  EF90  F005         	goto	l6778
  2813   000B96  EFAA  F006         	goto	l1181
  2814   000B9A                     l6804:
  2815                           
  2816                           ;Buttons.c: 234:             counter_direction_flg = 0;
  2817   000B9A  0E00               	movlw	0
  2818   000B9C  6E37               	movwf	_counter_direction_flg^0,c
  2819                           
  2820                           ;Buttons.c: 235:             blink_enable_flg = 0;
  2821   000B9E  0E00               	movlw	0
  2822   000BA0  6E32               	movwf	_blink_enable_flg^0,c
  2823                           
  2824                           ;Buttons.c: 236:             switch( BTN_CLICK_STATE ) {
  2825   000BA2  EFE9  F005         	goto	l6840
  2826   000BA6                     l6810:
  2827                           
  2828                           ;Buttons.c: 242:                     SYSTEM_STATE_FLG = 200; StartCounter(); blink_enabl
      +                          e_flg = 0;
  2829   000BA6  0EC8               	movlw	200
  2830   000BA8  6E6E               	movwf	_SYSTEM_STATE_FLG^0,c
  2831   000BAA  ECCD  F014         	call	_StartCounter	;wreg free
  2832   000BAE  0E00               	movlw	0
  2833   000BB0  6E32               	movwf	_blink_enable_flg^0,c
  2834   000BB2  EFE4  F003         	goto	l6618
  2835   000BB6                     l6824:
  2836                           
  2837                           ;Buttons.c: 252:                     counter_direction_flg = 1;
  2838   000BB6  0E01               	movlw	1
  2839   000BB8  6E37               	movwf	_counter_direction_flg^0,c
  2840                           
  2841                           ;Buttons.c: 253:                     SYSTEM_STATE_FLG = 201; StopCounter();
  2842   000BBA  0EC9               	movlw	201
  2843   000BBC  6E6E               	movwf	_SYSTEM_STATE_FLG^0,c
  2844   000BBE  ECCA  F014         	call	_StopCounter	;wreg free
  2845   000BC2                     
  2846                           ;Buttons.c: 254:                     counter_up_hour = counter_down_hour;
  2847   000BC2  C041  F03B         	movff	_counter_down_hour,_counter_up_hour
  2848   000BC6                     
  2849                           ;Buttons.c: 255:                     counter_up_minute = counter_down_minute;
  2850   000BC6  C040  F03A         	movff	_counter_down_minute,_counter_up_minute
  2851   000BCA                     
  2852                           ;Buttons.c: 256:                     counter_up_second = counter_down_second;
  2853   000BCA  C03F  F039         	movff	_counter_down_second,_counter_up_second
  2854   000BCE  EFE4  F003         	goto	l6618
  2855   000BD2                     l6840:
  2856   000BD2  502F               	movf	_BTN_CLICK_STATE^0,w,c
  2857   000BD4  6E62               	movwf	??_ActionButtons^0,c
  2858   000BD6  6A63               	clrf	(??_ActionButtons+1)^0,c
  2859                           
  2860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2861                           ; Switch size 1, requested type "simple"
  2862                           ; Number of cases is 1, Range of values is 0 to 0
  2863                           ; switch strategies available:
  2864                           ; Name         Instructions Cycles
  2865                           ; simple_byte            4     3 (average)
  2866                           ;	Chosen strategy is simple_byte
  2867   000BD8  5063               	movf	(??_ActionButtons+1)^0,w,c
  2868   000BDA  0A00               	xorlw	0	; case 0
  2869   000BDC  B4D8               	btfsc	status,2,c
  2870   000BDE  EFF3  F005         	goto	l9946
  2871   000BE2  EFAA  F006         	goto	l1181
  2872   000BE6                     l9946:
  2873                           
  2874                           ; Switch size 1, requested type "simple"
  2875                           ; Number of cases is 5, Range of values is 12 to 20
  2876                           ; switch strategies available:
  2877                           ; Name         Instructions Cycles
  2878                           ; simple_byte           16     9 (average)
  2879                           ;	Chosen strategy is simple_byte
  2880   000BE6  5062               	movf	??_ActionButtons^0,w,c
  2881   000BE8  0A0C               	xorlw	12	; case 12
  2882   000BEA  B4D8               	btfsc	status,2,c
  2883   000BEC  EF9E  F005         	goto	l6790
  2884   000BF0  0A01               	xorlw	1	; case 13
  2885   000BF2  B4D8               	btfsc	status,2,c
  2886   000BF4  EF9E  F005         	goto	l6790
  2887   000BF8  0A03               	xorlw	3	; case 14
  2888   000BFA  B4D8               	btfsc	status,2,c
  2889   000BFC  EFD3  F005         	goto	l6810
  2890   000C00  0A01               	xorlw	1	; case 15
  2891   000C02  B4D8               	btfsc	status,2,c
  2892   000C04  EF88  F005         	goto	l6772
  2893   000C08  0A1B               	xorlw	27	; case 20
  2894   000C0A  B4D8               	btfsc	status,2,c
  2895   000C0C  EFDB  F005         	goto	l6824
  2896   000C10  EFAA  F006         	goto	l1181
  2897   000C14                     l6842:
  2898                           
  2899                           ;Buttons.c: 264:                     continue_pressed_cnt ++;
  2900   000C14  4A0A               	infsnz	_continue_pressed_cnt^0,f,c
  2901   000C16  2A0B               	incf	(_continue_pressed_cnt+1)^0,f,c
  2902   000C18                     
  2903                           ;Buttons.c: 265:                     if( continue_pressed_cnt > CONTINUE_PRESSED_TIME ) 
      +                          {
  2904   000C18  500A               	movf	_continue_pressed_cnt^0,w,c
  2905   000C1A  5C08               	subwf	_CONTINUE_PRESSED_TIME^0,w,c
  2906   000C1C  500B               	movf	(_continue_pressed_cnt+1)^0,w,c
  2907   000C1E  5809               	subwfb	(_CONTINUE_PRESSED_TIME+1)^0,w,c
  2908   000C20  B0D8               	btfsc	status,0,c
  2909   000C22  EF15  F006         	goto	u4641
  2910   000C26  EF17  F006         	goto	u4640
  2911   000C2A                     u4641:
  2912   000C2A  EFAA  F006         	goto	l1181
  2913   000C2E                     u4640:
  2914   000C2E                     
  2915                           ;Buttons.c: 266:                         IncValProcess(); continue_pressed_cnt = 0;
  2916   000C2E  EC9E  F013         	call	_IncValProcess	;wreg free
  2917   000C32  EF22  F004         	goto	l6638
  2918   000C36                     l6852:
  2919                           
  2920                           ;Buttons.c: 270:                     continue_pressed_cnt ++;
  2921   000C36  4A0A               	infsnz	_continue_pressed_cnt^0,f,c
  2922   000C38  2A0B               	incf	(_continue_pressed_cnt+1)^0,f,c
  2923   000C3A                     
  2924                           ;Buttons.c: 271:                     if( continue_pressed_cnt > CONTINUE_PRESSED_TIME ) 
      +                          {
  2925   000C3A  500A               	movf	_continue_pressed_cnt^0,w,c
  2926   000C3C  5C08               	subwf	_CONTINUE_PRESSED_TIME^0,w,c
  2927   000C3E  500B               	movf	(_continue_pressed_cnt+1)^0,w,c
  2928   000C40  5809               	subwfb	(_CONTINUE_PRESSED_TIME+1)^0,w,c
  2929   000C42  B0D8               	btfsc	status,0,c
  2930   000C44  EF26  F006         	goto	u4651
  2931   000C48  EF28  F006         	goto	u4650
  2932   000C4C                     u4651:
  2933   000C4C  EFAA  F006         	goto	l1181
  2934   000C50                     u4650:
  2935   000C50                     
  2936                           ;Buttons.c: 272:                         DecValProcess(); continue_pressed_cnt = 0;
  2937   000C50  EC94  F00F         	call	_DecValProcess	;wreg free
  2938   000C54  EF22  F004         	goto	l6638
  2939   000C58                     l6862:
  2940                           
  2941                           ;Buttons.c: 276:                     blink_enable_flg = 0;
  2942   000C58  0E00               	movlw	0
  2943   000C5A  6E32               	movwf	_blink_enable_flg^0,c
  2944   000C5C                     
  2945                           ;Buttons.c: 277:                     IncValProcess();
  2946   000C5C  EC9E  F013         	call	_IncValProcess	;wreg free
  2947   000C60  EFE4  F003         	goto	l6618
  2948   000C64                     l6870:
  2949                           
  2950                           ;Buttons.c: 281:                     blink_enable_flg = 0;
  2951   000C64  0E00               	movlw	0
  2952   000C66  6E32               	movwf	_blink_enable_flg^0,c
  2953   000C68                     
  2954                           ;Buttons.c: 282:                     DecValProcess();
  2955   000C68  EC94  F00F         	call	_DecValProcess	;wreg free
  2956   000C6C  EFE4  F003         	goto	l6618
  2957   000C70                     l6878:
  2958                           
  2959                           ;Buttons.c: 286:                     if( counter_direction_flg == 1 ){
  2960   000C70  0437               	decf	_counter_direction_flg^0,w,c
  2961   000C72  A4D8               	btfss	status,2,c
  2962   000C74  EF3E  F006         	goto	u4661
  2963   000C78  EF40  F006         	goto	u4660
  2964   000C7C                     u4661:
  2965   000C7C  EFD3  F005         	goto	l6810
  2966   000C80                     u4660:
  2967   000C80  EFE4  F003         	goto	l6618
  2968   000C84                     l6894:
  2969                           
  2970                           ;Buttons.c: 293:                     if( counter_direction_flg == 1 ){
  2971   000C84  0437               	decf	_counter_direction_flg^0,w,c
  2972   000C86  A4D8               	btfss	status,2,c
  2973   000C88  EF48  F006         	goto	u4671
  2974   000C8C  EF4A  F006         	goto	u4670
  2975   000C90                     u4671:
  2976   000C90  EF4C  F006         	goto	l6902
  2977   000C94                     u4670:
  2978   000C94  EFE4  F003         	goto	l6618
  2979   000C98                     l6902:
  2980   000C98  5037               	movf	_counter_direction_flg^0,w,c
  2981   000C9A  A4D8               	btfss	status,2,c
  2982   000C9C  EF52  F006         	goto	u4681
  2983   000CA0  EF54  F006         	goto	u4680
  2984   000CA4                     u4681:
  2985   000CA4  EF5A  F006         	goto	l1255
  2986   000CA8                     u4680:
  2987   000CA8                     
  2988                           ;Buttons.c: 297:                         counter_down_hour = 0;
  2989   000CA8  0E00               	movlw	0
  2990   000CAA  6E41               	movwf	_counter_down_hour^0,c
  2991                           
  2992                           ;Buttons.c: 298:                         counter_down_minute = 0;
  2993   000CAC  0E00               	movlw	0
  2994   000CAE  6E40               	movwf	_counter_down_minute^0,c
  2995                           
  2996                           ;Buttons.c: 299:                         counter_down_second = 0;
  2997   000CB0  0E00               	movlw	0
  2998   000CB2  6E3F               	movwf	_counter_down_second^0,c
  2999   000CB4                     l1255:
  3000                           
  3001                           ;Buttons.c: 301:                     blink_enable_flg = 0;
  3002   000CB4  0E00               	movlw	0
  3003   000CB6  6E32               	movwf	_blink_enable_flg^0,c
  3004                           
  3005                           ;Buttons.c: 302:                     BTN_CLICK_STATE = 0;
  3006   000CB8  0E00               	movlw	0
  3007   000CBA  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  3008   000CBC  EFAA  F006         	goto	l1181
  3009   000CC0                     l6910:
  3010   000CC0  502F               	movf	_BTN_CLICK_STATE^0,w,c
  3011   000CC2  6E62               	movwf	??_ActionButtons^0,c
  3012   000CC4  6A63               	clrf	(??_ActionButtons+1)^0,c
  3013                           
  3014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3015                           ; Switch size 1, requested type "simple"
  3016                           ; Number of cases is 1, Range of values is 0 to 0
  3017                           ; switch strategies available:
  3018                           ; Name         Instructions Cycles
  3019                           ; simple_byte            4     3 (average)
  3020                           ;	Chosen strategy is simple_byte
  3021   000CC6  5063               	movf	(??_ActionButtons+1)^0,w,c
  3022   000CC8  0A00               	xorlw	0	; case 0
  3023   000CCA  B4D8               	btfsc	status,2,c
  3024   000CCC  EF6A  F006         	goto	l9948
  3025   000CD0  EFAA  F006         	goto	l1181
  3026   000CD4                     l9948:
  3027                           
  3028                           ; Switch size 1, requested type "simple"
  3029                           ; Number of cases is 6, Range of values is 12 to 18
  3030                           ; switch strategies available:
  3031                           ; Name         Instructions Cycles
  3032                           ; simple_byte           19    10 (average)
  3033                           ;	Chosen strategy is simple_byte
  3034   000CD4  5062               	movf	??_ActionButtons^0,w,c
  3035   000CD6  0A0C               	xorlw	12	; case 12
  3036   000CD8  B4D8               	btfsc	status,2,c
  3037   000CDA  EF2C  F006         	goto	l6862
  3038   000CDE  0A01               	xorlw	1	; case 13
  3039   000CE0  B4D8               	btfsc	status,2,c
  3040   000CE2  EF32  F006         	goto	l6870
  3041   000CE6  0A03               	xorlw	3	; case 14
  3042   000CE8  B4D8               	btfsc	status,2,c
  3043   000CEA  EF38  F006         	goto	l6878
  3044   000CEE  0A01               	xorlw	1	; case 15
  3045   000CF0  B4D8               	btfsc	status,2,c
  3046   000CF2  EF42  F006         	goto	l6894
  3047   000CF6  0A1E               	xorlw	30	; case 17
  3048   000CF8  B4D8               	btfsc	status,2,c
  3049   000CFA  EF0A  F006         	goto	l6842
  3050   000CFE  0A03               	xorlw	3	; case 18
  3051   000D00  B4D8               	btfsc	status,2,c
  3052   000D02  EF1B  F006         	goto	l6852
  3053   000D06  EFAA  F006         	goto	l1181
  3054   000D0A                     l6914:
  3055   000D0A  506E               	movf	_SYSTEM_STATE_FLG^0,w,c
  3056   000D0C  6E62               	movwf	??_ActionButtons^0,c
  3057   000D0E  6A63               	clrf	(??_ActionButtons+1)^0,c
  3058                           
  3059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3060                           ; Switch size 1, requested type "simple"
  3061                           ; Number of cases is 1, Range of values is 0 to 0
  3062                           ; switch strategies available:
  3063                           ; Name         Instructions Cycles
  3064                           ; simple_byte            4     3 (average)
  3065                           ;	Chosen strategy is simple_byte
  3066   000D10  5063               	movf	(??_ActionButtons+1)^0,w,c
  3067   000D12  0A00               	xorlw	0	; case 0
  3068   000D14  B4D8               	btfsc	status,2,c
  3069   000D16  EF8F  F006         	goto	l9950
  3070   000D1A  EFAA  F006         	goto	l1181
  3071   000D1E                     l9950:
  3072                           
  3073                           ; Switch size 1, requested type "simple"
  3074                           ; Number of cases is 6, Range of values is 100 to 203
  3075                           ; switch strategies available:
  3076                           ; Name         Instructions Cycles
  3077                           ; simple_byte           19    10 (average)
  3078                           ;	Chosen strategy is simple_byte
  3079   000D1E  5062               	movf	??_ActionButtons^0,w,c
  3080   000D20  0A64               	xorlw	100	; case 100
  3081   000D22  B4D8               	btfsc	status,2,c
  3082   000D24  EFC6  F004         	goto	l6698
  3083   000D28  0A01               	xorlw	1	; case 101
  3084   000D2A  B4D8               	btfsc	status,2,c
  3085   000D2C  EFAA  F006         	goto	l1181
  3086   000D30  0AAD               	xorlw	173	; case 200
  3087   000D32  B4D8               	btfsc	status,2,c
  3088   000D34  EF37  F005         	goto	l6742
  3089   000D38  0A01               	xorlw	1	; case 201
  3090   000D3A  B4D8               	btfsc	status,2,c
  3091   000D3C  EF50  F005         	goto	l6744
  3092   000D40  0A03               	xorlw	3	; case 202
  3093   000D42  B4D8               	btfsc	status,2,c
  3094   000D44  EF60  F006         	goto	l6910
  3095   000D48  0A01               	xorlw	1	; case 203
  3096   000D4A  B4D8               	btfsc	status,2,c
  3097   000D4C  EFCD  F005         	goto	l6804
  3098   000D50  EFAA  F006         	goto	l1181
  3099   000D54                     l1181:
  3100   000D54  0012               	return		;funcret
  3101   000D56                     __end_of_ActionButtons:
  3102                           	callstack 0
  3103                           
  3104 ;; *************** function _UpDownTransfer *****************
  3105 ;; Defined at:
  3106 ;;		line 337 in file "Buttons.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3120 ;;      Params:         0       0       0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0       0       0
  3122 ;;      Temps:          0       0       0       0       0       0       0
  3123 ;;      Totals:         0       0       0       0       0       0       0
  3124 ;;Total ram usage:        0 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; Hardware stack levels required when called: 6
  3127 ;; This function calls:
  3128 ;;		_UpdateSetValue
  3129 ;; This function is called by:
  3130 ;;		_ActionButtons
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text3
  3135   002702                     __ptext3:
  3136                           	callstack 0
  3137   002702                     _UpDownTransfer:
  3138                           	callstack 22
  3139   002702                     
  3140                           ;Buttons.c: 338:     if( counter_direction_flg == 1 ) {
  3141   002702  0437               	decf	_counter_direction_flg^0,w,c
  3142   002704  A4D8               	btfss	status,2,c
  3143   002706  EF87  F013         	goto	u3891
  3144   00270A  EF89  F013         	goto	u3890
  3145   00270E                     u3891:
  3146   00270E  EF93  F013         	goto	l6294
  3147   002712                     u3890:
  3148   002712                     
  3149                           ;Buttons.c: 339:         counter_direction_flg = 0;
  3150   002712  0E00               	movlw	0
  3151   002714  6E37               	movwf	_counter_direction_flg^0,c
  3152   002716                     
  3153                           ;Buttons.c: 340:         counter_down_hour = counter_up_hour;
  3154   002716  C03B  F041         	movff	_counter_up_hour,_counter_down_hour
  3155   00271A                     
  3156                           ;Buttons.c: 341:         counter_down_minute = counter_up_minute;
  3157   00271A  C03A  F040         	movff	_counter_up_minute,_counter_down_minute
  3158   00271E                     
  3159                           ;Buttons.c: 342:         counter_down_second = counter_up_second;
  3160   00271E  C039  F03F         	movff	_counter_up_second,_counter_down_second
  3161                           
  3162                           ;Buttons.c: 343:     }
  3163   002722  EF9B  F013         	goto	l6302
  3164   002726                     l6294:
  3165                           
  3166                           ;Buttons.c: 345:         counter_direction_flg = 1;
  3167   002726  0E01               	movlw	1
  3168   002728  6E37               	movwf	_counter_direction_flg^0,c
  3169   00272A                     
  3170                           ;Buttons.c: 346:         counter_up_hour = counter_down_hour;
  3171   00272A  C041  F03B         	movff	_counter_down_hour,_counter_up_hour
  3172   00272E                     
  3173                           ;Buttons.c: 347:         counter_up_minute = counter_down_minute;
  3174   00272E  C040  F03A         	movff	_counter_down_minute,_counter_up_minute
  3175   002732                     
  3176                           ;Buttons.c: 348:         counter_up_second = counter_down_second;
  3177   002732  C03F  F039         	movff	_counter_down_second,_counter_up_second
  3178   002736                     l6302:
  3179                           
  3180                           ;Buttons.c: 350:     UpdateSetValue();
  3181   002736  ECB1  F014         	call	_UpdateSetValue	;wreg free
  3182   00273A  0012               	return		;funcret
  3183   00273C                     __end_of_UpDownTransfer:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function _StopCounter *****************
  3187 ;; Defined at:
  3188 ;;		line 75 in file "Counter.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3202 ;;      Params:         0       0       0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0       0
  3205 ;;      Totals:         0       0       0       0       0       0       0
  3206 ;;Total ram usage:        0 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 5
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_ActionButtons
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text4
  3217   002994                     __ptext4:
  3218                           	callstack 0
  3219   002994                     _StopCounter:
  3220                           	callstack 23
  3221   002994                     
  3222                           ;Counter.c: 76:     counter_enable_flg = 0;
  3223   002994  0E00               	movlw	0
  3224   002996  6E38               	movwf	_counter_enable_flg^0,c
  3225   002998  0012               	return		;funcret
  3226   00299A                     __end_of_StopCounter:
  3227                           	callstack 0
  3228                           
  3229 ;; *************** function _StartCounter *****************
  3230 ;; Defined at:
  3231 ;;		line 71 in file "Counter.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3245 ;;      Params:         0       0       0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0
  3248 ;;      Totals:         0       0       0       0       0       0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 5
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_ActionButtons
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text5
  3260   00299A                     __ptext5:
  3261                           	callstack 0
  3262   00299A                     _StartCounter:
  3263                           	callstack 23
  3264   00299A                     
  3265                           ;Counter.c: 72:     counter_enable_flg = 1;
  3266   00299A  0E01               	movlw	1
  3267   00299C  6E38               	movwf	_counter_enable_flg^0,c
  3268   00299E  0012               	return		;funcret
  3269   0029A0                     __end_of_StartCounter:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _IncValProcess *****************
  3273 ;; Defined at:
  3274 ;;		line 309 in file "Buttons.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3288 ;;      Params:         0       0       0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0
  3291 ;;      Totals:         0       0       0       0       0       0       0
  3292 ;;Total ram usage:        0 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 6
  3295 ;; This function calls:
  3296 ;;		_UpdateSetValue
  3297 ;; This function is called by:
  3298 ;;		_ActionButtons
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text6
  3303   00273C                     __ptext6:
  3304                           	callstack 0
  3305   00273C                     _IncValProcess:
  3306                           	callstack 22
  3307   00273C                     
  3308                           ;Buttons.c: 310:     counter_down_second ++;
  3309   00273C  2A3F               	incf	_counter_down_second^0,f,c
  3310   00273E                     
  3311                           ;Buttons.c: 311:     if( counter_down_second == 60 ){
  3312   00273E  0E3C               	movlw	60
  3313   002740  183F               	xorwf	_counter_down_second^0,w,c
  3314   002742  A4D8               	btfss	status,2,c
  3315   002744  EFA6  F013         	goto	u3901
  3316   002748  EFA8  F013         	goto	u3900
  3317   00274C                     u3901:
  3318   00274C  EFB7  F013         	goto	l6318
  3319   002750                     u3900:
  3320   002750                     
  3321                           ;Buttons.c: 312:         counter_down_second = 0;
  3322   002750  0E00               	movlw	0
  3323   002752  6E3F               	movwf	_counter_down_second^0,c
  3324   002754                     
  3325                           ;Buttons.c: 313:         counter_down_minute ++;
  3326   002754  2A40               	incf	_counter_down_minute^0,f,c
  3327   002756                     
  3328                           ;Buttons.c: 314:         if(counter_down_minute == 60){
  3329   002756  0E3C               	movlw	60
  3330   002758  1840               	xorwf	_counter_down_minute^0,w,c
  3331   00275A  A4D8               	btfss	status,2,c
  3332   00275C  EFB2  F013         	goto	u3911
  3333   002760  EFB4  F013         	goto	u3910
  3334   002764                     u3911:
  3335   002764  EFB7  F013         	goto	l6318
  3336   002768                     u3910:
  3337   002768                     
  3338                           ;Buttons.c: 315:             counter_down_minute = 0;
  3339   002768  0E00               	movlw	0
  3340   00276A  6E40               	movwf	_counter_down_minute^0,c
  3341   00276C                     
  3342                           ;Buttons.c: 316:             counter_down_hour ++;
  3343   00276C  2A41               	incf	_counter_down_hour^0,f,c
  3344   00276E                     l6318:
  3345                           
  3346                           ;Buttons.c: 319:     UpdateSetValue();
  3347   00276E  ECB1  F014         	call	_UpdateSetValue	;wreg free
  3348   002772  0012               	return		;funcret
  3349   002774                     __end_of_IncValProcess:
  3350                           	callstack 0
  3351                           
  3352 ;; *************** function _Ds1307SecondSet *****************
  3353 ;; Defined at:
  3354 ;;		line 134 in file "DS1307.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  second_data     1    wreg     unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  second_data     1   17[COMRAM] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3368 ;;      Params:         0       0       0       0       0       0       0
  3369 ;;      Locals:         1       0       0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0
  3371 ;;      Totals:         1       0       0       0       0       0       0
  3372 ;;Total ram usage:        1 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 8
  3375 ;; This function calls:
  3376 ;;		_I2cStart
  3377 ;;		_I2cStop
  3378 ;;		_I2cWrite
  3379 ;; This function is called by:
  3380 ;;		_ActionButtons
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text7
  3385   002846                     __ptext7:
  3386                           	callstack 0
  3387   002846                     _Ds1307SecondSet:
  3388                           	callstack 20
  3389                           
  3390                           ;incstack = 0
  3391                           ;Ds1307SecondSet@second_data stored from wreg
  3392   002846  6E5F               	movwf	Ds1307SecondSet@second_data^0,c
  3393   002848                     
  3394                           ;DS1307.c: 135:     I2cStart();
  3395   002848  EC8D  F014         	call	_I2cStart	;wreg free
  3396   00284C                     
  3397                           ;DS1307.c: 136:     I2cWrite( (0xD0) );
  3398   00284C  0ED0               	movlw	208
  3399   00284E  EC41  F014         	call	_I2cWrite
  3400   002852                     
  3401                           ;DS1307.c: 137:     I2cWrite( 0 );
  3402   002852  0E00               	movlw	0
  3403   002854  EC41  F014         	call	_I2cWrite
  3404   002858                     
  3405                           ;DS1307.c: 138:     I2cWrite( second_data );
  3406   002858  505F               	movf	Ds1307SecondSet@second_data^0,w,c
  3407   00285A  EC41  F014         	call	_I2cWrite
  3408   00285E                     
  3409                           ;DS1307.c: 139:     I2cStop();
  3410   00285E  EC9F  F014         	call	_I2cStop	;wreg free
  3411   002862  0012               	return		;funcret
  3412   002864                     __end_of_Ds1307SecondSet:
  3413                           	callstack 0
  3414                           
  3415 ;; *************** function _Ds1307MinuteSet *****************
  3416 ;; Defined at:
  3417 ;;		line 126 in file "DS1307.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  minute_data     1    wreg     unsigned char 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  minute_data     1   17[COMRAM] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3431 ;;      Params:         0       0       0       0       0       0       0
  3432 ;;      Locals:         1       0       0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0
  3434 ;;      Totals:         1       0       0       0       0       0       0
  3435 ;;Total ram usage:        1 bytes
  3436 ;; Hardware stack levels used: 1
  3437 ;; Hardware stack levels required when called: 8
  3438 ;; This function calls:
  3439 ;;		_I2cStart
  3440 ;;		_I2cStop
  3441 ;;		_I2cWrite
  3442 ;; This function is called by:
  3443 ;;		_ActionButtons
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text8
  3448   002864                     __ptext8:
  3449                           	callstack 0
  3450   002864                     _Ds1307MinuteSet:
  3451                           	callstack 20
  3452                           
  3453                           ;incstack = 0
  3454                           ;Ds1307MinuteSet@minute_data stored from wreg
  3455   002864  6E5F               	movwf	Ds1307MinuteSet@minute_data^0,c
  3456   002866                     
  3457                           ;DS1307.c: 127:     I2cStart();
  3458   002866  EC8D  F014         	call	_I2cStart	;wreg free
  3459   00286A                     
  3460                           ;DS1307.c: 128:     I2cWrite( (0xD0) );
  3461   00286A  0ED0               	movlw	208
  3462   00286C  EC41  F014         	call	_I2cWrite
  3463   002870                     
  3464                           ;DS1307.c: 129:     I2cWrite( 1 );
  3465   002870  0E01               	movlw	1
  3466   002872  EC41  F014         	call	_I2cWrite
  3467   002876                     
  3468                           ;DS1307.c: 130:     I2cWrite( minute_data );
  3469   002876  505F               	movf	Ds1307MinuteSet@minute_data^0,w,c
  3470   002878  EC41  F014         	call	_I2cWrite
  3471   00287C                     
  3472                           ;DS1307.c: 131:     I2cStop();
  3473   00287C  EC9F  F014         	call	_I2cStop	;wreg free
  3474   002880  0012               	return		;funcret
  3475   002882                     __end_of_Ds1307MinuteSet:
  3476                           	callstack 0
  3477                           
  3478 ;; *************** function _Ds1307HourSet *****************
  3479 ;; Defined at:
  3480 ;;		line 105 in file "DS1307.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  hour_data       1    wreg     unsigned char 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  hour_data       1   18[COMRAM] unsigned char 
  3485 ;;  hour_temp       1   19[COMRAM] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3495 ;;      Params:         0       0       0       0       0       0       0
  3496 ;;      Locals:         2       0       0       0       0       0       0
  3497 ;;      Temps:          1       0       0       0       0       0       0
  3498 ;;      Totals:         3       0       0       0       0       0       0
  3499 ;;Total ram usage:        3 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; Hardware stack levels required when called: 8
  3502 ;; This function calls:
  3503 ;;		_I2cStart
  3504 ;;		_I2cStop
  3505 ;;		_I2cWrite
  3506 ;; This function is called by:
  3507 ;;		_ActionButtons
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text9
  3512   001FF0                     __ptext9:
  3513                           	callstack 0
  3514   001FF0                     _Ds1307HourSet:
  3515                           	callstack 20
  3516                           
  3517                           ;incstack = 0
  3518                           ;Ds1307HourSet@hour_data stored from wreg
  3519   001FF0  6E60               	movwf	Ds1307HourSet@hour_data^0,c
  3520   001FF2                     
  3521                           ;DS1307.c: 106:     unsigned char hour_temp = hour_data;
  3522   001FF2  C060  F061         	movff	Ds1307HourSet@hour_data,Ds1307HourSet@hour_temp
  3523   001FF6                     
  3524                           ;DS1307.c: 107:     if( rtc_clock_disp_type == 1 ) {
  3525   001FF6  044B               	decf	_rtc_clock_disp_type^0,w,c
  3526   001FF8  A4D8               	btfss	status,2,c
  3527   001FFA  EF01  F010         	goto	u3811
  3528   001FFE  EF03  F010         	goto	u3810
  3529   002002                     u3811:
  3530   002002  EF2C  F010         	goto	l6232
  3531   002006                     u3810:
  3532   002006                     
  3533                           ;DS1307.c: 108:         if( hour_temp > 0x12 ) hour_temp = hour_temp - 0x12;
  3534   002006  0E12               	movlw	18
  3535   002008  6461               	cpfsgt	Ds1307HourSet@hour_temp^0,c
  3536   00200A  EF09  F010         	goto	u3821
  3537   00200E  EF0B  F010         	goto	u3820
  3538   002012                     u3821:
  3539   002012  EF0E  F010         	goto	l61
  3540   002016                     u3820:
  3541   002016  5061               	movf	Ds1307HourSet@hour_temp^0,w,c
  3542   002018  0FEE               	addlw	238
  3543   00201A  6E61               	movwf	Ds1307HourSet@hour_temp^0,c
  3544   00201C                     l61:
  3545                           
  3546                           ;DS1307.c: 109:         if( hour_temp % 16 >= 10 ) hour_temp -= 6;
  3547   00201C  C061  F05F         	movff	Ds1307HourSet@hour_temp,??_Ds1307HourSet
  3548   002020  0E0F               	movlw	15
  3549   002022  165F               	andwf	??_Ds1307HourSet^0,f,c
  3550   002024  0E09               	movlw	9
  3551   002026  645F               	cpfsgt	??_Ds1307HourSet^0,c
  3552   002028  EF18  F010         	goto	u3831
  3553   00202C  EF1A  F010         	goto	u3830
  3554   002030                     u3831:
  3555   002030  EF1C  F010         	goto	l62
  3556   002034                     u3830:
  3557   002034  0E06               	movlw	6
  3558   002036  5E61               	subwf	Ds1307HourSet@hour_temp^0,f,c
  3559   002038                     l62:
  3560                           
  3561                           ;DS1307.c: 110:         hour_temp = hour_temp | 0x40;
  3562   002038  5061               	movf	Ds1307HourSet@hour_temp^0,w,c
  3563   00203A  0940               	iorlw	64
  3564   00203C  6E61               	movwf	Ds1307HourSet@hour_temp^0,c
  3565                           
  3566                           ;DS1307.c: 111:         if( rtc_hour_ampm_flg == 1 ) hour_temp = hour_temp | 0x20;
  3567   00203E  044A               	decf	_rtc_hour_ampm_flg^0,w,c
  3568   002040  A4D8               	btfss	status,2,c
  3569   002042  EF25  F010         	goto	u3841
  3570   002046  EF27  F010         	goto	u3840
  3571   00204A                     u3841:
  3572   00204A  EF4D  F010         	goto	l6240
  3573   00204E                     u3840:
  3574   00204E  5061               	movf	Ds1307HourSet@hour_temp^0,w,c
  3575   002050  0920               	iorlw	32
  3576   002052  6E61               	movwf	Ds1307HourSet@hour_temp^0,c
  3577   002054  EF4D  F010         	goto	l6240
  3578   002058                     l6232:
  3579                           
  3580                           ;DS1307.c: 114:         if( rtc_hour_ampm_flg == 1 && hour_temp < 0x12 ) {
  3581   002058  044A               	decf	_rtc_hour_ampm_flg^0,w,c
  3582   00205A  A4D8               	btfss	status,2,c
  3583   00205C  EF32  F010         	goto	u3851
  3584   002060  EF34  F010         	goto	u3850
  3585   002064                     u3851:
  3586   002064  EF4D  F010         	goto	l6240
  3587   002068                     u3850:
  3588   002068  0E12               	movlw	18
  3589   00206A  6061               	cpfslt	Ds1307HourSet@hour_temp^0,c
  3590   00206C  EF3A  F010         	goto	u3861
  3591   002070  EF3C  F010         	goto	u3860
  3592   002074                     u3861:
  3593   002074  EF4D  F010         	goto	l6240
  3594   002078                     u3860:
  3595   002078                     
  3596                           ;DS1307.c: 115:             hour_temp = hour_temp + 0x12;
  3597   002078  5061               	movf	Ds1307HourSet@hour_temp^0,w,c
  3598   00207A  0F12               	addlw	18
  3599   00207C  6E61               	movwf	Ds1307HourSet@hour_temp^0,c
  3600                           
  3601                           ;DS1307.c: 116:             if( hour_temp % 16 >= 10 ) hour_temp += 6;
  3602   00207E  C061  F05F         	movff	Ds1307HourSet@hour_temp,??_Ds1307HourSet
  3603   002082  0E0F               	movlw	15
  3604   002084  165F               	andwf	??_Ds1307HourSet^0,f,c
  3605   002086  0E09               	movlw	9
  3606   002088  645F               	cpfsgt	??_Ds1307HourSet^0,c
  3607   00208A  EF49  F010         	goto	u3871
  3608   00208E  EF4B  F010         	goto	u3870
  3609   002092                     u3871:
  3610   002092  EF4D  F010         	goto	l6240
  3611   002096                     u3870:
  3612   002096  0E06               	movlw	6
  3613   002098  2661               	addwf	Ds1307HourSet@hour_temp^0,f,c
  3614   00209A                     l6240:
  3615                           
  3616                           ;DS1307.c: 119:     I2cStart();
  3617   00209A  EC8D  F014         	call	_I2cStart	;wreg free
  3618   00209E                     
  3619                           ;DS1307.c: 120:     I2cWrite( (0xD0) );
  3620   00209E  0ED0               	movlw	208
  3621   0020A0  EC41  F014         	call	_I2cWrite
  3622   0020A4                     
  3623                           ;DS1307.c: 121:     I2cWrite( 2 );
  3624   0020A4  0E02               	movlw	2
  3625   0020A6  EC41  F014         	call	_I2cWrite
  3626   0020AA                     
  3627                           ;DS1307.c: 122:     I2cWrite( hour_temp );
  3628   0020AA  5061               	movf	Ds1307HourSet@hour_temp^0,w,c
  3629   0020AC  EC41  F014         	call	_I2cWrite
  3630   0020B0                     
  3631                           ;DS1307.c: 123:     I2cStop();
  3632   0020B0  EC9F  F014         	call	_I2cStop	;wreg free
  3633   0020B4  0012               	return		;funcret
  3634   0020B6                     __end_of_Ds1307HourSet:
  3635                           	callstack 0
  3636                           
  3637 ;; *************** function _DecValProcess *****************
  3638 ;; Defined at:
  3639 ;;		line 322 in file "Buttons.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3653 ;;      Params:         0       0       0       0       0       0       0
  3654 ;;      Locals:         0       0       0       0       0       0       0
  3655 ;;      Temps:          2       0       0       0       0       0       0
  3656 ;;      Totals:         2       0       0       0       0       0       0
  3657 ;;Total ram usage:        2 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 6
  3660 ;; This function calls:
  3661 ;;		_UpdateSetValue
  3662 ;; This function is called by:
  3663 ;;		_ActionButtons
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text10
  3668   001F28                     __ptext10:
  3669                           	callstack 0
  3670   001F28                     _DecValProcess:
  3671                           	callstack 22
  3672   001F28                     
  3673                           ;Buttons.c: 323:     counter_down_second --;
  3674   001F28  063F               	decf	_counter_down_second^0,f,c
  3675   001F2A                     
  3676                           ;Buttons.c: 324:     if( counter_down_second < 0 && counter_down_hour + counter_down_min
      +                          ute) {
  3677   001F2A  BE3F               	btfsc	_counter_down_second^0,7,c
  3678   001F2C  EF9C  F00F         	goto	u3920
  3679   001F30  EF9A  F00F         	goto	u3921
  3680   001F34                     u3921:
  3681   001F34  EFD8  F00F         	goto	l6344
  3682   001F38                     u3920:
  3683   001F38  5041               	movf	_counter_down_hour^0,w,c
  3684   001F3A  2440               	addwf	_counter_down_minute^0,w,c
  3685   001F3C  6E5E               	movwf	??_DecValProcess^0,c
  3686   001F3E  6AE8               	clrf	wreg,c
  3687   001F40  B0D8               	btfsc	status,0,c
  3688   001F42  2AE8               	incf	wreg,f,c
  3689   001F44  BE41               	btfsc	_counter_down_hour^0,7,c
  3690   001F46  06E8               	decf	wreg,f,c
  3691   001F48  BE40               	btfsc	_counter_down_minute^0,7,c
  3692   001F4A  06E8               	decf	wreg,f,c
  3693   001F4C  6E5F               	movwf	(??_DecValProcess+1)^0,c
  3694   001F4E  505E               	movf	??_DecValProcess^0,w,c
  3695   001F50  105F               	iorwf	(??_DecValProcess+1)^0,w,c
  3696   001F52  B4D8               	btfsc	status,2,c
  3697   001F54  EFAE  F00F         	goto	u3931
  3698   001F58  EFB0  F00F         	goto	u3930
  3699   001F5C                     u3931:
  3700   001F5C  EFD8  F00F         	goto	l6344
  3701   001F60                     u3930:
  3702   001F60                     
  3703                           ;Buttons.c: 325:         counter_down_second = 59;
  3704   001F60  0E3B               	movlw	59
  3705   001F62  6E3F               	movwf	_counter_down_second^0,c
  3706   001F64                     
  3707                           ;Buttons.c: 326:         counter_down_minute --;
  3708   001F64  0640               	decf	_counter_down_minute^0,f,c
  3709   001F66                     
  3710                           ;Buttons.c: 327:         if( counter_down_minute < 0 && counter_down_hour ){
  3711   001F66  BE40               	btfsc	_counter_down_minute^0,7,c
  3712   001F68  EFBA  F00F         	goto	u3940
  3713   001F6C  EFB8  F00F         	goto	u3941
  3714   001F70                     u3941:
  3715   001F70  EFC7  F00F         	goto	l6338
  3716   001F74                     u3940:
  3717   001F74  5041               	movf	_counter_down_hour^0,w,c
  3718   001F76  B4D8               	btfsc	status,2,c
  3719   001F78  EFC0  F00F         	goto	u3951
  3720   001F7C  EFC2  F00F         	goto	u3950
  3721   001F80                     u3951:
  3722   001F80  EFC7  F00F         	goto	l6338
  3723   001F84                     u3950:
  3724   001F84                     
  3725                           ;Buttons.c: 328:             counter_down_minute = 59;
  3726   001F84  0E3B               	movlw	59
  3727   001F86  6E40               	movwf	_counter_down_minute^0,c
  3728   001F88                     
  3729                           ;Buttons.c: 329:             counter_down_hour --;
  3730   001F88  0641               	decf	_counter_down_hour^0,f,c
  3731                           
  3732                           ;Buttons.c: 330:         }
  3733   001F8A  EFD8  F00F         	goto	l6344
  3734   001F8E                     l6338:
  3735   001F8E  BE40               	btfsc	_counter_down_minute^0,7,c
  3736   001F90  EFCE  F00F         	goto	u3960
  3737   001F94  EFCC  F00F         	goto	u3961
  3738   001F98                     u3961:
  3739   001F98  EFD8  F00F         	goto	l6344
  3740   001F9C                     u3960:
  3741   001F9C  5041               	movf	_counter_down_hour^0,w,c
  3742   001F9E  A4D8               	btfss	status,2,c
  3743   001FA0  EFD4  F00F         	goto	u3971
  3744   001FA4  EFD6  F00F         	goto	u3970
  3745   001FA8                     u3971:
  3746   001FA8  EFD8  F00F         	goto	l6344
  3747   001FAC                     u3970:
  3748   001FAC  0E00               	movlw	0
  3749   001FAE  6E40               	movwf	_counter_down_minute^0,c
  3750   001FB0                     l6344:
  3751                           
  3752                           ;Buttons.c: 333:     if( counter_down_second < 0 && !(counter_down_hour + counter_down_m
      +                          inute) ) counter_down_second = 0;
  3753   001FB0  BE3F               	btfsc	_counter_down_second^0,7,c
  3754   001FB2  EFDF  F00F         	goto	u3980
  3755   001FB6  EFDD  F00F         	goto	u3981
  3756   001FBA                     u3981:
  3757   001FBA  EFF5  F00F         	goto	l6350
  3758   001FBE                     u3980:
  3759   001FBE  5041               	movf	_counter_down_hour^0,w,c
  3760   001FC0  2440               	addwf	_counter_down_minute^0,w,c
  3761   001FC2  6E5E               	movwf	??_DecValProcess^0,c
  3762   001FC4  6AE8               	clrf	wreg,c
  3763   001FC6  B0D8               	btfsc	status,0,c
  3764   001FC8  2AE8               	incf	wreg,f,c
  3765   001FCA  BE41               	btfsc	_counter_down_hour^0,7,c
  3766   001FCC  06E8               	decf	wreg,f,c
  3767   001FCE  BE40               	btfsc	_counter_down_minute^0,7,c
  3768   001FD0  06E8               	decf	wreg,f,c
  3769   001FD2  6E5F               	movwf	(??_DecValProcess+1)^0,c
  3770   001FD4  505E               	movf	??_DecValProcess^0,w,c
  3771   001FD6  105F               	iorwf	(??_DecValProcess+1)^0,w,c
  3772   001FD8  A4D8               	btfss	status,2,c
  3773   001FDA  EFF1  F00F         	goto	u3991
  3774   001FDE  EFF3  F00F         	goto	u3990
  3775   001FE2                     u3991:
  3776   001FE2  EFF5  F00F         	goto	l6350
  3777   001FE6                     u3990:
  3778   001FE6  0E00               	movlw	0
  3779   001FE8  6E3F               	movwf	_counter_down_second^0,c
  3780   001FEA                     l6350:
  3781                           
  3782                           ;Buttons.c: 334:     UpdateSetValue();
  3783   001FEA  ECB1  F014         	call	_UpdateSetValue	;wreg free
  3784   001FEE  0012               	return		;funcret
  3785   001FF0                     __end_of_DecValProcess:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _UpdateSetValue *****************
  3789 ;; Defined at:
  3790 ;;		line 353 in file "Buttons.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		None
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3804 ;;      Params:         0       0       0       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 5
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_IncValProcess
  3815 ;;		_DecValProcess
  3816 ;;		_UpDownTransfer
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text11
  3821   002962                     __ptext11:
  3822                           	callstack 0
  3823   002962                     _UpdateSetValue:
  3824                           	callstack 22
  3825   002962                     
  3826                           ;Buttons.c: 354:     counter_down_set_hour = counter_down_hour;
  3827   002962  C041  F03E         	movff	_counter_down_hour,_counter_down_set_hour
  3828                           
  3829                           ;Buttons.c: 355:     counter_down_set_minute = counter_down_minute;
  3830   002966  C040  F03D         	movff	_counter_down_minute,_counter_down_set_minute
  3831                           
  3832                           ;Buttons.c: 356:     counter_down_set_second = counter_down_second;
  3833   00296A  C03F  F03C         	movff	_counter_down_second,_counter_down_set_second
  3834   00296E  0012               	return		;funcret
  3835   002970                     __end_of_UpdateSetValue:
  3836                           	callstack 0
  3837                           
  3838 ;; *************** function _ReadCounter *****************
  3839 ;; Defined at:
  3840 ;;		line 36 in file "Counter.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;		None
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  counter_data    6    2[BANK1 ] unsigned char [6]
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  2    0[BANK1 ] PTR unsigned char 
  3847 ;; Registers used:
  3848 ;;		wreg, status,2, status,0, cstack
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3854 ;;      Params:         0       0       2       0       0       0       0
  3855 ;;      Locals:         0       0       6       0       0       0       0
  3856 ;;      Temps:          0       0       0       0       0       0       0
  3857 ;;      Totals:         0       0       8       0       0       0       0
  3858 ;;Total ram usage:        8 bytes
  3859 ;; Hardware stack levels used: 1
  3860 ;; Hardware stack levels required when called: 6
  3861 ;; This function calls:
  3862 ;;		___awdiv
  3863 ;;		___awmod
  3864 ;; This function is called by:
  3865 ;;		_main
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text12
  3870   001636                     __ptext12:
  3871                           	callstack 0
  3872   001636                     _ReadCounter:
  3873                           	callstack 24
  3874   001636                     
  3875                           ;Counter.c: 38:     unsigned char counter_datas[ 6 ];;Counter.c: 40:     if( counter_dir
      +                          ection_flg == 1 ) {
  3876   001636  0437               	decf	_counter_direction_flg^0,w,c
  3877   001638  A4D8               	btfss	status,2,c
  3878   00163A  EF21  F00B         	goto	u7061
  3879   00163E  EF23  F00B         	goto	u7060
  3880   001642                     u7061:
  3881   001642  EF6D  F00B         	goto	l9494
  3882   001646                     u7060:
  3883   001646                     
  3884                           ;Counter.c: 41:         counter_datas[ 0 + 1 ] = counter_up_hour % 10;
  3885   001646  C03B  F05E         	movff	_counter_up_hour,___awmod@dividend
  3886   00164A  6A5F               	clrf	(___awmod@dividend+1)^0,c
  3887   00164C  0E00               	movlw	0
  3888   00164E  6E61               	movwf	(___awmod@divisor+1)^0,c
  3889   001650  0E0A               	movlw	10
  3890   001652  6E60               	movwf	___awmod@divisor^0,c
  3891   001654  EC1D  F011         	call	___awmod	;wreg free
  3892   001658  505E               	movf	?___awmod^0,w,c
  3893   00165A  0101               	movlb	1	; () banked
  3894   00165C  6F19               	movwf	(ReadCounter@counter_datas+1)& (0+255),b
  3895                           
  3896                           ;Counter.c: 42:         counter_datas[ 0 ] = counter_up_hour / 10;
  3897   00165E  C03B  F05E         	movff	_counter_up_hour,___awdiv@dividend
  3898   001662  6A5F               	clrf	(___awdiv@dividend+1)^0,c
  3899   001664  0E00               	movlw	0
  3900   001666  6E61               	movwf	(___awdiv@divisor+1)^0,c
  3901   001668  0E0A               	movlw	10
  3902   00166A  6E60               	movwf	___awdiv@divisor^0,c
  3903   00166C  EC5B  F010         	call	___awdiv	;wreg free
  3904   001670  505E               	movf	?___awdiv^0,w,c
  3905   001672  0101               	movlb	1	; () banked
  3906   001674  6F18               	movwf	ReadCounter@counter_datas& (0+255),b
  3907                           
  3908                           ;Counter.c: 43:         counter_datas[ 2 + 1 ] = counter_up_minute % 10;
  3909   001676  C03A  F05E         	movff	_counter_up_minute,___awmod@dividend
  3910   00167A  6A5F               	clrf	(___awmod@dividend+1)^0,c
  3911   00167C  0E00               	movlw	0
  3912   00167E  6E61               	movwf	(___awmod@divisor+1)^0,c
  3913   001680  0E0A               	movlw	10
  3914   001682  6E60               	movwf	___awmod@divisor^0,c
  3915   001684  EC1D  F011         	call	___awmod	;wreg free
  3916   001688  505E               	movf	?___awmod^0,w,c
  3917   00168A  0101               	movlb	1	; () banked
  3918   00168C  6F1B               	movwf	(ReadCounter@counter_datas+3)& (0+255),b
  3919                           
  3920                           ;Counter.c: 44:         counter_datas[ 2 ] = counter_up_minute / 10;
  3921   00168E  C03A  F05E         	movff	_counter_up_minute,___awdiv@dividend
  3922   001692  6A5F               	clrf	(___awdiv@dividend+1)^0,c
  3923   001694  0E00               	movlw	0
  3924   001696  6E61               	movwf	(___awdiv@divisor+1)^0,c
  3925   001698  0E0A               	movlw	10
  3926   00169A  6E60               	movwf	___awdiv@divisor^0,c
  3927   00169C  EC5B  F010         	call	___awdiv	;wreg free
  3928   0016A0  505E               	movf	?___awdiv^0,w,c
  3929   0016A2  0101               	movlb	1	; () banked
  3930   0016A4  6F1A               	movwf	(ReadCounter@counter_datas+2)& (0+255),b
  3931                           
  3932                           ;Counter.c: 45:         counter_datas[ 4 + 1 ] = counter_up_second % 10;
  3933   0016A6  C039  F05E         	movff	_counter_up_second,___awmod@dividend
  3934   0016AA  6A5F               	clrf	(___awmod@dividend+1)^0,c
  3935   0016AC  0E00               	movlw	0
  3936   0016AE  6E61               	movwf	(___awmod@divisor+1)^0,c
  3937   0016B0  0E0A               	movlw	10
  3938   0016B2  6E60               	movwf	___awmod@divisor^0,c
  3939   0016B4  EC1D  F011         	call	___awmod	;wreg free
  3940   0016B8  505E               	movf	?___awmod^0,w,c
  3941   0016BA  0101               	movlb	1	; () banked
  3942   0016BC  6F1D               	movwf	(ReadCounter@counter_datas+5)& (0+255),b
  3943                           
  3944                           ;Counter.c: 46:         counter_datas[ 4 ] = counter_up_second / 10;
  3945   0016BE  C039  F05E         	movff	_counter_up_second,___awdiv@dividend
  3946   0016C2  6A5F               	clrf	(___awdiv@dividend+1)^0,c
  3947   0016C4  0E00               	movlw	0
  3948   0016C6  6E61               	movwf	(___awdiv@divisor+1)^0,c
  3949   0016C8  0E0A               	movlw	10
  3950   0016CA  6E60               	movwf	___awdiv@divisor^0,c
  3951   0016CC  EC5B  F010         	call	___awdiv	;wreg free
  3952   0016D0  505E               	movf	?___awdiv^0,w,c
  3953   0016D2  0101               	movlb	1	; () banked
  3954   0016D4  6F1C               	movwf	(ReadCounter@counter_datas+4)& (0+255),b
  3955                           
  3956                           ;Counter.c: 47:     }
  3957   0016D6  EFC9  F00B         	goto	l9498
  3958   0016DA                     l9494:
  3959   0016DA  5037               	movf	_counter_direction_flg^0,w,c
  3960   0016DC  A4D8               	btfss	status,2,c
  3961   0016DE  EF73  F00B         	goto	u7071
  3962   0016E2  EF75  F00B         	goto	u7070
  3963   0016E6                     u7071:
  3964   0016E6  EFC9  F00B         	goto	l9498
  3965   0016EA                     u7070:
  3966   0016EA                     
  3967                           ;Counter.c: 50:         counter_datas[ 0 + 1 ] = counter_down_hour % 10;
  3968   0016EA  5041               	movf	_counter_down_hour^0,w,c
  3969   0016EC  6E5E               	movwf	___awmod@dividend^0,c
  3970   0016EE  6A5F               	clrf	(___awmod@dividend+1)^0,c
  3971   0016F0  BE5E               	btfsc	___awmod@dividend^0,7,c
  3972   0016F2  065F               	decf	(___awmod@dividend+1)^0,f,c
  3973   0016F4  0E00               	movlw	0
  3974   0016F6  6E61               	movwf	(___awmod@divisor+1)^0,c
  3975   0016F8  0E0A               	movlw	10
  3976   0016FA  6E60               	movwf	___awmod@divisor^0,c
  3977   0016FC  EC1D  F011         	call	___awmod	;wreg free
  3978   001700  505E               	movf	?___awmod^0,w,c
  3979   001702  0101               	movlb	1	; () banked
  3980   001704  6F19               	movwf	(ReadCounter@counter_datas+1)& (0+255),b
  3981                           
  3982                           ;Counter.c: 51:         counter_datas[ 0 ] = counter_down_hour / 10;
  3983   001706  5041               	movf	_counter_down_hour^0,w,c
  3984   001708  6E5E               	movwf	___awdiv@dividend^0,c
  3985   00170A  6A5F               	clrf	(___awdiv@dividend+1)^0,c
  3986   00170C  BE5E               	btfsc	___awdiv@dividend^0,7,c
  3987   00170E  065F               	decf	(___awdiv@dividend+1)^0,f,c
  3988   001710  0E00               	movlw	0
  3989   001712  6E61               	movwf	(___awdiv@divisor+1)^0,c
  3990   001714  0E0A               	movlw	10
  3991   001716  6E60               	movwf	___awdiv@divisor^0,c
  3992   001718  EC5B  F010         	call	___awdiv	;wreg free
  3993   00171C  505E               	movf	?___awdiv^0,w,c
  3994   00171E  0101               	movlb	1	; () banked
  3995   001720  6F18               	movwf	ReadCounter@counter_datas& (0+255),b
  3996                           
  3997                           ;Counter.c: 52:         counter_datas[ 2 + 1 ] = counter_down_minute % 10;
  3998   001722  5040               	movf	_counter_down_minute^0,w,c
  3999   001724  6E5E               	movwf	___awmod@dividend^0,c
  4000   001726  6A5F               	clrf	(___awmod@dividend+1)^0,c
  4001   001728  BE5E               	btfsc	___awmod@dividend^0,7,c
  4002   00172A  065F               	decf	(___awmod@dividend+1)^0,f,c
  4003   00172C  0E00               	movlw	0
  4004   00172E  6E61               	movwf	(___awmod@divisor+1)^0,c
  4005   001730  0E0A               	movlw	10
  4006   001732  6E60               	movwf	___awmod@divisor^0,c
  4007   001734  EC1D  F011         	call	___awmod	;wreg free
  4008   001738  505E               	movf	?___awmod^0,w,c
  4009   00173A  0101               	movlb	1	; () banked
  4010   00173C  6F1B               	movwf	(ReadCounter@counter_datas+3)& (0+255),b
  4011                           
  4012                           ;Counter.c: 53:         counter_datas[ 2 ] = counter_down_minute / 10;
  4013   00173E  5040               	movf	_counter_down_minute^0,w,c
  4014   001740  6E5E               	movwf	___awdiv@dividend^0,c
  4015   001742  6A5F               	clrf	(___awdiv@dividend+1)^0,c
  4016   001744  BE5E               	btfsc	___awdiv@dividend^0,7,c
  4017   001746  065F               	decf	(___awdiv@dividend+1)^0,f,c
  4018   001748  0E00               	movlw	0
  4019   00174A  6E61               	movwf	(___awdiv@divisor+1)^0,c
  4020   00174C  0E0A               	movlw	10
  4021   00174E  6E60               	movwf	___awdiv@divisor^0,c
  4022   001750  EC5B  F010         	call	___awdiv	;wreg free
  4023   001754  505E               	movf	?___awdiv^0,w,c
  4024   001756  0101               	movlb	1	; () banked
  4025   001758  6F1A               	movwf	(ReadCounter@counter_datas+2)& (0+255),b
  4026                           
  4027                           ;Counter.c: 54:         counter_datas[ 4 + 1 ] = counter_down_second % 10;
  4028   00175A  503F               	movf	_counter_down_second^0,w,c
  4029   00175C  6E5E               	movwf	___awmod@dividend^0,c
  4030   00175E  6A5F               	clrf	(___awmod@dividend+1)^0,c
  4031   001760  BE5E               	btfsc	___awmod@dividend^0,7,c
  4032   001762  065F               	decf	(___awmod@dividend+1)^0,f,c
  4033   001764  0E00               	movlw	0
  4034   001766  6E61               	movwf	(___awmod@divisor+1)^0,c
  4035   001768  0E0A               	movlw	10
  4036   00176A  6E60               	movwf	___awmod@divisor^0,c
  4037   00176C  EC1D  F011         	call	___awmod	;wreg free
  4038   001770  505E               	movf	?___awmod^0,w,c
  4039   001772  0101               	movlb	1	; () banked
  4040   001774  6F1D               	movwf	(ReadCounter@counter_datas+5)& (0+255),b
  4041                           
  4042                           ;Counter.c: 55:         counter_datas[ 4 ] = counter_down_second / 10;
  4043   001776  503F               	movf	_counter_down_second^0,w,c
  4044   001778  6E5E               	movwf	___awdiv@dividend^0,c
  4045   00177A  6A5F               	clrf	(___awdiv@dividend+1)^0,c
  4046   00177C  BE5E               	btfsc	___awdiv@dividend^0,7,c
  4047   00177E  065F               	decf	(___awdiv@dividend+1)^0,f,c
  4048   001780  0E00               	movlw	0
  4049   001782  6E61               	movwf	(___awdiv@divisor+1)^0,c
  4050   001784  0E0A               	movlw	10
  4051   001786  6E60               	movwf	___awdiv@divisor^0,c
  4052   001788  EC5B  F010         	call	___awdiv	;wreg free
  4053   00178C  505E               	movf	?___awdiv^0,w,c
  4054   00178E  0101               	movlb	1	; () banked
  4055   001790  6F1C               	movwf	(ReadCounter@counter_datas+4)& (0+255),b
  4056   001792                     l9498:
  4057                           
  4058                           ;Counter.c: 58:     return counter_datas;
  4059   001792  0E18               	movlw	low ReadCounter@counter_datas
  4060   001794  0101               	movlb	1	; () banked
  4061   001796  6F16               	movwf	?_ReadCounter& (0+255),b
  4062   001798  0E01               	movlw	high ReadCounter@counter_datas
  4063   00179A  6F17               	movwf	(?_ReadCounter+1)& (0+255),b
  4064   00179C                     
  4065                           ; BSR set to: 1
  4066   00179C  0012               	return		;funcret
  4067   00179E                     __end_of_ReadCounter:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function ___awmod *****************
  4071 ;; Defined at:
  4072 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  dividend        2   16[COMRAM] int 
  4075 ;;  divisor         2   18[COMRAM] int 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  sign            1   21[COMRAM] unsigned char 
  4078 ;;  counter         1   20[COMRAM] unsigned char 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  2   16[COMRAM] int 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4088 ;;      Params:         4       0       0       0       0       0       0
  4089 ;;      Locals:         2       0       0       0       0       0       0
  4090 ;;      Temps:          0       0       0       0       0       0       0
  4091 ;;      Totals:         6       0       0       0       0       0       0
  4092 ;;Total ram usage:        6 bytes
  4093 ;; Hardware stack levels used: 1
  4094 ;; Hardware stack levels required when called: 5
  4095 ;; This function calls:
  4096 ;;		Nothing
  4097 ;; This function is called by:
  4098 ;;		_ReadCounter
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text13
  4103   00223A                     __ptext13:
  4104                           	callstack 0
  4105   00223A                     ___awmod:
  4106                           	callstack 24
  4107   00223A  0E00               	movlw	0
  4108   00223C  6E63               	movwf	___awmod@sign^0,c
  4109   00223E  BE5F               	btfsc	(___awmod@dividend+1)^0,7,c
  4110   002240  EF26  F011         	goto	u6750
  4111   002244  EF24  F011         	goto	u6751
  4112   002248                     u6751:
  4113   002248  EF2C  F011         	goto	l9320
  4114   00224C                     u6750:
  4115   00224C  6C5E               	negf	___awmod@dividend^0,c
  4116   00224E  1E5F               	comf	(___awmod@dividend+1)^0,f,c
  4117   002250  B0D8               	btfsc	status,0,c
  4118   002252  2A5F               	incf	(___awmod@dividend+1)^0,f,c
  4119   002254  0E01               	movlw	1
  4120   002256  6E63               	movwf	___awmod@sign^0,c
  4121   002258                     l9320:
  4122   002258  BE61               	btfsc	(___awmod@divisor+1)^0,7,c
  4123   00225A  EF33  F011         	goto	u6760
  4124   00225E  EF31  F011         	goto	u6761
  4125   002262                     u6761:
  4126   002262  EF37  F011         	goto	l9324
  4127   002266                     u6760:
  4128   002266  6C60               	negf	___awmod@divisor^0,c
  4129   002268  1E61               	comf	(___awmod@divisor+1)^0,f,c
  4130   00226A  B0D8               	btfsc	status,0,c
  4131   00226C  2A61               	incf	(___awmod@divisor+1)^0,f,c
  4132   00226E                     l9324:
  4133   00226E  5060               	movf	___awmod@divisor^0,w,c
  4134   002270  1061               	iorwf	(___awmod@divisor+1)^0,w,c
  4135   002272  B4D8               	btfsc	status,2,c
  4136   002274  EF3E  F011         	goto	u6771
  4137   002278  EF40  F011         	goto	u6770
  4138   00227C                     u6771:
  4139   00227C  EF64  F011         	goto	l9340
  4140   002280                     u6770:
  4141   002280  0E01               	movlw	1
  4142   002282  6E62               	movwf	___awmod@counter^0,c
  4143   002284  EF48  F011         	goto	l9330
  4144   002288                     l9328:
  4145   002288  90D8               	bcf	status,0,c
  4146   00228A  3660               	rlcf	___awmod@divisor^0,f,c
  4147   00228C  3661               	rlcf	(___awmod@divisor+1)^0,f,c
  4148   00228E  2A62               	incf	___awmod@counter^0,f,c
  4149   002290                     l9330:
  4150   002290  AE61               	btfss	(___awmod@divisor+1)^0,7,c
  4151   002292  EF4D  F011         	goto	u6781
  4152   002296  EF4F  F011         	goto	u6780
  4153   00229A                     u6781:
  4154   00229A  EF44  F011         	goto	l9328
  4155   00229E                     u6780:
  4156   00229E                     l9332:
  4157   00229E  5060               	movf	___awmod@divisor^0,w,c
  4158   0022A0  5C5E               	subwf	___awmod@dividend^0,w,c
  4159   0022A2  5061               	movf	(___awmod@divisor+1)^0,w,c
  4160   0022A4  585F               	subwfb	(___awmod@dividend+1)^0,w,c
  4161   0022A6  A0D8               	btfss	status,0,c
  4162   0022A8  EF58  F011         	goto	u6791
  4163   0022AC  EF5A  F011         	goto	u6790
  4164   0022B0                     u6791:
  4165   0022B0  EF5E  F011         	goto	l9336
  4166   0022B4                     u6790:
  4167   0022B4  5060               	movf	___awmod@divisor^0,w,c
  4168   0022B6  5E5E               	subwf	___awmod@dividend^0,f,c
  4169   0022B8  5061               	movf	(___awmod@divisor+1)^0,w,c
  4170   0022BA  5A5F               	subwfb	(___awmod@dividend+1)^0,f,c
  4171   0022BC                     l9336:
  4172   0022BC  90D8               	bcf	status,0,c
  4173   0022BE  3261               	rrcf	(___awmod@divisor+1)^0,f,c
  4174   0022C0  3260               	rrcf	___awmod@divisor^0,f,c
  4175   0022C2  2E62               	decfsz	___awmod@counter^0,f,c
  4176   0022C4  EF4F  F011         	goto	l9332
  4177   0022C8                     l9340:
  4178   0022C8  5063               	movf	___awmod@sign^0,w,c
  4179   0022CA  B4D8               	btfsc	status,2,c
  4180   0022CC  EF6A  F011         	goto	u6801
  4181   0022D0  EF6C  F011         	goto	u6800
  4182   0022D4                     u6801:
  4183   0022D4  EF70  F011         	goto	l9344
  4184   0022D8                     u6800:
  4185   0022D8  6C5E               	negf	___awmod@dividend^0,c
  4186   0022DA  1E5F               	comf	(___awmod@dividend+1)^0,f,c
  4187   0022DC  B0D8               	btfsc	status,0,c
  4188   0022DE  2A5F               	incf	(___awmod@dividend+1)^0,f,c
  4189   0022E0                     l9344:
  4190   0022E0  C05E  F05E         	movff	___awmod@dividend,?___awmod
  4191   0022E4  C05F  F05F         	movff	___awmod@dividend+1,?___awmod+1
  4192   0022E8  0012               	return		;funcret
  4193   0022EA                     __end_of___awmod:
  4194                           	callstack 0
  4195                           
  4196 ;; *************** function ___awdiv *****************
  4197 ;; Defined at:
  4198 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  dividend        2   16[COMRAM] int 
  4201 ;;  divisor         2   18[COMRAM] int 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  quotient        2   22[COMRAM] int 
  4204 ;;  sign            1   21[COMRAM] unsigned char 
  4205 ;;  counter         1   20[COMRAM] unsigned char 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  2   16[COMRAM] int 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2, status,0
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4215 ;;      Params:         4       0       0       0       0       0       0
  4216 ;;      Locals:         4       0       0       0       0       0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0
  4218 ;;      Totals:         8       0       0       0       0       0       0
  4219 ;;Total ram usage:        8 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; Hardware stack levels required when called: 5
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_ReadCounter
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text14
  4230   0020B6                     __ptext14:
  4231                           	callstack 0
  4232   0020B6                     ___awdiv:
  4233                           	callstack 24
  4234   0020B6  0E00               	movlw	0
  4235   0020B8  6E63               	movwf	___awdiv@sign^0,c
  4236   0020BA  BE61               	btfsc	(___awdiv@divisor+1)^0,7,c
  4237   0020BC  EF64  F010         	goto	u6690
  4238   0020C0  EF62  F010         	goto	u6691
  4239   0020C4                     u6691:
  4240   0020C4  EF6A  F010         	goto	l9276
  4241   0020C8                     u6690:
  4242   0020C8  6C60               	negf	___awdiv@divisor^0,c
  4243   0020CA  1E61               	comf	(___awdiv@divisor+1)^0,f,c
  4244   0020CC  B0D8               	btfsc	status,0,c
  4245   0020CE  2A61               	incf	(___awdiv@divisor+1)^0,f,c
  4246   0020D0  0E01               	movlw	1
  4247   0020D2  6E63               	movwf	___awdiv@sign^0,c
  4248   0020D4                     l9276:
  4249   0020D4  BE5F               	btfsc	(___awdiv@dividend+1)^0,7,c
  4250   0020D6  EF71  F010         	goto	u6700
  4251   0020DA  EF6F  F010         	goto	u6701
  4252   0020DE                     u6701:
  4253   0020DE  EF77  F010         	goto	l9282
  4254   0020E2                     u6700:
  4255   0020E2  6C5E               	negf	___awdiv@dividend^0,c
  4256   0020E4  1E5F               	comf	(___awdiv@dividend+1)^0,f,c
  4257   0020E6  B0D8               	btfsc	status,0,c
  4258   0020E8  2A5F               	incf	(___awdiv@dividend+1)^0,f,c
  4259   0020EA  0E01               	movlw	1
  4260   0020EC  1A63               	xorwf	___awdiv@sign^0,f,c
  4261   0020EE                     l9282:
  4262   0020EE  0E00               	movlw	0
  4263   0020F0  6E65               	movwf	(___awdiv@quotient+1)^0,c
  4264   0020F2  0E00               	movlw	0
  4265   0020F4  6E64               	movwf	___awdiv@quotient^0,c
  4266   0020F6  5060               	movf	___awdiv@divisor^0,w,c
  4267   0020F8  1061               	iorwf	(___awdiv@divisor+1)^0,w,c
  4268   0020FA  B4D8               	btfsc	status,2,c
  4269   0020FC  EF82  F010         	goto	u6711
  4270   002100  EF84  F010         	goto	u6710
  4271   002104                     u6711:
  4272   002104  EFAC  F010         	goto	l9304
  4273   002108                     u6710:
  4274   002108  0E01               	movlw	1
  4275   00210A  6E62               	movwf	___awdiv@counter^0,c
  4276   00210C  EF8C  F010         	goto	l9290
  4277   002110                     l9288:
  4278   002110  90D8               	bcf	status,0,c
  4279   002112  3660               	rlcf	___awdiv@divisor^0,f,c
  4280   002114  3661               	rlcf	(___awdiv@divisor+1)^0,f,c
  4281   002116  2A62               	incf	___awdiv@counter^0,f,c
  4282   002118                     l9290:
  4283   002118  AE61               	btfss	(___awdiv@divisor+1)^0,7,c
  4284   00211A  EF91  F010         	goto	u6721
  4285   00211E  EF93  F010         	goto	u6720
  4286   002122                     u6721:
  4287   002122  EF88  F010         	goto	l9288
  4288   002126                     u6720:
  4289   002126                     l9292:
  4290   002126  90D8               	bcf	status,0,c
  4291   002128  3664               	rlcf	___awdiv@quotient^0,f,c
  4292   00212A  3665               	rlcf	(___awdiv@quotient+1)^0,f,c
  4293   00212C  5060               	movf	___awdiv@divisor^0,w,c
  4294   00212E  5C5E               	subwf	___awdiv@dividend^0,w,c
  4295   002130  5061               	movf	(___awdiv@divisor+1)^0,w,c
  4296   002132  585F               	subwfb	(___awdiv@dividend+1)^0,w,c
  4297   002134  A0D8               	btfss	status,0,c
  4298   002136  EF9F  F010         	goto	u6731
  4299   00213A  EFA1  F010         	goto	u6730
  4300   00213E                     u6731:
  4301   00213E  EFA6  F010         	goto	l9300
  4302   002142                     u6730:
  4303   002142  5060               	movf	___awdiv@divisor^0,w,c
  4304   002144  5E5E               	subwf	___awdiv@dividend^0,f,c
  4305   002146  5061               	movf	(___awdiv@divisor+1)^0,w,c
  4306   002148  5A5F               	subwfb	(___awdiv@dividend+1)^0,f,c
  4307   00214A  8064               	bsf	___awdiv@quotient^0,0,c
  4308   00214C                     l9300:
  4309   00214C  90D8               	bcf	status,0,c
  4310   00214E  3261               	rrcf	(___awdiv@divisor+1)^0,f,c
  4311   002150  3260               	rrcf	___awdiv@divisor^0,f,c
  4312   002152  2E62               	decfsz	___awdiv@counter^0,f,c
  4313   002154  EF93  F010         	goto	l9292
  4314   002158                     l9304:
  4315   002158  5063               	movf	___awdiv@sign^0,w,c
  4316   00215A  B4D8               	btfsc	status,2,c
  4317   00215C  EFB2  F010         	goto	u6741
  4318   002160  EFB4  F010         	goto	u6740
  4319   002164                     u6741:
  4320   002164  EFB8  F010         	goto	l9308
  4321   002168                     u6740:
  4322   002168  6C64               	negf	___awdiv@quotient^0,c
  4323   00216A  1E65               	comf	(___awdiv@quotient+1)^0,f,c
  4324   00216C  B0D8               	btfsc	status,0,c
  4325   00216E  2A65               	incf	(___awdiv@quotient+1)^0,f,c
  4326   002170                     l9308:
  4327   002170  C064  F05E         	movff	___awdiv@quotient,?___awdiv
  4328   002174  C065  F05F         	movff	___awdiv@quotient+1,?___awdiv+1
  4329   002178  0012               	return		;funcret
  4330   00217A                     __end_of___awdiv:
  4331                           	callstack 0
  4332                           
  4333 ;; *************** function _LEDProcess *****************
  4334 ;; Defined at:
  4335 ;;		line 106 in file "Main.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4349 ;;      Params:         0       0       0       0       0       0       0
  4350 ;;      Locals:         0       0       0       0       0       0       0
  4351 ;;      Temps:          2       0       0       0       0       0       0
  4352 ;;      Totals:         2       0       0       0       0       0       0
  4353 ;;Total ram usage:        2 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 5
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_main
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	text15
  4364   001BB4                     __ptext15:
  4365                           	callstack 0
  4366   001BB4                     _LEDProcess:
  4367                           	callstack 25
  4368   001BB4                     
  4369                           ;Main.c: 107:     display_datas[ 7 ] &= 0x00;
  4370   001BB4  0E00               	movlw	0
  4371   001BB6  0100               	movlb	0	; () banked
  4372   001BB8  6F8F               	movwf	(_display_datas+7)& (0+255),b
  4373                           
  4374                           ;Main.c: 108:     switch( SYSTEM_STATE_FLG ){
  4375   001BBA  EF23  F00E         	goto	l7264
  4376   001BBE                     l7230:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;Main.c: 111:             if( rtc_clock_disp_type == 0 ) display_datas[ 7 ] |= 0x01;
  4380   001BBE  504B               	movf	_rtc_clock_disp_type^0,w,c
  4381   001BC0  A4D8               	btfss	status,2,c
  4382   001BC2  EFE5  F00D         	goto	u5081
  4383   001BC6  EFE7  F00D         	goto	u5080
  4384   001BCA                     u5081:
  4385   001BCA  EFEA  F00D         	goto	l7234
  4386   001BCE                     u5080:
  4387   001BCE                     l7232:
  4388                           
  4389                           ; BSR set to: 0
  4390   001BCE  818F               	bsf	(_display_datas+7)& (0+255),0,b
  4391   001BD0  EF52  F00E         	goto	l361
  4392   001BD4                     l7234:
  4393                           
  4394                           ; BSR set to: 0
  4395   001BD4  838F               	bsf	(_display_datas+7)& (0+255),1,b
  4396   001BD6  EF52  F00E         	goto	l361
  4397   001BDA                     l7238:
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;Main.c: 115:             if(counter_down_comp_flg) { display_datas[ 7 ] |= 0x10; }
  4401   001BDA  5034               	movf	_counter_down_comp_flg^0,w,c
  4402   001BDC  B4D8               	btfsc	status,2,c
  4403   001BDE  EFF3  F00D         	goto	u5091
  4404   001BE2  EFF5  F00D         	goto	u5090
  4405   001BE6                     u5091:
  4406   001BE6  EFF8  F00D         	goto	l7242
  4407   001BEA                     u5090:
  4408   001BEA                     
  4409                           ; BSR set to: 0
  4410   001BEA  898F               	bsf	(_display_datas+7)& (0+255),4,b
  4411   001BEC  EFF9  F00D         	goto	l7244
  4412   001BF0                     l7242:
  4413                           
  4414                           ; BSR set to: 0
  4415   001BF0  8B8F               	bsf	(_display_datas+7)& (0+255),5,b
  4416   001BF2                     l7244:
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;Main.c: 117:             if( counter_skip_flg ) {
  4420   001BF2  5036               	movf	_counter_skip_flg^0,w,c
  4421   001BF4  B4D8               	btfsc	status,2,c
  4422   001BF6  EFFF  F00D         	goto	u5101
  4423   001BFA  EF01  F00E         	goto	u5100
  4424   001BFE                     u5101:
  4425   001BFE  EF48  F00E         	goto	l7266
  4426   001C02                     u5100:
  4427   001C02                     
  4428                           ; BSR set to: 0
  4429                           ;Main.c: 118:                 led_blink_cnt ++;
  4430   001C02  4A18               	infsnz	_led_blink_cnt^0,f,c
  4431   001C04  2A19               	incf	(_led_blink_cnt+1)^0,f,c
  4432   001C06                     
  4433                           ; BSR set to: 0
  4434                           ;Main.c: 119:                 if( led_blink_cnt < 25 / 2 ) display_datas[ 7 ] |= 0x04;
  4435   001C06  5019               	movf	(_led_blink_cnt+1)^0,w,c
  4436   001C08  E107               	bnz	u5111
  4437   001C0A  0E0C               	movlw	12
  4438   001C0C  5C18               	subwf	_led_blink_cnt^0,w,c
  4439   001C0E  B0D8               	btfsc	status,0,c
  4440   001C10  EF0C  F00E         	goto	u5111
  4441   001C14  EF0E  F00E         	goto	u5110
  4442   001C18                     u5111:
  4443   001C18  EF0F  F00E         	goto	l7252
  4444   001C1C                     u5110:
  4445   001C1C                     
  4446                           ; BSR set to: 0
  4447   001C1C  858F               	bsf	(_display_datas+7)& (0+255),2,b
  4448   001C1E                     l7252:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;Main.c: 120:                 if( led_blink_cnt > 25 ) led_blink_cnt = 0;
  4452   001C1E  5019               	movf	(_led_blink_cnt+1)^0,w,c
  4453   001C20  E109               	bnz	u5120
  4454   001C22  0E1A               	movlw	26
  4455   001C24  5C18               	subwf	_led_blink_cnt^0,w,c
  4456   001C26  A0D8               	btfss	status,0,c
  4457   001C28  EF18  F00E         	goto	u5121
  4458   001C2C  EF1A  F00E         	goto	u5120
  4459   001C30                     u5121:
  4460   001C30  EF48  F00E         	goto	l7266
  4461   001C34                     u5120:
  4462   001C34                     
  4463                           ; BSR set to: 0
  4464   001C34  0E00               	movlw	0
  4465   001C36  6E19               	movwf	(_led_blink_cnt+1)^0,c
  4466   001C38  0E00               	movlw	0
  4467   001C3A  6E18               	movwf	_led_blink_cnt^0,c
  4468   001C3C  EF48  F00E         	goto	l7266
  4469   001C40                     l7256:
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;Main.c: 124:             display_datas[ 7 ] |= 0x10;
  4473   001C40  898F               	bsf	(_display_datas+7)& (0+255),4,b
  4474                           
  4475                           ;Main.c: 125:             break;
  4476   001C42  EF48  F00E         	goto	l7266
  4477   001C46                     l7264:
  4478                           
  4479                           ; BSR set to: 0
  4480   001C46  506E               	movf	_SYSTEM_STATE_FLG^0,w,c
  4481   001C48  6E5E               	movwf	??_LEDProcess^0,c
  4482   001C4A  6A5F               	clrf	(??_LEDProcess+1)^0,c
  4483                           
  4484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4485                           ; Switch size 1, requested type "simple"
  4486                           ; Number of cases is 1, Range of values is 0 to 0
  4487                           ; switch strategies available:
  4488                           ; Name         Instructions Cycles
  4489                           ; simple_byte            4     3 (average)
  4490                           ;	Chosen strategy is simple_byte
  4491   001C4C  505F               	movf	(??_LEDProcess+1)^0,w,c
  4492   001C4E  0A00               	xorlw	0	; case 0
  4493   001C50  B4D8               	btfsc	status,2,c
  4494   001C52  EF2D  F00E         	goto	l9952
  4495   001C56  EF48  F00E         	goto	l7266
  4496   001C5A                     l9952:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ; Switch size 1, requested type "simple"
  4500                           ; Number of cases is 6, Range of values is 100 to 203
  4501                           ; switch strategies available:
  4502                           ; Name         Instructions Cycles
  4503                           ; simple_byte           19    10 (average)
  4504                           ;	Chosen strategy is simple_byte
  4505   001C5A  505E               	movf	??_LEDProcess^0,w,c
  4506   001C5C  0A64               	xorlw	100	; case 100
  4507   001C5E  B4D8               	btfsc	status,2,c
  4508   001C60  EFDF  F00D         	goto	l7230
  4509   001C64  0A01               	xorlw	1	; case 101
  4510   001C66  B4D8               	btfsc	status,2,c
  4511   001C68  EFDF  F00D         	goto	l7230
  4512   001C6C  0AAD               	xorlw	173	; case 200
  4513   001C6E  B4D8               	btfsc	status,2,c
  4514   001C70  EFED  F00D         	goto	l7238
  4515   001C74  0A01               	xorlw	1	; case 201
  4516   001C76  B4D8               	btfsc	status,2,c
  4517   001C78  EF20  F00E         	goto	l7256
  4518   001C7C  0A03               	xorlw	3	; case 202
  4519   001C7E  B4D8               	btfsc	status,2,c
  4520   001C80  EF20  F00E         	goto	l7256
  4521   001C84  0A01               	xorlw	1	; case 203
  4522   001C86  B4D8               	btfsc	status,2,c
  4523   001C88  EF20  F00E         	goto	l7256
  4524   001C8C  EF48  F00E         	goto	l7266
  4525   001C90                     l7266:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;Main.c: 133:     if( counter_direction_flg == 1 ) { display_datas[ 7 ] |= 0x01; }
  4529   001C90  0437               	decf	_counter_direction_flg^0,w,c
  4530   001C92  A4D8               	btfss	status,2,c
  4531   001C94  EF4E  F00E         	goto	u5131
  4532   001C98  EF50  F00E         	goto	u5130
  4533   001C9C                     u5131:
  4534   001C9C  EFEA  F00D         	goto	l7234
  4535   001CA0                     u5130:
  4536   001CA0  EFE7  F00D         	goto	l7232
  4537   001CA4                     l361:
  4538                           
  4539                           ; BSR set to: 0
  4540   001CA4  0012               	return		;funcret
  4541   001CA6                     __end_of_LEDProcess:
  4542                           	callstack 0
  4543                           
  4544 ;; *************** function _DeviceInit *****************
  4545 ;; Defined at:
  4546 ;;		line 72 in file "Main.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4560 ;;      Params:         0       0       0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0
  4563 ;;      Totals:         0       0       0       0       0       0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used: 1
  4566 ;; Hardware stack levels required when called: 10
  4567 ;; This function calls:
  4568 ;;		_Ds1307Init
  4569 ;;		_EnableAllInterrupts
  4570 ;;		_InitValue
  4571 ;;		_Open1USART
  4572 ;;		_OpenButtons
  4573 ;;		_OpenCounter
  4574 ;;		_OpenDisplay
  4575 ;;		_OpenTimer0
  4576 ;;		_OscillatorInit
  4577 ;;		_Puts1USART
  4578 ;;		_StartTimer0
  4579 ;;		_WriteTimer0
  4580 ;; This function is called by:
  4581 ;;		_main
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text16
  4586   002572                     __ptext16:
  4587                           	callstack 0
  4588   002572                     _DeviceInit:
  4589                           	callstack 20
  4590   002572                     
  4591                           ;Main.c: 74:     OscillatorInit();
  4592   002572  ECB8  F014         	call	_OscillatorInit	;wreg free
  4593   002576                     
  4594                           ;Main.c: 76:     ADCON0 = 0x00; ADCON1 = 0x0F;
  4595   002576  0E00               	movlw	0
  4596   002578  6EC2               	movwf	194,c	;volatile
  4597   00257A  0E0F               	movlw	15
  4598   00257C  6EC1               	movwf	193,c	;volatile
  4599                           
  4600                           ;Main.c: 77:     EnableAllInterrupts();
  4601   00257E  ECD2  F014         	call	_EnableAllInterrupts	;wreg free
  4602   002582                     
  4603                           ;Main.c: 80:     SYSTEM_STATE_FLG = 201;
  4604   002582  0EC9               	movlw	201
  4605   002584  6E6E               	movwf	_SYSTEM_STATE_FLG^0,c
  4606   002586                     
  4607                           ;Main.c: 82:     OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110010 );
  4608   002586  0E92               	movlw	146
  4609   002588  ECD6  F013         	call	_OpenTimer0
  4610   00258C                     
  4611                           ;Main.c: 83:     WriteTimer0( 65285 ); StartTimer0();
  4612   00258C  0EFF               	movlw	255
  4613   00258E  6E5F               	movwf	(WriteTimer0@timer0+1)^0,c
  4614   002590  0E05               	movlw	5
  4615   002592  6E5E               	movwf	WriteTimer0@timer0^0,c
  4616   002594  EC7B  F014         	call	_WriteTimer0	;wreg free
  4617   002598  ECD0  F014         	call	_StartTimer0	;wreg free
  4618   00259C                     
  4619                           ;Main.c: 85:     OpenCounter();
  4620   00259C  EC19  F013         	call	_OpenCounter	;wreg free
  4621   0025A0                     
  4622                           ;Main.c: 86:     OpenDisplay();
  4623   0025A0  EC45  F012         	call	_OpenDisplay	;wreg free
  4624   0025A4                     
  4625                           ;Main.c: 87:     OpenButtons();
  4626   0025A4  EC06  F012         	call	_OpenButtons	;wreg free
  4627   0025A8                     
  4628                           ;Main.c: 88:     Ds1307Init();
  4629   0025A8  ECBF  F014         	call	_Ds1307Init	;wreg free
  4630   0025AC                     
  4631                           ;Main.c: 93:     InitValue();
  4632   0025AC  ECBE  F011         	call	_InitValue	;wreg free
  4633   0025B0                     
  4634                           ;Main.c: 95:     Open1USART( 0b01111111 &
  4635   0025B0  0E00               	movlw	0
  4636   0025B2  6E5F               	movwf	(Open1USART@spbrg+1)^0,c
  4637   0025B4  0E67               	movlw	103
  4638   0025B6  6E5E               	movwf	Open1USART@spbrg^0,c
  4639   0025B8  0E3C               	movlw	60
  4640   0025BA  ECBD  F010         	call	_Open1USART
  4641   0025BE                     
  4642                           ;Main.c: 101:     Puts1USART( "This is Ethernet protocol test firmware!\r\n" );
  4643   0025BE  0E01               	movlw	low STR_1
  4644   0025C0  6E5F               	movwf	Puts1USART@data^0,c
  4645   0025C2  0E06               	movlw	high STR_1
  4646   0025C4  6E60               	movwf	(Puts1USART@data+1)^0,c
  4647   0025C6  EC3D  F013         	call	_Puts1USART	;wreg free
  4648   0025CA                     
  4649                           ;Main.c: 103:     set_mode_release_cnt = 0;
  4650   0025CA  0E00               	movlw	0
  4651   0025CC  0100               	movlb	0	; () banked
  4652   0025CE  6FC7               	movwf	(_set_mode_release_cnt+1)& (0+255),b
  4653   0025D0  0E00               	movlw	0
  4654   0025D2  6FC6               	movwf	_set_mode_release_cnt& (0+255),b
  4655   0025D4                     
  4656                           ; BSR set to: 0
  4657   0025D4  0012               	return		;funcret
  4658   0025D6                     __end_of_DeviceInit:
  4659                           	callstack 0
  4660                           
  4661 ;; *************** function _WriteTimer0 *****************
  4662 ;; Defined at:
  4663 ;;		line 37 in file "Timers.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  timer0          2   16[COMRAM] unsigned int 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  timer           2   18[COMRAM] struct Timers
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		None
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4677 ;;      Params:         2       0       0       0       0       0       0
  4678 ;;      Locals:         2       0       0       0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0
  4680 ;;      Totals:         4       0       0       0       0       0       0
  4681 ;;Total ram usage:        4 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 5
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_DeviceInit
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text17
  4692   0028F6                     __ptext17:
  4693                           	callstack 0
  4694   0028F6                     _WriteTimer0:
  4695                           	callstack 24
  4696   0028F6                     
  4697                           ;Timers.c: 37: void WriteTimer0(unsigned int timer0);Timers.c: 38: {;Timers.c: 39:     u
      +                          nion Timers timer;;Timers.c: 41:     timer.lt = timer0;
  4698   0028F6  C05E  F060         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4699   0028FA  C05F  F061         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4700                           
  4701                           ;Timers.c: 43:     TMR0H = timer.bt[1];
  4702   0028FE  C061  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4703                           
  4704                           ;Timers.c: 44:     TMR0L = timer.bt[0];
  4705   002902  C060  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4706   002906  0012               	return		;funcret
  4707   002908                     __end_of_WriteTimer0:
  4708                           	callstack 0
  4709                           
  4710 ;; *************** function _StartTimer0 *****************
  4711 ;; Defined at:
  4712 ;;		line 47 in file "Timers.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		None
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4726 ;;      Params:         0       0       0       0       0       0       0
  4727 ;;      Locals:         0       0       0       0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0
  4729 ;;      Totals:         0       0       0       0       0       0       0
  4730 ;;Total ram usage:        0 bytes
  4731 ;; Hardware stack levels used: 1
  4732 ;; Hardware stack levels required when called: 5
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_DeviceInit
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text18
  4741   0029A0                     __ptext18:
  4742                           	callstack 0
  4743   0029A0                     _StartTimer0:
  4744                           	callstack 24
  4745   0029A0                     
  4746                           ;Timers.c: 48:     T0CONbits.TMR0ON = 1;
  4747   0029A0  8ED5               	bsf	213,7,c	;volatile
  4748   0029A2  0012               	return		;funcret
  4749   0029A4                     __end_of_StartTimer0:
  4750                           	callstack 0
  4751                           
  4752 ;; *************** function _Puts1USART *****************
  4753 ;; Defined at:
  4754 ;;		line 105 in file "Uart.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  data            2   17[COMRAM] PTR unsigned char 
  4757 ;;		 -> STR_1(43), 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      void 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4769 ;;      Params:         2       0       0       0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0
  4772 ;;      Totals:         2       0       0       0       0       0       0
  4773 ;;Total ram usage:        2 bytes
  4774 ;; Hardware stack levels used: 1
  4775 ;; Hardware stack levels required when called: 6
  4776 ;; This function calls:
  4777 ;;		_Busy1USART
  4778 ;;		_Write1USART
  4779 ;; This function is called by:
  4780 ;;		_DeviceInit
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text19
  4785   00267A                     __ptext19:
  4786                           	callstack 0
  4787   00267A                     _Puts1USART:
  4788                           	callstack 23
  4789   00267A                     l1802:
  4790   00267A                     l6530:
  4791   00267A  EC5A  F014         	call	_Busy1USART	;wreg free
  4792   00267E  0900               	iorlw	0
  4793   002680  A4D8               	btfss	status,2,c
  4794   002682  EF45  F013         	goto	u4251
  4795   002686  EF47  F013         	goto	u4250
  4796   00268A                     u4251:
  4797   00268A  EF3D  F013         	goto	l6530
  4798   00268E                     u4250:
  4799   00268E                     
  4800                           ;Uart.c: 109:             Write1USART(*data);
  4801   00268E  C05F  FFF6         	movff	Puts1USART@data,tblptrl
  4802   002692  C060  FFF7         	movff	Puts1USART@data+1,tblptrh
  4803   002696                     	if	0	;tblptru may be non-zero
  4804   002696                     	endif
  4805   002696                     	if	0	;tblptru may be non-zero
  4806   002696                     	endif
  4807   002696  0008               	tblrd		*
  4808   002698  50F5               	movf	tablat,w,c
  4809   00269A  ECEB  F013         	call	_Write1USART
  4810   00269E                     
  4811                           ;Uart.c: 110:     } while( *data++ );
  4812   00269E  C05F  FFF6         	movff	Puts1USART@data,tblptrl
  4813   0026A2  C060  FFF7         	movff	Puts1USART@data+1,tblptrh
  4814   0026A6  4A5F               	infsnz	Puts1USART@data^0,f,c
  4815   0026A8  2A60               	incf	(Puts1USART@data+1)^0,f,c
  4816   0026AA                     	if	0	;tblptru may be non-zero
  4817   0026AA                     	endif
  4818   0026AA                     	if	0	;tblptru may be non-zero
  4819   0026AA                     	endif
  4820   0026AA  0008               	tblrd		*
  4821   0026AC  50F5               	movf	tablat,w,c
  4822   0026AE  0900               	iorlw	0
  4823   0026B0  A4D8               	btfss	status,2,c
  4824   0026B2  EF5D  F013         	goto	u4261
  4825   0026B6  EF5F  F013         	goto	u4260
  4826   0026BA                     u4261:
  4827   0026BA  EF3D  F013         	goto	l1802
  4828   0026BE                     u4260:
  4829   0026BE  0012               	return		;funcret
  4830   0026C0                     __end_of_Puts1USART:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function _Write1USART *****************
  4834 ;; Defined at:
  4835 ;;		line 79 in file "Uart.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  data            1    wreg     unsigned char 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  data            1   16[COMRAM] unsigned char 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		wreg
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4849 ;;      Params:         0       0       0       0       0       0       0
  4850 ;;      Locals:         1       0       0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0       0
  4852 ;;      Totals:         1       0       0       0       0       0       0
  4853 ;;Total ram usage:        1 bytes
  4854 ;; Hardware stack levels used: 1
  4855 ;; Hardware stack levels required when called: 5
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_Puts1USART
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text20
  4864   0027D6                     __ptext20:
  4865                           	callstack 0
  4866   0027D6                     _Write1USART:
  4867                           	callstack 23
  4868                           
  4869                           ;incstack = 0
  4870                           ;Write1USART@data stored from wreg
  4871   0027D6  6E5E               	movwf	Write1USART@data^0,c
  4872   0027D8                     
  4873                           ;Uart.c: 80:     if(TXSTA1bits.TX9)
  4874   0027D8  ACAC               	btfss	172,6,c	;volatile
  4875   0027DA  EFF1  F013         	goto	u4071
  4876   0027DE  EFF3  F013         	goto	u4070
  4877   0027E2                     u4071:
  4878   0027E2  EFFC  F013         	goto	l6416
  4879   0027E6                     u4070:
  4880   0027E6                     
  4881                           ;Uart.c: 81:     {;Uart.c: 82:         TXSTA1bits.TX9D = 0;
  4882   0027E6  90AC               	bcf	172,0,c	;volatile
  4883                           
  4884                           ;Uart.c: 83:         if(USART1_Status.TX_NINE)
  4885   0027E8  A22B               	btfss	_USART1_Status^0,1,c	;volatile
  4886   0027EA  EFF9  F013         	goto	u4081
  4887   0027EE  EFFB  F013         	goto	u4080
  4888   0027F2                     u4081:
  4889   0027F2  EFFC  F013         	goto	l6416
  4890   0027F6                     u4080:
  4891   0027F6                     
  4892                           ;Uart.c: 84:             TXSTA1bits.TX9D = 1;
  4893   0027F6  80AC               	bsf	172,0,c	;volatile
  4894   0027F8                     l6416:
  4895                           
  4896                           ;Uart.c: 87:     TXREG1 = data;
  4897   0027F8  C05E  FFAD         	movff	Write1USART@data,4013	;volatile
  4898   0027FC  0012               	return		;funcret
  4899   0027FE                     __end_of_Write1USART:
  4900                           	callstack 0
  4901                           
  4902 ;; *************** function _Busy1USART *****************
  4903 ;; Defined at:
  4904 ;;		line 49 in file "Uart.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;		None
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;		None
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      unsigned char 
  4911 ;; Registers used:
  4912 ;;		wreg
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4918 ;;      Params:         0       0       0       0       0       0       0
  4919 ;;      Locals:         0       0       0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0
  4921 ;;      Totals:         0       0       0       0       0       0       0
  4922 ;;Total ram usage:        0 bytes
  4923 ;; Hardware stack levels used: 1
  4924 ;; Hardware stack levels required when called: 5
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_Puts1USART
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text21
  4933   0028B4                     __ptext21:
  4934                           	callstack 0
  4935   0028B4                     _Busy1USART:
  4936                           	callstack 23
  4937   0028B4                     
  4938                           ;Uart.c: 51:     if(!TXSTA1bits.TRMT)
  4939   0028B4  B2AC               	btfsc	172,1,c	;volatile
  4940   0028B6  EF5F  F014         	goto	u4061
  4941   0028BA  EF61  F014         	goto	u4060
  4942   0028BE                     u4061:
  4943   0028BE  EF64  F014         	goto	l6406
  4944   0028C2                     u4060:
  4945   0028C2                     
  4946                           ;Uart.c: 52:         return 1;
  4947   0028C2  0E01               	movlw	1
  4948   0028C4  EF65  F014         	goto	l1778
  4949   0028C8                     l6406:
  4950                           
  4951                           ;Uart.c: 53:     return 0;
  4952   0028C8  0E00               	movlw	0
  4953   0028CA                     l1778:
  4954   0028CA  0012               	return		;funcret
  4955   0028CC                     __end_of_Busy1USART:
  4956                           	callstack 0
  4957                           
  4958 ;; *************** function _OscillatorInit *****************
  4959 ;; Defined at:
  4960 ;;		line 11 in file "Config.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		None
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4974 ;;      Params:         0       0       0       0       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0
  4977 ;;      Totals:         0       0       0       0       0       0       0
  4978 ;;Total ram usage:        0 bytes
  4979 ;; Hardware stack levels used: 1
  4980 ;; Hardware stack levels required when called: 5
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_DeviceInit
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text22
  4989   002970                     __ptext22:
  4990                           	callstack 0
  4991   002970                     _OscillatorInit:
  4992                           	callstack 24
  4993   002970                     
  4994                           ;Config.c: 12:     OSCCONbits.SCS0 = 1;
  4995   002970  80D3               	bsf	211,0,c	;volatile
  4996                           
  4997                           ;Config.c: 13:     OSCCONbits.SCS1 = 1;
  4998   002972  82D3               	bsf	211,1,c	;volatile
  4999                           
  5000                           ;Config.c: 14:     OSCCONbits.IRCF0 = 1;
  5001   002974  88D3               	bsf	211,4,c	;volatile
  5002                           
  5003                           ;Config.c: 15:     OSCCONbits.IRCF1 = 1;
  5004   002976  8AD3               	bsf	211,5,c	;volatile
  5005                           
  5006                           ;Config.c: 16:     OSCCONbits.IRCF2 = 1;
  5007   002978  8CD3               	bsf	211,6,c	;volatile
  5008                           
  5009                           ;Config.c: 17:     OSCTUNEbits.PLLEN = 1;
  5010   00297A  8C9B               	bsf	155,6,c	;volatile
  5011   00297C  0012               	return		;funcret
  5012   00297E                     __end_of_OscillatorInit:
  5013                           	callstack 0
  5014                           
  5015 ;; *************** function _OpenTimer0 *****************
  5016 ;; Defined at:
  5017 ;;		line 13 in file "Timers.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;  config          1    wreg     unsigned char 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  config          1   16[COMRAM] unsigned char 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, status,0
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5031 ;;      Params:         0       0       0       0       0       0       0
  5032 ;;      Locals:         1       0       0       0       0       0       0
  5033 ;;      Temps:          0       0       0       0       0       0       0
  5034 ;;      Totals:         1       0       0       0       0       0       0
  5035 ;;Total ram usage:        1 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; Hardware stack levels required when called: 5
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		_DeviceInit
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text23
  5046   0027AC                     __ptext23:
  5047                           	callstack 0
  5048   0027AC                     _OpenTimer0:
  5049                           	callstack 24
  5050                           
  5051                           ;incstack = 0
  5052                           ;OpenTimer0@config stored from wreg
  5053   0027AC  6E5E               	movwf	OpenTimer0@config^0,c
  5054   0027AE                     
  5055                           ;Timers.c: 13: void OpenTimer0(unsigned char config);Timers.c: 14: {;Timers.c: 15:     T
      +                          0CON = (0x7f & config);
  5056   0027AE  505E               	movf	OpenTimer0@config^0,w,c
  5057   0027B0  0B7F               	andlw	127
  5058   0027B2  6ED5               	movwf	213,c	;volatile
  5059   0027B4                     
  5060                           ;Timers.c: 16:     TMR0H = 0;
  5061   0027B4  0E00               	movlw	0
  5062   0027B6  6ED7               	movwf	215,c	;volatile
  5063   0027B8                     
  5064                           ;Timers.c: 17:     TMR0L = 0;
  5065   0027B8  0E00               	movlw	0
  5066   0027BA  6ED6               	movwf	214,c	;volatile
  5067   0027BC                     
  5068                           ;Timers.c: 18:     INTCONbits.TMR0IF = 0;
  5069   0027BC  94F2               	bcf	242,2,c	;volatile
  5070   0027BE                     
  5071                           ;Timers.c: 20:     if(config&0x80)
  5072   0027BE  AE5E               	btfss	OpenTimer0@config^0,7,c
  5073   0027C0  EFE4  F013         	goto	u4091
  5074   0027C4  EFE6  F013         	goto	u4090
  5075   0027C8                     u4091:
  5076   0027C8  EFE9  F013         	goto	l465
  5077   0027CC                     u4090:
  5078   0027CC                     
  5079                           ;Timers.c: 21:         INTCONbits.TMR0IE = 1;
  5080   0027CC  8AF2               	bsf	242,5,c	;volatile
  5081   0027CE  EFEA  F013         	goto	l467
  5082   0027D2                     l465:
  5083                           
  5084                           ;Timers.c: 23:         INTCONbits.TMR0IE = 0;
  5085   0027D2  9AF2               	bcf	242,5,c	;volatile
  5086   0027D4                     l467:
  5087   0027D4  0012               	return		;funcret
  5088   0027D6                     __end_of_OpenTimer0:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function _OpenDisplay *****************
  5092 ;; Defined at:
  5093 ;;		line 9 in file "Display.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  i               1   16[COMRAM] unsigned char 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5107 ;;      Params:         0       0       0       0       0       0       0
  5108 ;;      Locals:         1       0       0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0
  5110 ;;      Totals:         1       0       0       0       0       0       0
  5111 ;;Total ram usage:        1 bytes
  5112 ;; Hardware stack levels used: 1
  5113 ;; Hardware stack levels required when called: 6
  5114 ;; This function calls:
  5115 ;;		_M74HC595Init
  5116 ;; This function is called by:
  5117 ;;		_DeviceInit
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text24
  5122   00248A                     __ptext24:
  5123                           	callstack 0
  5124   00248A                     _OpenDisplay:
  5125                           	callstack 23
  5126   00248A                     
  5127                           ;Display.c: 12:     TRISCbits.TRISC2 = 0;
  5128   00248A  9494               	bcf	148,2,c	;volatile
  5129                           
  5130                           ;Display.c: 13:     TRISCbits.TRISC1 = 0;
  5131   00248C  9294               	bcf	148,1,c	;volatile
  5132                           
  5133                           ;Display.c: 14:     TRISCbits.TRISC0 = 0;
  5134   00248E  9094               	bcf	148,0,c	;volatile
  5135                           
  5136                           ;Display.c: 15:     TRISCbits.TRISC5 = 0;
  5137   002490  9A94               	bcf	148,5,c	;volatile
  5138                           
  5139                           ;Display.c: 16:     TRISBbits.TRISB1 = 0;
  5140   002492  9293               	bcf	147,1,c	;volatile
  5141                           
  5142                           ;Display.c: 17:     TRISBbits.TRISB5 = 0;
  5143   002494  9A93               	bcf	147,5,c	;volatile
  5144                           
  5145                           ;Display.c: 18:     TRISDbits.TRISD7 = 0;
  5146   002496  9E95               	bcf	149,7,c	;volatile
  5147                           
  5148                           ;Display.c: 19:     TRISBbits.TRISB0 = 0;
  5149   002498  9093               	bcf	147,0,c	;volatile
  5150                           
  5151                           ;Display.c: 21:     LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATCbits.LATC5 = 
      +                          LATBbits.LATB1 = LATBbits.LATB5 = LATDbits.LATD7 = LATBbits.LATB0 = 1;
  5152   00249A  808A               	bsf	138,0,c	;volatile
  5153   00249C  8E8C               	bsf	140,7,c	;volatile
  5154   00249E  8A8A               	bsf	138,5,c	;volatile
  5155   0024A0  828A               	bsf	138,1,c	;volatile
  5156   0024A2  8A8B               	bsf	139,5,c	;volatile
  5157   0024A4  808B               	bsf	139,0,c	;volatile
  5158   0024A6  828B               	bsf	139,1,c	;volatile
  5159   0024A8  848B               	bsf	139,2,c	;volatile
  5160   0024AA                     
  5161                           ;Display.c: 23:     M74HC595Init();
  5162   0024AA  EC84  F014         	call	_M74HC595Init	;wreg free
  5163   0024AE                     
  5164                           ;Display.c: 25:     for( unsigned char i = 0; i < 7 + 1; i++ ){
  5165   0024AE  0E00               	movlw	0
  5166   0024B0  6E5E               	movwf	OpenDisplay@i^0,c
  5167   0024B2                     l6464:
  5168                           
  5169                           ;Display.c: 26:         blink_pos[ i ] = 0;
  5170   0024B2  0E80               	movlw	low _blink_pos
  5171   0024B4  245E               	addwf	OpenDisplay@i^0,w,c
  5172   0024B6  6ED9               	movwf	fsr2l,c
  5173   0024B8  6ADA               	clrf	fsr2h,c
  5174   0024BA  0E00               	movlw	high _blink_pos
  5175   0024BC  22DA               	addwfc	fsr2h,f,c
  5176   0024BE  6ADF               	clrf	indf2,c
  5177                           
  5178                           ;Display.c: 27:         display_datas[ i ] = 0xff;
  5179   0024C0  0E88               	movlw	low _display_datas
  5180   0024C2  245E               	addwf	OpenDisplay@i^0,w,c
  5181   0024C4  6ED9               	movwf	fsr2l,c
  5182   0024C6  6ADA               	clrf	fsr2h,c
  5183   0024C8  0E00               	movlw	high _display_datas
  5184   0024CA  22DA               	addwfc	fsr2h,f,c
  5185   0024CC  0EFF               	movlw	255
  5186   0024CE  6EDF               	movwf	indf2,c
  5187   0024D0                     
  5188                           ;Display.c: 28:     }
  5189   0024D0  2A5E               	incf	OpenDisplay@i^0,f,c
  5190   0024D2  0E07               	movlw	7
  5191   0024D4  645E               	cpfsgt	OpenDisplay@i^0,c
  5192   0024D6  EF6F  F012         	goto	u4101
  5193   0024DA  EF71  F012         	goto	u4100
  5194   0024DE                     u4101:
  5195   0024DE  EF59  F012         	goto	l6464
  5196   0024E2                     u4100:
  5197   0024E2                     
  5198                           ;Display.c: 29:     display_datas[6] = 0x00;
  5199   0024E2  0E00               	movlw	0
  5200   0024E4  0100               	movlb	0	; () banked
  5201   0024E6  6F8E               	movwf	(_display_datas+6)& (0+255),b
  5202                           
  5203                           ;Display.c: 31:     display_cnt = 0; blink_cnt = 0; blink_enable_flg = 0;
  5204   0024E8  0E00               	movlw	0
  5205   0024EA  6E31               	movwf	_display_cnt^0,c
  5206   0024EC  0E00               	movlw	0
  5207   0024EE  6E30               	movwf	_blink_cnt^0,c
  5208   0024F0  0E00               	movlw	0
  5209   0024F2  6E32               	movwf	_blink_enable_flg^0,c
  5210                           
  5211                           ;Display.c: 32:     BLINK_TIME = 300;
  5212   0024F4  0E01               	movlw	1
  5213   0024F6  6E17               	movwf	(_BLINK_TIME+1)^0,c
  5214   0024F8  0E2C               	movlw	44
  5215   0024FA  6E16               	movwf	_BLINK_TIME^0,c
  5216   0024FC                     
  5217                           ; BSR set to: 0
  5218   0024FC  0012               	return		;funcret
  5219   0024FE                     __end_of_OpenDisplay:
  5220                           	callstack 0
  5221                           
  5222 ;; *************** function _M74HC595Init *****************
  5223 ;; Defined at:
  5224 ;;		line 11 in file "M74HC595.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;		None
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;		None
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1    wreg      void 
  5231 ;; Registers used:
  5232 ;;		None
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5238 ;;      Params:         0       0       0       0       0       0       0
  5239 ;;      Locals:         0       0       0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0
  5241 ;;      Totals:         0       0       0       0       0       0       0
  5242 ;;Total ram usage:        0 bytes
  5243 ;; Hardware stack levels used: 1
  5244 ;; Hardware stack levels required when called: 5
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_OpenDisplay
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text25
  5253   002908                     __ptext25:
  5254                           	callstack 0
  5255   002908                     _M74HC595Init:
  5256                           	callstack 23
  5257   002908                     
  5258                           ;M74HC595.c: 14:     TRISAbits.TRISA0 = 0;
  5259   002908  9092               	bcf	146,0,c	;volatile
  5260                           
  5261                           ;M74HC595.c: 15:     TRISAbits.TRISA1 = 0;
  5262   00290A  9292               	bcf	146,1,c	;volatile
  5263                           
  5264                           ;M74HC595.c: 16:     TRISAbits.TRISA3 = 0;
  5265   00290C  9692               	bcf	146,3,c	;volatile
  5266                           
  5267                           ;M74HC595.c: 17:     TRISAbits.TRISA5 = 0;
  5268   00290E  9A92               	bcf	146,5,c	;volatile
  5269                           
  5270                           ;M74HC595.c: 19:     PORTAbits.RA0 = 0;
  5271   002910  9080               	bcf	128,0,c	;volatile
  5272                           
  5273                           ;M74HC595.c: 20:     PORTAbits.RA1 = 0;
  5274   002912  9280               	bcf	128,1,c	;volatile
  5275                           
  5276                           ;M74HC595.c: 21:     PORTAbits.RA3 = 0;
  5277   002914  9680               	bcf	128,3,c	;volatile
  5278                           
  5279                           ;M74HC595.c: 22:     PORTAbits.RA5 = 0;
  5280   002916  9A80               	bcf	128,5,c	;volatile
  5281   002918  0012               	return		;funcret
  5282   00291A                     __end_of_M74HC595Init:
  5283                           	callstack 0
  5284                           
  5285 ;; *************** function _OpenCounter *****************
  5286 ;; Defined at:
  5287 ;;		line 6 in file "Counter.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;		None
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;		None
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      void 
  5294 ;; Registers used:
  5295 ;;		wreg, status,2
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5301 ;;      Params:         0       0       0       0       0       0       0
  5302 ;;      Locals:         0       0       0       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0
  5304 ;;      Totals:         0       0       0       0       0       0       0
  5305 ;;Total ram usage:        0 bytes
  5306 ;; Hardware stack levels used: 1
  5307 ;; Hardware stack levels required when called: 5
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_DeviceInit
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text26
  5316   002632                     __ptext26:
  5317                           	callstack 0
  5318   002632                     _OpenCounter:
  5319                           	callstack 24
  5320   002632                     
  5321                           ;Counter.c: 8:     counter_down_hour = 0;
  5322   002632  0E00               	movlw	0
  5323   002634  6E41               	movwf	_counter_down_hour^0,c
  5324                           
  5325                           ;Counter.c: 9:     counter_down_minute = 0;
  5326   002636  0E00               	movlw	0
  5327   002638  6E40               	movwf	_counter_down_minute^0,c
  5328                           
  5329                           ;Counter.c: 10:     counter_down_second = 0;
  5330   00263A  0E00               	movlw	0
  5331   00263C  6E3F               	movwf	_counter_down_second^0,c
  5332                           
  5333                           ;Counter.c: 12:     counter_down_set_hour = 0;
  5334   00263E  0E00               	movlw	0
  5335   002640  6E3E               	movwf	_counter_down_set_hour^0,c
  5336                           
  5337                           ;Counter.c: 13:     counter_down_set_minute = 0;
  5338   002642  0E00               	movlw	0
  5339   002644  6E3D               	movwf	_counter_down_set_minute^0,c
  5340                           
  5341                           ;Counter.c: 14:     counter_down_set_second = 0;
  5342   002646  0E00               	movlw	0
  5343   002648  6E3C               	movwf	_counter_down_set_second^0,c
  5344                           
  5345                           ;Counter.c: 16:     counter_up_hour = 0;
  5346   00264A  0E00               	movlw	0
  5347   00264C  6E3B               	movwf	_counter_up_hour^0,c
  5348                           
  5349                           ;Counter.c: 17:     counter_up_minute = 0;
  5350   00264E  0E00               	movlw	0
  5351   002650  6E3A               	movwf	_counter_up_minute^0,c
  5352                           
  5353                           ;Counter.c: 18:     counter_up_second = 0;
  5354   002652  0E00               	movlw	0
  5355   002654  6E39               	movwf	_counter_up_second^0,c
  5356                           
  5357                           ;Counter.c: 20:     counter_enable_flg = 0;
  5358   002656  0E00               	movlw	0
  5359   002658  6E38               	movwf	_counter_enable_flg^0,c
  5360                           
  5361                           ;Counter.c: 21:     counter_skip_flg = 0;
  5362   00265A  0E00               	movlw	0
  5363   00265C  6E36               	movwf	_counter_skip_flg^0,c
  5364                           
  5365                           ;Counter.c: 22:     counter_direction_flg = 1;
  5366   00265E  0E01               	movlw	1
  5367   002660  6E37               	movwf	_counter_direction_flg^0,c
  5368                           
  5369                           ;Counter.c: 23:     counter_seting_flg = 0;
  5370   002662  0E00               	movlw	0
  5371   002664  6E35               	movwf	_counter_seting_flg^0,c
  5372                           
  5373                           ;Counter.c: 24:     counter_down_comp_flg = 0;
  5374   002666  0E00               	movlw	0
  5375   002668  6E34               	movwf	_counter_down_comp_flg^0,c
  5376                           
  5377                           ;Counter.c: 26:     counter_down_comp_cnt = 0;
  5378   00266A  0E00               	movlw	0
  5379   00266C  6E33               	movwf	_counter_down_comp_cnt^0,c
  5380   00266E                     
  5381                           ;Counter.c: 28:     TRISBbits.TRISB2 = 1;
  5382   00266E  8493               	bsf	147,2,c	;volatile
  5383   002670                     
  5384                           ;Counter.c: 29:     INTCON3bits.INT2IP = 0;
  5385   002670  9EF0               	bcf	240,7,c	;volatile
  5386   002672                     
  5387                           ;Counter.c: 30:     INTCON3bits.INT2IF = 0;
  5388   002672  92F0               	bcf	240,1,c	;volatile
  5389   002674                     
  5390                           ;Counter.c: 31:     INTCON3bits.INT2IE = 1;
  5391   002674  88F0               	bsf	240,4,c	;volatile
  5392   002676                     
  5393                           ;Counter.c: 32:     INTCON2bits.INTEDG2 = 1;
  5394   002676  88F1               	bsf	241,4,c	;volatile
  5395   002678  0012               	return		;funcret
  5396   00267A                     __end_of_OpenCounter:
  5397                           	callstack 0
  5398                           
  5399 ;; *************** function _OpenButtons *****************
  5400 ;; Defined at:
  5401 ;;		line 10 in file "Buttons.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;		None
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;		None
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		wreg, status,2
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5415 ;;      Params:         0       0       0       0       0       0       0
  5416 ;;      Locals:         0       0       0       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0
  5418 ;;      Totals:         0       0       0       0       0       0       0
  5419 ;;Total ram usage:        0 bytes
  5420 ;; Hardware stack levels used: 1
  5421 ;; Hardware stack levels required when called: 5
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_DeviceInit
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text27
  5430   00240C                     __ptext27:
  5431                           	callstack 0
  5432   00240C                     _OpenButtons:
  5433                           	callstack 24
  5434   00240C                     
  5435                           ;Buttons.c: 12:     TRISAbits.TRISA7 = 1;
  5436   00240C  8E92               	bsf	146,7,c	;volatile
  5437                           
  5438                           ;Buttons.c: 13:     TRISAbits.TRISA4 = 1;
  5439   00240E  8892               	bsf	146,4,c	;volatile
  5440                           
  5441                           ;Buttons.c: 14:     TRISAbits.TRISA6 = 1;
  5442   002410  8C92               	bsf	146,6,c	;volatile
  5443                           
  5444                           ;Buttons.c: 15:     TRISBbits.TRISB4 = 1;
  5445   002412  8893               	bsf	147,4,c	;volatile
  5446                           
  5447                           ;Buttons.c: 16:     TRISDbits.TRISD6 = 1;
  5448   002414  8C95               	bsf	149,6,c	;volatile
  5449   002416                     
  5450                           ;Buttons.c: 18:     BTN_CLICK_STATE = 0; BTN_CLICK_EVENT = 0;
  5451   002416  0E00               	movlw	0
  5452   002418  6E2F               	movwf	_BTN_CLICK_STATE^0,c
  5453   00241A  0E00               	movlw	0
  5454   00241C  6E2E               	movwf	_BTN_CLICK_EVENT^0,c
  5455                           
  5456                           ;Buttons.c: 20:     hour_btn_pressed_cnt = 0; up_btn_pressed_cnt = 0; down_btn_pressed_c
      +                          nt = 0; sel_btn_pressed_cnt = 0; reset_btn_pressed_cnt = 0;
  5457   00241E  0E00               	movlw	0
  5458   002420  6E15               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  5459   002422  0E00               	movlw	0
  5460   002424  6E14               	movwf	_hour_btn_pressed_cnt^0,c
  5461   002426  0E00               	movlw	0
  5462   002428  6E13               	movwf	(_up_btn_pressed_cnt+1)^0,c
  5463   00242A  0E00               	movlw	0
  5464   00242C  6E12               	movwf	_up_btn_pressed_cnt^0,c
  5465   00242E  0E00               	movlw	0
  5466   002430  6E11               	movwf	(_down_btn_pressed_cnt+1)^0,c
  5467   002432  0E00               	movlw	0
  5468   002434  6E10               	movwf	_down_btn_pressed_cnt^0,c
  5469   002436  0E00               	movlw	0
  5470   002438  6E0F               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  5471   00243A  0E00               	movlw	0
  5472   00243C  6E0E               	movwf	_sel_btn_pressed_cnt^0,c
  5473   00243E  0E00               	movlw	0
  5474   002440  6E0D               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  5475   002442  0E00               	movlw	0
  5476   002444  6E0C               	movwf	_reset_btn_pressed_cnt^0,c
  5477                           
  5478                           ;Buttons.c: 21:     hour_btn_released_cnt = 0; up_btn_released_cnt = 0; down_btn_release
      +                          d_cnt = 0; sel_btn_released_cnt = 0; reset_btn_released_cnt = 0;
  5479   002446  0E00               	movlw	0
  5480   002448  0100               	movlb	0	; () banked
  5481   00244A  6FC5               	movwf	(_hour_btn_released_cnt+1)& (0+255),b
  5482   00244C  0E00               	movlw	0
  5483   00244E  6FC4               	movwf	_hour_btn_released_cnt& (0+255),b
  5484   002450  0E00               	movlw	0
  5485   002452  6FC3               	movwf	(_up_btn_released_cnt+1)& (0+255),b
  5486   002454  0E00               	movlw	0
  5487   002456  6FC2               	movwf	_up_btn_released_cnt& (0+255),b
  5488   002458  0E00               	movlw	0
  5489   00245A  6FC1               	movwf	(_down_btn_released_cnt+1)& (0+255),b
  5490   00245C  0E00               	movlw	0
  5491   00245E  6FC0               	movwf	_down_btn_released_cnt& (0+255),b
  5492   002460  0E00               	movlw	0
  5493   002462  6FBF               	movwf	(_sel_btn_released_cnt+1)& (0+255),b
  5494   002464  0E00               	movlw	0
  5495   002466  6FBE               	movwf	_sel_btn_released_cnt& (0+255),b
  5496   002468  0E00               	movlw	0
  5497   00246A  6FBD               	movwf	(_reset_btn_released_cnt+1)& (0+255),b
  5498   00246C  0E00               	movlw	0
  5499   00246E  6FBC               	movwf	_reset_btn_released_cnt& (0+255),b
  5500                           
  5501                           ;Buttons.c: 22:     continue_pressed_cnt = 0;
  5502   002470  0E00               	movlw	0
  5503   002472  6E0B               	movwf	(_continue_pressed_cnt+1)^0,c
  5504   002474  0E00               	movlw	0
  5505   002476  6E0A               	movwf	_continue_pressed_cnt^0,c
  5506                           
  5507                           ;Buttons.c: 24:     btn_press_verify_flg = 0; btn_long_press_verify_flg = 0;
  5508   002478  0E00               	movlw	0
  5509   00247A  6E2D               	movwf	_btn_press_verify_flg^0,c
  5510   00247C  0E00               	movlw	0
  5511   00247E  6E2C               	movwf	_btn_long_press_verify_flg^0,c
  5512                           
  5513                           ;Buttons.c: 25:     CONTINUE_PRESSED_TIME = 100;
  5514   002480  0E00               	movlw	0
  5515   002482  6E09               	movwf	(_CONTINUE_PRESSED_TIME+1)^0,c
  5516   002484  0E64               	movlw	100
  5517   002486  6E08               	movwf	_CONTINUE_PRESSED_TIME^0,c
  5518   002488                     
  5519                           ; BSR set to: 0
  5520   002488  0012               	return		;funcret
  5521   00248A                     __end_of_OpenButtons:
  5522                           	callstack 0
  5523                           
  5524 ;; *************** function _Open1USART *****************
  5525 ;; Defined at:
  5526 ;;		line 4 in file "Uart.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  config          1    wreg     unsigned char 
  5529 ;;  spbrg           2   16[COMRAM] unsigned int 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  config          1   18[COMRAM] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5541 ;;      Params:         2       0       0       0       0       0       0
  5542 ;;      Locals:         1       0       0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0
  5544 ;;      Totals:         3       0       0       0       0       0       0
  5545 ;;Total ram usage:        3 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 5
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_DeviceInit
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text28
  5556   00217A                     __ptext28:
  5557                           	callstack 0
  5558   00217A                     _Open1USART:
  5559                           	callstack 24
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;incstack = 0
  5563                           ;Open1USART@config stored from wreg
  5564   00217A  6E60               	movwf	Open1USART@config^0,c
  5565   00217C                     
  5566                           ;Uart.c: 5:     TXSTA1 = 0;
  5567   00217C  0E00               	movlw	0
  5568   00217E  6EAC               	movwf	172,c	;volatile
  5569                           
  5570                           ;Uart.c: 6:     RCSTA1 = 0;
  5571   002180  0E00               	movlw	0
  5572   002182  6EAB               	movwf	171,c	;volatile
  5573   002184                     
  5574                           ;Uart.c: 8:     if(config&0x01)
  5575   002184  A060               	btfss	Open1USART@config^0,0,c
  5576   002186  EFC7  F010         	goto	u4161
  5577   00218A  EFC9  F010         	goto	u4160
  5578   00218E                     u4161:
  5579   00218E  EFCA  F010         	goto	l6502
  5580   002192                     u4160:
  5581   002192                     
  5582                           ;Uart.c: 9:         TXSTA1bits.SYNC = 1;
  5583   002192  88AC               	bsf	172,4,c	;volatile
  5584   002194                     l6502:
  5585                           
  5586                           ;Uart.c: 11:     if(config&0x02)
  5587   002194  A260               	btfss	Open1USART@config^0,1,c
  5588   002196  EFCF  F010         	goto	u4171
  5589   00219A  EFD1  F010         	goto	u4170
  5590   00219E                     u4171:
  5591   00219E  EFD3  F010         	goto	l6506
  5592   0021A2                     u4170:
  5593   0021A2                     
  5594                           ;Uart.c: 12:     {;Uart.c: 13:         TXSTA1bits.TX9 = 1;
  5595   0021A2  8CAC               	bsf	172,6,c	;volatile
  5596                           
  5597                           ;Uart.c: 14:         RCSTA1bits.RX9 = 1;
  5598   0021A4  8CAB               	bsf	171,6,c	;volatile
  5599   0021A6                     l6506:
  5600                           
  5601                           ;Uart.c: 17:     if(config&0x04)
  5602   0021A6  A460               	btfss	Open1USART@config^0,2,c
  5603   0021A8  EFD8  F010         	goto	u4181
  5604   0021AC  EFDA  F010         	goto	u4180
  5605   0021B0                     u4181:
  5606   0021B0  EFDB  F010         	goto	l6510
  5607   0021B4                     u4180:
  5608   0021B4                     
  5609                           ;Uart.c: 18:         TXSTA1bits.CSRC = 1;
  5610   0021B4  8EAC               	bsf	172,7,c	;volatile
  5611   0021B6                     l6510:
  5612                           
  5613                           ;Uart.c: 20:     if(config&0x08)
  5614   0021B6  A660               	btfss	Open1USART@config^0,3,c
  5615   0021B8  EFE0  F010         	goto	u4191
  5616   0021BC  EFE2  F010         	goto	u4190
  5617   0021C0                     u4191:
  5618   0021C0  EFE5  F010         	goto	l1765
  5619   0021C4                     u4190:
  5620   0021C4                     
  5621                           ;Uart.c: 21:         RCSTA1bits.CREN = 1;
  5622   0021C4  88AB               	bsf	171,4,c	;volatile
  5623   0021C6  EFE6  F010         	goto	l6514
  5624   0021CA                     l1765:
  5625                           
  5626                           ;Uart.c: 23:         RCSTA1bits.SREN = 1;
  5627   0021CA  8AAB               	bsf	171,5,c	;volatile
  5628   0021CC                     l6514:
  5629                           
  5630                           ;Uart.c: 25:     if(config&0x10)
  5631   0021CC  A860               	btfss	Open1USART@config^0,4,c
  5632   0021CE  EFEB  F010         	goto	u4201
  5633   0021D2  EFED  F010         	goto	u4200
  5634   0021D6                     u4201:
  5635   0021D6  EFF0  F010         	goto	l1767
  5636   0021DA                     u4200:
  5637   0021DA                     
  5638                           ;Uart.c: 26:         TXSTA1bits.BRGH = 1;
  5639   0021DA  84AC               	bsf	172,2,c	;volatile
  5640   0021DC  EFF1  F010         	goto	l6518
  5641   0021E0                     l1767:
  5642                           
  5643                           ;Uart.c: 28:         TXSTA1bits.BRGH = 0;
  5644   0021E0  94AC               	bcf	172,2,c	;volatile
  5645   0021E2                     l6518:
  5646                           
  5647                           ;Uart.c: 30:     if(config&0x40)
  5648   0021E2  AC60               	btfss	Open1USART@config^0,6,c
  5649   0021E4  EFF6  F010         	goto	u4211
  5650   0021E8  EFF8  F010         	goto	u4210
  5651   0021EC                     u4211:
  5652   0021EC  EFFB  F010         	goto	l1769
  5653   0021F0                     u4210:
  5654   0021F0                     
  5655                           ;Uart.c: 31:         PIE1bits.RC1IE = 1;
  5656   0021F0  8A9D               	bsf	157,5,c	;volatile
  5657   0021F2  EFFC  F010         	goto	l6522
  5658   0021F6                     l1769:
  5659                           
  5660                           ;Uart.c: 33:         PIE1bits.RC1IE = 0;
  5661   0021F6  9A9D               	bcf	157,5,c	;volatile
  5662   0021F8                     l6522:
  5663                           
  5664                           ;Uart.c: 35:     if(config&0x80)
  5665   0021F8  AE60               	btfss	Open1USART@config^0,7,c
  5666   0021FA  EF01  F011         	goto	u4221
  5667   0021FE  EF03  F011         	goto	u4220
  5668   002202                     u4221:
  5669   002202  EF06  F011         	goto	l1771
  5670   002206                     u4220:
  5671   002206                     
  5672                           ;Uart.c: 36:         PIE1bits.TX1IE = 1;
  5673   002206  889D               	bsf	157,4,c	;volatile
  5674   002208  EF07  F011         	goto	l1772
  5675   00220C                     l1771:
  5676                           
  5677                           ;Uart.c: 38:         PIE1bits.TX1IE = 0;
  5678   00220C  989D               	bcf	157,4,c	;volatile
  5679   00220E                     l1772:
  5680                           
  5681                           ;Uart.c: 40:     SPBRG1 = spbrg;
  5682   00220E  C05E  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  5683                           
  5684                           ;Uart.c: 42:     TXSTA1bits.TXEN = 1;
  5685   002212  8AAC               	bsf	172,5,c	;volatile
  5686                           
  5687                           ;Uart.c: 43:     RCSTA1bits.SPEN = 1;
  5688   002214  8EAB               	bsf	171,7,c	;volatile
  5689                           
  5690                           ;Uart.c: 44:     TRISCbits.TRISC6 = 0; TRISCbits.TRISC7 = 1;
  5691   002216  9C94               	bcf	148,6,c	;volatile
  5692   002218  8E94               	bsf	148,7,c	;volatile
  5693                           
  5694                           ;Uart.c: 45:     if(TXSTA1bits.SYNC && !TXSTA1bits.CSRC)
  5695   00221A  A8AC               	btfss	172,4,c	;volatile
  5696   00221C  EF12  F011         	goto	u4231
  5697   002220  EF14  F011         	goto	u4230
  5698   002224                     u4231:
  5699   002224  EF1C  F011         	goto	l1774
  5700   002228                     u4230:
  5701   002228  BEAC               	btfsc	172,7,c	;volatile
  5702   00222A  EF19  F011         	goto	u4241
  5703   00222E  EF1B  F011         	goto	u4240
  5704   002232                     u4241:
  5705   002232  EF1C  F011         	goto	l1774
  5706   002236                     u4240:
  5707   002236                     
  5708                           ;Uart.c: 46:         TRISCbits.TRISC6 = 1;
  5709   002236  8C94               	bsf	148,6,c	;volatile
  5710   002238                     l1774:
  5711   002238  0012               	return		;funcret
  5712   00223A                     __end_of_Open1USART:
  5713                           	callstack 0
  5714                           
  5715 ;; *************** function _InitValue *****************
  5716 ;; Defined at:
  5717 ;;		line 150 in file "Main.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;		None
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;		None
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  1    wreg      void 
  5724 ;; Registers used:
  5725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5731 ;;      Params:         0       0       0       0       0       0       0
  5732 ;;      Locals:         0       0       0       0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0       0
  5734 ;;      Totals:         0       0       0       0       0       0       0
  5735 ;;Total ram usage:        0 bytes
  5736 ;; Hardware stack levels used: 1
  5737 ;; Hardware stack levels required when called: 9
  5738 ;; This function calls:
  5739 ;;		_Ds1307HMSRead
  5740 ;;		_Ds1307Write
  5741 ;;		_UpdateDisplay
  5742 ;; This function is called by:
  5743 ;;		_DeviceInit
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text29
  5748   00237C                     __ptext29:
  5749                           	callstack 0
  5750   00237C                     _InitValue:
  5751                           	callstack 20
  5752   00237C                     
  5753                           ;Main.c: 151:     if( SYSTEM_STATE_FLG == 100 ){
  5754   00237C  0E64               	movlw	100
  5755   00237E  186E               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  5756   002380  A4D8               	btfss	status,2,c
  5757   002382  EFC5  F011         	goto	u6641
  5758   002386  EFC7  F011         	goto	u6640
  5759   00238A                     u6641:
  5760   00238A  EFF6  F011         	goto	l9262
  5761   00238E                     u6640:
  5762   00238E                     
  5763                           ;Main.c: 152:         blink_enable_flg = 1;
  5764   00238E  0E01               	movlw	1
  5765   002390  6E32               	movwf	_blink_enable_flg^0,c
  5766   002392                     
  5767                           ;Main.c: 153:         UpdateDisplay( Ds1307HMSRead(), 1, 6 );
  5768   002392  EC2D  F00F         	call	_Ds1307HMSRead	;wreg free
  5769   002396  C060  F11E         	movff	?_Ds1307HMSRead,UpdateDisplay@update_datas
  5770   00239A  C061  F11F         	movff	?_Ds1307HMSRead+1,UpdateDisplay@update_datas+1
  5771   00239E  0E01               	movlw	1
  5772   0023A0  0101               	movlb	1	; () banked
  5773   0023A2  6F20               	movwf	UpdateDisplay@start_position& (0+255),b
  5774   0023A4  0E06               	movlw	6
  5775   0023A6  6F21               	movwf	UpdateDisplay@end_position& (0+255),b
  5776   0023A8  EC60  F013         	call	_UpdateDisplay	;wreg free
  5777   0023AC                     
  5778                           ;Main.c: 154:         if( real_rtc_data[ 2 ] == 0 && real_rtc_data[ 1 ] == 0 && real_rtc
      +                          _data[ 0 ] == 0 ) Ds1307Write( &rtc_default_values );
  5779   0023AC  5003               	movf	(_real_rtc_data+2)^0,w,c
  5780   0023AE  A4D8               	btfss	status,2,c
  5781   0023B0  EFDC  F011         	goto	u6651
  5782   0023B4  EFDE  F011         	goto	u6650
  5783   0023B8                     u6651:
  5784   0023B8  EF05  F012         	goto	l386
  5785   0023BC                     u6650:
  5786   0023BC  5002               	movf	(_real_rtc_data+1)^0,w,c
  5787   0023BE  A4D8               	btfss	status,2,c
  5788   0023C0  EFE4  F011         	goto	u6661
  5789   0023C4  EFE6  F011         	goto	u6660
  5790   0023C8                     u6661:
  5791   0023C8  EF05  F012         	goto	l386
  5792   0023CC                     u6660:
  5793   0023CC  5001               	movf	_real_rtc_data^0,w,c
  5794   0023CE  A4D8               	btfss	status,2,c
  5795   0023D0  EFEC  F011         	goto	u6671
  5796   0023D4  EFEE  F011         	goto	u6670
  5797   0023D8                     u6671:
  5798   0023D8  EF05  F012         	goto	l386
  5799   0023DC                     u6670:
  5800   0023DC                     l9260:
  5801   0023DC  0E0C               	movlw	low _rtc_default_values
  5802   0023DE  6E5F               	movwf	Ds1307Write@write_datas^0,c
  5803   0023E0  0E01               	movlw	high _rtc_default_values
  5804   0023E2  6E60               	movwf	(Ds1307Write@write_datas+1)^0,c
  5805   0023E4  EC82  F00C         	call	_Ds1307Write	;wreg free
  5806   0023E8  EF05  F012         	goto	l386
  5807   0023EC                     l9262:
  5808   0023EC  0EC9               	movlw	201
  5809   0023EE  186E               	xorwf	_SYSTEM_STATE_FLG^0,w,c
  5810   0023F0  A4D8               	btfss	status,2,c
  5811   0023F2  EFFD  F011         	goto	u6681
  5812   0023F6  EFFF  F011         	goto	u6680
  5813   0023FA                     u6681:
  5814   0023FA  EF05  F012         	goto	l386
  5815   0023FE                     u6680:
  5816   0023FE                     
  5817                           ;Main.c: 157:         counter_enable_flg = 0; counter_skip_flg = 0; Ds1307Write( &rtc_de
      +                          fault_values );
  5818   0023FE  0E00               	movlw	0
  5819   002400  6E38               	movwf	_counter_enable_flg^0,c
  5820   002402  0E00               	movlw	0
  5821   002404  6E36               	movwf	_counter_skip_flg^0,c
  5822   002406  EFEE  F011         	goto	l9260
  5823   00240A                     l386:
  5824   00240A  0012               	return		;funcret
  5825   00240C                     __end_of_InitValue:
  5826                           	callstack 0
  5827                           
  5828 ;; *************** function _UpdateDisplay *****************
  5829 ;; Defined at:
  5830 ;;		line 65 in file "Display.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;  update_datas    2    8[BANK1 ] PTR unsigned char 
  5833 ;;		 -> ReadCounter@counter_datas(6), Ds1307HMSRead@ds1307_date_datas(3), 
  5834 ;;  start_positi    1   10[BANK1 ] unsigned char 
  5835 ;;  end_position    1   11[BANK1 ] unsigned char 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  i               1   12[BANK1 ] unsigned char 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1    wreg      void 
  5840 ;; Registers used:
  5841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5847 ;;      Params:         0       0       4       0       0       0       0
  5848 ;;      Locals:         0       0       1       0       0       0       0
  5849 ;;      Temps:          0       0       0       0       0       0       0
  5850 ;;      Totals:         0       0       5       0       0       0       0
  5851 ;;Total ram usage:        5 bytes
  5852 ;; Hardware stack levels used: 1
  5853 ;; Hardware stack levels required when called: 6
  5854 ;; This function calls:
  5855 ;;		_MarkDisplay
  5856 ;; This function is called by:
  5857 ;;		_main
  5858 ;;		_InitValue
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text30
  5863   0026C0                     __ptext30:
  5864                           	callstack 0
  5865   0026C0                     _UpdateDisplay:
  5866                           	callstack 24
  5867   0026C0                     
  5868                           ;Display.c: 67:     for( unsigned char i = start_position - 1; i < end_position; i ++ ) 
      +                          {
  5869   0026C0  0101               	movlb	1	; () banked
  5870   0026C2  0520               	decf	UpdateDisplay@start_position& (0+255),w,b
  5871   0026C4  6F22               	movwf	UpdateDisplay@i& (0+255),b
  5872   0026C6  EF77  F013         	goto	l9246
  5873   0026CA                     l9242:
  5874                           
  5875                           ; BSR set to: 1
  5876                           ;Display.c: 68:         display_datas[ i ] = MarkDisplay( update_datas[ i ] );
  5877   0026CA  0E88               	movlw	low _display_datas
  5878   0026CC  2522               	addwf	UpdateDisplay@i& (0+255),w,b
  5879   0026CE  6ED9               	movwf	fsr2l,c
  5880   0026D0  6ADA               	clrf	fsr2h,c
  5881   0026D2  0E00               	movlw	high _display_datas
  5882   0026D4  22DA               	addwfc	fsr2h,f,c
  5883   0026D6  5122               	movf	UpdateDisplay@i& (0+255),w,b
  5884   0026D8  251E               	addwf	UpdateDisplay@update_datas& (0+255),w,b
  5885   0026DA  6EE1               	movwf	fsr1l,c
  5886   0026DC  0E00               	movlw	0
  5887   0026DE  211F               	addwfc	(UpdateDisplay@update_datas+1)& (0+255),w,b
  5888   0026E0  6EE2               	movwf	fsr1h,c
  5889   0026E2  50E7               	movf	indf1,w,c
  5890   0026E4  EC66  F008         	call	_MarkDisplay
  5891   0026E8  6EDF               	movwf	indf2,c
  5892   0026EA                     
  5893                           ;Display.c: 69:     }
  5894   0026EA  0101               	movlb	1	; () banked
  5895   0026EC  2B22               	incf	UpdateDisplay@i& (0+255),f,b
  5896   0026EE                     l9246:
  5897                           
  5898                           ; BSR set to: 1
  5899   0026EE  5121               	movf	UpdateDisplay@end_position& (0+255),w,b
  5900   0026F0  5D22               	subwf	UpdateDisplay@i& (0+255),w,b
  5901   0026F2  A0D8               	btfss	status,0,c
  5902   0026F4  EF7E  F013         	goto	u6631
  5903   0026F8  EF80  F013         	goto	u6630
  5904   0026FC                     u6631:
  5905   0026FC  EF65  F013         	goto	l9242
  5906   002700                     u6630:
  5907   002700                     
  5908                           ; BSR set to: 1
  5909   002700  0012               	return		;funcret
  5910   002702                     __end_of_UpdateDisplay:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function _MarkDisplay *****************
  5914 ;; Defined at:
  5915 ;;		line 72 in file "Display.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  mark            1    wreg     unsigned char 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  mark            1   18[COMRAM] unsigned char 
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      unsigned char 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5929 ;;      Params:         0       0       0       0       0       0       0
  5930 ;;      Locals:         1       0       0       0       0       0       0
  5931 ;;      Temps:          2       0       0       0       0       0       0
  5932 ;;      Totals:         3       0       0       0       0       0       0
  5933 ;;Total ram usage:        3 bytes
  5934 ;; Hardware stack levels used: 1
  5935 ;; Hardware stack levels required when called: 5
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_UpdateDisplay
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text31
  5944   0010CC                     __ptext31:
  5945                           	callstack 0
  5946   0010CC                     _MarkDisplay:
  5947                           	callstack 24
  5948                           
  5949                           ; BSR set to: 1
  5950                           ;incstack = 0
  5951                           ;MarkDisplay@mark stored from wreg
  5952   0010CC  6E60               	movwf	MarkDisplay@mark^0,c
  5953   0010CE                     
  5954                           ;Display.c: 74:     switch( mark ){
  5955   0010CE  EFC6  F008         	goto	l9234
  5956   0010D2                     l9080:
  5957   0010D2  0EC0               	movlw	192
  5958   0010D4  EF6B  F009         	goto	l928
  5959   0010D8                     l9084:
  5960   0010D8  0EF9               	movlw	249
  5961   0010DA  EF6B  F009         	goto	l928
  5962   0010DE                     l9088:
  5963   0010DE  0EA4               	movlw	164
  5964   0010E0  EF6B  F009         	goto	l928
  5965   0010E4                     l9092:
  5966   0010E4  0EB0               	movlw	176
  5967   0010E6  EF6B  F009         	goto	l928
  5968   0010EA                     l9096:
  5969   0010EA  0E99               	movlw	153
  5970   0010EC  EF6B  F009         	goto	l928
  5971   0010F0                     l9100:
  5972   0010F0  0E92               	movlw	146
  5973   0010F2  EF6B  F009         	goto	l928
  5974   0010F6                     l9104:
  5975   0010F6  0E82               	movlw	130
  5976   0010F8  EF6B  F009         	goto	l928
  5977   0010FC                     l9108:
  5978   0010FC  0EF8               	movlw	248
  5979   0010FE  EF6B  F009         	goto	l928
  5980   001102                     l9112:
  5981   001102  0E80               	movlw	128
  5982   001104  EF6B  F009         	goto	l928
  5983   001108                     l9116:
  5984   001108  0E90               	movlw	144
  5985   00110A  EF6B  F009         	goto	l928
  5986   00110E                     l9120:
  5987   00110E  0E88               	movlw	136
  5988   001110  EF6B  F009         	goto	l928
  5989   001114                     l9124:
  5990   001114  0EA0               	movlw	160
  5991   001116  EF6B  F009         	goto	l928
  5992   00111A                     l9132:
  5993   00111A  0E83               	movlw	131
  5994   00111C  EF6B  F009         	goto	l928
  5995   001120                     l9136:
  5996   001120  0EC6               	movlw	198
  5997   001122  EF6B  F009         	goto	l928
  5998   001126                     l9140:
  5999   001126  0EA7               	movlw	167
  6000   001128  EF6B  F009         	goto	l928
  6001   00112C                     l9148:
  6002   00112C  0EA1               	movlw	161
  6003   00112E  EF6B  F009         	goto	l928
  6004   001132                     l9152:
  6005   001132  0E86               	movlw	134
  6006   001134  EF6B  F009         	goto	l928
  6007   001138                     l9156:
  6008   001138  0E84               	movlw	132
  6009   00113A  EF6B  F009         	goto	l928
  6010   00113E                     l9160:
  6011   00113E  0E8E               	movlw	142
  6012   001140  EF6B  F009         	goto	l928
  6013   001144                     l9172:
  6014   001144  0E89               	movlw	137
  6015   001146  EF6B  F009         	goto	l928
  6016   00114A                     l9176:
  6017   00114A  0E8B               	movlw	139
  6018   00114C  EF6B  F009         	goto	l928
  6019   001150                     l9184:
  6020   001150  0EF1               	movlw	241
  6021   001152  EF6B  F009         	goto	l928
  6022   001156                     l9188:
  6023   001156  0EC7               	movlw	199
  6024   001158  EF6B  F009         	goto	l928
  6025   00115C                     l9192:
  6026   00115C  0EAB               	movlw	171
  6027   00115E  EF6B  F009         	goto	l928
  6028   001162                     l9200:
  6029   001162  0EA3               	movlw	163
  6030   001164  EF6B  F009         	goto	l928
  6031   001168                     l9204:
  6032   001168  0E8C               	movlw	140
  6033   00116A  EF6B  F009         	goto	l928
  6034   00116E                     l9208:
  6035   00116E  0E98               	movlw	152
  6036   001170  EF6B  F009         	goto	l928
  6037   001174                     l9212:
  6038   001174  0EAF               	movlw	175
  6039   001176  EF6B  F009         	goto	l928
  6040   00117A                     l9220:
  6041   00117A  0E87               	movlw	135
  6042   00117C  EF6B  F009         	goto	l928
  6043   001180                     l9224:
  6044   001180  0EC1               	movlw	193
  6045   001182  EF6B  F009         	goto	l928
  6046   001186                     l9228:
  6047   001186  0E91               	movlw	145
  6048   001188  EF6B  F009         	goto	l928
  6049   00118C                     l9234:
  6050   00118C  5060               	movf	MarkDisplay@mark^0,w,c
  6051   00118E  6E5E               	movwf	??_MarkDisplay^0,c
  6052   001190  6A5F               	clrf	(??_MarkDisplay+1)^0,c
  6053                           
  6054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6055                           ; Switch size 1, requested type "simple"
  6056                           ; Number of cases is 1, Range of values is 0 to 0
  6057                           ; switch strategies available:
  6058                           ; Name         Instructions Cycles
  6059                           ; simple_byte            4     3 (average)
  6060                           ;	Chosen strategy is simple_byte
  6061   001192  505F               	movf	(??_MarkDisplay+1)^0,w,c
  6062   001194  0A00               	xorlw	0	; case 0
  6063   001196  B4D8               	btfsc	status,2,c
  6064   001198  EFD0  F008         	goto	l9954
  6065   00119C  EF6B  F009         	goto	l928
  6066   0011A0                     l9954:
  6067                           
  6068                           ; Switch size 1, requested type "simple"
  6069                           ; Number of cases is 38, Range of values is 0 to 121
  6070                           ; switch strategies available:
  6071                           ; Name         Instructions Cycles
  6072                           ; simple_byte          115    58 (average)
  6073                           ;	Chosen strategy is simple_byte
  6074   0011A0  505E               	movf	??_MarkDisplay^0,w,c
  6075   0011A2  0A00               	xorlw	0	; case 0
  6076   0011A4  B4D8               	btfsc	status,2,c
  6077   0011A6  EF69  F008         	goto	l9080
  6078   0011AA  0A01               	xorlw	1	; case 1
  6079   0011AC  B4D8               	btfsc	status,2,c
  6080   0011AE  EF6C  F008         	goto	l9084
  6081   0011B2  0A03               	xorlw	3	; case 2
  6082   0011B4  B4D8               	btfsc	status,2,c
  6083   0011B6  EF6F  F008         	goto	l9088
  6084   0011BA  0A01               	xorlw	1	; case 3
  6085   0011BC  B4D8               	btfsc	status,2,c
  6086   0011BE  EF72  F008         	goto	l9092
  6087   0011C2  0A07               	xorlw	7	; case 4
  6088   0011C4  B4D8               	btfsc	status,2,c
  6089   0011C6  EF75  F008         	goto	l9096
  6090   0011CA  0A01               	xorlw	1	; case 5
  6091   0011CC  B4D8               	btfsc	status,2,c
  6092   0011CE  EF78  F008         	goto	l9100
  6093   0011D2  0A03               	xorlw	3	; case 6
  6094   0011D4  B4D8               	btfsc	status,2,c
  6095   0011D6  EF7B  F008         	goto	l9104
  6096   0011DA  0A01               	xorlw	1	; case 7
  6097   0011DC  B4D8               	btfsc	status,2,c
  6098   0011DE  EF7E  F008         	goto	l9108
  6099   0011E2  0A0F               	xorlw	15	; case 8
  6100   0011E4  B4D8               	btfsc	status,2,c
  6101   0011E6  EF81  F008         	goto	l9112
  6102   0011EA  0A01               	xorlw	1	; case 9
  6103   0011EC  B4D8               	btfsc	status,2,c
  6104   0011EE  EF84  F008         	goto	l9116
  6105   0011F2  0A48               	xorlw	72	; case 65
  6106   0011F4  B4D8               	btfsc	status,2,c
  6107   0011F6  EF87  F008         	goto	l9120
  6108   0011FA  0A03               	xorlw	3	; case 66
  6109   0011FC  B4D8               	btfsc	status,2,c
  6110   0011FE  EF81  F008         	goto	l9112
  6111   001202  0A01               	xorlw	1	; case 67
  6112   001204  B4D8               	btfsc	status,2,c
  6113   001206  EF90  F008         	goto	l9136
  6114   00120A  0A07               	xorlw	7	; case 68
  6115   00120C  B4D8               	btfsc	status,2,c
  6116   00120E  EF69  F008         	goto	l9080
  6117   001212  0A01               	xorlw	1	; case 69
  6118   001214  B4D8               	btfsc	status,2,c
  6119   001216  EF99  F008         	goto	l9152
  6120   00121A  0A03               	xorlw	3	; case 70
  6121   00121C  B4D8               	btfsc	status,2,c
  6122   00121E  EF9F  F008         	goto	l9160
  6123   001222  0A01               	xorlw	1	; case 71
  6124   001224  B4D8               	btfsc	status,2,c
  6125   001226  EF7B  F008         	goto	l9104
  6126   00122A  0A0F               	xorlw	15	; case 72
  6127   00122C  B4D8               	btfsc	status,2,c
  6128   00122E  EFA2  F008         	goto	l9172
  6129   001232  0A01               	xorlw	1	; case 73
  6130   001234  B4D8               	btfsc	status,2,c
  6131   001236  EF6C  F008         	goto	l9084
  6132   00123A  0A03               	xorlw	3	; case 74
  6133   00123C  B4D8               	btfsc	status,2,c
  6134   00123E  EFA8  F008         	goto	l9184
  6135   001242  0A06               	xorlw	6	; case 76
  6136   001244  B4D8               	btfsc	status,2,c
  6137   001246  EFAB  F008         	goto	l9188
  6138   00124A  0A03               	xorlw	3	; case 79
  6139   00124C  B4D8               	btfsc	status,2,c
  6140   00124E  EF69  F008         	goto	l9080
  6141   001252  0A1F               	xorlw	31	; case 80
  6142   001254  B4D8               	btfsc	status,2,c
  6143   001256  EFB4  F008         	goto	l9204
  6144   00125A  0A03               	xorlw	3	; case 83
  6145   00125C  B4D8               	btfsc	status,2,c
  6146   00125E  EF78  F008         	goto	l9100
  6147   001262  0A06               	xorlw	6	; case 85
  6148   001264  B4D8               	btfsc	status,2,c
  6149   001266  EFC0  F008         	goto	l9224
  6150   00126A  0A34               	xorlw	52	; case 97
  6151   00126C  B4D8               	btfsc	status,2,c
  6152   00126E  EF8A  F008         	goto	l9124
  6153   001272  0A03               	xorlw	3	; case 98
  6154   001274  B4D8               	btfsc	status,2,c
  6155   001276  EF8D  F008         	goto	l9132
  6156   00127A  0A01               	xorlw	1	; case 99
  6157   00127C  B4D8               	btfsc	status,2,c
  6158   00127E  EF93  F008         	goto	l9140
  6159   001282  0A07               	xorlw	7	; case 100
  6160   001284  B4D8               	btfsc	status,2,c
  6161   001286  EF96  F008         	goto	l9148
  6162   00128A  0A01               	xorlw	1	; case 101
  6163   00128C  B4D8               	btfsc	status,2,c
  6164   00128E  EF9C  F008         	goto	l9156
  6165   001292  0A02               	xorlw	2	; case 103
  6166   001294  B4D8               	btfsc	status,2,c
  6167   001296  EF84  F008         	goto	l9116
  6168   00129A  0A0F               	xorlw	15	; case 104
  6169   00129C  B4D8               	btfsc	status,2,c
  6170   00129E  EFA5  F008         	goto	l9176
  6171   0012A2  0A06               	xorlw	6	; case 110
  6172   0012A4  B4D8               	btfsc	status,2,c
  6173   0012A6  EFAE  F008         	goto	l9192
  6174   0012AA  0A01               	xorlw	1	; case 111
  6175   0012AC  B4D8               	btfsc	status,2,c
  6176   0012AE  EFB1  F008         	goto	l9200
  6177   0012B2  0A1E               	xorlw	30	; case 113
  6178   0012B4  B4D8               	btfsc	status,2,c
  6179   0012B6  EFB7  F008         	goto	l9208
  6180   0012BA  0A03               	xorlw	3	; case 114
  6181   0012BC  B4D8               	btfsc	status,2,c
  6182   0012BE  EFBA  F008         	goto	l9212
  6183   0012C2  0A06               	xorlw	6	; case 116
  6184   0012C4  B4D8               	btfsc	status,2,c
  6185   0012C6  EFBD  F008         	goto	l9220
  6186   0012CA  0A0D               	xorlw	13	; case 121
  6187   0012CC  B4D8               	btfsc	status,2,c
  6188   0012CE  EFC3  F008         	goto	l9228
  6189   0012D2  EF6B  F009         	goto	l928
  6190   0012D6                     l928:
  6191   0012D6  0012               	return		;funcret
  6192   0012D8                     __end_of_MarkDisplay:
  6193                           	callstack 0
  6194                           
  6195 ;; *************** function _Ds1307Write *****************
  6196 ;; Defined at:
  6197 ;;		line 77 in file "DS1307.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;  write_datas     2   17[COMRAM] PTR unsigned char 
  6200 ;;		 -> rtc_default_values(10), 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  hour_temp       1   20[COMRAM] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      void 
  6205 ;; Registers used:
  6206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6212 ;;      Params:         2       0       0       0       0       0       0
  6213 ;;      Locals:         1       0       0       0       0       0       0
  6214 ;;      Temps:          1       0       0       0       0       0       0
  6215 ;;      Totals:         4       0       0       0       0       0       0
  6216 ;;Total ram usage:        4 bytes
  6217 ;; Hardware stack levels used: 1
  6218 ;; Hardware stack levels required when called: 8
  6219 ;; This function calls:
  6220 ;;		_I2cStart
  6221 ;;		_I2cStop
  6222 ;;		_I2cWrite
  6223 ;; This function is called by:
  6224 ;;		_InitValue
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text32
  6229   001904                     __ptext32:
  6230                           	callstack 0
  6231   001904                     _Ds1307Write:
  6232                           	callstack 20
  6233   001904                     
  6234                           ;DS1307.c: 79:     unsigned char hour_temp = write_datas[ 2 ];
  6235   001904  EE20 F002          	lfsr	2,2
  6236   001908  505F               	movf	Ds1307Write@write_datas^0,w,c
  6237   00190A  26D9               	addwf	fsr2l,f,c
  6238   00190C  5060               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6239   00190E  22DA               	addwfc	fsr2h,f,c
  6240   001910  50DF               	movf	indf2,w,c
  6241   001912  6E62               	movwf	Ds1307Write@hour_temp^0,c
  6242   001914                     
  6243                           ;DS1307.c: 80:     if( rtc_clock_disp_type == 1 ) {
  6244   001914  044B               	decf	_rtc_clock_disp_type^0,w,c
  6245   001916  A4D8               	btfss	status,2,c
  6246   001918  EF90  F00C         	goto	u3741
  6247   00191C  EF92  F00C         	goto	u3740
  6248   001920                     u3741:
  6249   001920  EFBB  F00C         	goto	l6188
  6250   001924                     u3740:
  6251   001924                     
  6252                           ;DS1307.c: 81:         if( hour_temp > 0x12 ) hour_temp = hour_temp - 0x12;
  6253   001924  0E12               	movlw	18
  6254   001926  6462               	cpfsgt	Ds1307Write@hour_temp^0,c
  6255   001928  EF98  F00C         	goto	u3751
  6256   00192C  EF9A  F00C         	goto	u3750
  6257   001930                     u3751:
  6258   001930  EF9D  F00C         	goto	l51
  6259   001934                     u3750:
  6260   001934  5062               	movf	Ds1307Write@hour_temp^0,w,c
  6261   001936  0FEE               	addlw	238
  6262   001938  6E62               	movwf	Ds1307Write@hour_temp^0,c
  6263   00193A                     l51:
  6264                           
  6265                           ;DS1307.c: 82:         if( hour_temp % 16 >= 10 ) hour_temp -= 6;
  6266   00193A  C062  F061         	movff	Ds1307Write@hour_temp,??_Ds1307Write
  6267   00193E  0E0F               	movlw	15
  6268   001940  1661               	andwf	??_Ds1307Write^0,f,c
  6269   001942  0E09               	movlw	9
  6270   001944  6461               	cpfsgt	??_Ds1307Write^0,c
  6271   001946  EFA7  F00C         	goto	u3761
  6272   00194A  EFA9  F00C         	goto	u3760
  6273   00194E                     u3761:
  6274   00194E  EFAB  F00C         	goto	l52
  6275   001952                     u3760:
  6276   001952  0E06               	movlw	6
  6277   001954  5E62               	subwf	Ds1307Write@hour_temp^0,f,c
  6278   001956                     l52:
  6279                           
  6280                           ;DS1307.c: 83:         hour_temp = hour_temp | 0x40;
  6281   001956  5062               	movf	Ds1307Write@hour_temp^0,w,c
  6282   001958  0940               	iorlw	64
  6283   00195A  6E62               	movwf	Ds1307Write@hour_temp^0,c
  6284                           
  6285                           ;DS1307.c: 84:         if( rtc_hour_ampm_flg == 1 ) hour_temp = hour_temp | 0x20;
  6286   00195C  044A               	decf	_rtc_hour_ampm_flg^0,w,c
  6287   00195E  A4D8               	btfss	status,2,c
  6288   001960  EFB4  F00C         	goto	u3771
  6289   001964  EFB6  F00C         	goto	u3770
  6290   001968                     u3771:
  6291   001968  EFDC  F00C         	goto	l6196
  6292   00196C                     u3770:
  6293   00196C  5062               	movf	Ds1307Write@hour_temp^0,w,c
  6294   00196E  0920               	iorlw	32
  6295   001970  6E62               	movwf	Ds1307Write@hour_temp^0,c
  6296   001972  EFDC  F00C         	goto	l6196
  6297   001976                     l6188:
  6298                           
  6299                           ;DS1307.c: 87:         if( rtc_hour_ampm_flg == 1 && hour_temp < 0x12 ) hour_temp = hour
      +                          _temp + 0x12;
  6300   001976  044A               	decf	_rtc_hour_ampm_flg^0,w,c
  6301   001978  A4D8               	btfss	status,2,c
  6302   00197A  EFC1  F00C         	goto	u3781
  6303   00197E  EFC3  F00C         	goto	u3780
  6304   001982                     u3781:
  6305   001982  EFCE  F00C         	goto	l55
  6306   001986                     u3780:
  6307   001986  0E12               	movlw	18
  6308   001988  6062               	cpfslt	Ds1307Write@hour_temp^0,c
  6309   00198A  EFC9  F00C         	goto	u3791
  6310   00198E  EFCB  F00C         	goto	u3790
  6311   001992                     u3791:
  6312   001992  EFCE  F00C         	goto	l55
  6313   001996                     u3790:
  6314   001996  5062               	movf	Ds1307Write@hour_temp^0,w,c
  6315   001998  0F12               	addlw	18
  6316   00199A  6E62               	movwf	Ds1307Write@hour_temp^0,c
  6317   00199C                     l55:
  6318                           
  6319                           ;DS1307.c: 88:         if( hour_temp % 16 >= 10 ) hour_temp += 6;
  6320   00199C  C062  F061         	movff	Ds1307Write@hour_temp,??_Ds1307Write
  6321   0019A0  0E0F               	movlw	15
  6322   0019A2  1661               	andwf	??_Ds1307Write^0,f,c
  6323   0019A4  0E09               	movlw	9
  6324   0019A6  6461               	cpfsgt	??_Ds1307Write^0,c
  6325   0019A8  EFD8  F00C         	goto	u3801
  6326   0019AC  EFDA  F00C         	goto	u3800
  6327   0019B0                     u3801:
  6328   0019B0  EFDC  F00C         	goto	l6196
  6329   0019B4                     u3800:
  6330   0019B4  0E06               	movlw	6
  6331   0019B6  2662               	addwf	Ds1307Write@hour_temp^0,f,c
  6332   0019B8                     l6196:
  6333                           
  6334                           ;DS1307.c: 90:     write_datas[ 2 ] = hour_temp;
  6335   0019B8  EE20 F002          	lfsr	2,2
  6336   0019BC  505F               	movf	Ds1307Write@write_datas^0,w,c
  6337   0019BE  26D9               	addwf	fsr2l,f,c
  6338   0019C0  5060               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6339   0019C2  22DA               	addwfc	fsr2h,f,c
  6340   0019C4  C062  FFDF         	movff	Ds1307Write@hour_temp,indf2
  6341   0019C8                     
  6342                           ;DS1307.c: 91:     I2cStart();
  6343   0019C8  EC8D  F014         	call	_I2cStart	;wreg free
  6344   0019CC                     
  6345                           ;DS1307.c: 92:     I2cWrite( (0xD0) );
  6346   0019CC  0ED0               	movlw	208
  6347   0019CE  EC41  F014         	call	_I2cWrite
  6348   0019D2                     
  6349                           ;DS1307.c: 93:     I2cWrite( 0x00 );
  6350   0019D2  0E00               	movlw	0
  6351   0019D4  EC41  F014         	call	_I2cWrite
  6352   0019D8                     
  6353                           ;DS1307.c: 94:     I2cWrite( write_datas[ 0 ] );
  6354   0019D8  C05F  FFD9         	movff	Ds1307Write@write_datas,fsr2l
  6355   0019DC  C060  FFDA         	movff	Ds1307Write@write_datas+1,fsr2h
  6356   0019E0  50DF               	movf	indf2,w,c
  6357   0019E2  EC41  F014         	call	_I2cWrite
  6358   0019E6                     
  6359                           ;DS1307.c: 95:     I2cWrite( write_datas[ 1 ] );
  6360   0019E6  EE20 F001          	lfsr	2,1
  6361   0019EA  505F               	movf	Ds1307Write@write_datas^0,w,c
  6362   0019EC  26D9               	addwf	fsr2l,f,c
  6363   0019EE  5060               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6364   0019F0  22DA               	addwfc	fsr2h,f,c
  6365   0019F2  50DF               	movf	indf2,w,c
  6366   0019F4  EC41  F014         	call	_I2cWrite
  6367   0019F8                     
  6368                           ;DS1307.c: 96:     I2cWrite( write_datas[ 2 ] );
  6369   0019F8  EE20 F002          	lfsr	2,2
  6370   0019FC  505F               	movf	Ds1307Write@write_datas^0,w,c
  6371   0019FE  26D9               	addwf	fsr2l,f,c
  6372   001A00  5060               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6373   001A02  22DA               	addwfc	fsr2h,f,c
  6374   001A04  50DF               	movf	indf2,w,c
  6375   001A06  EC41  F014         	call	_I2cWrite
  6376   001A0A                     
  6377                           ;DS1307.c: 97:     I2cWrite( write_datas[ 3 ] );
  6378   001A0A  EE20 F003          	lfsr	2,3
  6379   001A0E  505F               	movf	Ds1307Write@write_datas^0,w,c
  6380   001A10  26D9               	addwf	fsr2l,f,c
  6381   001A12  5060               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6382   001A14  22DA               	addwfc	fsr2h,f,c
  6383   001A16  50DF               	movf	indf2,w,c
  6384   001A18  EC41  F014         	call	_I2cWrite
  6385   001A1C                     
  6386                           ;DS1307.c: 98:     I2cWrite( write_datas[ 4 ] );
  6387   001A1C  EE20 F004          	lfsr	2,4
  6388   001A20  505F               	movf	Ds1307Write@write_datas^0,w,c
  6389   001A22  26D9               	addwf	fsr2l,f,c
  6390   001A24  5060               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6391   001A26  22DA               	addwfc	fsr2h,f,c
  6392   001A28  50DF               	movf	indf2,w,c
  6393   001A2A  EC41  F014         	call	_I2cWrite
  6394   001A2E                     
  6395                           ;DS1307.c: 99:     I2cWrite( write_datas[ 5 ] );
  6396   001A2E  EE20 F005          	lfsr	2,5
  6397   001A32  505F               	movf	Ds1307Write@write_datas^0,w,c
  6398   001A34  26D9               	addwf	fsr2l,f,c
  6399   001A36  5060               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6400   001A38  22DA               	addwfc	fsr2h,f,c
  6401   001A3A  50DF               	movf	indf2,w,c
  6402   001A3C  EC41  F014         	call	_I2cWrite
  6403   001A40                     
  6404                           ;DS1307.c: 100:     I2cWrite( write_datas[ 6 ] );
  6405   001A40  EE20 F006          	lfsr	2,6
  6406   001A44  505F               	movf	Ds1307Write@write_datas^0,w,c
  6407   001A46  26D9               	addwf	fsr2l,f,c
  6408   001A48  5060               	movf	(Ds1307Write@write_datas+1)^0,w,c
  6409   001A4A  22DA               	addwfc	fsr2h,f,c
  6410   001A4C  50DF               	movf	indf2,w,c
  6411   001A4E  EC41  F014         	call	_I2cWrite
  6412   001A52                     
  6413                           ;DS1307.c: 101:     I2cWrite( 0x90 );
  6414   001A52  0E90               	movlw	144
  6415   001A54  EC41  F014         	call	_I2cWrite
  6416                           
  6417                           ;DS1307.c: 102:     I2cStop();
  6418   001A58  EC9F  F014         	call	_I2cStop	;wreg free
  6419   001A5C  0012               	return		;funcret
  6420   001A5E                     __end_of_Ds1307Write:
  6421                           	callstack 0
  6422                           
  6423 ;; *************** function _Ds1307HMSRead *****************
  6424 ;; Defined at:
  6425 ;;		line 55 in file "DS1307.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  ds1307_date_    3   20[COMRAM] unsigned char [3]
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  2   18[COMRAM] PTR unsigned char 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6439 ;;      Params:         2       0       0       0       0       0       0
  6440 ;;      Locals:         3       0       0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0
  6442 ;;      Totals:         5       0       0       0       0       0       0
  6443 ;;Total ram usage:        5 bytes
  6444 ;; Hardware stack levels used: 1
  6445 ;; Hardware stack levels required when called: 8
  6446 ;; This function calls:
  6447 ;;		_I2cRead
  6448 ;;		_I2cRestart
  6449 ;;		_I2cStart
  6450 ;;		_I2cStop
  6451 ;;		_I2cWrite
  6452 ;; This function is called by:
  6453 ;;		_main
  6454 ;;		_InitValue
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text33
  6459   001E5A                     __ptext33:
  6460                           	callstack 0
  6461   001E5A                     _Ds1307HMSRead:
  6462                           	callstack 22
  6463   001E5A                     
  6464                           ;DS1307.c: 57:     I2cStart();
  6465   001E5A  EC8D  F014         	call	_I2cStart	;wreg free
  6466   001E5E                     
  6467                           ;DS1307.c: 58:     I2cWrite( (0xD0) );
  6468   001E5E  0ED0               	movlw	208
  6469   001E60  EC41  F014         	call	_I2cWrite
  6470   001E64                     
  6471                           ;DS1307.c: 59:     I2cWrite( 0x00 );
  6472   001E64  0E00               	movlw	0
  6473   001E66  EC41  F014         	call	_I2cWrite
  6474                           
  6475                           ;DS1307.c: 60:     I2cRestart();
  6476   001E6A  EC96  F014         	call	_I2cRestart	;wreg free
  6477   001E6E                     
  6478                           ;DS1307.c: 61:     I2cWrite( (0xD1) );
  6479   001E6E  0ED1               	movlw	209
  6480   001E70  EC41  F014         	call	_I2cWrite
  6481   001E74                     
  6482                           ;DS1307.c: 62:     unsigned char ds1307_date_datas[ 3 ];;DS1307.c: 63:     real_rtc_data
      +                          [0] = I2cRead( 0 );
  6483   001E74  0E00               	movlw	0
  6484   001E76  ECBA  F013         	call	_I2cRead
  6485   001E7A  6E01               	movwf	_real_rtc_data^0,c
  6486   001E7C                     
  6487                           ;DS1307.c: 64:     real_rtc_data[1] = I2cRead( 0 );
  6488   001E7C  0E00               	movlw	0
  6489   001E7E  ECBA  F013         	call	_I2cRead
  6490   001E82  6E02               	movwf	(_real_rtc_data+1)^0,c
  6491   001E84                     
  6492                           ;DS1307.c: 65:     real_rtc_data[2] = I2cRead( 1 );
  6493   001E84  0E01               	movlw	1
  6494   001E86  ECBA  F013         	call	_I2cRead
  6495   001E8A  6E03               	movwf	(_real_rtc_data+2)^0,c
  6496   001E8C                     
  6497                           ;DS1307.c: 66:     I2cStop();
  6498   001E8C  EC9F  F014         	call	_I2cStop	;wreg free
  6499   001E90                     
  6500                           ;DS1307.c: 67:     rtc_clock_disp_type = ( real_rtc_data[ 2 ] & 0x40 ) ? 1 : 0;
  6501   001E90  BC03               	btfsc	(_real_rtc_data+2)^0,6,c
  6502   001E92  EF4D  F00F         	goto	u3671
  6503   001E96  EF50  F00F         	goto	u3670
  6504   001E9A                     u3671:
  6505   001E9A  0E01               	movlw	1
  6506   001E9C  EF51  F00F         	goto	u3680
  6507   001EA0                     u3670:
  6508   001EA0  0E00               	movlw	0
  6509   001EA2                     u3680:
  6510   001EA2  6E4B               	movwf	_rtc_clock_disp_type^0,c
  6511   001EA4                     
  6512                           ;DS1307.c: 68:     if( rtc_clock_disp_type == 0 ) real_rtc_data[ 2 ] = real_rtc_data[ 2 
      +                          ] & 0x3f;
  6513   001EA4  504B               	movf	_rtc_clock_disp_type^0,w,c
  6514   001EA6  A4D8               	btfss	status,2,c
  6515   001EA8  EF58  F00F         	goto	u3691
  6516   001EAC  EF5A  F00F         	goto	u3690
  6517   001EB0                     u3691:
  6518   001EB0  EF5F  F00F         	goto	l6150
  6519   001EB4                     u3690:
  6520   001EB4  5003               	movf	(_real_rtc_data+2)^0,w,c
  6521   001EB6  0B3F               	andlw	63
  6522   001EB8  6E03               	movwf	(_real_rtc_data+2)^0,c
  6523   001EBA  EF6C  F00F         	goto	l6154
  6524   001EBE                     l6150:
  6525   001EBE  BA03               	btfsc	(_real_rtc_data+2)^0,5,c
  6526   001EC0  EF64  F00F         	goto	u3701
  6527   001EC4  EF67  F00F         	goto	u3700
  6528   001EC8                     u3701:
  6529   001EC8  0E01               	movlw	1
  6530   001ECA  EF68  F00F         	goto	u3710
  6531   001ECE                     u3700:
  6532   001ECE  0E00               	movlw	0
  6533   001ED0                     u3710:
  6534   001ED0  6E4A               	movwf	_rtc_hour_ampm_flg^0,c
  6535   001ED2  5003               	movf	(_real_rtc_data+2)^0,w,c
  6536   001ED4  0B1F               	andlw	31
  6537   001ED6  6E03               	movwf	(_real_rtc_data+2)^0,c
  6538   001ED8                     l6154:
  6539                           
  6540                           ;DS1307.c: 70:     ds1307_date_datas[ 0 ] = real_rtc_data[ 2 ] >> 4; ds1307_date_datas[ 
      +                          1 ] = real_rtc_data[ 2 ] % 16;
  6541   001ED8  3803               	swapf	(_real_rtc_data+2)^0,w,c
  6542   001EDA  0B0F               	andlw	15
  6543   001EDC  6E62               	movwf	Ds1307HMSRead@ds1307_date_datas^0,c
  6544   001EDE  5003               	movf	(_real_rtc_data+2)^0,w,c
  6545   001EE0  0B0F               	andlw	15
  6546   001EE2  6E63               	movwf	(Ds1307HMSRead@ds1307_date_datas+1)^0,c
  6547   001EE4                     
  6548                           ;DS1307.c: 71:     ds1307_date_datas[ 2 ] = real_rtc_data[ 1 ] >> 4; ds1307_date_datas[ 
      +                          3 ] = real_rtc_data[ 1 ] % 16;
  6549   001EE4  3802               	swapf	(_real_rtc_data+1)^0,w,c
  6550   001EE6  0B0F               	andlw	15
  6551   001EE8  6E64               	movwf	(Ds1307HMSRead@ds1307_date_datas+2)^0,c
  6552   001EEA  5002               	movf	(_real_rtc_data+1)^0,w,c
  6553   001EEC  0B0F               	andlw	15
  6554   001EEE  6E65               	movwf	(Ds1307HMSRead@ds1307_date_datas+3)^0,c
  6555   001EF0                     
  6556                           ;DS1307.c: 72:     ds1307_date_datas[ 4 ] = real_rtc_data[ 0 ] >> 4; ds1307_date_datas[ 
      +                          5 ] = real_rtc_data[ 0 ] % 16;
  6557   001EF0  3801               	swapf	_real_rtc_data^0,w,c
  6558   001EF2  0B0F               	andlw	15
  6559   001EF4  6E66               	movwf	(Ds1307HMSRead@ds1307_date_datas+4)^0,c
  6560   001EF6  5001               	movf	_real_rtc_data^0,w,c
  6561   001EF8  0B0F               	andlw	15
  6562   001EFA  6E67               	movwf	(Ds1307HMSRead@ds1307_date_datas+5)^0,c
  6563   001EFC                     
  6564                           ;DS1307.c: 73:     if( rtc_clock_disp_type == 1 && ds1307_date_datas[ 0 ] == 0 ) ds1307_
      +                          date_datas[ 0 ] = 0xff;
  6565   001EFC  044B               	decf	_rtc_clock_disp_type^0,w,c
  6566   001EFE  A4D8               	btfss	status,2,c
  6567   001F00  EF84  F00F         	goto	u3721
  6568   001F04  EF86  F00F         	goto	u3720
  6569   001F08                     u3721:
  6570   001F08  EF8F  F00F         	goto	l6172
  6571   001F0C                     u3720:
  6572   001F0C  5062               	movf	Ds1307HMSRead@ds1307_date_datas^0,w,c
  6573   001F0E  A4D8               	btfss	status,2,c
  6574   001F10  EF8C  F00F         	goto	u3731
  6575   001F14  EF8E  F00F         	goto	u3730
  6576   001F18                     u3731:
  6577   001F18  EF8F  F00F         	goto	l6172
  6578   001F1C                     u3730:
  6579   001F1C  6862               	setf	Ds1307HMSRead@ds1307_date_datas^0,c
  6580   001F1E                     l6172:
  6581                           
  6582                           ;DS1307.c: 74:     return ds1307_date_datas;
  6583   001F1E  0E62               	movlw	low Ds1307HMSRead@ds1307_date_datas
  6584   001F20  6E60               	movwf	?_Ds1307HMSRead^0,c
  6585   001F22  0E00               	movlw	high Ds1307HMSRead@ds1307_date_datas
  6586   001F24  6E61               	movwf	(?_Ds1307HMSRead+1)^0,c
  6587   001F26  0012               	return		;funcret
  6588   001F28                     __end_of_Ds1307HMSRead:
  6589                           	callstack 0
  6590                           
  6591 ;; *************** function _I2cWrite *****************
  6592 ;; Defined at:
  6593 ;;		line 45 in file "I2C.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  data            1    wreg     unsigned char 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  data            1   16[COMRAM] unsigned char 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      void 
  6600 ;; Registers used:
  6601 ;;		wreg, cstack
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6607 ;;      Params:         0       0       0       0       0       0       0
  6608 ;;      Locals:         1       0       0       0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0       0       0
  6610 ;;      Totals:         1       0       0       0       0       0       0
  6611 ;;Total ram usage:        1 bytes
  6612 ;; Hardware stack levels used: 1
  6613 ;; Hardware stack levels required when called: 7
  6614 ;; This function calls:
  6615 ;;		_I2cWait
  6616 ;; This function is called by:
  6617 ;;		_Ds1307HMSRead
  6618 ;;		_Ds1307Write
  6619 ;;		_Ds1307HourSet
  6620 ;;		_Ds1307MinuteSet
  6621 ;;		_Ds1307SecondSet
  6622 ;;		_Ds1307Read
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text34
  6627   002882                     __ptext34:
  6628                           	callstack 0
  6629   002882                     _I2cWrite:
  6630                           	callstack 20
  6631                           
  6632                           ;incstack = 0
  6633                           ;I2cWrite@data stored from wreg
  6634   002882  6E5E               	movwf	I2cWrite@data^0,c
  6635   002884                     
  6636                           ;I2C.c: 46:     SSPBUF = data;
  6637   002884  C05E  FFC9         	movff	I2cWrite@data,4041	;volatile
  6638   002888                     l152:
  6639   002888  B0C7               	btfsc	199,0,c	;volatile
  6640   00288A  EF49  F014         	goto	u3621
  6641   00288E  EF4B  F014         	goto	u3620
  6642   002892                     u3621:
  6643   002892  EF44  F014         	goto	l152
  6644   002896                     u3620:
  6645   002896                     
  6646                           ;I2C.c: 48:     I2cWait();
  6647   002896  EC12  F014         	call	_I2cWait	;wreg free
  6648   00289A  0012               	return		;funcret
  6649   00289C                     __end_of_I2cWrite:
  6650                           	callstack 0
  6651                           
  6652 ;; *************** function _I2cStart *****************
  6653 ;; Defined at:
  6654 ;;		line 22 in file "I2C.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1    wreg      void 
  6661 ;; Registers used:
  6662 ;;		None
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6668 ;;      Params:         0       0       0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0
  6671 ;;      Totals:         0       0       0       0       0       0       0
  6672 ;;Total ram usage:        0 bytes
  6673 ;; Hardware stack levels used: 1
  6674 ;; Hardware stack levels required when called: 5
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_Ds1307HMSRead
  6679 ;;		_Ds1307Write
  6680 ;;		_Ds1307HourSet
  6681 ;;		_Ds1307MinuteSet
  6682 ;;		_Ds1307SecondSet
  6683 ;;		_Ds1307Read
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text35
  6688   00291A                     __ptext35:
  6689                           	callstack 0
  6690   00291A                     _I2cStart:
  6691                           	callstack 22
  6692   00291A                     
  6693                           ;I2C.c: 23:     SSPCON2bits.SEN = 1;
  6694   00291A  80C5               	bsf	197,0,c	;volatile
  6695   00291C                     l127:
  6696   00291C  B0C5               	btfsc	197,0,c	;volatile
  6697   00291E  EF93  F014         	goto	u3611
  6698   002922  EF95  F014         	goto	u3610
  6699   002926                     u3611:
  6700   002926  EF8E  F014         	goto	l127
  6701   00292A                     u3610:
  6702   00292A  0012               	return		;funcret
  6703   00292C                     __end_of_I2cStart:
  6704                           	callstack 0
  6705                           
  6706 ;; *************** function _I2cRestart *****************
  6707 ;; Defined at:
  6708 ;;		line 32 in file "I2C.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;		None
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;		None
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      void 
  6715 ;; Registers used:
  6716 ;;		None
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6722 ;;      Params:         0       0       0       0       0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0
  6725 ;;      Totals:         0       0       0       0       0       0       0
  6726 ;;Total ram usage:        0 bytes
  6727 ;; Hardware stack levels used: 1
  6728 ;; Hardware stack levels required when called: 5
  6729 ;; This function calls:
  6730 ;;		Nothing
  6731 ;; This function is called by:
  6732 ;;		_Ds1307HMSRead
  6733 ;;		_Ds1307Read
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text36
  6738   00292C                     __ptext36:
  6739                           	callstack 0
  6740   00292C                     _I2cRestart:
  6741                           	callstack 24
  6742   00292C                     
  6743                           ;I2C.c: 33:     SSPCON2bits.RSEN = 1;
  6744   00292C  82C5               	bsf	197,1,c	;volatile
  6745   00292E                     l139:
  6746   00292E  B2C5               	btfsc	197,1,c	;volatile
  6747   002930  EF9C  F014         	goto	u3631
  6748   002934  EF9E  F014         	goto	u3630
  6749   002938                     u3631:
  6750   002938  EF97  F014         	goto	l139
  6751   00293C                     u3630:
  6752   00293C  0012               	return		;funcret
  6753   00293E                     __end_of_I2cRestart:
  6754                           	callstack 0
  6755                           
  6756 ;; *************** function _I2cRead *****************
  6757 ;; Defined at:
  6758 ;;		line 51 in file "I2C.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;  ack             1    wreg     unsigned char 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  ack             1   16[COMRAM] unsigned char 
  6763 ;;  receive         1   17[COMRAM] unsigned char 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  1    wreg      unsigned char 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2, cstack
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6773 ;;      Params:         0       0       0       0       0       0       0
  6774 ;;      Locals:         2       0       0       0       0       0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0
  6776 ;;      Totals:         2       0       0       0       0       0       0
  6777 ;;Total ram usage:        2 bytes
  6778 ;; Hardware stack levels used: 1
  6779 ;; Hardware stack levels required when called: 7
  6780 ;; This function calls:
  6781 ;;		_I2cWait
  6782 ;; This function is called by:
  6783 ;;		_Ds1307HMSRead
  6784 ;;		_Ds1307Read
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text37
  6789   002774                     __ptext37:
  6790                           	callstack 0
  6791   002774                     _I2cRead:
  6792                           	callstack 22
  6793                           
  6794                           ;incstack = 0
  6795                           ;I2cRead@ack stored from wreg
  6796   002774  6E5E               	movwf	I2cRead@ack^0,c
  6797   002776                     
  6798                           ;I2C.c: 53:     SSPCON2bits.RCEN = 1;
  6799   002776  86C5               	bsf	197,3,c	;volatile
  6800   002778                     l158:
  6801   002778  A0C7               	btfss	199,0,c	;volatile
  6802   00277A  EFC1  F013         	goto	u3641
  6803   00277E  EFC3  F013         	goto	u3640
  6804   002782                     u3641:
  6805   002782  EFBC  F013         	goto	l158
  6806   002786                     u3640:
  6807   002786                     
  6808                           ;I2C.c: 55:     receive = SSPBUF;
  6809   002786  CFC9 F05F          	movff	4041,I2cRead@receive	;volatile
  6810   00278A                     
  6811                           ;I2C.c: 56:     I2cWait();
  6812   00278A  EC12  F014         	call	_I2cWait	;wreg free
  6813   00278E                     
  6814                           ;I2C.c: 57:     SSPCON2bits.ACKDT = ack;
  6815   00278E  B05E               	btfsc	I2cRead@ack^0,0,c
  6816   002790  D002               	bra	u3655
  6817   002792  9AC5               	bcf	197,5,c	;volatile
  6818   002794  D001               	bra	u3656
  6819   002796                     u3655:
  6820   002796  8AC5               	bsf	197,5,c	;volatile
  6821   002798                     u3656:
  6822   002798                     
  6823                           ;I2C.c: 58:     SSPCON2bits.ACKEN=1;
  6824   002798  88C5               	bsf	197,4,c	;volatile
  6825   00279A                     l161:
  6826   00279A  B8C5               	btfsc	197,4,c	;volatile
  6827   00279C  EFD2  F013         	goto	u3661
  6828   0027A0  EFD4  F013         	goto	u3660
  6829   0027A4                     u3661:
  6830   0027A4  EFCD  F013         	goto	l161
  6831   0027A8                     u3660:
  6832   0027A8                     
  6833                           ;I2C.c: 60:     return receive;
  6834   0027A8  505F               	movf	I2cRead@receive^0,w,c
  6835   0027AA  0012               	return		;funcret
  6836   0027AC                     __end_of_I2cRead:
  6837                           	callstack 0
  6838                           
  6839 ;; *************** function _I2cWait *****************
  6840 ;; Defined at:
  6841 ;;		line 37 in file "I2C.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;		None
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6855 ;;      Params:         0       0       0       0       0       0       0
  6856 ;;      Locals:         0       0       0       0       0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0
  6858 ;;      Totals:         0       0       0       0       0       0       0
  6859 ;;Total ram usage:        0 bytes
  6860 ;; Hardware stack levels used: 1
  6861 ;; Hardware stack levels required when called: 6
  6862 ;; This function calls:
  6863 ;;		_I2cStop
  6864 ;; This function is called by:
  6865 ;;		_I2cWrite
  6866 ;;		_I2cRead
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text38
  6871   002824                     __ptext38:
  6872                           	callstack 0
  6873   002824                     _I2cWait:
  6874                           	callstack 20
  6875   002824                     l145:
  6876                           
  6877                           ;I2C.c: 38:  while(SSPSTATbits.R_NOT_W == 1)
  6878   002824  B4C7               	btfsc	199,2,c	;volatile
  6879   002826  EF17  F014         	goto	u3591
  6880   00282A  EF19  F014         	goto	u3590
  6881   00282E                     u3591:
  6882   00282E  EF12  F014         	goto	l145
  6883   002832                     u3590:
  6884   002832                     
  6885                           ;I2C.c: 40:  if(SSPCON2bits.ACKSTAT == 1) {
  6886   002832  ACC5               	btfss	197,6,c	;volatile
  6887   002834  EF1E  F014         	goto	u3601
  6888   002838  EF20  F014         	goto	u3600
  6889   00283C                     u3601:
  6890   00283C  EF22  F014         	goto	l149
  6891   002840                     u3600:
  6892   002840                     
  6893                           ;I2C.c: 41:   I2cStop();
  6894   002840  EC9F  F014         	call	_I2cStop	;wreg free
  6895   002844                     l149:
  6896   002844  0012               	return		;funcret
  6897   002846                     __end_of_I2cWait:
  6898                           	callstack 0
  6899                           
  6900 ;; *************** function _I2cStop *****************
  6901 ;; Defined at:
  6902 ;;		line 27 in file "I2C.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;		None
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;		None
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  1    wreg      void 
  6909 ;; Registers used:
  6910 ;;		None
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6916 ;;      Params:         0       0       0       0       0       0       0
  6917 ;;      Locals:         0       0       0       0       0       0       0
  6918 ;;      Temps:          0       0       0       0       0       0       0
  6919 ;;      Totals:         0       0       0       0       0       0       0
  6920 ;;Total ram usage:        0 bytes
  6921 ;; Hardware stack levels used: 1
  6922 ;; Hardware stack levels required when called: 5
  6923 ;; This function calls:
  6924 ;;		Nothing
  6925 ;; This function is called by:
  6926 ;;		_Ds1307HMSRead
  6927 ;;		_Ds1307Write
  6928 ;;		_Ds1307HourSet
  6929 ;;		_Ds1307MinuteSet
  6930 ;;		_Ds1307SecondSet
  6931 ;;		_I2cWait
  6932 ;;		_Ds1307Read
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text39
  6937   00293E                     __ptext39:
  6938                           	callstack 0
  6939   00293E                     _I2cStop:
  6940                           	callstack 20
  6941   00293E                     
  6942                           ;I2C.c: 28:     SSPCON2bits.PEN = 1;
  6943   00293E  84C5               	bsf	197,2,c	;volatile
  6944   002940                     l133:
  6945   002940  B4C5               	btfsc	197,2,c	;volatile
  6946   002942  EFA5  F014         	goto	u3581
  6947   002946  EFA7  F014         	goto	u3580
  6948   00294A                     u3581:
  6949   00294A  EFA0  F014         	goto	l133
  6950   00294E                     u3580:
  6951   00294E  0012               	return		;funcret
  6952   002950                     __end_of_I2cStop:
  6953                           	callstack 0
  6954                           
  6955 ;; *************** function _EnableAllInterrupts *****************
  6956 ;; Defined at:
  6957 ;;		line 70 in file "Interrupts.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;		None
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  1    wreg      void 
  6964 ;; Registers used:
  6965 ;;		None
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6971 ;;      Params:         0       0       0       0       0       0       0
  6972 ;;      Locals:         0       0       0       0       0       0       0
  6973 ;;      Temps:          0       0       0       0       0       0       0
  6974 ;;      Totals:         0       0       0       0       0       0       0
  6975 ;;Total ram usage:        0 bytes
  6976 ;; Hardware stack levels used: 1
  6977 ;; Hardware stack levels required when called: 5
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_DeviceInit
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text40
  6986   0029A4                     __ptext40:
  6987                           	callstack 0
  6988   0029A4                     _EnableAllInterrupts:
  6989                           	callstack 24
  6990   0029A4                     
  6991                           ;Interrupts.c: 71:     (INTCONbits.GIE = 1);
  6992   0029A4  8EF2               	bsf	242,7,c	;volatile
  6993   0029A6  0012               	return		;funcret
  6994   0029A8                     __end_of_EnableAllInterrupts:
  6995                           	callstack 0
  6996                           
  6997 ;; *************** function _Ds1307Init *****************
  6998 ;; Defined at:
  6999 ;;		line 11 in file "DS1307.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;		None
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      void 
  7006 ;; Registers used:
  7007 ;;		wreg, status,2, cstack
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7013 ;;      Params:         0       0       0       0       0       0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0
  7015 ;;      Temps:          0       0       0       0       0       0       0
  7016 ;;      Totals:         0       0       0       0       0       0       0
  7017 ;;Total ram usage:        0 bytes
  7018 ;; Hardware stack levels used: 1
  7019 ;; Hardware stack levels required when called: 6
  7020 ;; This function calls:
  7021 ;;		_I2cInit
  7022 ;; This function is called by:
  7023 ;;		_DeviceInit
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text41
  7028   00297E                     __ptext41:
  7029                           	callstack 0
  7030   00297E                     _Ds1307Init:
  7031                           	callstack 23
  7032   00297E                     
  7033                           ;DS1307.c: 15:     rtc_clock_disp_type = 1;
  7034   00297E  0E01               	movlw	1
  7035   002980  6E4B               	movwf	_rtc_clock_disp_type^0,c
  7036                           
  7037                           ;DS1307.c: 16:     rtc_hour_ampm_flg = 1;
  7038   002982  0E01               	movlw	1
  7039   002984  6E4A               	movwf	_rtc_hour_ampm_flg^0,c
  7040   002986                     
  7041                           ;DS1307.c: 17:     I2cInit();
  7042   002986  EC71  F014         	call	_I2cInit	;wreg free
  7043   00298A  0012               	return		;funcret
  7044   00298C                     __end_of_Ds1307Init:
  7045                           	callstack 0
  7046                           
  7047 ;; *************** function _I2cInit *****************
  7048 ;; Defined at:
  7049 ;;		line 10 in file "I2C.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;		None
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;		None
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  1    wreg      void 
  7056 ;; Registers used:
  7057 ;;		wreg, status,2
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7063 ;;      Params:         0       0       0       0       0       0       0
  7064 ;;      Locals:         0       0       0       0       0       0       0
  7065 ;;      Temps:          0       0       0       0       0       0       0
  7066 ;;      Totals:         0       0       0       0       0       0       0
  7067 ;;Total ram usage:        0 bytes
  7068 ;; Hardware stack levels used: 1
  7069 ;; Hardware stack levels required when called: 5
  7070 ;; This function calls:
  7071 ;;		Nothing
  7072 ;; This function is called by:
  7073 ;;		_Ds1307Init
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           	psect	text42
  7078   0028E2                     __ptext42:
  7079                           	callstack 0
  7080   0028E2                     _I2cInit:
  7081                           	callstack 23
  7082   0028E2                     
  7083                           ;I2C.c: 12:     SSPSTATbits.SMP = 1;
  7084   0028E2  8EC7               	bsf	199,7,c	;volatile
  7085                           
  7086                           ;I2C.c: 13:     SSPSTATbits.CKE = 0;
  7087   0028E4  9CC7               	bcf	199,6,c	;volatile
  7088                           
  7089                           ;I2C.c: 15:     SSPCON1bits.SSPEN = 1;
  7090   0028E6  8AC6               	bsf	198,5,c	;volatile
  7091   0028E8                     
  7092                           ;I2C.c: 16:     SSPCON1bits.SSPM = 0b1000;
  7093   0028E8  50C6               	movf	198,w,c	;volatile
  7094   0028EA  0BF0               	andlw	-16
  7095   0028EC  0908               	iorlw	8
  7096   0028EE  6EC6               	movwf	198,c	;volatile
  7097                           
  7098                           ;I2C.c: 18:     SSPADD = 99;
  7099   0028F0  0E63               	movlw	99
  7100   0028F2  6EC8               	movwf	200,c	;volatile
  7101   0028F4  0012               	return		;funcret
  7102   0028F6                     __end_of_I2cInit:
  7103                           	callstack 0
  7104                           
  7105 ;; *************** function _BlinkDisable *****************
  7106 ;; Defined at:
  7107 ;;		line 93 in file "Display.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;		None
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  i               1   16[COMRAM] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7121 ;;      Params:         0       0       0       0       0       0       0
  7122 ;;      Locals:         1       0       0       0       0       0       0
  7123 ;;      Temps:          0       0       0       0       0       0       0
  7124 ;;      Totals:         1       0       0       0       0       0       0
  7125 ;;Total ram usage:        1 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 5
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_main
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text43
  7136   0027FE                     __ptext43:
  7137                           	callstack 0
  7138   0027FE                     _BlinkDisable:
  7139                           	callstack 25
  7140   0027FE                     
  7141                           ;Display.c: 94:     for( unsigned char i = 0; i < 7; i ++ ){
  7142   0027FE  0E00               	movlw	0
  7143   002800  6E5E               	movwf	BlinkDisable@i^0,c
  7144   002802                     l7284:
  7145                           
  7146                           ;Display.c: 95:         blink_pos[ i ] = 0;
  7147   002802  0E80               	movlw	low _blink_pos
  7148   002804  245E               	addwf	BlinkDisable@i^0,w,c
  7149   002806  6ED9               	movwf	fsr2l,c
  7150   002808  6ADA               	clrf	fsr2h,c
  7151   00280A  0E00               	movlw	high _blink_pos
  7152   00280C  22DA               	addwfc	fsr2h,f,c
  7153   00280E  6ADF               	clrf	indf2,c
  7154   002810                     
  7155                           ;Display.c: 96:     }
  7156   002810  2A5E               	incf	BlinkDisable@i^0,f,c
  7157   002812  0E06               	movlw	6
  7158   002814  645E               	cpfsgt	BlinkDisable@i^0,c
  7159   002816  EF0F  F014         	goto	u5141
  7160   00281A  EF11  F014         	goto	u5140
  7161   00281E                     u5141:
  7162   00281E  EF01  F014         	goto	l7284
  7163   002822                     u5140:
  7164   002822  0012               	return		;funcret
  7165   002824                     __end_of_BlinkDisable:
  7166                           	callstack 0
  7167                           
  7168 ;; *************** function _low_isr *****************
  7169 ;; Defined at:
  7170 ;;		line 60 in file "Interrupts.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;		None
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7184 ;;      Params:         0       0       0       0       0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0
  7186 ;;      Temps:          3       0       0       0       0       0       0
  7187 ;;      Totals:         3       0       0       0       0       0       0
  7188 ;;Total ram usage:        3 bytes
  7189 ;; Hardware stack levels used: 1
  7190 ;; Hardware stack levels required when called: 4
  7191 ;; This function calls:
  7192 ;;		_ScanCounter
  7193 ;; This function is called by:
  7194 ;;		Interrupt level 1
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	intcodelo
  7199   000018                     __pintcodelo:
  7200                           	callstack 0
  7201   000018                     _low_isr:
  7202                           	callstack 20
  7203                           
  7204                           ;incstack = 0
  7205   000018  806F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7206   00001A  CFD8 F05B          	movff	status,??_low_isr
  7207   00001E  CFE8 F05C          	movff	wreg,??_low_isr+1
  7208   000022  CFE0 F05D          	movff	bsr,??_low_isr+2
  7209   000026                     
  7210                           ;Interrupts.c: 62:     if( INTCON3bits.INT2IE && INTCON3bits.INT2IF ) {
  7211   000026  A8F0               	btfss	240,4,c	;volatile
  7212   000028  EF18  F000         	goto	i1u244_21
  7213   00002C  EF1A  F000         	goto	i1u244_20
  7214   000030                     i1u244_21:
  7215   000030  EF24  F000         	goto	i1l689
  7216   000034                     i1u244_20:
  7217   000034  A2F0               	btfss	240,1,c	;volatile
  7218   000036  EF1F  F000         	goto	i1u245_21
  7219   00003A  EF21  F000         	goto	i1u245_20
  7220   00003E                     i1u245_21:
  7221   00003E  EF24  F000         	goto	i1l689
  7222   000042                     i1u245_20:
  7223   000042                     
  7224                           ;Interrupts.c: 63:         INTCON3bits.INT2IF = 0;
  7225   000042  92F0               	bcf	240,1,c	;volatile
  7226   000044                     
  7227                           ;Interrupts.c: 65:         ScanCounter();
  7228   000044  EC53  F00E         	call	_ScanCounter	;wreg free
  7229   000048                     i1l689:
  7230   000048  C05D  FFE0         	movff	??_low_isr+2,bsr
  7231   00004C  C05C  FFE8         	movff	??_low_isr+1,wreg
  7232   000050  C05B  FFD8         	movff	??_low_isr,status
  7233   000054  906F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7234   000056  0010               	retfie	
  7235   000058                     __end_of_low_isr:
  7236                           	callstack 0
  7237                           
  7238 ;; *************** function _ScanCounter *****************
  7239 ;; Defined at:
  7240 ;;		line 79 in file "Counter.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;		None
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;		None
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1    wreg      void 
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7254 ;;      Params:         0       0       0       0       0       0       0
  7255 ;;      Locals:         0       0       0       0       0       0       0
  7256 ;;      Temps:          0       0       0       0       0       0       0
  7257 ;;      Totals:         0       0       0       0       0       0       0
  7258 ;;Total ram usage:        0 bytes
  7259 ;; Hardware stack levels used: 1
  7260 ;; Hardware stack levels required when called: 3
  7261 ;; This function calls:
  7262 ;;		Nothing
  7263 ;; This function is called by:
  7264 ;;		_low_isr
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           	psect	text45
  7269   001CA6                     __ptext45:
  7270                           	callstack 0
  7271   001CA6                     _ScanCounter:
  7272                           	callstack 20
  7273   001CA6                     
  7274                           ;Counter.c: 80:     if(!counter_enable_flg) return;
  7275   001CA6  5038               	movf	_counter_enable_flg^0,w,c
  7276   001CA8  A4D8               	btfss	status,2,c
  7277   001CAA  EF59  F00E         	goto	i1u181_21
  7278   001CAE  EF5B  F00E         	goto	i1u181_20
  7279   001CB2                     i1u181_21:
  7280   001CB2  EF5D  F00E         	goto	i1l4120
  7281   001CB6                     i1u181_20:
  7282   001CB6  EFBF  F00E         	goto	i1l802
  7283   001CBA                     i1l4120:
  7284                           
  7285                           ;Counter.c: 81:     if( counter_direction_flg == 1 ){
  7286   001CBA  0437               	decf	_counter_direction_flg^0,w,c
  7287   001CBC  A4D8               	btfss	status,2,c
  7288   001CBE  EF63  F00E         	goto	i1u182_21
  7289   001CC2  EF65  F00E         	goto	i1u182_20
  7290   001CC6                     i1u182_21:
  7291   001CC6  EF80  F00E         	goto	i1l4136
  7292   001CCA                     i1u182_20:
  7293   001CCA                     
  7294                           ;Counter.c: 82:         counter_up_second ++;
  7295   001CCA  2A39               	incf	_counter_up_second^0,f,c
  7296   001CCC                     
  7297                           ;Counter.c: 83:         if( counter_up_second == 60 ){
  7298   001CCC  0E3C               	movlw	60
  7299   001CCE  1839               	xorwf	_counter_up_second^0,w,c
  7300   001CD0  A4D8               	btfss	status,2,c
  7301   001CD2  EF6D  F00E         	goto	i1u183_21
  7302   001CD6  EF6F  F00E         	goto	i1u183_20
  7303   001CDA                     i1u183_21:
  7304   001CDA  EFBF  F00E         	goto	i1l802
  7305   001CDE                     i1u183_20:
  7306   001CDE                     
  7307                           ;Counter.c: 84:             counter_up_second = 0;
  7308   001CDE  0E00               	movlw	0
  7309   001CE0  6E39               	movwf	_counter_up_second^0,c
  7310   001CE2                     
  7311                           ;Counter.c: 85:             counter_up_minute ++;
  7312   001CE2  2A3A               	incf	_counter_up_minute^0,f,c
  7313   001CE4                     
  7314                           ;Counter.c: 86:             if(counter_up_minute == 60){
  7315   001CE4  0E3C               	movlw	60
  7316   001CE6  183A               	xorwf	_counter_up_minute^0,w,c
  7317   001CE8  A4D8               	btfss	status,2,c
  7318   001CEA  EF79  F00E         	goto	i1u184_21
  7319   001CEE  EF7B  F00E         	goto	i1u184_20
  7320   001CF2                     i1u184_21:
  7321   001CF2  EFBF  F00E         	goto	i1l802
  7322   001CF6                     i1u184_20:
  7323   001CF6                     
  7324                           ;Counter.c: 87:                 counter_up_minute = 0;
  7325   001CF6  0E00               	movlw	0
  7326   001CF8  6E3A               	movwf	_counter_up_minute^0,c
  7327   001CFA                     
  7328                           ;Counter.c: 88:                 counter_up_hour ++;
  7329   001CFA  2A3B               	incf	_counter_up_hour^0,f,c
  7330   001CFC  EFBF  F00E         	goto	i1l802
  7331   001D00                     i1l4136:
  7332   001D00  5037               	movf	_counter_direction_flg^0,w,c
  7333   001D02  A4D8               	btfss	status,2,c
  7334   001D04  EF86  F00E         	goto	i1u185_21
  7335   001D08  EF88  F00E         	goto	i1u185_20
  7336   001D0C                     i1u185_21:
  7337   001D0C  EFBF  F00E         	goto	i1l802
  7338   001D10                     i1u185_20:
  7339   001D10                     
  7340                           ;Counter.c: 93:         if( counter_down_hour == 0 && counter_down_minute == 0 && counte
      +                          r_down_second == 0 ) {
  7341   001D10  5041               	movf	_counter_down_hour^0,w,c
  7342   001D12  A4D8               	btfss	status,2,c
  7343   001D14  EF8E  F00E         	goto	i1u186_21
  7344   001D18  EF90  F00E         	goto	i1u186_20
  7345   001D1C                     i1u186_21:
  7346   001D1C  EFA8  F00E         	goto	i1l4148
  7347   001D20                     i1u186_20:
  7348   001D20  5040               	movf	_counter_down_minute^0,w,c
  7349   001D22  A4D8               	btfss	status,2,c
  7350   001D24  EF96  F00E         	goto	i1u187_21
  7351   001D28  EF98  F00E         	goto	i1u187_20
  7352   001D2C                     i1u187_21:
  7353   001D2C  EFA8  F00E         	goto	i1l4148
  7354   001D30                     i1u187_20:
  7355   001D30  503F               	movf	_counter_down_second^0,w,c
  7356   001D32  A4D8               	btfss	status,2,c
  7357   001D34  EF9E  F00E         	goto	i1u188_21
  7358   001D38  EFA0  F00E         	goto	i1u188_20
  7359   001D3C                     i1u188_21:
  7360   001D3C  EFA8  F00E         	goto	i1l4148
  7361   001D40                     i1u188_20:
  7362   001D40                     
  7363                           ;Counter.c: 94:             counter_enable_flg = 0;
  7364   001D40  0E00               	movlw	0
  7365   001D42  6E38               	movwf	_counter_enable_flg^0,c
  7366                           
  7367                           ;Counter.c: 95:             counter_down_comp_flg = 1; counter_down_comp_cnt = 0;
  7368   001D44  0E01               	movlw	1
  7369   001D46  6E34               	movwf	_counter_down_comp_flg^0,c
  7370   001D48  0E00               	movlw	0
  7371   001D4A  6E33               	movwf	_counter_down_comp_cnt^0,c
  7372   001D4C  EFBF  F00E         	goto	i1l802
  7373   001D50                     i1l4148:
  7374                           
  7375                           ;Counter.c: 98:         counter_down_comp_flg = 0;
  7376   001D50  0E00               	movlw	0
  7377   001D52  6E34               	movwf	_counter_down_comp_flg^0,c
  7378   001D54                     
  7379                           ;Counter.c: 99:         counter_down_second --;
  7380   001D54  063F               	decf	_counter_down_second^0,f,c
  7381   001D56                     
  7382                           ;Counter.c: 100:         if( counter_down_second < 0 ) {
  7383   001D56  BE3F               	btfsc	_counter_down_second^0,7,c
  7384   001D58  EFB2  F00E         	goto	i1u189_20
  7385   001D5C  EFB0  F00E         	goto	i1u189_21
  7386   001D60                     i1u189_21:
  7387   001D60  EFBF  F00E         	goto	i1l802
  7388   001D64                     i1u189_20:
  7389   001D64                     
  7390                           ;Counter.c: 101:             counter_down_second = 59;
  7391   001D64  0E3B               	movlw	59
  7392   001D66  6E3F               	movwf	_counter_down_second^0,c
  7393   001D68                     
  7394                           ;Counter.c: 102:             counter_down_minute --;
  7395   001D68  0640               	decf	_counter_down_minute^0,f,c
  7396   001D6A                     
  7397                           ;Counter.c: 103:             if( counter_down_minute < 0 ){
  7398   001D6A  BE40               	btfsc	_counter_down_minute^0,7,c
  7399   001D6C  EFBC  F00E         	goto	i1u190_20
  7400   001D70  EFBA  F00E         	goto	i1u190_21
  7401   001D74                     i1u190_21:
  7402   001D74  EFBF  F00E         	goto	i1l802
  7403   001D78                     i1u190_20:
  7404   001D78                     
  7405                           ;Counter.c: 104:                 counter_down_minute = 59;
  7406   001D78  0E3B               	movlw	59
  7407   001D7A  6E40               	movwf	_counter_down_minute^0,c
  7408   001D7C                     
  7409                           ;Counter.c: 105:                 counter_down_hour --;
  7410   001D7C  0641               	decf	_counter_down_hour^0,f,c
  7411   001D7E                     i1l802:
  7412   001D7E  0012               	return		;funcret
  7413   001D80                     __end_of_ScanCounter:
  7414                           	callstack 0
  7415                           
  7416 ;; *************** function _high_isr *****************
  7417 ;; Defined at:
  7418 ;;		line 20 in file "Interrupts.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;		None
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;		None
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  1    wreg      void 
  7425 ;; Registers used:
  7426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7432 ;;      Params:         0       0       0       0       0       0       0
  7433 ;;      Locals:         0       0       0       0       0       0       0
  7434 ;;      Temps:          4       0       0       0       0       0       0
  7435 ;;      Totals:         4       0       0       0       0       0       0
  7436 ;;Total ram usage:        4 bytes
  7437 ;; Hardware stack levels used: 1
  7438 ;; Hardware stack levels required when called: 2
  7439 ;; This function calls:
  7440 ;;		_ScanButtons
  7441 ;;		_ScanDisplay
  7442 ;;		___lwdiv
  7443 ;;		i2_ScanCounter
  7444 ;;		i2_WriteTimer0
  7445 ;; This function is called by:
  7446 ;;		Interrupt level 2
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	intcode
  7451   000008                     __pintcode:
  7452                           	callstack 0
  7453   000008                     _high_isr:
  7454                           	callstack 20
  7455                           
  7456                           ;incstack = 0
  7457   000008  826F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7458   00000A  ED2F  F00D         	call	int_func,f	;refresh shadow registers
  7459                           
  7460                           	psect	intcode_body
  7461   001A5E                     __pintcode_body:
  7462                           	callstack 20
  7463   001A5E                     int_func:
  7464                           	callstack 20
  7465   001A5E  0006               	pop		; remove dummy address from shadow register refresh
  7466   001A60  CFD9 F059          	movff	fsr2l,??_high_isr+2
  7467   001A64  CFDA F05A          	movff	fsr2h,??_high_isr+3
  7468   001A68                     
  7469                           ;Interrupts.c: 22:     if( INTCONbits.TMR0IE && INTCONbits.TMR0IF ) {
  7470   001A68  AAF2               	btfss	242,5,c	;volatile
  7471   001A6A  EF39  F00D         	goto	i2u564_41
  7472   001A6E  EF3B  F00D         	goto	i2u564_40
  7473   001A72                     i2u564_41:
  7474   001A72  EFC3  F00D         	goto	i2l667
  7475   001A76                     i2u564_40:
  7476   001A76  A4F2               	btfss	242,2,c	;volatile
  7477   001A78  EF40  F00D         	goto	i2u565_41
  7478   001A7C  EF42  F00D         	goto	i2u565_40
  7479   001A80                     i2u565_41:
  7480   001A80  EFC3  F00D         	goto	i2l667
  7481   001A84                     i2u565_40:
  7482   001A84                     
  7483                           ;Interrupts.c: 23:         INTCONbits.TMR0IF = 0;
  7484   001A84  94F2               	bcf	242,2,c	;volatile
  7485                           
  7486                           ;Interrupts.c: 25:         switch( display_cnt ){
  7487   001A86  EF4D  F00D         	goto	i2l7886
  7488   001A8A                     i2l7868:
  7489   001A8A  0EFF               	movlw	255
  7490   001A8C  6E4F               	movwf	(i2WriteTimer0@timer0+1)^0,c
  7491   001A8E  0E05               	movlw	5
  7492   001A90  6E4E               	movwf	i2WriteTimer0@timer0^0,c
  7493   001A92  ECA8  F014         	call	i2_WriteTimer0	;wreg free
  7494   001A96  EF7A  F00D         	goto	i2l7888
  7495   001A9A                     i2l7886:
  7496   001A9A  5031               	movf	_display_cnt^0,w,c
  7497   001A9C  6E57               	movwf	??_high_isr^0,c
  7498   001A9E  6A58               	clrf	(??_high_isr+1)^0,c
  7499                           
  7500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7501                           ; Switch size 1, requested type "simple"
  7502                           ; Number of cases is 1, Range of values is 0 to 0
  7503                           ; switch strategies available:
  7504                           ; Name         Instructions Cycles
  7505                           ; simple_byte            4     3 (average)
  7506                           ;	Chosen strategy is simple_byte
  7507   001AA0  5058               	movf	(??_high_isr+1)^0,w,c
  7508   001AA2  0A00               	xorlw	0	; case 0
  7509   001AA4  B4D8               	btfsc	status,2,c
  7510   001AA6  EF57  F00D         	goto	i2l9956
  7511   001AAA  EF7A  F00D         	goto	i2l7888
  7512   001AAE                     i2l9956:
  7513                           
  7514                           ; Switch size 1, requested type "simple"
  7515                           ; Number of cases is 8, Range of values is 0 to 7
  7516                           ; switch strategies available:
  7517                           ; Name         Instructions Cycles
  7518                           ; simple_byte           25    13 (average)
  7519                           ;	Chosen strategy is simple_byte
  7520   001AAE  5057               	movf	??_high_isr^0,w,c
  7521   001AB0  0A00               	xorlw	0	; case 0
  7522   001AB2  B4D8               	btfsc	status,2,c
  7523   001AB4  EF45  F00D         	goto	i2l7868
  7524   001AB8  0A01               	xorlw	1	; case 1
  7525   001ABA  B4D8               	btfsc	status,2,c
  7526   001ABC  EF45  F00D         	goto	i2l7868
  7527   001AC0  0A03               	xorlw	3	; case 2
  7528   001AC2  B4D8               	btfsc	status,2,c
  7529   001AC4  EF45  F00D         	goto	i2l7868
  7530   001AC8  0A01               	xorlw	1	; case 3
  7531   001ACA  B4D8               	btfsc	status,2,c
  7532   001ACC  EF45  F00D         	goto	i2l7868
  7533   001AD0  0A07               	xorlw	7	; case 4
  7534   001AD2  B4D8               	btfsc	status,2,c
  7535   001AD4  EF45  F00D         	goto	i2l7868
  7536   001AD8  0A01               	xorlw	1	; case 5
  7537   001ADA  B4D8               	btfsc	status,2,c
  7538   001ADC  EF45  F00D         	goto	i2l7868
  7539   001AE0  0A03               	xorlw	3	; case 6
  7540   001AE2  B4D8               	btfsc	status,2,c
  7541   001AE4  EF45  F00D         	goto	i2l7868
  7542   001AE8  0A01               	xorlw	1	; case 7
  7543   001AEA  B4D8               	btfsc	status,2,c
  7544   001AEC  EF45  F00D         	goto	i2l7868
  7545   001AF0  EF7A  F00D         	goto	i2l7888
  7546   001AF4                     i2l7888:
  7547                           
  7548                           ;Interrupts.c: 35:         ScanDisplay();
  7549   001AF4  ECCF  F00B         	call	_ScanDisplay	;wreg free
  7550   001AF8                     
  7551                           ;Interrupts.c: 36:         ScanButtons();
  7552   001AF8  EC58  F00A         	call	_ScanButtons	;wreg free
  7553   001AFC                     
  7554                           ;Interrupts.c: 37:         cnt ++;
  7555   001AFC  0100               	movlb	0	; () banked
  7556   001AFE  4BBA               	infsnz	_cnt& (0+255),f,b
  7557   001B00  2BBB               	incf	(_cnt+1)& (0+255),f,b
  7558   001B02                     
  7559                           ; BSR set to: 0
  7560                           ;Interrupts.c: 38:         if( cnt == 100 ){
  7561   001B02  0E64               	movlw	100
  7562   001B04  19BA               	xorwf	_cnt& (0+255),w,b
  7563   001B06  11BB               	iorwf	(_cnt+1)& (0+255),w,b
  7564   001B08  A4D8               	btfss	status,2,c
  7565   001B0A  EF89  F00D         	goto	i2u566_41
  7566   001B0E  EF8B  F00D         	goto	i2u566_40
  7567   001B12                     i2u566_41:
  7568   001B12  EFD4  F00D         	goto	i2l682
  7569   001B16                     i2u566_40:
  7570   001B16                     
  7571                           ; BSR set to: 0
  7572                           ;Interrupts.c: 39:             SYSTEM_ACTION_FLG.DISP_UPDATE_ENABLE = 1; cnt = 0;
  7573   001B16  8048               	bsf	_SYSTEM_ACTION_FLG^0,0,c	;volatile
  7574   001B18                     
  7575                           ; BSR set to: 0
  7576   001B18  0E00               	movlw	0
  7577   001B1A  6FBB               	movwf	(_cnt+1)& (0+255),b
  7578   001B1C  0E00               	movlw	0
  7579   001B1E  6FBA               	movwf	_cnt& (0+255),b
  7580                           
  7581                           ;Interrupts.c: 40:             if( btn_long_press_verify_flg ){
  7582   001B20  502C               	movf	_btn_long_press_verify_flg^0,w,c
  7583   001B22  B4D8               	btfsc	status,2,c
  7584   001B24  EF96  F00D         	goto	i2u567_41
  7585   001B28  EF98  F00D         	goto	i2u567_40
  7586   001B2C                     i2u567_41:
  7587   001B2C  EFB9  F00D         	goto	i2l7908
  7588   001B30                     i2u567_40:
  7589   001B30                     
  7590                           ; BSR set to: 0
  7591                           ;Interrupts.c: 41:                 long_pressed_cnt ++; if( long_pressed_cnt > 10 ) long
      +                          _pressed_cnt = 10;
  7592   001B30  4A4C               	infsnz	_long_pressed_cnt^0,f,c
  7593   001B32  2A4D               	incf	(_long_pressed_cnt+1)^0,f,c
  7594   001B34                     
  7595                           ; BSR set to: 0
  7596   001B34  504D               	movf	(_long_pressed_cnt+1)^0,w,c
  7597   001B36  E109               	bnz	i2u568_40
  7598   001B38  0E0B               	movlw	11
  7599   001B3A  5C4C               	subwf	_long_pressed_cnt^0,w,c
  7600   001B3C  A0D8               	btfss	status,0,c
  7601   001B3E  EFA3  F00D         	goto	i2u568_41
  7602   001B42  EFA5  F00D         	goto	i2u568_40
  7603   001B46                     i2u568_41:
  7604   001B46  EFA9  F00D         	goto	i2l7906
  7605   001B4A                     i2u568_40:
  7606   001B4A                     
  7607                           ; BSR set to: 0
  7608   001B4A  0E00               	movlw	0
  7609   001B4C  6E4D               	movwf	(_long_pressed_cnt+1)^0,c
  7610   001B4E  0E0A               	movlw	10
  7611   001B50  6E4C               	movwf	_long_pressed_cnt^0,c
  7612   001B52                     i2l7906:
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;Interrupts.c: 42:                 CONTINUE_PRESSED_TIME = 100 / long_pressed_cnt;
  7616   001B52  0E00               	movlw	0
  7617   001B54  6E4F               	movwf	(___lwdiv@dividend+1)^0,c
  7618   001B56  0E64               	movlw	100
  7619   001B58  6E4E               	movwf	___lwdiv@dividend^0,c
  7620   001B5A  C04C  F050         	movff	_long_pressed_cnt,___lwdiv@divisor
  7621   001B5E  C04D  F051         	movff	_long_pressed_cnt+1,___lwdiv@divisor+1
  7622   001B62  EC7F  F012         	call	___lwdiv	;wreg free
  7623   001B66  C04E  F008         	movff	?___lwdiv,_CONTINUE_PRESSED_TIME
  7624   001B6A  C04F  F009         	movff	?___lwdiv+1,_CONTINUE_PRESSED_TIME+1
  7625                           
  7626                           ;Interrupts.c: 43:             }
  7627   001B6E  EFD4  F00D         	goto	i2l682
  7628   001B72                     i2l7908:
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;Interrupts.c: 45:                 long_pressed_cnt = 0;
  7632   001B72  0E00               	movlw	0
  7633   001B74  6E4D               	movwf	(_long_pressed_cnt+1)^0,c
  7634   001B76  0E00               	movlw	0
  7635   001B78  6E4C               	movwf	_long_pressed_cnt^0,c
  7636                           
  7637                           ;Interrupts.c: 46:                 CONTINUE_PRESSED_TIME = 100;
  7638   001B7A  0E00               	movlw	0
  7639   001B7C  6E09               	movwf	(_CONTINUE_PRESSED_TIME+1)^0,c
  7640   001B7E  0E64               	movlw	100
  7641   001B80  6E08               	movwf	_CONTINUE_PRESSED_TIME^0,c
  7642   001B82  EFD4  F00D         	goto	i2l682
  7643   001B86                     i2l667:
  7644                           
  7645                           ;Interrupts.c: 51:     if( INTCON3bits.INT2IE && INTCON3bits.INT2IF ) {
  7646   001B86  A8F0               	btfss	240,4,c	;volatile
  7647   001B88  EFC8  F00D         	goto	i2u569_41
  7648   001B8C  EFCA  F00D         	goto	i2u569_40
  7649   001B90                     i2u569_41:
  7650   001B90  EFD4  F00D         	goto	i2l682
  7651   001B94                     i2u569_40:
  7652   001B94  A2F0               	btfss	240,1,c	;volatile
  7653   001B96  EFCF  F00D         	goto	i2u570_41
  7654   001B9A  EFD1  F00D         	goto	i2u570_40
  7655   001B9E                     i2u570_41:
  7656   001B9E  EFD4  F00D         	goto	i2l682
  7657   001BA2                     i2u570_40:
  7658   001BA2                     
  7659                           ;Interrupts.c: 52:         INTCON3bits.INT2IF = 0;
  7660   001BA2  92F0               	bcf	240,1,c	;volatile
  7661   001BA4                     
  7662                           ;Interrupts.c: 53:         ScanCounter();
  7663   001BA4  ECC0  F00E         	call	i2_ScanCounter	;wreg free
  7664   001BA8                     i2l682:
  7665   001BA8  C05A  FFDA         	movff	??_high_isr+3,fsr2h
  7666   001BAC  C059  FFD9         	movff	??_high_isr+2,fsr2l
  7667   001BB0  926F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7668   001BB2  0011               	retfie		f
  7669   001BB4                     __end_of_high_isr:
  7670                           	callstack 0
  7671                           
  7672 ;; *************** function i2_WriteTimer0 *****************
  7673 ;; Defined at:
  7674 ;;		line 37 in file "Timers.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;  timer0          2    0[COMRAM] unsigned int 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;  timer           2    2[COMRAM] struct Timers
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  1    wreg      void 
  7681 ;; Registers used:
  7682 ;;		None
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7688 ;;      Params:         2       0       0       0       0       0       0
  7689 ;;      Locals:         2       0       0       0       0       0       0
  7690 ;;      Temps:          0       0       0       0       0       0       0
  7691 ;;      Totals:         4       0       0       0       0       0       0
  7692 ;;Total ram usage:        4 bytes
  7693 ;; Hardware stack levels used: 1
  7694 ;; This function calls:
  7695 ;;		Nothing
  7696 ;; This function is called by:
  7697 ;;		_high_isr
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           	psect	text47
  7702   002950                     __ptext47:
  7703                           	callstack 0
  7704   002950                     i2_WriteTimer0:
  7705                           	callstack 21
  7706   002950                     
  7707                           ;Timers.c: 37: void WriteTimer0(unsigned int timer0);Timers.c: 38: {;Timers.c: 39:     u
      +                          nion Timers timer;;Timers.c: 41:     timer.lt = timer0;
  7708   002950  C04E  F050         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  7709   002954  C04F  F051         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  7710                           
  7711                           ;Timers.c: 43:     TMR0H = timer.bt[1];
  7712   002958  C051  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  7713                           
  7714                           ;Timers.c: 44:     TMR0L = timer.bt[0];
  7715   00295C  C050  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  7716   002960  0012               	return		;funcret
  7717   002962                     __end_ofi2_WriteTimer0:
  7718                           	callstack 0
  7719                           
  7720 ;; *************** function i2_ScanCounter *****************
  7721 ;; Defined at:
  7722 ;;		line 79 in file "Counter.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;		None
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;		None
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      void 
  7729 ;; Registers used:
  7730 ;;		wreg, status,2, status,0
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7736 ;;      Params:         0       0       0       0       0       0       0
  7737 ;;      Locals:         0       0       0       0       0       0       0
  7738 ;;      Temps:          0       0       0       0       0       0       0
  7739 ;;      Totals:         0       0       0       0       0       0       0
  7740 ;;Total ram usage:        0 bytes
  7741 ;; Hardware stack levels used: 1
  7742 ;; This function calls:
  7743 ;;		Nothing
  7744 ;; This function is called by:
  7745 ;;		_high_isr
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           	psect	text48
  7750   001D80                     __ptext48:
  7751                           	callstack 0
  7752   001D80                     i2_ScanCounter:
  7753                           	callstack 21
  7754   001D80                     
  7755                           ;Counter.c: 80:     if(!counter_enable_flg) return;
  7756   001D80  5038               	movf	_counter_enable_flg^0,w,c
  7757   001D82  A4D8               	btfss	status,2,c
  7758   001D84  EFC6  F00E         	goto	i2u544_41
  7759   001D88  EFC8  F00E         	goto	i2u544_40
  7760   001D8C                     i2u544_41:
  7761   001D8C  EFCA  F00E         	goto	i2l7674
  7762   001D90                     i2u544_40:
  7763   001D90  EF2C  F00F         	goto	i2l802
  7764   001D94                     i2l7674:
  7765                           
  7766                           ;Counter.c: 81:     if( counter_direction_flg == 1 ){
  7767   001D94  0437               	decf	_counter_direction_flg^0,w,c
  7768   001D96  A4D8               	btfss	status,2,c
  7769   001D98  EFD0  F00E         	goto	i2u545_41
  7770   001D9C  EFD2  F00E         	goto	i2u545_40
  7771   001DA0                     i2u545_41:
  7772   001DA0  EFED  F00E         	goto	i2l7690
  7773   001DA4                     i2u545_40:
  7774   001DA4                     
  7775                           ;Counter.c: 82:         counter_up_second ++;
  7776   001DA4  2A39               	incf	_counter_up_second^0,f,c
  7777   001DA6                     
  7778                           ;Counter.c: 83:         if( counter_up_second == 60 ){
  7779   001DA6  0E3C               	movlw	60
  7780   001DA8  1839               	xorwf	_counter_up_second^0,w,c
  7781   001DAA  A4D8               	btfss	status,2,c
  7782   001DAC  EFDA  F00E         	goto	i2u546_41
  7783   001DB0  EFDC  F00E         	goto	i2u546_40
  7784   001DB4                     i2u546_41:
  7785   001DB4  EF2C  F00F         	goto	i2l802
  7786   001DB8                     i2u546_40:
  7787   001DB8                     
  7788                           ;Counter.c: 84:             counter_up_second = 0;
  7789   001DB8  0E00               	movlw	0
  7790   001DBA  6E39               	movwf	_counter_up_second^0,c
  7791   001DBC                     
  7792                           ;Counter.c: 85:             counter_up_minute ++;
  7793   001DBC  2A3A               	incf	_counter_up_minute^0,f,c
  7794   001DBE                     
  7795                           ;Counter.c: 86:             if(counter_up_minute == 60){
  7796   001DBE  0E3C               	movlw	60
  7797   001DC0  183A               	xorwf	_counter_up_minute^0,w,c
  7798   001DC2  A4D8               	btfss	status,2,c
  7799   001DC4  EFE6  F00E         	goto	i2u547_41
  7800   001DC8  EFE8  F00E         	goto	i2u547_40
  7801   001DCC                     i2u547_41:
  7802   001DCC  EF2C  F00F         	goto	i2l802
  7803   001DD0                     i2u547_40:
  7804   001DD0                     
  7805                           ;Counter.c: 87:                 counter_up_minute = 0;
  7806   001DD0  0E00               	movlw	0
  7807   001DD2  6E3A               	movwf	_counter_up_minute^0,c
  7808   001DD4                     
  7809                           ;Counter.c: 88:                 counter_up_hour ++;
  7810   001DD4  2A3B               	incf	_counter_up_hour^0,f,c
  7811   001DD6  EF2C  F00F         	goto	i2l802
  7812   001DDA                     i2l7690:
  7813   001DDA  5037               	movf	_counter_direction_flg^0,w,c
  7814   001DDC  A4D8               	btfss	status,2,c
  7815   001DDE  EFF3  F00E         	goto	i2u548_41
  7816   001DE2  EFF5  F00E         	goto	i2u548_40
  7817   001DE6                     i2u548_41:
  7818   001DE6  EF2C  F00F         	goto	i2l802
  7819   001DEA                     i2u548_40:
  7820   001DEA                     
  7821                           ;Counter.c: 93:         if( counter_down_hour == 0 && counter_down_minute == 0 && counte
      +                          r_down_second == 0 ) {
  7822   001DEA  5041               	movf	_counter_down_hour^0,w,c
  7823   001DEC  A4D8               	btfss	status,2,c
  7824   001DEE  EFFB  F00E         	goto	i2u549_41
  7825   001DF2  EFFD  F00E         	goto	i2u549_40
  7826   001DF6                     i2u549_41:
  7827   001DF6  EF15  F00F         	goto	i2l7702
  7828   001DFA                     i2u549_40:
  7829   001DFA  5040               	movf	_counter_down_minute^0,w,c
  7830   001DFC  A4D8               	btfss	status,2,c
  7831   001DFE  EF03  F00F         	goto	i2u550_41
  7832   001E02  EF05  F00F         	goto	i2u550_40
  7833   001E06                     i2u550_41:
  7834   001E06  EF15  F00F         	goto	i2l7702
  7835   001E0A                     i2u550_40:
  7836   001E0A  503F               	movf	_counter_down_second^0,w,c
  7837   001E0C  A4D8               	btfss	status,2,c
  7838   001E0E  EF0B  F00F         	goto	i2u551_41
  7839   001E12  EF0D  F00F         	goto	i2u551_40
  7840   001E16                     i2u551_41:
  7841   001E16  EF15  F00F         	goto	i2l7702
  7842   001E1A                     i2u551_40:
  7843   001E1A                     
  7844                           ;Counter.c: 94:             counter_enable_flg = 0;
  7845   001E1A  0E00               	movlw	0
  7846   001E1C  6E38               	movwf	_counter_enable_flg^0,c
  7847                           
  7848                           ;Counter.c: 95:             counter_down_comp_flg = 1; counter_down_comp_cnt = 0;
  7849   001E1E  0E01               	movlw	1
  7850   001E20  6E34               	movwf	_counter_down_comp_flg^0,c
  7851   001E22  0E00               	movlw	0
  7852   001E24  6E33               	movwf	_counter_down_comp_cnt^0,c
  7853   001E26  EF2C  F00F         	goto	i2l802
  7854   001E2A                     i2l7702:
  7855                           
  7856                           ;Counter.c: 98:         counter_down_comp_flg = 0;
  7857   001E2A  0E00               	movlw	0
  7858   001E2C  6E34               	movwf	_counter_down_comp_flg^0,c
  7859   001E2E                     
  7860                           ;Counter.c: 99:         counter_down_second --;
  7861   001E2E  063F               	decf	_counter_down_second^0,f,c
  7862   001E30                     
  7863                           ;Counter.c: 100:         if( counter_down_second < 0 ) {
  7864   001E30  BE3F               	btfsc	_counter_down_second^0,7,c
  7865   001E32  EF1F  F00F         	goto	i2u552_40
  7866   001E36  EF1D  F00F         	goto	i2u552_41
  7867   001E3A                     i2u552_41:
  7868   001E3A  EF2C  F00F         	goto	i2l802
  7869   001E3E                     i2u552_40:
  7870   001E3E                     
  7871                           ;Counter.c: 101:             counter_down_second = 59;
  7872   001E3E  0E3B               	movlw	59
  7873   001E40  6E3F               	movwf	_counter_down_second^0,c
  7874   001E42                     
  7875                           ;Counter.c: 102:             counter_down_minute --;
  7876   001E42  0640               	decf	_counter_down_minute^0,f,c
  7877   001E44                     
  7878                           ;Counter.c: 103:             if( counter_down_minute < 0 ){
  7879   001E44  BE40               	btfsc	_counter_down_minute^0,7,c
  7880   001E46  EF29  F00F         	goto	i2u553_40
  7881   001E4A  EF27  F00F         	goto	i2u553_41
  7882   001E4E                     i2u553_41:
  7883   001E4E  EF2C  F00F         	goto	i2l802
  7884   001E52                     i2u553_40:
  7885   001E52                     
  7886                           ;Counter.c: 104:                 counter_down_minute = 59;
  7887   001E52  0E3B               	movlw	59
  7888   001E54  6E40               	movwf	_counter_down_minute^0,c
  7889   001E56                     
  7890                           ;Counter.c: 105:                 counter_down_hour --;
  7891   001E56  0641               	decf	_counter_down_hour^0,f,c
  7892   001E58                     i2l802:
  7893   001E58  0012               	return		;funcret
  7894   001E5A                     __end_ofi2_ScanCounter:
  7895                           	callstack 0
  7896                           
  7897 ;; *************** function ___lwdiv *****************
  7898 ;; Defined at:
  7899 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  dividend        2    0[COMRAM] unsigned int 
  7902 ;;  divisor         2    2[COMRAM] unsigned int 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  quotient        2    4[COMRAM] unsigned int 
  7905 ;;  counter         1    6[COMRAM] unsigned char 
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  2    0[COMRAM] unsigned int 
  7908 ;; Registers used:
  7909 ;;		wreg, status,2, status,0
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7915 ;;      Params:         4       0       0       0       0       0       0
  7916 ;;      Locals:         3       0       0       0       0       0       0
  7917 ;;      Temps:          0       0       0       0       0       0       0
  7918 ;;      Totals:         7       0       0       0       0       0       0
  7919 ;;Total ram usage:        7 bytes
  7920 ;; Hardware stack levels used: 1
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_high_isr
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text49
  7929   0024FE                     __ptext49:
  7930                           	callstack 0
  7931   0024FE                     ___lwdiv:
  7932                           	callstack 21
  7933   0024FE  0E00               	movlw	0
  7934   002500  6E53               	movwf	(___lwdiv@quotient+1)^0,c
  7935   002502  0E00               	movlw	0
  7936   002504  6E52               	movwf	___lwdiv@quotient^0,c
  7937   002506  5050               	movf	___lwdiv@divisor^0,w,c
  7938   002508  1051               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7939   00250A  B4D8               	btfsc	status,2,c
  7940   00250C  EF8A  F012         	goto	i2u541_41
  7941   002510  EF8C  F012         	goto	i2u541_40
  7942   002514                     i2u541_41:
  7943   002514  EFB4  F012         	goto	i2l2430
  7944   002518                     i2u541_40:
  7945   002518  0E01               	movlw	1
  7946   00251A  6E54               	movwf	___lwdiv@counter^0,c
  7947   00251C  EF94  F012         	goto	i2l7654
  7948   002520                     i2l7652:
  7949   002520  90D8               	bcf	status,0,c
  7950   002522  3650               	rlcf	___lwdiv@divisor^0,f,c
  7951   002524  3651               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7952   002526  2A54               	incf	___lwdiv@counter^0,f,c
  7953   002528                     i2l7654:
  7954   002528  AE51               	btfss	(___lwdiv@divisor+1)^0,7,c
  7955   00252A  EF99  F012         	goto	i2u542_41
  7956   00252E  EF9B  F012         	goto	i2u542_40
  7957   002532                     i2u542_41:
  7958   002532  EF90  F012         	goto	i2l7652
  7959   002536                     i2u542_40:
  7960   002536                     i2l7656:
  7961   002536  90D8               	bcf	status,0,c
  7962   002538  3652               	rlcf	___lwdiv@quotient^0,f,c
  7963   00253A  3653               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7964   00253C  5050               	movf	___lwdiv@divisor^0,w,c
  7965   00253E  5C4E               	subwf	___lwdiv@dividend^0,w,c
  7966   002540  5051               	movf	(___lwdiv@divisor+1)^0,w,c
  7967   002542  584F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7968   002544  A0D8               	btfss	status,0,c
  7969   002546  EFA7  F012         	goto	i2u543_41
  7970   00254A  EFA9  F012         	goto	i2u543_40
  7971   00254E                     i2u543_41:
  7972   00254E  EFAE  F012         	goto	i2l7664
  7973   002552                     i2u543_40:
  7974   002552  5050               	movf	___lwdiv@divisor^0,w,c
  7975   002554  5E4E               	subwf	___lwdiv@dividend^0,f,c
  7976   002556  5051               	movf	(___lwdiv@divisor+1)^0,w,c
  7977   002558  5A4F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7978   00255A  8052               	bsf	___lwdiv@quotient^0,0,c
  7979   00255C                     i2l7664:
  7980   00255C  90D8               	bcf	status,0,c
  7981   00255E  3251               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7982   002560  3250               	rrcf	___lwdiv@divisor^0,f,c
  7983   002562  2E54               	decfsz	___lwdiv@counter^0,f,c
  7984   002564  EF9B  F012         	goto	i2l7656
  7985   002568                     i2l2430:
  7986   002568  C052  F04E         	movff	___lwdiv@quotient,?___lwdiv
  7987   00256C  C053  F04F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7988   002570  0012               	return		;funcret
  7989   002572                     __end_of___lwdiv:
  7990                           	callstack 0
  7991                           
  7992 ;; *************** function _ScanDisplay *****************
  7993 ;; Defined at:
  7994 ;;		line 35 in file "Display.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;		None
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;  temp            1    8[COMRAM] unsigned char 
  7999 ;; Return value:  Size  Location     Type
  8000 ;;                  1    wreg      void 
  8001 ;; Registers used:
  8002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8003 ;; Tracked objects:
  8004 ;;		On entry : 0/0
  8005 ;;		On exit  : 0/0
  8006 ;;		Unchanged: 0/0
  8007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8008 ;;      Params:         0       0       0       0       0       0       0
  8009 ;;      Locals:         1       0       0       0       0       0       0
  8010 ;;      Temps:          4       0       0       0       0       0       0
  8011 ;;      Totals:         5       0       0       0       0       0       0
  8012 ;;Total ram usage:        5 bytes
  8013 ;; Hardware stack levels used: 1
  8014 ;; Hardware stack levels required when called: 1
  8015 ;; This function calls:
  8016 ;;		_M74HC595Write
  8017 ;; This function is called by:
  8018 ;;		_high_isr
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           	psect	text50
  8023   00179E                     __ptext50:
  8024                           	callstack 0
  8025   00179E                     _ScanDisplay:
  8026                           	callstack 20
  8027   00179E  908A               	bcf	138,0,c	;volatile
  8028   0017A0  9E8C               	bcf	140,7,c	;volatile
  8029                           
  8030                           ;Display.c: 37:     unsigned char temp;;Display.c: 38:     LATCbits.LATC2 = LATCbits.LAT
      +                          C1 = LATCbits.LATC0 = LATCbits.LATC5 = LATBbits.LATB1 = LATBbits.LATB5 = LATDbits.LATD7 
      +                          = LATBbits.LATB0 = 0;
  8031   0017A2  9A8A               	bcf	138,5,c	;volatile
  8032   0017A4  928A               	bcf	138,1,c	;volatile
  8033   0017A6  9A8B               	bcf	139,5,c	;volatile
  8034   0017A8  908B               	bcf	139,0,c	;volatile
  8035   0017AA  928B               	bcf	139,1,c	;volatile
  8036   0017AC  948B               	bcf	139,2,c	;volatile
  8037   0017AE                     
  8038                           ;Display.c: 39:     display_cnt ++;
  8039   0017AE  2A31               	incf	_display_cnt^0,f,c
  8040   0017B0                     
  8041                           ;Display.c: 40:     temp = display_datas[ display_cnt - 1 ];
  8042   0017B0  0E87               	movlw	low (_display_datas+65535)
  8043   0017B2  2431               	addwf	_display_cnt^0,w,c
  8044   0017B4  6ED9               	movwf	fsr2l,c
  8045   0017B6  6ADA               	clrf	fsr2h,c
  8046   0017B8  0E00               	movlw	high (_display_datas+65535)
  8047   0017BA  22DA               	addwfc	fsr2h,f,c
  8048   0017BC  50DF               	movf	indf2,w,c
  8049   0017BE  6E56               	movwf	ScanDisplay@temp^0,c
  8050   0017C0                     
  8051                           ;Display.c: 42:     if( blink_pos[ display_cnt - 1 ] && blink_cnt < BLINK_TIME / 2 ) tem
      +                          p = 0xff;
  8052   0017C0  0E7F               	movlw	low (_blink_pos+65535)
  8053   0017C2  2431               	addwf	_display_cnt^0,w,c
  8054   0017C4  6ED9               	movwf	fsr2l,c
  8055   0017C6  6ADA               	clrf	fsr2h,c
  8056   0017C8  0E00               	movlw	high (_blink_pos+65535)
  8057   0017CA  22DA               	addwfc	fsr2h,f,c
  8058   0017CC  50DF               	movf	indf2,w,c
  8059   0017CE  B4D8               	btfsc	status,2,c
  8060   0017D0  EFEC  F00B         	goto	i2u517_41
  8061   0017D4  EFEE  F00B         	goto	i2u517_40
  8062   0017D8                     i2u517_41:
  8063   0017D8  EF02  F00C         	goto	i2l7314
  8064   0017DC                     i2u517_40:
  8065   0017DC  90D8               	bcf	status,0,c
  8066   0017DE  3017               	rrcf	(_BLINK_TIME+1)^0,w,c
  8067   0017E0  6E53               	movwf	(??_ScanDisplay+1)^0,c
  8068   0017E2  3016               	rrcf	_BLINK_TIME^0,w,c
  8069   0017E4  6E52               	movwf	??_ScanDisplay^0,c
  8070   0017E6  5030               	movf	_blink_cnt^0,w,c
  8071   0017E8  6E54               	movwf	(??_ScanDisplay+2)^0,c
  8072   0017EA  6A55               	clrf	(??_ScanDisplay+3)^0,c
  8073   0017EC  5052               	movf	??_ScanDisplay^0,w,c
  8074   0017EE  5C54               	subwf	(??_ScanDisplay+2)^0,w,c
  8075   0017F0  5053               	movf	(??_ScanDisplay+1)^0,w,c
  8076   0017F2  5855               	subwfb	(??_ScanDisplay+3)^0,w,c
  8077   0017F4  B0D8               	btfsc	status,0,c
  8078   0017F6  EFFF  F00B         	goto	i2u518_41
  8079   0017FA  EF01  F00C         	goto	i2u518_40
  8080   0017FE                     i2u518_41:
  8081   0017FE  EF02  F00C         	goto	i2l7314
  8082   001802                     i2u518_40:
  8083   001802  6856               	setf	ScanDisplay@temp^0,c
  8084   001804                     i2l7314:
  8085                           
  8086                           ;Display.c: 43:     M74HC595Write(temp);
  8087   001804  5056               	movf	ScanDisplay@temp^0,w,c
  8088   001806  ECEB  F012         	call	_M74HC595Write
  8089                           
  8090                           ;Display.c: 44:     switch( display_cnt ){
  8091   00180A  EF22  F00C         	goto	i2l7322
  8092   00180E                     i2l905:
  8093   00180E  848B               	bsf	139,2,c	;volatile
  8094   001810  EF4F  F00C         	goto	i2l7324
  8095   001814                     i2l907:
  8096   001814  828B               	bsf	139,1,c	;volatile
  8097   001816  EF4F  F00C         	goto	i2l7324
  8098   00181A                     i2l908:
  8099   00181A  808B               	bsf	139,0,c	;volatile
  8100   00181C  EF4F  F00C         	goto	i2l7324
  8101   001820                     i2l909:
  8102   001820  8A8B               	bsf	139,5,c	;volatile
  8103   001822  EF4F  F00C         	goto	i2l7324
  8104   001826                     i2l910:
  8105   001826  828A               	bsf	138,1,c	;volatile
  8106   001828  EF4F  F00C         	goto	i2l7324
  8107   00182C                     i2l911:
  8108   00182C  8A8A               	bsf	138,5,c	;volatile
  8109   00182E  EF4F  F00C         	goto	i2l7324
  8110   001832                     i2l912:
  8111   001832  8E8C               	bsf	140,7,c	;volatile
  8112   001834  EF4F  F00C         	goto	i2l7324
  8113   001838                     i2l913:
  8114   001838  808A               	bsf	138,0,c	;volatile
  8115   00183A  0E00               	movlw	0
  8116   00183C  6E31               	movwf	_display_cnt^0,c
  8117   00183E  2A30               	incf	_blink_cnt^0,f,c
  8118   001840  EF4F  F00C         	goto	i2l7324
  8119   001844                     i2l7322:
  8120   001844  5031               	movf	_display_cnt^0,w,c
  8121   001846  6E52               	movwf	??_ScanDisplay^0,c
  8122   001848  6A53               	clrf	(??_ScanDisplay+1)^0,c
  8123                           
  8124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8125                           ; Switch size 1, requested type "simple"
  8126                           ; Number of cases is 1, Range of values is 0 to 0
  8127                           ; switch strategies available:
  8128                           ; Name         Instructions Cycles
  8129                           ; simple_byte            4     3 (average)
  8130                           ;	Chosen strategy is simple_byte
  8131   00184A  5053               	movf	(??_ScanDisplay+1)^0,w,c
  8132   00184C  0A00               	xorlw	0	; case 0
  8133   00184E  B4D8               	btfsc	status,2,c
  8134   001850  EF2C  F00C         	goto	i2l9958
  8135   001854  EF4F  F00C         	goto	i2l7324
  8136   001858                     i2l9958:
  8137                           
  8138                           ; Switch size 1, requested type "simple"
  8139                           ; Number of cases is 8, Range of values is 1 to 8
  8140                           ; switch strategies available:
  8141                           ; Name         Instructions Cycles
  8142                           ; simple_byte           25    13 (average)
  8143                           ;	Chosen strategy is simple_byte
  8144   001858  5052               	movf	??_ScanDisplay^0,w,c
  8145   00185A  0A01               	xorlw	1	; case 1
  8146   00185C  B4D8               	btfsc	status,2,c
  8147   00185E  EF07  F00C         	goto	i2l905
  8148   001862  0A03               	xorlw	3	; case 2
  8149   001864  B4D8               	btfsc	status,2,c
  8150   001866  EF0A  F00C         	goto	i2l907
  8151   00186A  0A01               	xorlw	1	; case 3
  8152   00186C  B4D8               	btfsc	status,2,c
  8153   00186E  EF0D  F00C         	goto	i2l908
  8154   001872  0A07               	xorlw	7	; case 4
  8155   001874  B4D8               	btfsc	status,2,c
  8156   001876  EF10  F00C         	goto	i2l909
  8157   00187A  0A01               	xorlw	1	; case 5
  8158   00187C  B4D8               	btfsc	status,2,c
  8159   00187E  EF13  F00C         	goto	i2l910
  8160   001882  0A03               	xorlw	3	; case 6
  8161   001884  B4D8               	btfsc	status,2,c
  8162   001886  EF16  F00C         	goto	i2l911
  8163   00188A  0A01               	xorlw	1	; case 7
  8164   00188C  B4D8               	btfsc	status,2,c
  8165   00188E  EF19  F00C         	goto	i2l912
  8166   001892  0A0F               	xorlw	15	; case 8
  8167   001894  B4D8               	btfsc	status,2,c
  8168   001896  EF1C  F00C         	goto	i2l913
  8169   00189A  EF4F  F00C         	goto	i2l7324
  8170   00189E                     i2l7324:
  8171                           
  8172                           ;Display.c: 55:     if( blink_cnt == BLINK_TIME ) {
  8173   00189E  5030               	movf	_blink_cnt^0,w,c
  8174   0018A0  6E52               	movwf	??_ScanDisplay^0,c
  8175   0018A2  6A53               	clrf	(??_ScanDisplay+1)^0,c
  8176   0018A4  5016               	movf	_BLINK_TIME^0,w,c
  8177   0018A6  1852               	xorwf	??_ScanDisplay^0,w,c
  8178   0018A8  E107               	bnz	i2u519_41
  8179   0018AA  5017               	movf	(_BLINK_TIME+1)^0,w,c
  8180   0018AC  1853               	xorwf	(??_ScanDisplay+1)^0,w,c
  8181   0018AE  A4D8               	btfss	status,2,c
  8182   0018B0  EF5C  F00C         	goto	i2u519_41
  8183   0018B4  EF5E  F00C         	goto	i2u519_40
  8184   0018B8                     i2u519_41:
  8185   0018B8  EF81  F00C         	goto	i2l917
  8186   0018BC                     i2u519_40:
  8187   0018BC                     
  8188                           ;Display.c: 56:         blink_cnt = 0;
  8189   0018BC  0E00               	movlw	0
  8190   0018BE  6E30               	movwf	_blink_cnt^0,c
  8191                           
  8192                           ;Display.c: 57:         if( counter_down_comp_flg ) counter_down_comp_cnt ++;
  8193   0018C0  5034               	movf	_counter_down_comp_flg^0,w,c
  8194   0018C2  B4D8               	btfsc	status,2,c
  8195   0018C4  EF66  F00C         	goto	i2u520_41
  8196   0018C8  EF68  F00C         	goto	i2u520_40
  8197   0018CC                     i2u520_41:
  8198   0018CC  EF69  F00C         	goto	i2l7330
  8199   0018D0                     i2u520_40:
  8200   0018D0  2A33               	incf	_counter_down_comp_cnt^0,f,c
  8201   0018D2                     i2l7330:
  8202                           
  8203                           ;Display.c: 58:         if( counter_down_comp_cnt > 15 && counter_down_comp_flg ) {
  8204   0018D2  0E0F               	movlw	15
  8205   0018D4  6433               	cpfsgt	_counter_down_comp_cnt^0,c
  8206   0018D6  EF6F  F00C         	goto	i2u521_41
  8207   0018DA  EF71  F00C         	goto	i2u521_40
  8208   0018DE                     i2u521_41:
  8209   0018DE  EF81  F00C         	goto	i2l917
  8210   0018E2                     i2u521_40:
  8211   0018E2  5034               	movf	_counter_down_comp_flg^0,w,c
  8212   0018E4  B4D8               	btfsc	status,2,c
  8213   0018E6  EF77  F00C         	goto	i2u522_41
  8214   0018EA  EF79  F00C         	goto	i2u522_40
  8215   0018EE                     i2u522_41:
  8216   0018EE  EF81  F00C         	goto	i2l917
  8217   0018F2                     i2u522_40:
  8218   0018F2                     
  8219                           ;Display.c: 59:             counter_down_comp_flg = 0; blink_enable_flg = 0; counter_dow
      +                          n_comp_cnt = 12;
  8220   0018F2  0E00               	movlw	0
  8221   0018F4  6E34               	movwf	_counter_down_comp_flg^0,c
  8222   0018F6  0E00               	movlw	0
  8223   0018F8  6E32               	movwf	_blink_enable_flg^0,c
  8224   0018FA  0E0C               	movlw	12
  8225   0018FC  6E33               	movwf	_counter_down_comp_cnt^0,c
  8226                           
  8227                           ;Display.c: 60:             SYSTEM_STATE_FLG = 203;
  8228   0018FE  0ECB               	movlw	203
  8229   001900  6E6E               	movwf	_SYSTEM_STATE_FLG^0,c
  8230   001902                     i2l917:
  8231   001902  0012               	return		;funcret
  8232   001904                     __end_of_ScanDisplay:
  8233                           	callstack 0
  8234                           
  8235 ;; *************** function _M74HC595Write *****************
  8236 ;; Defined at:
  8237 ;;		line 31 in file "M74HC595.c"
  8238 ;; Parameters:    Size  Location     Type
  8239 ;;  data            1    wreg     unsigned char 
  8240 ;; Auto vars:     Size  Location     Type
  8241 ;;  data            1    1[COMRAM] unsigned char 
  8242 ;;  i               1    3[COMRAM] unsigned char 
  8243 ;;  temp            1    2[COMRAM] unsigned char 
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  1    wreg      void 
  8246 ;; Registers used:
  8247 ;;		wreg, status,2, status,0
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8253 ;;      Params:         0       0       0       0       0       0       0
  8254 ;;      Locals:         3       0       0       0       0       0       0
  8255 ;;      Temps:          1       0       0       0       0       0       0
  8256 ;;      Totals:         4       0       0       0       0       0       0
  8257 ;;Total ram usage:        4 bytes
  8258 ;; Hardware stack levels used: 1
  8259 ;; This function calls:
  8260 ;;		Nothing
  8261 ;; This function is called by:
  8262 ;;		_ScanDisplay
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text51
  8267   0025D6                     __ptext51:
  8268                           	callstack 0
  8269   0025D6                     _M74HC595Write:
  8270                           	callstack 20
  8271                           
  8272                           ;incstack = 0
  8273                           ;M74HC595Write@data stored from wreg
  8274   0025D6  6E4F               	movwf	M74HC595Write@data^0,c
  8275   0025D8                     
  8276                           ;M74HC595.c: 34:     unsigned char temp = data;
  8277   0025D8  C04F  F050         	movff	M74HC595Write@data,M74HC595Write@temp
  8278   0025DC                     
  8279                           ;M74HC595.c: 35:     PORTAbits.RA0 = 0;
  8280   0025DC  9080               	bcf	128,0,c	;volatile
  8281   0025DE                     
  8282                           ;M74HC595.c: 36:     for( unsigned char i = 0; i < 8; i++ ){
  8283   0025DE  0E00               	movlw	0
  8284   0025E0  6E51               	movwf	M74HC595Write@i^0,c
  8285   0025E2                     i2l6546:
  8286                           
  8287                           ;M74HC595.c: 37:         PORTAbits.RA0 = (temp & 0x80) ? 1 : 0; _delay((unsigned long)((
      +                          1)*(32000000UL/4000000.0)));
  8288   0025E2  BE50               	btfsc	M74HC595Write@temp^0,7,c
  8289   0025E4  EFF6  F012         	goto	i2u427_41
  8290   0025E8  EFFA  F012         	goto	i2u427_40
  8291   0025EC                     i2u427_41:
  8292   0025EC  6A4E               	clrf	??_M74HC595Write^0,c
  8293   0025EE  2A4E               	incf	??_M74HC595Write^0,f,c
  8294   0025F0  EFFB  F012         	goto	i2u428_48
  8295   0025F4                     i2u427_40:
  8296   0025F4  6A4E               	clrf	??_M74HC595Write^0,c
  8297   0025F6                     i2u428_48:
  8298   0025F6  5080               	movf	128,w,c	;volatile
  8299   0025F8  184E               	xorwf	??_M74HC595Write^0,w,c
  8300   0025FA  0BFE               	andlw	-2
  8301   0025FC  184E               	xorwf	??_M74HC595Write^0,w,c
  8302   0025FE  6E80               	movwf	128,c	;volatile
  8303   002600  D000               	nop2		;2 cycle nop
  8304   002602  D000               	nop2		;2 cycle nop
  8305   002604  D000               	nop2		;2 cycle nop
  8306   002606  D000               	nop2		;2 cycle nop
  8307   002608                     
  8308                           ;M74HC595.c: 38:         PORTAbits.RA1 = 1; __nop(); PORTAbits.RA1 = 0; __nop();
  8309   002608  8280               	bsf	128,1,c	;volatile
  8310   00260A  F000               	nop	
  8311   00260C  9280               	bcf	128,1,c	;volatile
  8312   00260E  F000               	nop	
  8313                           
  8314                           ;M74HC595.c: 39:         temp = (unsigned char) ( temp << 1 );
  8315   002610  5050               	movf	M74HC595Write@temp^0,w,c
  8316   002612  2450               	addwf	M74HC595Write@temp^0,w,c
  8317   002614  6E50               	movwf	M74HC595Write@temp^0,c
  8318   002616                     
  8319                           ;M74HC595.c: 40:     }
  8320   002616  2A51               	incf	M74HC595Write@i^0,f,c
  8321   002618  0E07               	movlw	7
  8322   00261A  6451               	cpfsgt	M74HC595Write@i^0,c
  8323   00261C  EF12  F013         	goto	i2u429_41
  8324   002620  EF14  F013         	goto	i2u429_40
  8325   002624                     i2u429_41:
  8326   002624  EFF1  F012         	goto	i2l6546
  8327   002628                     i2u429_40:
  8328   002628                     
  8329                           ;M74HC595.c: 41:     PORTAbits.RA3 = 1; __nop(); PORTAbits.RA3 = 0; __nop();
  8330   002628  8680               	bsf	128,3,c	;volatile
  8331   00262A  F000               	nop	
  8332   00262C  9680               	bcf	128,3,c	;volatile
  8333   00262E  F000               	nop	
  8334   002630  0012               	return		;funcret
  8335   002632                     __end_of_M74HC595Write:
  8336                           	callstack 0
  8337                           
  8338 ;; *************** function _ScanButtons *****************
  8339 ;; Defined at:
  8340 ;;		line 28 in file "Buttons.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;		None
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;		None
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  1    wreg      void 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2, status,0
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8354 ;;      Params:         0       0       0       0       0       0       0
  8355 ;;      Locals:         0       0       0       0       0       0       0
  8356 ;;      Temps:          0       0       0       0       0       0       0
  8357 ;;      Totals:         0       0       0       0       0       0       0
  8358 ;;Total ram usage:        0 bytes
  8359 ;; Hardware stack levels used: 1
  8360 ;; This function calls:
  8361 ;;		Nothing
  8362 ;; This function is called by:
  8363 ;;		_high_isr
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           	psect	text52
  8368   0014B0                     __ptext52:
  8369                           	callstack 0
  8370   0014B0                     _ScanButtons:
  8371                           	callstack 21
  8372   0014B0                     
  8373                           ;Buttons.c: 30:     if( PORTAbits.RA7 == 0 ) { hour_btn_released_cnt = 0; hour_btn_press
      +                          ed_cnt ++; BTN_CLICK_EVENT = 1; }
  8374   0014B0  BE80               	btfsc	128,7,c	;volatile
  8375   0014B2  EF5D  F00A         	goto	i2u523_41
  8376   0014B6  EF5F  F00A         	goto	i2u523_40
  8377   0014BA                     i2u523_41:
  8378   0014BA  EF68  F00A         	goto	i2l7348
  8379   0014BE                     i2u523_40:
  8380   0014BE  0E00               	movlw	0
  8381   0014C0  0100               	movlb	0	; () banked
  8382   0014C2  6FC5               	movwf	(_hour_btn_released_cnt+1)& (0+255),b
  8383   0014C4  0E00               	movlw	0
  8384   0014C6  6FC4               	movwf	_hour_btn_released_cnt& (0+255),b
  8385   0014C8                     
  8386                           ; BSR set to: 0
  8387   0014C8  4A14               	infsnz	_hour_btn_pressed_cnt^0,f,c
  8388   0014CA  2A15               	incf	(_hour_btn_pressed_cnt+1)^0,f,c
  8389   0014CC                     
  8390                           ; BSR set to: 0
  8391   0014CC  0E01               	movlw	1
  8392   0014CE  6E2E               	movwf	_BTN_CLICK_EVENT^0,c
  8393   0014D0                     i2l7348:
  8394                           
  8395                           ;Buttons.c: 31:     if( PORTAbits.RA7 == 1 && BTN_CLICK_EVENT == 1 ){ hour_btn_pressed_c
      +                          nt = 0; hour_btn_released_cnt ++; }
  8396   0014D0  AE80               	btfss	128,7,c	;volatile
  8397   0014D2  EF6D  F00A         	goto	i2u524_41
  8398   0014D6  EF6F  F00A         	goto	i2u524_40
  8399   0014DA                     i2u524_41:
  8400   0014DA  EF7E  F00A         	goto	i2l7356
  8401   0014DE                     i2u524_40:
  8402   0014DE  042E               	decf	_BTN_CLICK_EVENT^0,w,c
  8403   0014E0  A4D8               	btfss	status,2,c
  8404   0014E2  EF75  F00A         	goto	i2u525_41
  8405   0014E6  EF77  F00A         	goto	i2u525_40
  8406   0014EA                     i2u525_41:
  8407   0014EA  EF7E  F00A         	goto	i2l7356
  8408   0014EE                     i2u525_40:
  8409   0014EE  0E00               	movlw	0
  8410   0014F0  6E15               	movwf	(_hour_btn_pressed_cnt+1)^0,c
  8411   0014F2  0E00               	movlw	0
  8412   0014F4  6E14               	movwf	_hour_btn_pressed_cnt^0,c
  8413   0014F6  0100               	movlb	0	; () banked
  8414   0014F8  4BC4               	infsnz	_hour_btn_released_cnt& (0+255),f,b
  8415   0014FA  2BC5               	incf	(_hour_btn_released_cnt+1)& (0+255),f,b
  8416   0014FC                     i2l7356:
  8417                           
  8418                           ;Buttons.c: 33:     if( PORTAbits.RA4 == 0 ) { up_btn_released_cnt = 0; up_btn_pressed_c
      +                          nt ++; BTN_CLICK_EVENT = 2; }
  8419   0014FC  B880               	btfsc	128,4,c	;volatile
  8420   0014FE  EF83  F00A         	goto	i2u526_41
  8421   001502  EF85  F00A         	goto	i2u526_40
  8422   001506                     i2u526_41:
  8423   001506  EF8E  F00A         	goto	i2l7364
  8424   00150A                     i2u526_40:
  8425   00150A  0E00               	movlw	0
  8426   00150C  0100               	movlb	0	; () banked
  8427   00150E  6FC3               	movwf	(_up_btn_released_cnt+1)& (0+255),b
  8428   001510  0E00               	movlw	0
  8429   001512  6FC2               	movwf	_up_btn_released_cnt& (0+255),b
  8430   001514                     
  8431                           ; BSR set to: 0
  8432   001514  4A12               	infsnz	_up_btn_pressed_cnt^0,f,c
  8433   001516  2A13               	incf	(_up_btn_pressed_cnt+1)^0,f,c
  8434   001518                     
  8435                           ; BSR set to: 0
  8436   001518  0E02               	movlw	2
  8437   00151A  6E2E               	movwf	_BTN_CLICK_EVENT^0,c
  8438   00151C                     i2l7364:
  8439                           
  8440                           ;Buttons.c: 34:     if( PORTAbits.RA4 == 1 && BTN_CLICK_EVENT == 2 ){ up_btn_pressed_cnt
      +                           = 0; up_btn_released_cnt ++; }
  8441   00151C  A880               	btfss	128,4,c	;volatile
  8442   00151E  EF93  F00A         	goto	i2u527_41
  8443   001522  EF95  F00A         	goto	i2u527_40
  8444   001526                     i2u527_41:
  8445   001526  EFA5  F00A         	goto	i2l7372
  8446   00152A                     i2u527_40:
  8447   00152A  0E02               	movlw	2
  8448   00152C  182E               	xorwf	_BTN_CLICK_EVENT^0,w,c
  8449   00152E  A4D8               	btfss	status,2,c
  8450   001530  EF9C  F00A         	goto	i2u528_41
  8451   001534  EF9E  F00A         	goto	i2u528_40
  8452   001538                     i2u528_41:
  8453   001538  EFA5  F00A         	goto	i2l7372
  8454   00153C                     i2u528_40:
  8455   00153C  0E00               	movlw	0
  8456   00153E  6E13               	movwf	(_up_btn_pressed_cnt+1)^0,c
  8457   001540  0E00               	movlw	0
  8458   001542  6E12               	movwf	_up_btn_pressed_cnt^0,c
  8459   001544  0100               	movlb	0	; () banked
  8460   001546  4BC2               	infsnz	_up_btn_released_cnt& (0+255),f,b
  8461   001548  2BC3               	incf	(_up_btn_released_cnt+1)& (0+255),f,b
  8462   00154A                     i2l7372:
  8463                           
  8464                           ;Buttons.c: 36:     if( PORTAbits.RA6 == 0 ) { down_btn_released_cnt = 0; down_btn_press
      +                          ed_cnt ++; BTN_CLICK_EVENT = 3; }
  8465   00154A  BC80               	btfsc	128,6,c	;volatile
  8466   00154C  EFAA  F00A         	goto	i2u529_41
  8467   001550  EFAC  F00A         	goto	i2u529_40
  8468   001554                     i2u529_41:
  8469   001554  EFB5  F00A         	goto	i2l7380
  8470   001558                     i2u529_40:
  8471   001558  0E00               	movlw	0
  8472   00155A  0100               	movlb	0	; () banked
  8473   00155C  6FC1               	movwf	(_down_btn_released_cnt+1)& (0+255),b
  8474   00155E  0E00               	movlw	0
  8475   001560  6FC0               	movwf	_down_btn_released_cnt& (0+255),b
  8476   001562                     
  8477                           ; BSR set to: 0
  8478   001562  4A10               	infsnz	_down_btn_pressed_cnt^0,f,c
  8479   001564  2A11               	incf	(_down_btn_pressed_cnt+1)^0,f,c
  8480   001566                     
  8481                           ; BSR set to: 0
  8482   001566  0E03               	movlw	3
  8483   001568  6E2E               	movwf	_BTN_CLICK_EVENT^0,c
  8484   00156A                     i2l7380:
  8485                           
  8486                           ;Buttons.c: 37:     if( PORTAbits.RA6 == 1 && BTN_CLICK_EVENT == 3 ){ down_btn_pressed_c
      +                          nt = 0; down_btn_released_cnt ++; }
  8487   00156A  AC80               	btfss	128,6,c	;volatile
  8488   00156C  EFBA  F00A         	goto	i2u530_41
  8489   001570  EFBC  F00A         	goto	i2u530_40
  8490   001574                     i2u530_41:
  8491   001574  EFCC  F00A         	goto	i2l7388
  8492   001578                     i2u530_40:
  8493   001578  0E03               	movlw	3
  8494   00157A  182E               	xorwf	_BTN_CLICK_EVENT^0,w,c
  8495   00157C  A4D8               	btfss	status,2,c
  8496   00157E  EFC3  F00A         	goto	i2u531_41
  8497   001582  EFC5  F00A         	goto	i2u531_40
  8498   001586                     i2u531_41:
  8499   001586  EFCC  F00A         	goto	i2l7388
  8500   00158A                     i2u531_40:
  8501   00158A  0E00               	movlw	0
  8502   00158C  6E11               	movwf	(_down_btn_pressed_cnt+1)^0,c
  8503   00158E  0E00               	movlw	0
  8504   001590  6E10               	movwf	_down_btn_pressed_cnt^0,c
  8505   001592  0100               	movlb	0	; () banked
  8506   001594  4BC0               	infsnz	_down_btn_released_cnt& (0+255),f,b
  8507   001596  2BC1               	incf	(_down_btn_released_cnt+1)& (0+255),f,b
  8508   001598                     i2l7388:
  8509                           
  8510                           ;Buttons.c: 39:     if( PORTBbits.RB4 == 0 ) { sel_btn_released_cnt = 0; sel_btn_pressed
      +                          _cnt ++; BTN_CLICK_EVENT = 4; }
  8511   001598  B881               	btfsc	129,4,c	;volatile
  8512   00159A  EFD1  F00A         	goto	i2u532_41
  8513   00159E  EFD3  F00A         	goto	i2u532_40
  8514   0015A2                     i2u532_41:
  8515   0015A2  EFDC  F00A         	goto	i2l7396
  8516   0015A6                     i2u532_40:
  8517   0015A6  0E00               	movlw	0
  8518   0015A8  0100               	movlb	0	; () banked
  8519   0015AA  6FBF               	movwf	(_sel_btn_released_cnt+1)& (0+255),b
  8520   0015AC  0E00               	movlw	0
  8521   0015AE  6FBE               	movwf	_sel_btn_released_cnt& (0+255),b
  8522   0015B0                     
  8523                           ; BSR set to: 0
  8524   0015B0  4A0E               	infsnz	_sel_btn_pressed_cnt^0,f,c
  8525   0015B2  2A0F               	incf	(_sel_btn_pressed_cnt+1)^0,f,c
  8526   0015B4                     
  8527                           ; BSR set to: 0
  8528   0015B4  0E04               	movlw	4
  8529   0015B6  6E2E               	movwf	_BTN_CLICK_EVENT^0,c
  8530   0015B8                     i2l7396:
  8531                           
  8532                           ;Buttons.c: 40:     if( PORTBbits.RB4 == 1 && BTN_CLICK_EVENT == 4 ){ sel_btn_pressed_cn
      +                          t = 0; sel_btn_released_cnt ++; }
  8533   0015B8  A881               	btfss	129,4,c	;volatile
  8534   0015BA  EFE1  F00A         	goto	i2u533_41
  8535   0015BE  EFE3  F00A         	goto	i2u533_40
  8536   0015C2                     i2u533_41:
  8537   0015C2  EFF3  F00A         	goto	i2l7404
  8538   0015C6                     i2u533_40:
  8539   0015C6  0E04               	movlw	4
  8540   0015C8  182E               	xorwf	_BTN_CLICK_EVENT^0,w,c
  8541   0015CA  A4D8               	btfss	status,2,c
  8542   0015CC  EFEA  F00A         	goto	i2u534_41
  8543   0015D0  EFEC  F00A         	goto	i2u534_40
  8544   0015D4                     i2u534_41:
  8545   0015D4  EFF3  F00A         	goto	i2l7404
  8546   0015D8                     i2u534_40:
  8547   0015D8  0E00               	movlw	0
  8548   0015DA  6E0F               	movwf	(_sel_btn_pressed_cnt+1)^0,c
  8549   0015DC  0E00               	movlw	0
  8550   0015DE  6E0E               	movwf	_sel_btn_pressed_cnt^0,c
  8551   0015E0  0100               	movlb	0	; () banked
  8552   0015E2  4BBE               	infsnz	_sel_btn_released_cnt& (0+255),f,b
  8553   0015E4  2BBF               	incf	(_sel_btn_released_cnt+1)& (0+255),f,b
  8554   0015E6                     i2l7404:
  8555                           
  8556                           ;Buttons.c: 42:     if( PORTDbits.RD6 == 0 ) { reset_btn_released_cnt = 0; reset_btn_pre
      +                          ssed_cnt ++; BTN_CLICK_EVENT = 5; }
  8557   0015E6  BC83               	btfsc	131,6,c	;volatile
  8558   0015E8  EFF8  F00A         	goto	i2u535_41
  8559   0015EC  EFFA  F00A         	goto	i2u535_40
  8560   0015F0                     i2u535_41:
  8561   0015F0  EF03  F00B         	goto	i2l7412
  8562   0015F4                     i2u535_40:
  8563   0015F4  0E00               	movlw	0
  8564   0015F6  0100               	movlb	0	; () banked
  8565   0015F8  6FBD               	movwf	(_reset_btn_released_cnt+1)& (0+255),b
  8566   0015FA  0E00               	movlw	0
  8567   0015FC  6FBC               	movwf	_reset_btn_released_cnt& (0+255),b
  8568   0015FE                     
  8569                           ; BSR set to: 0
  8570   0015FE  4A0C               	infsnz	_reset_btn_pressed_cnt^0,f,c
  8571   001600  2A0D               	incf	(_reset_btn_pressed_cnt+1)^0,f,c
  8572   001602                     
  8573                           ; BSR set to: 0
  8574   001602  0E05               	movlw	5
  8575   001604  6E2E               	movwf	_BTN_CLICK_EVENT^0,c
  8576   001606                     i2l7412:
  8577                           
  8578                           ;Buttons.c: 43:     if( PORTDbits.RD6 == 1 && BTN_CLICK_EVENT == 5 ){ reset_btn_pressed_
      +                          cnt = 0; reset_btn_released_cnt ++; }
  8579   001606  AC83               	btfss	131,6,c	;volatile
  8580   001608  EF08  F00B         	goto	i2u536_41
  8581   00160C  EF0A  F00B         	goto	i2u536_40
  8582   001610                     i2u536_41:
  8583   001610  EF1A  F00B         	goto	i2l1129
  8584   001614                     i2u536_40:
  8585   001614  0E05               	movlw	5
  8586   001616  182E               	xorwf	_BTN_CLICK_EVENT^0,w,c
  8587   001618  A4D8               	btfss	status,2,c
  8588   00161A  EF11  F00B         	goto	i2u537_41
  8589   00161E  EF13  F00B         	goto	i2u537_40
  8590   001622                     i2u537_41:
  8591   001622  EF1A  F00B         	goto	i2l1129
  8592   001626                     i2u537_40:
  8593   001626  0E00               	movlw	0
  8594   001628  6E0D               	movwf	(_reset_btn_pressed_cnt+1)^0,c
  8595   00162A  0E00               	movlw	0
  8596   00162C  6E0C               	movwf	_reset_btn_pressed_cnt^0,c
  8597   00162E  0100               	movlb	0	; () banked
  8598   001630  4BBC               	infsnz	_reset_btn_released_cnt& (0+255),f,b
  8599   001632  2BBD               	incf	(_reset_btn_released_cnt+1)& (0+255),f,b
  8600   001634                     i2l1129:
  8601   001634  0012               	return		;funcret
  8602   001636                     __end_of_ScanButtons:
  8603                           	callstack 0
  8604                           
  8605                           	psect	rparam
  8606   000000                     
  8607                           	psect	temp
  8608   00006F                     btemp:
  8609                           	callstack 0
  8610   00006F                     	ds	1
  8611   000000                     int$flags	set	btemp
  8612   000000                     wtemp8	set	btemp+1
  8613   000000                     ttemp5	set	btemp+1
  8614   000000                     ttemp6	set	btemp+4
  8615   000000                     ttemp7	set	btemp+8
  8616                           
  8617                           	psect	config
  8618                           
  8619                           ; Padding undefined space
  8620   300000                     	org	3145728
  8621   300000  FF                 	db	255
  8622                           
  8623                           ;Config register CONFIG1H @ 0x300001
  8624                           ;	Oscillator Selection bits
  8625                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  8626                           ;	Fail-Safe Clock Monitor Enable bit
  8627                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8628                           ;	Internal/External Oscillator Switchover bit
  8629                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8630   300001                     	org	3145729
  8631   300001  08                 	db	8
  8632                           
  8633                           ;Config register CONFIG2L @ 0x300002
  8634                           ;	Power-up Timer Enable bit
  8635                           ;	PWRT = OFF, PWRT disabled
  8636                           ;	Brown-out Reset Enable bits
  8637                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8638                           ;	Brown Out Reset Voltage bits
  8639                           ;	BORV = 3, Minimum setting
  8640   300002                     	org	3145730
  8641   300002  1F                 	db	31
  8642                           
  8643                           ;Config register CONFIG2H @ 0x300003
  8644                           ;	Watchdog Timer Enable bit
  8645                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8646                           ;	Watchdog Timer Postscale Select bits
  8647                           ;	WDTPS = 32768, 1:32768
  8648   300003                     	org	3145731
  8649   300003  1E                 	db	30
  8650                           
  8651                           ; Padding undefined space
  8652   300004                     	org	3145732
  8653   300004  FF                 	db	255
  8654                           
  8655                           ;Config register CONFIG3H @ 0x300005
  8656                           ;	CCP2 MUX bit
  8657                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8658                           ;	PORTB A/D Enable bit
  8659                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8660                           ;	Low-Power Timer1 Oscillator Enable bit
  8661                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8662                           ;	MCLR Pin Enable bit
  8663                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  8664   300005                     	org	3145733
  8665   300005  01                 	db	1
  8666                           
  8667                           ;Config register CONFIG4L @ 0x300006
  8668                           ;	Stack Full/Underflow Reset Enable bit
  8669                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8670                           ;	Single-Supply ICSP Enable bit
  8671                           ;	LVP = OFF, Single-Supply ICSP disabled
  8672                           ;	Extended Instruction Set Enable bit
  8673                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8674                           ;	Background Debugger Enable bit
  8675                           ;	DEBUG = 0x1, unprogrammed default
  8676   300006                     	org	3145734
  8677   300006  80                 	db	128
  8678                           
  8679                           ; Padding undefined space
  8680   300007                     	org	3145735
  8681   300007  FF                 	db	255
  8682                           
  8683                           ;Config register CONFIG5L @ 0x300008
  8684                           ;	Code Protection bit
  8685                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8686                           ;	Code Protection bit
  8687                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8688                           ;	Code Protection bit
  8689                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8690                           ;	Code Protection bit
  8691                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8692   300008                     	org	3145736
  8693   300008  0F                 	db	15
  8694                           
  8695                           ;Config register CONFIG5H @ 0x300009
  8696                           ;	Boot Block Code Protection bit
  8697                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8698                           ;	Data EEPROM Code Protection bit
  8699                           ;	CPD = OFF, Data EEPROM not code-protected
  8700   300009                     	org	3145737
  8701   300009  C0                 	db	192
  8702                           
  8703                           ;Config register CONFIG6L @ 0x30000A
  8704                           ;	Write Protection bit
  8705                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8706                           ;	Write Protection bit
  8707                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8708                           ;	Write Protection bit
  8709                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8710                           ;	Write Protection bit
  8711                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8712   30000A                     	org	3145738
  8713   30000A  0F                 	db	15
  8714                           
  8715                           ;Config register CONFIG6H @ 0x30000B
  8716                           ;	Configuration Register Write Protection bit
  8717                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8718                           ;	Boot Block Write Protection bit
  8719                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8720                           ;	Data EEPROM Write Protection bit
  8721                           ;	WRTD = OFF, Data EEPROM not write-protected
  8722   30000B                     	org	3145739
  8723   30000B  E0                 	db	224
  8724                           
  8725                           ;Config register CONFIG7L @ 0x30000C
  8726                           ;	Table Read Protection bit
  8727                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8728                           ;	Table Read Protection bit
  8729                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8730                           ;	Table Read Protection bit
  8731                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8732                           ;	Table Read Protection bit
  8733                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8734   30000C                     	org	3145740
  8735   30000C  0F                 	db	15
  8736                           
  8737                           ;Config register CONFIG7H @ 0x30000D
  8738                           ;	Boot Block Table Read Protection bit
  8739                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8740   30000D                     	org	3145741
  8741   30000D  40                 	db	64
  8742                           tosu	equ	0xFFF
  8743                           tosh	equ	0xFFE
  8744                           tosl	equ	0xFFD
  8745                           stkptr	equ	0xFFC
  8746                           pclatu	equ	0xFFB
  8747                           pclath	equ	0xFFA
  8748                           pcl	equ	0xFF9
  8749                           tblptru	equ	0xFF8
  8750                           tblptrh	equ	0xFF7
  8751                           tblptrl	equ	0xFF6
  8752                           tablat	equ	0xFF5
  8753                           prodh	equ	0xFF4
  8754                           prodl	equ	0xFF3
  8755                           indf0	equ	0xFEF
  8756                           postinc0	equ	0xFEE
  8757                           postdec0	equ	0xFED
  8758                           preinc0	equ	0xFEC
  8759                           plusw0	equ	0xFEB
  8760                           fsr0h	equ	0xFEA
  8761                           fsr0l	equ	0xFE9
  8762                           wreg	equ	0xFE8
  8763                           indf1	equ	0xFE7
  8764                           postinc1	equ	0xFE6
  8765                           postdec1	equ	0xFE5
  8766                           preinc1	equ	0xFE4
  8767                           plusw1	equ	0xFE3
  8768                           fsr1h	equ	0xFE2
  8769                           fsr1l	equ	0xFE1
  8770                           bsr	equ	0xFE0
  8771                           indf2	equ	0xFDF
  8772                           postinc2	equ	0xFDE
  8773                           postdec2	equ	0xFDD
  8774                           preinc2	equ	0xFDC
  8775                           plusw2	equ	0xFDB
  8776                           fsr2h	equ	0xFDA
  8777                           fsr2l	equ	0xFD9
  8778                           status	equ	0xFD8

Data Sizes:
    Strings     76
    Constant    0
    Data        54
    BSS         195
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     24     110
    BANK0           128      0     128
    BANK1           256     15      51
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S3951$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3951$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Puts1USART@data	PTR unsigned char  size(2) Largest target is 43
		 -> STR_1(CODE[43]), 

    UpdateDisplay@update_datas	PTR unsigned char  size(2) Largest target is 6
		 -> ReadCounter@counter_datas(BANK1[6]), Ds1307HMSRead@ds1307_date_datas(COMRAM[3]), 

    sp__ReadCounter	PTR unsigned char  size(2) Largest target is 6
		 -> ReadCounter@counter_datas(BANK1[6]), 

    Ds1307Write@write_datas	PTR unsigned char  size(2) Largest target is 10
		 -> rtc_default_values(BANK1[10]), 

    sp__Ds1307HMSRead	PTR unsigned char  size(2) Largest target is 3
		 -> Ds1307HMSRead@ds1307_date_datas(COMRAM[3]), 

    sp__Ds1307Read	PTR unsigned char  size(2) Largest target is 6
		 -> Ds1307Read@ds1307_date_datas(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _VerifyButtons->_ActionButtons
    _ActionButtons->_Ds1307HourSet
    _Ds1307SecondSet->_I2cWrite
    _Ds1307MinuteSet->_I2cWrite
    _Ds1307HourSet->_I2cWrite
    _ReadCounter->___awdiv
    _Puts1USART->_Write1USART
    _Ds1307Write->_I2cWrite
    _Ds1307HMSRead->_I2cRead

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_ScanDisplay
    _ScanDisplay->_M74HC595Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UpdateDisplay
    _InitValue->_UpdateDisplay
    _UpdateDisplay->_ReadCounter

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8455
                                             13 BANK1      2     2      0
                       _BlinkDisable
                         _DeviceInit
                      _Ds1307HMSRead
                         _LEDProcess
                        _ReadCounter
                      _UpdateDisplay
                      _VerifyButtons
 ---------------------------------------------------------------------------------
 (1) _VerifyButtons                                        2     2      0     754
                                              0 BANK1      2     2      0
                      _ActionButtons
 ---------------------------------------------------------------------------------
 (2) _ActionButtons                                        3     3      0     754
                                             20 COMRAM     3     3      0
                      _DecValProcess
                      _Ds1307HourSet
                    _Ds1307MinuteSet
                    _Ds1307SecondSet
                      _IncValProcess
                       _StartCounter
                        _StopCounter
                     _UpDownTransfer
 ---------------------------------------------------------------------------------
 (3) _UpDownTransfer                                       0     0      0       0
                     _UpdateSetValue
 ---------------------------------------------------------------------------------
 (3) _StopCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartCounter                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _IncValProcess                                        0     0      0       0
                     _UpdateSetValue
 ---------------------------------------------------------------------------------
 (3) _Ds1307SecondSet                                      1     1      0      44
                                             17 COMRAM     1     1      0
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (3) _Ds1307MinuteSet                                      1     1      0      44
                                             17 COMRAM     1     1      0
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (3) _Ds1307HourSet                                        3     3      0     249
                                             17 COMRAM     3     3      0
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (3) _DecValProcess                                        2     2      0       0
                                             16 COMRAM     2     2      0
                     _UpdateSetValue
 ---------------------------------------------------------------------------------
 (4) _UpdateSetValue                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadCounter                                          8     6      2    3448
                                              0 BANK1      8     6      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1513
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1525
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDProcess                                           2     2      0       0
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DeviceInit                                           0     0      0    2917
                         _Ds1307Init
                _EnableAllInterrupts
                          _InitValue
                         _Open1USART
                        _OpenButtons
                        _OpenCounter
                        _OpenDisplay
                         _OpenTimer0
                     _OscillatorInit
                         _Puts1USART
                        _StartTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     544
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _StartTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Puts1USART                                           2     0      2     142
                                             17 COMRAM     2     0      2
                         _Busy1USART
                        _Write1USART
 ---------------------------------------------------------------------------------
 (3) _Write1USART                                          1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Busy1USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OscillatorInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenDisplay                                          1     1      0      90
                                             16 COMRAM     1     1      0
                       _M74HC595Init
 ---------------------------------------------------------------------------------
 (3) _M74HC595Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenButtons                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     252
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitValue                                            0     0      0    1845
                      _Ds1307HMSRead
                        _Ds1307Write
                      _UpdateDisplay
 ---------------------------------------------------------------------------------
 (1) _UpdateDisplay                                        5     1      4    1033
                                              8 BANK1      5     1      4
                      _Ds1307HMSRead (ARG)
                        _MarkDisplay
                        _ReadCounter (ARG)
 ---------------------------------------------------------------------------------
 (2) _MarkDisplay                                          3     3      0      31
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Ds1307Write                                          4     2      2     577
                                             17 COMRAM     4     2      2
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (1) _Ds1307HMSRead                                        5     3      2     235
                                             18 COMRAM     5     3      2
                            _I2cRead
                         _I2cRestart
                           _I2cStart
                            _I2cStop
                           _I2cWrite
 ---------------------------------------------------------------------------------
 (4) _I2cWrite                                             1     1      0      22
                                             16 COMRAM     1     1      0
                            _I2cWait
 ---------------------------------------------------------------------------------
 (4) _I2cStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2cRestart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2cRead                                              2     2      0      46
                                             16 COMRAM     2     2      0
                            _I2cWait
 ---------------------------------------------------------------------------------
 (5) _I2cWait                                              0     0      0       0
                            _I2cStop
 ---------------------------------------------------------------------------------
 (6) _I2cStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EnableAllInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ds1307Init                                           0     0      0       0
                            _I2cInit
 ---------------------------------------------------------------------------------
 (3) _I2cInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BlinkDisable                                         1     1      0      68
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                              3     3      0       0
                                             13 COMRAM     3     3      0
                        _ScanCounter
 ---------------------------------------------------------------------------------
 (8) _ScanCounter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_isr                                             4     4      0     728
                                              9 COMRAM     4     4      0
                        _ScanButtons
                        _ScanDisplay
                            ___lwdiv
                      i2_ScanCounter
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (10) i2_WriteTimer0                                       4     2      2     276
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) i2_ScanCounter                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (10) _ScanDisplay                                         5     5      0     138
                                              4 COMRAM     5     5      0
                      _M74HC595Write
 ---------------------------------------------------------------------------------
 (11) _M74HC595Write                                       4     4      0     114
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (10) _ScanButtons                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlinkDisable
   _DeviceInit
     _Ds1307Init
       _I2cInit
     _EnableAllInterrupts
     _InitValue
       _Ds1307HMSRead
         _I2cRead
           _I2cWait
             _I2cStop
         _I2cRestart
         _I2cStart
         _I2cStop
         _I2cWrite
           _I2cWait
       _Ds1307Write
         _I2cStart
         _I2cStop
         _I2cWrite
       _UpdateDisplay
         _Ds1307HMSRead (ARG)
         _MarkDisplay (ARG)
         _ReadCounter (ARG)
           ___awdiv
           ___awmod
     _Open1USART
     _OpenButtons
     _OpenCounter
     _OpenDisplay
       _M74HC595Init
     _OpenTimer0
     _OscillatorInit
     _Puts1USART
       _Busy1USART
       _Write1USART
     _StartTimer0
     _WriteTimer0
   _Ds1307HMSRead
   _LEDProcess
   _ReadCounter
   _UpdateDisplay
   _VerifyButtons
     _ActionButtons
       _DecValProcess
         _UpdateSetValue
       _Ds1307HourSet
         _I2cStart
         _I2cStop
         _I2cWrite
       _Ds1307MinuteSet
         _I2cStart
         _I2cStop
         _I2cWrite
       _Ds1307SecondSet
         _I2cStart
         _I2cStop
         _I2cWrite
       _IncValProcess
         _UpdateSetValue
       _StartCounter
       _StopCounter
       _UpDownTransfer
         _UpdateSetValue

 _low_isr (ROOT)
   _ScanCounter

 _high_isr (ROOT)
   _ScanButtons
   _ScanDisplay
     _M74HC595Write
   ___lwdiv
   i2_ScanCounter
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      F      33       7       19.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     18      6E       1       87.3%
BITBIGSFRhhhll      18      0       0      17        0.0%
BITBIGSFRlhllhh      D      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRllllh       6      0       0      30        0.0%
BITBIGSFRlllh        5      0       0      29        0.0%
BITBIGSFRllh         5      0       0      28        0.0%
BITBIGSFRlhllhl      4      0       0      25        0.0%
BITBIGSFRlhhhh       2      0       0      19        0.0%
BITBIGSFRlhlh        2      0       0      21        0.0%
BITBIGSFRlhllhl      1      0       0      24        0.0%
BITBIGSFRlhllhl      1      0       0      23        0.0%
BITBIGSFRlhllhl      1      0       0      26        0.0%
BITBIGSFRlhhl        1      0       0      20        0.0%
BITBIGSFRlhlll       1      0       0      27        0.0%
BITBIGSFRhl          1      0       0      18        0.0%
BITBIGSFRlllll       1      0       0      31        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     121      32        0.0%
DATA                 0      0     121       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Dec 05 15:44:43 2023

                             l7 297C                 ??_UpdateDisplay 0066                     _SSPSTATbits 0FC7  
                            l51 193A                              l28 298A                              l52 1956  
                            l61 201C                              l62 2038                              l70 2880  
                            l47 1F26                              l55 199C                              l57 1A5C  
                            l73 2862                              l67 20B4                 ?_UpDownTransfer 004E  
                  ___awdiv@sign 0063                              bsr 0FE0        ReadCounter@counter_datas 0118  
     UpdateDisplay@end_position 0121                     ?_LEDProcess 004E                             l130 292A  
                           l124 28F4                             l133 2940                             l142 293C  
                           l127 291C                             l136 294E                             l160 2786  
                           l152 2888                             l145 2824                             l161 279A  
                           l147 2832                             l163 27A8                             l139 292E  
                           l155 289A                             l164 27AA                             l149 2844  
                           l158 2778                             l414 2918                             l353 25D4  
                           l361 1CA4                             l329 1334                             l346 1452  
                           l465 27D2                             l473 2906                             l386 240A  
                           l467 27D4                             l900 24FC                             l476 29A2  
                           l923 2700                             l692 29A6                             l780 2678  
                           l928 12D6                             l786 179C                             l795 299E  
                           l798 2998                             l977 2822            __end_of_BlinkDisable 2824  
                   ?_Ds1307Init 004E                             _cnt 00BA                    ___awmod@sign 0063  
                ?_M74HC595Write 004E                             wreg 0FE8                      _TXSTA1bits 0FAC  
              ??_UpdateSetValue 005E                   ??_MarkDisplay 005E                 __end_of_I2cInit 28F6  
               __end_of_I2cRead 27AC                 __end_of_I2cWait 2846                 __end_of_I2cStop 2950  
              _SYSTEM_STATE_FLG 006E                            l1200 08A2                            l1203 0904  
                          l1116 2488                            l1206 0966                            l1150 0ECC  
                          l1143 0E28                            l1135 0D84                            l1160 0FAE  
                          l1153 0F0A                            l1146 0E66                            l1138 0DC2  
                          l1180 06D4                            l1164 1010                            l1181 0D54  
                          l1157 0F70                            l1270 1FEE                            l1262 2772  
                          l1182 06E6                            l1255 0CB4                            l1167 104E  
                          l1169 10CA                            l2170 2178                            l1178 06A6  
                          l1275 273A                            l1179 06D8                            l1196 0822  
                          l1278 296E                            l2183 22E8                            l1802 267A  
                          l1807 26BE                            l1771 220C                            l1772 220E  
                          l1765 21CA                            l1774 2238                            l1790 27FC  
                          l1767 21E0                            l6200 19CC                            l1769 21F6  
                          l6130 1E5E                            l6210 1A0A                            l6202 19D2  
                          l1778 28CA                            l6122 2962                            l6124 28E2  
                          l6140 1E84                            l6132 1E64                            l6212 1A1C  
                          l6204 19D8                            l6220 1FF2                            l6300 2732  
                          l6126 28E8                            l6150 1EBE                            l6142 1E8C  
                          l6134 1E6E                            l6214 1A2E                            l6206 19E6  
                          l6230 204E                            l6222 1FF6                            l6310 2754  
                          l6302 2736                            l6160 1EEA                            l6152 1ED2  
                          l6144 1E90                            l6136 1E74                            l6128 1E5A  
                          l6216 1A40                            l6208 19F8                            l6400 28B4  
                          l6320 1F28                            l6240 209A                            l6224 2006  
                          l6232 2058                            l6312 2756                            l6304 273C  
                          l6170 1F1C                            l6162 1EF0                            l6154 1ED8  
                          l6146 1EA4                            l6138 1E7C                            l6218 1A52  
                          l6402 28C2                            l6410 27D8                            l6330 1F66  
                          l6322 1F2A                            l6242 209E                            l6234 2068  
                          l6226 2016                            l6250 2866                            l6314 2768  
                          l6306 273E                            l6420 297E                            l6172 1F1E  
                          l6164 1EF6                            l6156 1EDE                            l6148 1EB4  
                          l6180 1924                            l6500 2192                            l6412 27E6  
                          l6340 1F9C                            l6332 1F74                            l6324 1F38  
                          l6244 20A4                            l6236 2078                            l6228 2034  
                          l6252 286A                            l6260 2848                            l6316 276C  
                          l6308 2750                            l6422 2986                            l6166 1EFC  
                          l6158 1EE4                            l6190 1986                            l6182 1934  
                          l6510 21B6                            l6502 2194                            l6430 27B8  
                          l6406 28C8                            l6414 27F6                            l7230 1BBE  
                          l6350 1FEA                            l6342 1FAC                            l6334 1F84  
                          l6326 1F60                            l6246 20AA                            l6238 2096  
                          l6254 2870                            l6262 284C                            l6318 276E  
                          l6424 29A4                            l6168 1F0C                            l6192 1996  
                          l6184 1952                            l6176 1904                            l6520 21F0  
                          l6512 21C4                            l6504 21A2                            l6432 27BC  
                          l6416 27F8                            l6440 29A0                            l7240 1BEA  
                          l7232 1BCE                            l6336 1F88                            l6328 1F64  
                          l6344 1FB0                            l6248 20B0                            l6256 2876  
                          l6264 2852                            l6280 299A                            l6600 0766  
                          l6194 19B4                            l6186 196C                            l6178 1914  
                          l6522 21F8                            l6514 21CC                            l6506 21A6  
                          l6450 2674                            l6442 2632                            l6434 27BE  
                          l6426 27AE                            l6418 2970                            l6530 267A  
                          l7250 1C1C                            l7242 1BF0                            l7234 1BD4  
                          l6346 1FBE                            l6338 1F8E                            l6258 287C  
                          l6266 2858                            l6282 2994                            l6290 271A  
                          l6610 07B2                            l6602 0776                            l6196 19B8  
                          l6188 1976                            l9100 10F0                            l6524 2206  
                          l6516 21DA                            l6508 21B4                            l6452 2676  
                          l6444 266E                            l6436 27CC                            l6428 27B4  
                          l6532 268E                            l7252 1C1E                            l7244 1BF2  
                          l7228 1BB4                            l6348 1FE6                            l6268 285E  
                          l6292 271E                            l6284 2702                            l6700 09D6  
                          l6620 07D0                            l6612 07BA                            l6604 078A  
                          l6198 19C8                            l6526 2228                            l6518 21E2  
                          l6446 2670                            l6278 2908                            l6470 24E2  
                          l6454 248A                            l6534 269E                            l6438 28F6  
                          l7254 1C34                            l7246 1C02                            l7238 1BDA  
                          l6286 2712                            l6294 2726                            l6710 0A06  
                          l6630 081E                            l6622 07D4                            l6606 078E  
                          l6614 07BE                            l9200 1162                            l9120 110E  
                          l9112 1102                            l9104 10F6                            l6528 2236  
                          l6472 240C                            l6448 2672                            l6464 24B2  
                          l6456 24AA                            l7256 1C40                            l7248 1C06  
                          l7264 1C46                            l6296 272A                            l6288 2716  
                          l6712 0A0E                            l6704 09EE                            l6632 0836  
                          l6624 07EA                            l6616 07C2                            l6608 07A2  
                          l6474 2416                            l6466 24D0                            l6458 24AE  
                          l7266 1C90                            l6298 272E                            l6810 0BA6  
                          l6802 0B58                            l6722 0A22                            l6714 0A12  
                          l6706 09FE                            l6650 0870                            l6642 0850  
                          l6634 083A                            l6626 07EE                            l6618 07C8  
                          l6570 0692                            l6562 064E                            l7284 2802  
                          l5940 2840                            l9220 117A                            l9212 1174  
                          l9204 1168                            l9140 1126                            l9132 111A  
                          l9124 1114                            l9116 1108                            l9108 10FC  
                          l6468 24D2                            l9300 214C                            l6812 0BAA  
                          l6804 0B9A                            l6732 0A62                            l6708 0A02  
                          l6652 089E                            l6644 0854                            l6636 083E  
                          l6628 07F0                            l6580 06DC                            l6572 06A2  
                          l6564 065E                            l7286 2810                            l7278 27FE  
                          l5950 2776                            l5942 291A                            l9302 2152  
                          l6910 0CC0                            l6902 0C98                            l6830 0BC6  
                          l6814 0BAE                            l6750 0AC0                            l6742 0A6E  
                          l6734 0A66                            l6726 0A36                            l6718 0A1A  
                          l6670 08D2                            l6654 08B6                            l6646 086A  
                          l6638 0844                            l6590 071E                            l6574 06AE  
                          l6566 0672                            l7288 2812                            l5936 293E  
                          l5952 2776                            l5944 2884                            l9224 1180  
                          l9208 116E                            l9160 113E                            l9152 1132  
                          l9136 1120                            l9080 10D2                            l9240 26C0  
                          l6496 217C                            l9304 2158                            l9320 2258  
                          l9312 223A                            l6904 0CA8                            l6832 0BCA  
                          l6824 0BB6                            l6840 0BD2                            l6760 0AD8  
                          l6752 0AC4                            l6744 0AA0                            l6680 092A  
                          l6672 0900                            l6664 08C8                            l6656 08BA  
                          l6648 086E                            l6592 072E                            l6584 06EA  
                          l6576 06BE                            l6568 0682                            l9400 0DFE  
                          l5938 2824                            l5954 278A                            l5946 2896  
                          l9234 118C                            l9242 26CA                            l9250 238E  
                          l6498 2184                            l9306 2168                            l9330 2290  
                          l9322 2266                            l9314 223E                            l6842 0C14  
                          l6826 0BBE                            l6770 0B00                            l6754 0ACC  
                          l6746 0AAC                            l6690 097A                            l6682 092E  
                          l6674 0918                            l6666 08CC                            l6658 08BE  
                          l6594 0742                            l6586 06EC                            l6578 06D0  
                          l6914 0D0A                            l9410 0E52                            l9402 0E14  
                          l5956 278E                            l5948 292C                            l9228 1186  
                          l9172 1144                            l9156 1138                            l9148 112C  
                          l9092 10E4                            l9084 10D8                            l9244 26EA  
                          l9260 23DC                            l9252 2392                            l9308 2170  
                          l9332 229E                            l9340 22C8                            l9324 226E  
                          l9316 224C                            l6852 0C36                            l6844 0C18  
                          l6828 0BC2                            l6772 0B10                            l6756 0AD0  
                          l6748 0ABC                            l6692 097E                            l6684 0932  
                          l6676 091C                            l6668 08D0                            l6596 0746  
                          l6588 071A                            l9420 0EA2                            l9412 0E62  
                          l9404 0E24                            l5958 2798                            l9078 10CE  
                          l9246 26EE                            l9254 23AC                            l9262 23EC  
                          l9350 2576                            l9270 20BA                            l9342 22D8  
                          l9334 22B4                            l9326 2280                            l9318 2254  
                          l6870 0C64                            l6862 0C58                            l6854 0C3A  
                          l6846 0C2E                            l6790 0B3C                            l6766 0AE0  
                          l6694 0982                            l6686 0934                            l6678 0920  
                          l6598 075A                            l9430 0EF6                            l9422 0EB8  
                          l9406 0E34                            l9510 1304                            l9502 12D8  
                          l9192 115C                            l9184 1150                            l9176 114A  
                          l9096 10EA                            l9088 10DE                            l9264 23FE  
                          l9256 23BC                            l9248 237C                            l9360 2598  
                          l9352 257A                            l9280 20EA                            l9272 20C8  
                          l9344 22E0                            l9336 22BC                            l9328 2288  
                          l6872 0C68                            l6864 0C5C                            l6856 0C50  
                          l6792 0B44                            l6784 0B28                            l6768 0AF0  
                          l6688 0962                            l9440 0F46                            l9432 0F06  
                          l9424 0EC8                            l9416 0E6E                            l9408 0E3C  
                          l9520 1336                            l9512 130C                            l9504 12DC  
                          l9258 23CC                            l9370 25AC                            l9362 259C  
                          l9354 2582                            l9290 2118                            l9282 20EE  
                          l9274 20D0                            l9338 22C2                            l6778 0B20  
                          l6698 098C                            l9450 0F9A                            l9442 0F5C  
                          l9426 0ED8                            l9418 0E86                            l9530 1358  
                          l9522 133E                            l9514 131E                            l9506 12E0  
                          l9188 1156                            l9372 25B0                            l9364 25A0  
                          l9356 2586                            l9348 2572                            l9292 2126  
                          l9284 20F6                            l9276 20D4                            l9268 20B6  
                          l9460 0FE6                            l9452 0FAA                            l9444 0F6C  
                          l9436 0F12                            l9428 0EE0                            l9380 0D5A  
                          l9540 1378                            l9532 135E                            l9524 1346  
                          l9516 1322                            l9508 12F0                            l9374 25BE  
                          l9366 25A4                            l9358 258C                            l9294 212C  
                          l9286 2108                            l9278 20E2                            l6894 0C84  
                          l6878 0C70                            l9470 103A                            l9462 0FFC  
                          l9446 0F7C                            l9438 0F2A                            l9390 0DAE  
                          l9382 0D70                            l9550 1394                            l9542 137C  
                          l9534 1366                            l9526 134A                            l9376 25CA  
                          l9368 25A8                            l9296 2142                            l9288 2110  
                          l9472 104A                            l9464 100C                            l9456 0FB6  
                          l9448 0F84                            l9392 0DBE                            l9384 0D80  
                          l9552 1398                            l9544 1382                            l9536 136A  
                          l9528 1354                            l9298 214A                            l9490 1636  
                          l9466 101C                            l9458 0FCE                            l9386 0D90  
                          l9482 1086                            l9378 0D56                            l9554 139C  
                          l9546 138A                            l9538 1370                            l9492 1646  
                          l9476 1056                            l9468 1024                            l9396 0DCA  
                          l9388 0D98                            l9556 13A0                            l9548 138E  
                          l9572 141A                            l9564 13AC                            l9494 16DA  
                          l9478 106E                            l9398 0DE2                            l9582 1470  
                          l9574 143E                            l9566 13F8                            l9558 13A4  
                          l9496 16EA                            l9568 1412                            l9498 1792  
                          l9578 1452                            l9940 09A0                            l9932 13C2  
                          l9950 0D1E                            l9942 0A82                            l9934 1430  
                          STR_1 0601                            l9952 1C5A                            l9944 0B6C  
                          l9936 1486                            STR_3 0642                            l9954 11A0  
                          l9946 0BE6                            l9938 109C                            STR_4 062C  
                          l9948 0CD4                            u4100 24E2                            u4101 24DE  
                          u4200 21DA                            u4201 21D6                            u4210 21F0  
                          u4211 21EC                            u4220 2206                            u4060 28C2  
                          u5100 1C02                            u4300 065E                            u4221 2202  
                          u4061 28BE                            u5101 1BFE                            u4301 065A  
                          u4230 2228                            u4070 27E6                            u5110 1C1C  
                          u4310 0682                            u4231 2224                            u4071 27E2  
                          u5111 1C18                            u4311 067E                            _PIE1 0F9D  
                          u3600 2840                            u4240 2236                            u4160 2192  
                          u4080 27F6                            u5120 1C34                            u4400 0776  
                          u4320 0692                            u3601 283C                            u4241 2232  
                          u4161 218E                            u4081 27F2                            u5121 1C30  
                          u4401 0772                            u4321 068E                            u3610 292A  
                          u4170 21A2                            u4090 27CC                            u4250 268E  
                          u5130 1CA0                            u4410 078A                            u4330 06A2  
                          u3611 2926                            u4171 219E                            u4091 27C8  
                          u4251 268A                            u5131 1C9C                            u4411 0786  
                          u4331 069E                            u5140 2822                            u3620 2896  
                          u3700 1ECE                            u4180 21B4                            u4260 26BE  
                          u4500 0900                            u4420 07A2                            u4340 06BE  
                          u5141 281E                            u3621 2892                            u3701 1EC8  
                          u4181 21B0                            u4261 26BA                            u4501 08FC  
                          u4421 079E                            u4341 06BA                            u3630 293C  
                          u3710 1ED0                            u4190 21C4                            u4510 0918  
                          u4430 07B2                            u4350 06D0                            u3631 2938  
                          u4191 21C0                            u4511 0914                            u4431 07AE  
                          u4351 06CC                            u3640 2786                            u3720 1F0C  
                          u3800 19B4                            u5080 1BCE                            u4600 0AF0  
                          u4520 0962                            u4440 07EA                            u4360 071A  
                          u7000 0FCE                            u3641 2782                            u3721 1F08  
                          u3801 19B0                            u5081 1BCA                            u4601 0AEC  
                          u4521 095E                            u4441 07E6                            u4361 0716  
                          u7001 0FCA                            u3730 1F1C                            u5090 1BEA  
                          u3810 2006                            u4610 0B10                            u4530 097A  
                          u4450 081E                            u4370 072E                            u7010 0FFC  
                          u3731 1F18                            u5091 1BE6                            u3811 2002  
                          u4611 0B0C                            u4531 0976                            u4451 081A  
                          u4371 072A                            u7011 0FF8                            u3580 294E  
                          u3660 27A8                            u3740 1924                            u3820 2016  
                          u3900 2750                            u4620 0B38                            u4540 09EA  
                          u4460 0836                            u4380 0742                            u7020 100C  
                          u7100 1330                            u3581 294A                            u3661 27A4  
                          u3741 1920                            u3821 2012                            u3901 274C  
                          u4621 0B34                            u4541 09E6                            u4461 0832  
                          u4381 073E                            u7021 1008                            u7101 132C  
                          u3590 2832                            u3670 1EA0                            u3750 1934  
                          u3830 2034                            u3910 2768                            u4630 0B54  
                          u4550 09FE                            u4470 086A                            u4390 075A  
                          u7030 103A                            u7110 144E                            u3591 282E  
                          u3655 2796                            u3671 1E9A                            u3751 1930  
                          u3831 2030                            u3911 2764                            u4631 0B50  
                          u4551 09FA                            u4471 0866                            u4391 0756  
                          u7031 1036                            u7111 144A                            u3656 2798  
                          u3680 1EA2                            u3760 1952                            u3920 1F38  
                          u3840 204E                            u4640 0C2E                            u4560 0A32  
                          u4480 089E                            u7040 104A                            u3761 194E  
                          u3921 1F34                            u3841 204A                            u4641 0C2A  
                          u4561 0A2E                            u4481 089A                            u7041 1046  
                          u3690 1EB4                            u3770 196C                            u3930 1F60  
                          u3850 2068                            u4650 0C50                            u4570 0A5A  
                          u4490 08B6                            u7050 106E                            u3691 1EB0  
                          u3771 1968                            u3931 1F5C                            u3851 2064  
                          u4651 0C4C                            u4571 0A54                            u4491 08B2  
                          u7051 106A                            u3780 1986                            u7060 1646  
                          u3940 1F74                            u3860 2078                            u4660 0C80  
                          u4580 0A5C                            u3781 1982                            u7061 1642  
                          u3941 1F70                            u3861 2074                            u4661 0C7C  
                          u3790 1996                            u7070 16EA                            u3950 1F84  
                          u3870 2096                            u4670 0C94                            u4590 0ABC  
                          u3791 1992                            u7071 16E6                            u3951 1F80  
                          u3871 2092                            u4671 0C90                            u4591 0AB8  
                          u3960 1F9C                            u4680 0CA8                            u7080 12F0  
                          u3961 1F98                            u4681 0CA4                            u7081 12EC  
                          u3970 1FAC                            u3890 2712                            u7090 131E  
                          u3971 1FA8                            u3891 270E                            u7091 131A  
                          u6700 20E2                            u3980 1FBE                            u6701 20DE  
                          u3981 1FBA                            u6630 2700                            u6710 2108  
                          u3990 1FE6                            u6631 26FC                            u6711 2104  
                          u3991 1FE2                            u6640 238E                            u6720 2126  
                          u6800 22D8                            u6641 238A                            u6721 2122  
                          u6801 22D4                            u6650 23BC                            u6730 2142  
                          u6810 0D70                            u6651 23B8                            u6731 213E  
                          u6811 0D6C                            u6660 23CC                            u6740 2168  
                          u6900 0E86                            u6820 0D80                            u6661 23C8  
                          u6741 2164                            u6901 0E82                            u6821 0D7C  
                          u6670 23DC                            u6750 224C                            u6910 0EB8  
                          u6830 0DAE                            u6671 23D8                            u6751 2248  
                          u6911 0EB4                            u6831 0DAA                            u6680 23FE  
                          u6760 2266                            u6920 0EC8                            u6840 0DBE  
                          u6681 23FA                            u6761 2262                            u6921 0EC4  
                          u6841 0DBA                            u6690 20C8                            u6770 2280  
                          u6930 0EF6                            u6850 0DE2                            u6691 20C4  
                          u6771 227C                            u6931 0EF2                            u6851 0DDE  
                          u6780 229E                            u6940 0F06                            u6860 0E14  
                          u6781 229A                            u6941 0F02                            u6861 0E10  
                          u6790 22B4                            u6950 0F2A                            u6870 0E24  
                          u6791 22B0                            u6951 0F26                            u6871 0E20  
                          u6960 0F5C                            u6880 0E52                            u6961 0F58  
                          u6881 0E4E                            u6970 0F6C                            u6890 0E62  
                          u6971 0F68                            u6891 0E5E                            u6980 0F9A  
                          u6981 0F96                            u6990 0FAA                            u6991 0FA6  
                          _TMR2 0FCC                            _main 12D8                    ?_Ds1307Write 005F  
                          fsr2h 0FDA                            indf1 0FE7                            indf2 0FDF  
                          fsr1l 0FE1                            fsr2l 0FD9                            btemp 006F  
                          start 0058                   ??_ReadCounter 0066                    ___param_bank 0000  
              __end_of_I2cStart 292C                __end_of_I2cWrite 289C                      _DeviceInit 2572  
               ??i2_ScanCounter 004E                           ?_main 004E                   ??_ScanDisplay 0052  
               __end_of___awdiv 217A                           _EEADR 0FA9                 __end_of___awmod 22EA  
                    _Gateway_IP 0094                           _T0CON 0FD5                 ___awdiv@divisor 0060  
                         _T1CON 0FCD                           _T2CON 0FCA                           _T3CON 0FB1  
                 ??_ScanCounter 005B                 __end_of___lwdiv 2572                           i1l802 1D7E  
                         i2l418 2628                           i2l419 2630                           i2l473 2960  
                         i1l689 0048                           i2l802 1E58                           i2l910 1826  
                         i2l911 182C                           i2l912 1832                           i2l913 1838  
                         i2l905 180E                           i2l682 1BA8                           i2l907 1814  
                         i2l667 1B86                           i2l908 181A                           i2l917 1902  
                         i2l909 1820                 ___awdiv@counter 0062                   ??_ScanButtons 004E  
          _continue_pressed_cnt 000A                           _TMR0H 0FD7                           _TMR1H 0FCF  
                         _TMR0L 0FD6                           _TMR1L 0FCE                           _TMR3H 0FB3  
                         _TMR3L 0FB2              _rtc_default_values 010C                      _Busy1USART 28B4  
                 _Ds1307HMSRead 1E5A                 __end_of_low_isr 0058                           tablat 0FF5  
           __end_of_MarkDisplay 12D8                           ttemp5 0070                           ttemp6 0073  
                         ttemp7 0077                           status 0FD8                           wtemp8 0070  
    Ds1307SecondSet@second_data 005F                   _DecValProcess 1F28                 __initialization 22EA  
                 _Ds1307HourSet 1FF0                    __end_of_main 14B0             _up_btn_released_cnt 00C2  
                 ??_OpenDisplay 005E                   ??_OpenCounter 005E                      _Open1USART 217A  
                 ??_OpenButtons 005E     UpdateDisplay@start_position 0120                          ??_main 0123  
           __end_of_ReadCounter 179E                   i2_WriteTimer0 2950                       ??_I2cInit 005E  
                     ??_I2cRead 005E                 ??_M74HC595Write 004E                       ??_I2cWait 005E  
                _OscillatorInit 2970                   __activetblptr 0002                       ??_I2cStop 005E  
                ?_Ds1307HMSRead 0060             __end_of_ScanDisplay 1904                          _ADCON0 0FC2  
                        _ADCON1 0FC1          Ds1307Write@write_datas 005F                          _EEDATA 0FA8  
           __end_of_ScanCounter 1D80                          _EECON2 0FA7                ___awdiv@dividend 005E  
           __end_of_ScanButtons 1636                          _S0_DIP 00E4                          i1l4120 1CBA  
                        i1l4130 1CE4                          i1l4122 1CCA                          _S1_DIP 00E0  
                        i1l4140 1D20                          i1l4132 1CF6                          i1l4124 1CCC  
                        i1l4116 1CA6                          i1l4150 1D54                          i1l4142 1D30  
                        i1l4134 1CFA                          i1l4126 1CDE                          i1l4160 1D78  
                        i1l4152 1D56                          i1l4144 1D40                          i1l4128 1CE2  
                        i1l4136 1D00                          i1l4162 1D7C                          i1l4154 1D64  
                        i1l4138 1D10                          i1l4156 1D68                          i1l4148 1D50  
                        i1l4158 1D6A                          i2l1129 1634                          _S2_DIP 00DC  
                        i2l2430 2568                          i1l4840 0042                      _OpenTimer0 27AC  
                        i1l4842 0044                          _S3_DIP 00D8                          i1l4836 0026  
                        i2l2437 2570                          i1l4838 0034                          _S4_DIP 00D4  
                        i2l7310 17DC                          i2l7302 179E                          i2l7400 15D8  
                        i2l7312 1802                          i2l7304 17AE                          i2l7410 1602  
                        i2l7402 15E0                          i2l7330 18D2                          i2l7322 1844  
                        i2l7314 1804                          i2l7306 17B0                          _S5_DIP 00D0  
                        i2l7412 1606                          i2l7404 15E6                          i2l7340 14B0  
                        i2l6540 25DE                          i2l7332 18E2                          i2l7316 183A  
                        i2l7324 189E                          i2l7308 17C0                          i2l7414 1614  
                        i2l7406 15F4                          i2l7350 14DE                          i2l7342 14BE  
                        i2l6550 2608                          i2l7334 18F2                          i2l7326 18BC  
                        i2l7318 183E                          i2l7416 1626                          i2l7408 15FE  
                        i2l7360 1514                          i2l7352 14EE                          i2l7344 14C8  
                        i2l6560 2618                          i2l6552 260A                          i2l6536 25D8  
                        i2l7328 18D0                          i2l7418 162E                          i2l7370 1544  
                        i2l7362 1518                          i2l7354 14F6                          i2l7346 14CC  
                        i2l6554 260C                          i2l6546 25E2                          i2l6538 25DC  
                        i2l7380 156A                          i2l7372 154A                          i2l7364 151C  
                        i2l7356 14FC                          i2l7348 14D0                          i2l6556 260E  
                        i2l6548 2600                          i2l7390 15A6                          i2l7382 1578  
                        i2l7374 1558                          i2l7366 152A                          i2l7358 150A  
                        i2l6558 2616                          i2l7710 1E42                          i2l7702 1E2A  
                        i2l7392 15B0                          i2l7384 158A                          i2l7376 1562  
                        i2l7368 153C                          i2l7712 1E44                          i2l7704 1E2E  
                        i2l7394 15B4                          i2l7386 1592                          i2l7378 1566  
                        i2l7650 2518                          i2l7714 1E52                          i2l7706 1E30  
                        _S6_DIP 00CC                          i2l7396 15B8                          i2l7388 1598  
                        i2l7660 2552                          i2l7652 2520                          i2l7716 1E56  
                        i2l7708 1E3E                          i2l7900 1B30                          i2l7398 15C6  
                        i2l7662 255A                          i2l7654 2528                          i2l7646 24FE  
                        i2l7670 1D80                          i2l7902 1B34                          i2l7664 255C  
                        i2l7656 2536                          i2l7648 2506                          i2l7680 1DB8  
                        i2l7912 1B94                          i2l7904 1B4A                          i2l7666 2562  
                        i2l7658 253C                          i2l7682 1DBC                          i2l7690 1DDA  
                        i2l7674 1D94                          i2l7914 1BA2                          i2l7906 1B52  
                        i2l7692 1DEA                          i2l7684 1DBE                          i2l7676 1DA4  
                        i2l7668 2950                          i2l7916 1BA4                          i2l7908 1B72  
                        i2l7694 1DFA                          i2l7686 1DD0                          i2l7678 1DA6  
                        i2l7862 1A68                          i2l7696 1E0A                          i2l7688 1DD4  
                        i2l7864 1A76                          i2l7698 1E1A                          i2l7890 1AF8  
                        i2l7866 1A84                          _S7_DIP 00C8                          i2l7892 1AFC  
                        i2l7868 1A8A                          i2l7894 1B02                          i2l7886 1A9A  
                        i2l7896 1B16                          i2l7888 1AF4                          i2l7898 1B18  
                        i2l9956 1AAE                          i2l9958 1858                          _RCREG1 0FAE  
                        _RCSTA1 0FAB                          _SPBRG1 0FAF               _temp_system_state 0044  
                        _SSPADD 0FC8                          _SSPBUF 0FC9                          _TXREG1 0FAD  
                        _TXSTA1 0FAC            _sel_btn_released_cnt 00BE          _counter_hour_set_value 0047  
                ?_DecValProcess 004E                  ?_Ds1307HourSet 004E                __end_of_high_isr 1BB4  
                     ??___awdiv 0062                       ??___awmod 0062                     ?_DeviceInit 004E  
              OpenTimer0@config 005E                       ??___lwdiv 0052          __end_of_OscillatorInit 297E  
                        clear_0 2350                          clear_1 235C                          clear_2 2368  
              ___awdiv@quotient 0064                 ___awmod@divisor 0060                      _Puts1USART 267A  
                        isa$std 0001                  ?i2_WriteTimer0 004E                 ___awmod@counter 0062  
                  __pdataCOMRAM 0066             _rtc_clock_disp_mode 0043             _rtc_clock_disp_type 004B  
           __end_of_OpenDisplay 24FE                    __mediumconst 0000                       ??_low_isr 005B  
                        tblptrh 0FF7                          tblptrl 0FF6                          tblptru 0FF8  
           __end_of_OpenCounter 267A            _hour_btn_pressed_cnt 0014                     ?_Busy1USART 004E  
                   _MarkDisplay 10CC             __end_of_OpenButtons 248A            Ds1307Write@hour_temp 0062  
             M74HC595Write@data 004F               M74HC595Write@temp 0050                    ??_I2cRestart 005E  
                     ?_I2cStart 004E                       ?_I2cWrite 004E             _EnableAllInterrupts 29A4  
                    __accesstop 0080         __end_of__initialization 236E                   ___rparam_used 0001  
                  _BlinkDisable 27FE                ??_UpDownTransfer 005E                  __pcstackCOMRAM 004E  
                   _ReadCounter 1636                    __pidataBANK0 289C                    __pidataBANK1 28CC  
                 ??_StartTimer0 005E            ?_EnableAllInterrupts 004E                 ?_OscillatorInit 004E  
                   ?_Open1USART 005E                    ??_LEDProcess 005E              __end_of_I2cRestart 293E  
             __end_of_InitValue 240C                     _ScanDisplay 179E                    ??_Ds1307Init 005E  
                   _ScanCounter 1CA6           _hour_btn_released_cnt 00C4                     _ScanButtons 14B0  
               ??_Ds1307HMSRead 0062                   ??_StopCounter 005E           _counter_down_comp_flg 0034  
         _counter_down_comp_cnt 0033         _counter_down_set_minute 003D         _counter_down_set_second 003C  
         __end_of_IncValProcess 2774       _btn_long_press_verify_flg 002C                   BlinkDisable@i 005E  
             ??_Ds1307MinuteSet 005F               ??_Ds1307SecondSet 005F                      __pbssBANK0 0080  
                    __pbssBANK1 0125                      ??_I2cStart 005E                     ?_OpenTimer0 004E  
                    ??_I2cWrite 005E                   ??_Write1USART 005E                      __pnvCOMRAM 006E  
               ??_DecValProcess 005E                 ScanDisplay@temp 0056                 ??_Ds1307HourSet 005F  
         _counter_down_set_hour 003E              __end_of_LEDProcess 1CA6                _long_pressed_cnt 004C  
            __end_of_Ds1307Init 298C           __end_of_VerifyButtons 10CC                  I2cRead@receive 005F  
               ??i2_WriteTimer0 0050           ??_EnableAllInterrupts 005E                WriteTimer0@timer 0060  
         __end_of_UpdateDisplay 2702                   ??_WriteTimer0 0060                     _OpenDisplay 248A  
                   ?_Puts1USART 005F                     _OpenCounter 2632                     _OpenButtons 240C  
                       _I2cInit 28E2                         _I2cRead 2774                         _I2cWait 2824  
                       _I2cStop 293E                Open1USART@config 0060             __end_of_StartTimer0 29A4  
                       _S0_Data 0022                         _S1_Data 0021              _counter_enable_flg 0038  
                       _S2_Data 0020                         _S3_Data 001F                         _S0_Mode 006D  
                       _S4_Data 001E                         _S1_Mode 006C                         _S5_Data 001D  
                       _S2_Mode 006B                         _S0_Port 00B8                   _ActionButtons 064E  
                       _S6_Data 001C                         _S3_Mode 006A                         _S1_Port 00B6  
                       _S7_Data 001B                         _S4_Mode 0069                         _S2_Port 00B4  
                       _S5_Mode 0068                         _S3_Port 00B2                         _S6_Mode 0067  
                       _S4_Port 00B0                         _S7_Mode 0066                         _S5_Port 00AE  
                       _IP_Addr 0090                         _S6_Port 00AC                         _S7_Port 00AA  
                       _SSPCON1 0FC6                _counter_skip_flg 0036                       ?_high_isr 004E  
                       _SSPSTAT 0FC7             __end_of_StopCounter 299A             i2WriteTimer0@timer0 004E  
                       __Hparam 0000                         __Lparam 0000             __end_of_Write1USART 27FE  
                M74HC595Write@i 0051                         ___awdiv 20B6                         ___awmod 223A  
                       ___lwdiv 24FE                    __psmallconst 0600            _btn_press_verify_flg 002D  
                       __pcinit 22EA                         __ramtop 0600                         __ptext0 12D8  
                       __ptext1 0D56                         __ptext2 064E                         __ptext3 2702  
                       __ptext4 2994                         __ptext5 299A                         __ptext6 273C  
                       __ptext7 2846                         __ptext8 2864                         __ptext9 1FF0  
                     _T0CONbits 0FD5                  OpenS5500@F2850 00EC                  OpenS5500@F2852 00E8  
                OpenS5500@F2846 0100                  OpenS5500@F2848 00F0                       _T1CONbits 0FCD  
                     _T2CONbits 0FCA           __end_ofi2_ScanCounter 1E5A                         _int_cnt 0049  
                ?_ActionButtons 004E                       _T3CONbits 0FB1                ___awmod@dividend 005E  
                 _real_rtc_data 0001             __end_of_WriteTimer0 2908                         _low_isr 0018  
             _rtc_hour_ampm_flg 004A                      ??_high_isr 0057                  __pintcode_body 1A5E  
          end_of_initialization 236E                   __Lmediumconst 0000                         int_func 1A5E  
                    I2cRead@ack 005E                         postdec1 0FE5                  Puts1USART@data 005F  
                       postinc0 0FEE                    ??_DeviceInit 0066                   ?_StartCounter 004E  
                   _StartTimer0 29A0                       _UDP_DPORT 0098                       _PORTAbits 0F80  
                     _PORTBbits 0F81                       _PORTDbits 0F83                  OpenW5500@F2673 0106  
                OpenW5500@F2675 00FC                  OpenW5500@F2677 00F8                  OpenW5500@F2679 00F4  
            _counter_seting_flg 0035           __end_of_M74HC595Write 2632      Ds1307MinuteSet@minute_data 005F  
                     _TRISAbits 0F92                       _TRISBbits 0F93                       _TRISCbits 0F94  
                   _StopCounter 2994                       _TRISDbits 0F95                    ??_Busy1USART 005E  
                  ?_MarkDisplay 004E          _reset_btn_released_cnt 00BC                   ?_M74HC595Init 004E  
            __end_of_DeviceInit 25D6           _counter_min_set_value 0046                     _Write1USART 27D6  
                  OpenDisplay@i 005E                ??_OscillatorInit 005E                    ?_ReadCounter 0116  
                ??_StartCounter 005E              __end_of_Busy1USART 28CC                   __pidataCOMRAM 298C  
                  ??_Open1USART 0060                     _WriteTimer0 28F6                 ??_ActionButtons 0062  
                  ?_ScanDisplay 004E                 _Ds1307MinuteSet 2864                 _Ds1307SecondSet 2846  
                  ?_ScanCounter 004E                    ?_ScanButtons 004E             start_initialization 22EA  
          _down_btn_pressed_cnt 0010                       _InitValue 237C                  ??_M74HC595Init 005E  
                  ??_OpenTimer0 005E                   ??_Ds1307Write 0061       UpdateDisplay@update_datas 011E  
            __end_of_Open1USART 223A           _counter_sec_set_value 0045                 _BTN_CLICK_EVENT 002E  
               _BTN_CLICK_STATE 002F                     __pdataBANK0 00E8                     __pdataBANK1 0100  
                  ?_OpenDisplay 004E                    ??_Puts1USART 0061                    ?_OpenCounter 004E  
                  ?_OpenButtons 004E                        ?_I2cInit 004E              __end_of_OpenTimer0 27D6  
                      ?_I2cRead 004E                        ?_I2cWait 004E                        ?_I2cStop 004E  
                   __pbssCOMRAM 0001                 MarkDisplay@mark 0060                   __pcstackBANK1 0116  
                    ?_InitValue 004E           __end_of_Ds1307HMSRead 1F28              _rtc_clock_set_mode 0042  
                _UpdateSetValue 2962              _up_btn_pressed_cnt 0012              __end_of_Puts1USART 26C0  
         __end_of_DecValProcess 1FF0     __end_of_EnableAllInterrupts 29A8                ___lwdiv@dividend 004E  
         __end_of_Ds1307HourSet 20B6                       __pintcode 0008             __end_of_Ds1307Write 1A5E  
                     _blink_cnt 0030                       _blink_pos 0080         __end_of_Ds1307MinuteSet 2882  
       __end_of_Ds1307SecondSet 2864                        ?___awdiv 005E                        ?___awmod 005E  
                      ?___lwdiv 004E                     __pintcodelo 0018                 Open1USART@spbrg 005E  
           _sel_btn_pressed_cnt 000E           __end_ofi2_WriteTimer0 2962                 _counter_up_hour 003B  
                   __smallconst 0600               WriteTimer0@timer0 005E              i2WriteTimer0@timer 0050  
                      ?_low_isr 004E                ___lwdiv@quotient 0052               _counter_down_hour 0041  
               Write1USART@data 005E            __end_of_StartCounter 29A0                        _I2cStart 291A  
        __end_of_UpdateSetValue 2970                        _I2cWrite 2882                        _LATBbits 0F8A  
                      _LATCbits 0F8B                        _LATDbits 0F8C                        _S0_DPort 00A8  
                      _S1_DPort 00A6                        _S2_DPort 00A4                        _S3_DPort 00A2  
                      _PIE1bits 0F9D                        _PIE2bits 0FA0            _set_mode_release_cnt 00C6  
                      _S4_DPort 00A0                        _S5_DPort 009E                        _S6_DPort 009C  
                      i1u244_20 0034                        i1u244_21 0030                        _S7_DPort 009A  
                      i1u181_20 1CB6                        i1u245_20 0042                        i1u181_21 1CB2  
                      i1u245_21 003E                        i1u190_20 1D78                        i1u182_20 1CCA  
                      i1u190_21 1D74                        i1u182_21 1CC6                        _S0_State 002A  
                      i1u183_20 1CDE                        i1u183_21 1CDA                        i1u184_20 1CF6  
                      i1u184_21 1CF2                        i1u185_20 1D10                        i1u185_21 1D0C  
                      i1u186_20 1D20                        i1u186_21 1D1C                        i1u187_20 1D30  
                      i1u187_21 1D2C                        i1u188_20 1D40                        i1u188_21 1D3C  
                      i1u189_20 1D64                        i1u189_21 1D60                        _S1_State 0029  
                      _S2_State 0028                        i2u520_40 18D0                        i2u520_41 18CC  
                      i2u521_40 18E2                        i2u521_41 18DE                        _PIR1bits 0F9E  
                      i2u530_40 1578                        i2u522_40 18F2                        i2u530_41 1574  
                      i2u522_41 18EE                        i2u531_40 158A                        i2u523_40 14BE  
                      i2u427_40 25F4                        i2u531_41 1586                        i2u523_41 14BA  
                      i2u427_41 25EC                        _PIR2bits 0FA1                        i2u532_40 15A6  
                      i2u524_40 14DE                        i2u532_41 15A2                        i2u524_41 14DA  
                      i2u533_40 15C6                        i2u525_40 14EE                        i2u429_40 2628  
                      i2u428_48 25F6                        i2u517_40 17DC                        i2u541_40 2518  
                      i2u533_41 15C2                        i2u525_41 14EA                        i2u429_41 2624  
                      i2u517_41 17D8                        i2u541_41 2514                        _S3_State 0027  
                      i2u534_40 15D8                        i2u526_40 150A                        i2u518_40 1802  
                      i2u542_40 2536                        i2u550_40 1E0A                        i2u534_41 15D4  
                      i2u526_41 1506                        i2u518_41 17FE                        i2u542_41 2532  
                      i2u550_41 1E06                        i2u535_40 15F4                        i2u527_40 152A  
                      i2u519_40 18BC                        i2u543_40 2552                        i2u551_40 1E1A  
                      i2u535_41 15F0                        i2u527_41 1526                        i2u519_41 18B8  
                      i2u543_41 254E                        i2u551_41 1E16                        i2u536_40 1614  
                      i2u528_40 153C                        i2u552_40 1E3E                        i2u544_40 1D90  
                      i2u536_41 1610                        i2u528_41 1538                        i2u552_41 1E3A  
                      i2u544_41 1D8C                        i2u537_40 1626                        i2u529_40 1558  
                      i2u553_40 1E52                        i2u545_40 1DA4                        i2u537_41 1622  
                      i2u529_41 1554                        i2u553_41 1E4E                        i2u545_41 1DA0  
                      i2u546_40 1DB8                        i2u570_40 1BA2                        i2u546_41 1DB4  
                      i2u570_41 1B9E                        i2u547_40 1DD0                        i2u547_41 1DCC  
                      i2u548_40 1DEA                        i2u564_40 1A76                        i2u548_41 1DE6  
                      i2u564_41 1A72                        i2u549_40 1DFA                        i2u565_40 1A84  
                      i2u549_41 1DF6                        i2u565_41 1A80                        _S4_State 0026  
                      i2u566_40 1B16                        i2u566_41 1B12                        i2u567_40 1B30  
                      i2u567_41 1B2C                        i2u568_40 1B4A                        i2u568_41 1B46  
                      i2u569_40 1B94                        i2u569_41 1B90                        _S5_State 0025  
                      _S6_State 0024                        _RCONbits 0FD0                        _S7_State 0023  
                      _UDP_DIPR 012B                    ?_StartTimer0 004E                     _display_cnt 0031  
          __end_of_M74HC595Init 291A               _counter_up_minute 003A               _counter_up_second 0039  
                  ?_StopCounter 004E                     ??_InitValue 0066                     _INTCON2bits 0FF1  
                   _INTCON3bits 0FF0                       copy_data0 22FE                       copy_data1 231E  
                     copy_data2 233E                   _IncValProcess 273C                 ?_UpdateSetValue 004E  
                  ?_Write1USART 004E                     _Ds1307Write 1904                      _EECON1bits 0FA6  
                 ?_BlinkDisable 004E                        _Phy_Addr 0125                        __Hrparam 0000  
                      __Lrparam 0000                        _Sub_Mask 012F                   _VerifyButtons 0D56  
              ?_Ds1307MinuteSet 004E                  UpdateDisplay@i 0122                ?_Ds1307SecondSet 004E  
               _W5500_Interrupt 001A                      _BLINK_TIME 0016                    ?_WriteTimer0 005E  
                 _UpdateDisplay 26C0             _counter_down_minute 0040             _counter_down_second 003F  
               ___lwdiv@divisor 0050                 ___lwdiv@counter 0054                        __ptext10 1F28  
                      __ptext11 2962                        __ptext20 27D6                        __ptext12 1636  
                      __ptext21 28B4                        __ptext13 223A                        __ptext30 26C0  
                      __ptext22 2970                        __ptext14 20B6                        __ptext31 10CC  
                      __ptext23 27AC                        __ptext15 1BB4                        __ptext40 29A4  
                      __ptext32 1904                        __ptext24 248A                        __ptext16 2572  
                      __ptext41 297E                        __ptext33 1E5A                        __ptext25 2908  
                      __ptext17 28F6                        __ptext50 179E                        __ptext42 28E2  
                      __ptext34 2882                        __ptext26 2632                        __ptext18 29A0  
                      __ptext51 25D6                        __ptext43 27FE                        __ptext35 291A  
                      __ptext27 240C                        __ptext19 267A                        __ptext52 14B0  
                      __ptext36 292C                        __ptext28 217A                        __ptext45 1CA6  
                      __ptext37 2774                        __ptext29 237C                        __ptext38 2824  
                      __ptext47 2950                        __ptext39 293E                        __ptext48 1D80  
                      __ptext49 24FE                  ?_IncValProcess 004E           _reset_btn_pressed_cnt 000C  
                      _high_isr 0008          Ds1307HourSet@hour_data 0060                      _I2cRestart 292C  
        Ds1307HourSet@hour_temp 0061                  ??_BlinkDisable 005E                  ?_VerifyButtons 004E  
                      isa$xinst 0000                        int$flags 006F                  ?_UpdateDisplay 011E  
             _SYSTEM_ACTION_FLG 0048                  _UpDownTransfer 2702                   _USART1_Status 002B  
                    _LEDProcess 1BB4                      _Ds1307Init 297E                _blink_enable_flg 0032  
                   _OSCTUNEbits 0F9B           __end_of_ActionButtons 0D56                      _INTCONbits 0FF2  
                 i2_ScanCounter 1D80                        intlevel1 0000                        intlevel2 0000  
Ds1307HMSRead@ds1307_date_datas 0062                      _RCSTA1bits 0FAB                      _OSCCONbits 0FD3  
        __end_of_UpDownTransfer 273C                    _StartCounter 299A           _down_btn_released_cnt 00C0  
                ?i2_ScanCounter 004E                   _led_blink_cnt 0018                 ??_IncValProcess 005E  
                 _M74HC595Write 25D6                     _SSPCON1bits 0FC6                     _SSPCON2bits 0FC5  
                  I2cWrite@data 005E                     ?_I2cRestart 004E                   _display_datas 0088  
                  _M74HC595Init 2908           _counter_direction_flg 0037               ActionButtons@temp 0064  
               ??_VerifyButtons 0116           _CONTINUE_PRESSED_TIME 0008  
